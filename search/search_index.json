{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cours Premi\u00e8re NSI - M.Meyroneinc","text":"<p>Ce site est \u00e0 destination des \u00e9l\u00e8ves de premi\u00e8re NSI du Lyc\u00e9e Murat d'Issoire. Il permettra de retrouver les cours, TP et TD trait\u00e9s en classes. Ces TD sont corrig\u00e9s dans la mesure du possible (soit directement sur le site soit dans Capytale).</p> Mini-Projet Pour le Mini-Projet 1- D\u00e9fi Logo Sprint 1 Mini-Projet 2- Dessine ta rue 17/11/2023 Mini-Projet 3- Pygame : Introduction 05/06/2023 Mini-Projet 4- Pygame : Animation simple 05/06/2023 Mini-Projet 5- Pygame : Gestion des \u00e9v\u00e8nements 05/06/2023 Mini-Projet 6- Pygame : Textes, dessins, fen\u00eatres 05/06/2023 Vid\u00e9o de pr\u00e9sentation : <p> </p>"},{"location":"#les-themes-du-programme","title":"Les th\u00e8mes du programme","text":""},{"location":"#programme","title":"Programme","text":"<p>Programme</p> <p>Nous traiterons les diff\u00e9rentes entr\u00e9es du programme dans les chapitres suivants :</p> T1 Rep. des donn\u00e9esT2 Types construitsT3 TablesT4 IHMT5 Arch. mat\u00e9rielleT6 PythonT7 Algo. <p>Th\u00e8me  :  Types et valeurs de base </p> <ul> <li>\ud83d\uddf9 Codage des entiers</li> <li>\ud83d\uddf9 Codage des non-entiers</li> <li>\ud83d\uddf9 Bases</li> <li>\u25a1 Codage des caract\u00e8res</li> <li>\u25a1 Bool\u00e9ens</li> </ul> <p>Th\u00e8me 2 :  Types construits </p> <ul> <li>\ud83d\uddf9 Listes - Tableaux </li> <li>\ud83d\uddf9 Tuples    </li> <li>\ud83d\uddf9 Tuples    </li> <li>\u25a1 Dictionnaires  </li> </ul> <p>Th\u00e8me 3 : Traitements de donn\u00e9es en tables</p> <ul> <li>\ud83d\uddf9 Recherche dans une table</li> <li>\u25a1 Tri d'une table</li> <li>\u25a1 Fusion de tables</li> </ul> <p>Th\u00e8me 3 : Interactions entre l'homme et la machine sur le web</p> <ul> <li>\ud83d\uddf9 Modalit\u00e9s de l'interaction entre l'homme et la machine</li> <li>\ud83d\uddf9 Interaction </li> </ul> <p>Th\u00e8me 5 : Architecture mat\u00e9rielle</p> <ul> <li>\u25a1 Architecture Von Neumann</li> <li>\u25a1 Architecture r\u00e9seau</li> <li>\u25a1 Protocoles de communication dans un r\u00e9seau</li> <li>\u25a1 D\u00e9couverte des commandes Linux</li> </ul> <p>Th\u00e8me 6 : Langages et programmation - Python</p> <ul> <li>\ud83d\uddf9 Variables</li> <li>\ud83d\uddf9 Boucle For</li> <li>\ud83d\uddf9 Boucle While</li> <li>\ud83d\uddf9 Instruction conditionnelle If</li> <li>\ud83d\uddf9 Fonctions</li> </ul> <p>Th\u00e8me 7 : Algorithmique</p> <ul> <li>\ud83d\uddf9 Extremums et moyennes</li> <li>\u25a1 Tri par insertion - Tri par s\u00e9lection</li> <li>\u25a1 Dichotomie</li> <li>\u25a1 Algorithmes gloutons</li> <li>\u25a1 Algorithme KNN</li> </ul>"},{"location":"#comment-calculer-sa-note-au-bac-2023-et-repartition-des-notes","title":"Comment calculer sa note au BAC 2023 et R\u00e9partition des notes :","text":"<p>Fiche pour calculer sa note au BAC 2023 </p> <p></p> <p></p>"},{"location":"index%20%28conflicted%20copy%202023-01-17%20094145%29/","title":"Cours Premi\u00e8re NSI - M.Meyroneinc","text":"<p>Ce site est \u00e0 destination des \u00e9l\u00e8ves de premi\u00e8re NSI du Lyc\u00e9e Murat d'Issoire. Il permettra de retrouver les cours, TP et TD trait\u00e9s en classes. Ces TD sont corrig\u00e9s dans la mesure du possible (soit directement sur le site soit dans Capytale).</p> <p>Actualit\u00e9s</p> <ul> <li>Devoir sur les portes logiques le Lundi 23 Janvier 2023.</li> </ul> Titre Dur\u00e9e C0- Introduction 0 C1- Les variables en Python 1 C2- Les fonction en Python 1 C3- Les Boucles FOR 1 C4- Repr\u00e9sentation des entiers positifs 1 C5- Repr\u00e9sentation des entiers n\u00e9gatifs 1 C6- Repr\u00e9sentation des flottants 1 C7- Les boucles WHILE 1 C8- Les instructions conditionnelles 1 C9- Exercices Bilan Python 1 C10- Le web 2 C11- Interaction dans une page web 1 C12- Les tableaux en Python 1 C13- Les Booleens 1 C14- Architecture d'un r\u00e9seau 1 C15- Algorithme glouton 1 C16- Dichotomie 1 Mini-Projet Pour le Mini-Projet 1- D\u00e9fi Logo Sprint 1 Mini-Projet 2- Dessine ta rue 17/11/2023 Mini-Projet 3- Pygame : Introduction 05/06/2023 Mini-Projet 4- Pygame : Animation simple 05/06/2023 Mini-Projet 5- Pygame : Gestion des \u00e9v\u00e8nements 05/06/2023 Mini-Projet 6- Pygame : Textes, dessins, fen\u00eatres 05/06/2023 Vid\u00e9o de pr\u00e9sentation : <p> </p>"},{"location":"index%20%28conflicted%20copy%202023-01-17%20094145%29/#les-themes-du-programme","title":"Les th\u00e8mes du programme","text":""},{"location":"index%20%28conflicted%20copy%202023-01-17%20094145%29/#programme","title":"Programme","text":"<p>Programme</p> <p>Nous traiterons les diff\u00e9rentes entr\u00e9es du programme dans les chapitres suivants :</p> T1 Rep. des donn\u00e9esT2 Types construitsT3 TablesT4 IHMT5 Arch. mat\u00e9rielleT6 PythonT7 Algo. <p>Th\u00e8me  :  Types et valeurs de base </p> <ul> <li>\ud83d\uddf9 Codage des entiers</li> <li>\ud83d\uddf9 Codage des non-entiers</li> <li>\ud83d\uddf9 Bases</li> <li>\u25a1 Codage des caract\u00e8res</li> <li>\u25a1 Bool\u00e9ens</li> </ul> <p>Th\u00e8me 2 :  Types construits </p> <ul> <li>\ud83d\uddf9 Listes - Tableaux </li> <li>\ud83d\uddf9 Tuples    </li> <li>\ud83d\uddf9 Tuples    </li> <li>\u25a1 Dictionnaires  </li> </ul> <p>Th\u00e8me 3 : Traitements de donn\u00e9es en tables</p> <ul> <li>\ud83d\uddf9 Recherche dans une table</li> <li>\u25a1 Tri d'une table</li> <li>\u25a1 Fusion de tables</li> </ul> <p>Th\u00e8me 3 : Interactions entre l'homme et la machine sur le web</p> <ul> <li>\ud83d\uddf9 Modalit\u00e9s de l'interaction entre l'homme et la machine</li> <li>\ud83d\uddf9 Interaction </li> </ul> <p>Th\u00e8me 5 : Architecture mat\u00e9rielle</p> <ul> <li>\u25a1 Architecture Von Neumann</li> <li>\u25a1 Architecture r\u00e9seau</li> <li>\u25a1 Protocoles de communication dans un r\u00e9seau</li> <li>\u25a1 D\u00e9couverte des commandes Linux</li> </ul> <p>Th\u00e8me 6 : Langages et programmation - Python</p> <ul> <li>\ud83d\uddf9 Variables</li> <li>\ud83d\uddf9 Boucle For</li> <li>\ud83d\uddf9 Boucle While</li> <li>\ud83d\uddf9 Instruction conditionnelle If</li> <li>\ud83d\uddf9 Fonctions</li> </ul> <p>Th\u00e8me 7 : Algorithmique</p> <ul> <li>\ud83d\uddf9 Extremums et moyennes</li> <li>\u25a1 Tri par insertion - Tri par s\u00e9lection</li> <li>\u25a1 Dichotomie</li> <li>\u25a1 Algorithmes gloutons</li> <li>\u25a1 Algorithme KNN</li> </ul>"},{"location":"index%20%28conflicted%20copy%202023-01-17%20094145%29/#comment-calculer-sa-note-au-bac-2023-et-repartition-des-notes","title":"Comment calculer sa note au BAC 2023 et R\u00e9partition des notes :","text":"<p>Fiche pour calculer sa note au BAC 2023 </p> <p></p> <p></p>"},{"location":"BasesPython/TP04_BasesPython/","title":"TP04 BasesPython","text":"TP 04 : Les bases en Python  Th\u00e8me 4 : Langages et Programmation COURS <p>Lien Capytale</p> <p>Ce document recense les informations essentielles (donc \u00e0 conna\u00eetre absolument) pour d\u00e9marrer en Python.</p> <p>Votre objectif est de suivre ce notebook et de faire les exercices du notebook d'exercices qui sont indiqu\u00e9s au fur et \u00e0 mesure afin de mettre en pratique.</p>"},{"location":"BasesPython/TP04_BasesPython/#i-variables-et-affectations-en-python","title":"I. Variables et affectations en Python","text":"<p>Dans le langage Python, le symbole <code>=</code> correspondant \u00e0 l'affectation (\u00e9crite \\(\\leftarrow\\) en pseudo-code). </p> <p>Pour affecter la valeur 2 \u00e0 une variable <code>a</code> on \u00e9crit simplement <code>a = 2</code>.</p> <p>Ainsi, l'algorithme</p> \ud83d\udccb Algo<pre><code>a \u2190 3\nb \u2190 2 * a\n</code></pre> <p>s'\u00e9crit en Python de la fa\u00e7on suivante :</p> \ud83d\udc0d Script Python<pre><code>a = 3\nb = 2 * a\n</code></pre> \u270f\ufe0f Faire les exercices 1, 2, 3."},{"location":"BasesPython/TP04_BasesPython/#ii-instructions-conditionnelles-if-elif-et-else","title":"II. Instructions conditionnelles : <code>if</code>, <code>elif</code> et <code>else</code>","text":"<p>En Python, les instructions conditionnelles se codent en utilisant les instructions <code>if</code>, <code>elif</code> (= contraction de else if), <code>else</code> qui sont les traductions respectives de si, sinon si et sinon.</p> \ud83d\udc0d Script Python<pre><code>if condition1:\n    bloc_instructions_1\nelif condition2:\n    bloc_instructions_2\nelse:\n    bloc_instructions_3\n</code></pre> <p>Remarques : - ne pas oublier les deux points \u00e0 la fin des lignes avec <code>if</code>, <code>elif</code> et <code>else</code> qui permettent d'ouvrir le bloc d'instructions \u00e0 effectuer dans chaque cas ; - les instructions \u00e0 effectuer sont indent\u00e9es d'une tabulation par rapport aux <code>if</code>, <code>elif</code> et <code>else</code> : c'est la syntaxe Python, elle doit absolument \u00eatre respect\u00e9e ; - les instructions <code>elif</code> et <code>else</code> sont optionnelles, c'est-\u00e0-dire que l\u2019on peut avoir seulement un <code>if</code> comme ceci</p> \ud83d\udccb Algo<pre><code>```python\nif condition:\n    bloc_instructions\n\n```\n\nou un `if` suivi d\u2019un `else` comme cela\n\n```python\nif condition:\n    bloc_instructions_1\nelse:\n    bloc_instructions_2\n\n```\n</code></pre> <ul> <li>au contraire du pseudo-code, on n'\u00e9crit pas en Python de <code>fin si</code> car celui-ci est mat\u00e9rialis\u00e9 par la fin des indentations.</li> </ul> <p>Exemple 1 (r\u00f4le des indentations) : Dans le programme suivant, le dernier message s'affiche \u00e0 chaque fois, en revanche les deux messages pr\u00e9c\u00e9dents ne s'affichent que si on entre dans le bloc <code>if</code>, autrement dit si la condition <code>a &gt;= 10</code> est vraie.</p> \ud83d\udc0d Script Python<pre><code>a = 15\nif a &gt;= 10: # condition vraie\n    print(\"Vous avez la moyenne\")\n    print(\"Message dans le bloc d'instructions du if\")\nprint(\"Message en dehors du bloc d'instruction du if\") # en dehors du bloc d'instructions du if\n</code></pre> \ud83d\udccb Algo<pre><code>Vous avez la moyenne\nMessage dans le bloc d'instructions du if\nMessage en dehors du bloc d'instruction du if\n</code></pre> \ud83d\udc0d Script Python<pre><code>a = 8\nif a &gt;= 10: # condition fausse\n    print(\"Vous avez la moyenne\")\n    print(\"Message dans le bloc d'instructions du if\")\nprint(\"Message en dehors du bloc d'instruction du if\") # en dehors du bloc d'instructions du if\n</code></pre> \ud83d\udccb Algo<pre><code>Message en dehors du bloc d'instruction du if\n</code></pre> <p>Exemple 2 : L'algorithme</p> \ud83d\udccb Algo<pre><code>si scoreA &gt; scoreB alors\n    vainqueur \u2190 \"\u00e9quipe A\"\nsinon si scoreA &lt; scoreB alors\n    vainqueur \u2190 \"\u00e9quipe B\"\nsinon\n    vainqueur \u2190 \"Match nul\"\n</code></pre> <p>se traduit en Python de la mani\u00e8re suivante :</p> \ud83d\udc0d Script Python<pre><code>if scoreA &gt; scoreB:\n    vainqueur = \"\u00e9quipe A\"\nelif scoreA &lt; scoreB:\n    vainqueur = \"\u00e9quipe B\"\nelse:\n    vainqueur = \"Match nul\"\n</code></pre> \u270f\ufe0f Faire les exercices 4, 5"},{"location":"BasesPython/TP04_BasesPython/#iii-boucles-bornees-boucles-for","title":"III. Boucles born\u00e9es : boucles <code>for</code>","text":"<p>En Python, les boucles Pour se codent en utilisant l'instruction <code>for</code> :</p> \ud83d\udc0d Script Python<pre><code>for element in sequence:\n    bloc_instructions    \n</code></pre> <p>Remarques : - <code>element</code> est une variable cr\u00e9\u00e9e par le <code>for</code>, ce n'est pas \u00e0 vous de l'instancier. Elle prend successicement chacune des valeurs figurant dans la <code>sequence</code> parcourue ; - ne pas oublier les deux points \u00e0 la fin de la ligne avec <code>for</code> qui permettent d'ouvrir le bloc d'instructions \u00e0 ex\u00e9cuter (\u00e0 r\u00e9p\u00e9ter) ; - les instructions \u00e0 effectuer sont indent\u00e9es d'une tabulation par rapport au <code>for</code> ; - au contraire du pseudo-code, on n'\u00e9crit pas en Python de <code>fin pour</code> car celui-ci est mat\u00e9rialis\u00e9 la fin des indentations.</p>"},{"location":"BasesPython/TP04_BasesPython/#la-fonction-range-pour-creer-des-sequences-de-nombres","title":"La fonction <code>range()</code> pour cr\u00e9er des s\u00e9quences de nombres","text":"<p>La fonction <code>range()</code> permet de cr\u00e9er des s\u00e9quences de nombres entiers :</p> <ul> <li><code>range(n)</code> cr\u00e9e une s\u00e9quence des <code>n</code> entiers, de 0 inclus \u00e0 <code>n</code> exclu, c'est-\u00e0-dire : 0, 1, 2, ..., n-1 (\u26a0\ufe0f le premier est 0, donc le n-i\u00e8me est n-1).</li> <li><code>range(n, m)</code> cr\u00e9e la s\u00e9quence d'entiers de <code>n</code> inclus \u00e0 <code>m</code> exclu, c'est-\u00e0-dire : n, n+1, ..., m-1.</li> <li><code>range(n, m, p)</code> cr\u00e9e la s\u00e9quence de nombres de <code>n</code> inclus \u00e0 <code>m</code> exclu avec un pas \u00e9gal \u00e0 <code>p</code>, c'est-\u00e0-dire : n, n+p, n+2p, ... .</li> </ul> <p>Exemples :</p> <ul> <li><code>range(5)</code> : cr\u00e9e la s\u00e9quence de nombres de 0 inclus \u00e0 5 exclu : c'est-\u00e0-dire les nombres 0, 1, 2, 3, 4.</li> <li><code>range(2, 8)</code> : cr\u00e9e la s\u00e9quence de nombres de 2 inclus \u00e0 8 exclu : c'est-\u00e0-dire les nombres 2, 3, 4, 5, 6, 7.</li> <li><code>range(2, 11, 3)</code> : cr\u00e9ee la s\u00e9quence de nombres de 2 inclus \u00e0 11 exclu, par pas de 3 : c'est-\u00e0-dire les nombres 2, 5, 8.</li> </ul> <p>On peut visualiser cette s\u00e9quence en affichant leurs valeurs successives : </p> \ud83d\udc0d Script Python<pre><code>for element in range(5):\n    print(element)\n</code></pre> \ud83d\udccb Algo<pre><code>0\n1\n2\n3\n4\n</code></pre> <p>ou en utilisant la fonction <code>list()</code> :</p> \ud83d\udc0d Script Python<pre><code>list(range(5))\n</code></pre> \ud83d\udccb Algo<pre><code>[0, 1, 2, 3, 4]\n</code></pre> <p>N'h\u00e9sitez pas \u00e0 modifier les deux cellulles pr\u00e9c\u00e9dentes pour voir d'autres s\u00e9quences.</p> <p>Ainsi, pour r\u00e9p\u00e9ter un bloc d'instructions 36 fois, il suffit d'\u00e9crire :</p> \ud83d\udc0d Script Python<pre><code>for i in range(36):\n    bloc_instructions\n</code></pre> <p>En effet, la variable <code>i</code> cr\u00e9\u00e9e par la boucle va prendre successivement les valeurs : 0, 1, 2, 3, ..., 35. Elle prend donc 36 valeurs et le bloc <code>bloc_instructions</code> sera donc r\u00e9p\u00e9t\u00e9 36 fois.</p> <p>On aurait aussi pu \u00e9crire cela :</p> <p>\ud83d\udc0d Script Python<pre><code>for i in range(0, 36):\n    bloc_instructions\n</code></pre>  ou encore :</p> <p>```python for i in range(1,37):     bloc_instructions \ud83d\udccb Algo<pre><code>ou encore :\n\n```python\nfor valeur in range(36):\n    bloc_instructions\n</code></pre></p> <p>car dans chaque cas, la variable cr\u00e9\u00e9e (<code>i</code> ou <code>valeur</code>) parcoure 36 valeurs diff\u00e9rentes.</p> \u270f\ufe0f Faire les exercices 6, 7, 8, 9."},{"location":"BasesPython/TP04_BasesPython/#parcourir-des-chaines-de-caracteres","title":"Parcourir des cha\u00eenes de caract\u00e8res","text":"<p>La boucle <code>for</code> permet de parcourir tous les \u00e9l\u00e9ments d'une s\u00e9quence. En utilisant <code>range()</code> on a vu que l'on peut parcourir une s\u00e9quence de nombres. </p> <p>Il se trouve que les cha\u00eenes de caract\u00e8res sont \u00e9galement des s\u00e9quences ... de caract\u00e8res. On peut donc aussi les parcourir tr\u00e8s simplement avec une boucle <code>for</code>, de deux mani\u00e8res diff\u00e9rentes.</p>"},{"location":"BasesPython/TP04_BasesPython/#par-ses-caracteres","title":"Par ses caract\u00e8res","text":"<p>On peut parcourir une cha\u00eene directement par ses caract\u00e8res :</p> \ud83d\udc0d Script Python<pre><code>chaine = \"Bonjour les \u00e9l\u00e8ves !\"\nfor caractere in chaine :\n    print(caractere)\n</code></pre> \ud83d\udccb Algo<pre><code>B\no\nn\nj\no\nu\nr\n\nl\ne\ns\n\n\u00e9\nl\n\u00e8\nv\ne\ns\n\n!\n</code></pre> <p>La variable <code>caractere</code> cr\u00e9\u00e9e par le <code>for</code> prend successivement les valeurs de la s\u00e9quence <code>\"Bonjour les \u00e9l\u00e8ves !\"</code>, c'est-\u00e0-dire qu'elle prend la valeur <code>'B'</code> puis la valeur <code>'o'</code>, puis la valeur <code>'n'</code>, etc. La boucle s'arr\u00eate lorsque toute la s\u00e9quence a \u00e9t\u00e9 parcourue.</p>"},{"location":"BasesPython/TP04_BasesPython/#par-lindice-de-ses-caracteres","title":"Par l'indice de ses caract\u00e8res","text":"<p>On peut aussi utiliser la fonction <code>range()</code> pour parcourir les caract\u00e8res par leurs indices.</p> \ud83d\udc0d Script Python<pre><code>chaine = \"Bonjour les \u00e9l\u00e8ves !\"\nfor indice in range(len(chaine)) :\n    print(chaine[indice])\n</code></pre> \ud83d\udccb Algo<pre><code>B\no\nn\nj\no\nu\nr\n\nl\ne\ns\n\n\u00e9\nl\n\u00e8\nv\ne\ns\n\n!\n</code></pre> <p>L'instruction <code>len(chaine)</code> renvoie la longueur de la cha\u00eene de caract\u00e8res, soit 20 dans notre exemple. Donc <code>range(len(chaine))</code> est \u00e9valu\u00e9e \u00e0 <code>range(20)</code> qui cr\u00e9e la s\u00e9quence d'entiers 0, 1, 2, ..., 19 qui vont \u00eatre affect\u00e9s successivement \u00e0 la variable <code>indice</code>. On affiche ensuite, \u00e0 chaque tour de boucle, le caract\u00e8re en position <code>indice</code> dans <code>chaine</code> c'est-\u00e0-dire <code>chaine[0]</code>, puis <code>chaine[1]</code>, ... et enfin <code>chaine[19]</code>.</p> \u270f\ufe0f Faire l'exercice 10."},{"location":"BasesPython/TP04_BasesPython/#iv-boucles-non-bornees-boucles-while","title":"IV. Boucles non born\u00e9es : boucles <code>while</code>","text":"<p>En Python, les boucles \"Tant que\" se codent en utilisant l'instruction <code>while</code> :</p> \ud83d\udc0d Script Python<pre><code>while condition:\n    bloc_instructions\n</code></pre> <p>Remarques : - <code>condition</code> est une variable bool\u00e9enne qui est soit vraie (<code>True</code>) soit fausse (<code>False</code>) ; - Tant que <code>condition</code> vaut <code>True</code> les instructions du bloc sont r\u00e9p\u00e9t\u00e9es ; - On passe \u00e0 la suite du programme d\u00e8s que <code>condition</code> vaut <code>False</code>. Cela signifie que si <code>condition</code> reste vraie tout le temps, la boucle <code>while</code> boucle \u00e0 l'infini, ce qui pourra causer des probl\u00e8mes plus ou moins importants ; - ne pas oublier les deux points \u00e0 la fin de la ligne avec <code>while</code> qui permettent d'ouvrir le bloc d'instructions \u00e0 ex\u00e9cuter (\u00e0 r\u00e9p\u00e9ter) ; - les instructions \u00e0 effectuer sont indent\u00e9es d'une tabulation par rapport au <code>while</code> ; - au contraire du pseudo-code, on n'\u00e9crit pas en Python de <code>fin tant que</code> car celui-ci est mat\u00e9rialis\u00e9 la fin des indentations.</p> <p>Exemple :</p> \ud83d\udc0d Script Python<pre><code>a = 3\nwhile a &lt; 14:\n    a = a + 2\n    print(a) # pour voir l'\u00e9volution de la variable a\n</code></pre> \ud83d\udccb Algo<pre><code>5\n7\n9\n11\n13\n15\n</code></pre> \u270f\ufe0f Faire les exercices 11, 12, 13."},{"location":"BasesPython/TP04_BasesPython/#v-les-fonctions","title":"V. Les fonctions","text":""},{"location":"BasesPython/TP04_BasesPython/#definition-et-syntaxe-en-python","title":"D\u00e9finition et syntaxe en Python","text":"<p>Dans un langage de programmation, on utilise ce qu'on appelle des fonctions. Une fonction est un ensemble d'instructions qui peut recevoir des arguments et qui peut renvoyer un r\u00e9sultat qui est souvent le contenu d'une ou plusieurs variables.</p> <p>En Python, on d\u00e9finit une fonction en utilisant l'instruction <code>def</code> (de l'anglais define, qui veut dire \"d\u00e9finir\") :</p> \ud83d\udc0d Script Python<pre><code>def nom_de_la_fonction(parametre1, parametre2, ..., parametreN):\n    corps_de_la_fonction\n</code></pre> <ul> <li>l'instruction <code>def</code> est suivie du nom de la fonction ;</li> <li>les param\u00e8tres de la fonction sont ensuite \u00e9crits entre parenth\u00e8ses et s\u00e9par\u00e9s par des virgules ;</li> <li>il existe des fonctions sans param\u00e8tre, les parenth\u00e8ses sont n\u00e9anmoins obligatoires et restent vides ;</li> <li>il ne faut pas oublier les deux points apr\u00e8s les parenth\u00e8ses de la premi\u00e8re ligne ;</li> <li>le corps de la fonction est un bloc d'instructions qui contient toutes les lignes qui doivent \u00eatre ex\u00e9cut\u00e9es lorsque la fonction est appel\u00e9e. Le corps de la fonction doit n\u00e9cessairement \u00eatre indent\u00e9, c'est-\u00e0-dire qu'il doit \u00eatre d\u00e9cal\u00e9 d'une tabulation par rapport \u00e0 l'instruction <code>def</code>.</li> </ul> <p>Tr\u00e8s souvent, le corps de la fonction se terminera par l'instruction <code>return</code> suivie de la ou des valeurs que la fonction doit renvoyer. Si la fonction doit renvoyer plusieurs valeurs, celles-ci sont \u00e0 s\u00e9parer par des virgules.</p> <p>Ainsi, le sch\u00e9ma g\u00e9n\u00e9ral d'une fonction <code>Python</code> est :</p> \ud83d\udc0d Script Python<pre><code>def nom_de_la_fonction(parametre1, parametre2, ..., parametreN):\n    instructions                            # sur plusieurs lignes \u00e9ventuellement\n    return valeur1, valeur2, valeur3, etc.  # souvent une fonction ne renvoie qu'une valeur\n</code></pre> <p>Exemple : Voici une fonction</p> \ud83d\udc0d Script Python<pre><code>def addition(a, b):\n    s = a + b\n    return s\n</code></pre> <p>que l'on peut aussi \u00e9crire plus simplement :</p> \ud83d\udc0d Script Python<pre><code>def addition(a, b):\n    return a + b\n</code></pre> \u2754 Identifiez dans ces deux fonctions \u00e9crites diff\u00e9remment : leur nom, leur(s) param\u00e8tre(s), leur corps, leur(s) valeur(s) renvoy\u00e9e(s). <p>Remarque : il existe des fonctions qui ne renvoient aucune valeur, l'instruction <code>return</code> n'est donc pas utilis\u00e9e dans le corps de ces fonctions.</p>"},{"location":"BasesPython/TP04_BasesPython/#appel-a-une-fonction","title":"Appel \u00e0 une fonction","text":"<p>\u26a0\ufe0f Lorsque l'on ex\u00e9cute le code qui d\u00e9finit une fonction, aucune valeur n'est renvoy\u00e9e ! Cela a seulement pour objectif d'enregistrer la fonction en m\u00e9moire.</p> \ud83d\udc0d Script Python<pre><code># \u00e0 ex\u00e9cuter : il ne se passera rien (visuellement)\n\ndef addition(a, b):\n    return a + b\n</code></pre> <p>Pour utiliser une fonction il faut l'appeler. On appelle une fonction par son nom en donnant des arguments (des valeurs) \u00e0 ses param\u00e8tres. Dans ce cas, la fonction va renvoyer la ou les valeurs attendues.</p> \ud83d\udc0d Script Python<pre><code># appel \u00e0 la fonction : qui renvoie alors ce qu'il faut !\n\naddition(2, 5)\n</code></pre> \ud83d\udccb Algo<pre><code>7\n</code></pre> <p>Remarque : au premier <code>return</code> rencontr\u00e9 l'ex\u00e9cution de la fonction est stopp\u00e9e : si on veut renvoyer plusieurs valeurs on ne peut pas utiliser plusieurs <code>return</code> ; il faut s\u00e9parer les valeurs \u00e0 renvoyer par des virgules ;</p> <p>Par exemple, si on veut une fonction qui renvoie la somme et le produit de deux nombres, on ne peut pas \u00e9crire</p> <p>\ud83d\udc0d Script Python<pre><code>def somme_et_produit(a, b):\n    return a + b  # fonction stopp\u00e9e apr\u00e8s cette ligne (premier return rencontr\u00e9)\n    return a * b  # ne sera pas ex\u00e9cut\u00e9 !\n</code></pre> mais il faudrait \u00e9crire cela : \ud83d\udc0d Script Python<pre><code>def somme_et_produit(a, b):\n    return a + b, a * b  # les deux valeurs seront bien renvoy\u00e9es\n</code></pre></p> <p>On peut facilement v\u00e9rifier :</p> \ud83d\udc0d Script Python<pre><code>def somme_et_produit(a, b):\n    return a + b  # fonction stopp\u00e9e apr\u00e8s cette ligne (premier return rencontr\u00e9)\n    return a * b  # ne sera pas ex\u00e9cut\u00e9 !\n</code></pre> \ud83d\udc0d Script Python<pre><code>somme_et_produit(2, 5)\n</code></pre> \ud83d\udccb Algo<pre><code>7\n</code></pre> \ud83d\udc0d Script Python<pre><code>def somme_et_produit(a, b):\n    return a + b, a * b  # les deux valeurs seront bien renvoy\u00e9es\n</code></pre> \ud83d\udc0d Script Python<pre><code>somme_et_produit(2, 5)\n</code></pre> \ud83d\udccb Algo<pre><code>(7, 10)\n</code></pre> \u270f\ufe0f Faire les exercices 14, 15, 16."},{"location":"BasesPython/TP04_BasesPython/#vi-les-entrees-en-python","title":"VI. Les entr\u00e9es en Python","text":"<p>Pour que l'utilisateur puisse saisir des valeurs au clavier, on utilise la fonction <code>input</code>. Elle d\u00e9clenche l\u2019ouverture d\u2019une bo\u00eete de dialogue dans laquelle on peut saisir la valeur souhait\u00e9e.</p> \ud83d\udc0d Script Python<pre><code>nom_utilisateur = input(\"Veuillez saisir votre nom : \")\nage_utilisateur = input(\"Veuillez saisir votre \u00e2ge : \")\nprint(f\"Vous vous appelez {nom_utilisateur} et vous avez {age_utilisateur} ans.\")\nprint(type(age_utilisateur)) # OBSERVEZ BIEN LE TYPE !!\n</code></pre> \ud83d\udccb Algo<pre><code>Veuillez saisir votre nom :  Test\nVeuillez saisir votre \u00e2ge :  18\n\n\nVous vous appelez Test et vous avez 18 ans.\n&lt;class 'str'&gt;\n</code></pre> <p>ATTENTION : Par d\u00e9faut, en Python, les variables saisies au clavier et r\u00e9cup\u00e9r\u00e9es par la fonction <code>input</code> sont des cha\u00eenes de caract\u00e8res.</p> <p>Cela peut cr\u00e9er des erreurs :</p> \ud83d\udc0d Script Python<pre><code>age_utilisateur = input(\"Veuillez saisir votre \u00e2ge : \")\nage_utilisateur = age_utilisateur + 2\n</code></pre> \ud83d\udccb Algo<pre><code>Veuillez saisir votre \u00e2ge : 65\n\n\n\n---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-15-8ae97b43fbf4&gt; in &lt;module&gt;\n      1 age_utilisateur = input(\"Veuillez saisir votre \u00e2ge : \")\n----&gt; 2 age_utilisateur = age_utilisateur + 2\n\n\nTypeError: can only concatenate str (not \"int\") to str\n</code></pre> <p>L'erreur se situe ligne 2 comme l'indique la fl\u00e8che verte. Le message d'erreur <code>TypeError: can only concatenate str (not \"int\") to str</code> indique que Python ne peut concat\u00e9ner une cha\u00eene de caract\u00e8res qu'avec une autre cha\u00eene de caract\u00e8res (mais pas avec un entier). </p> <p>En effet, la variable <code>age_utilisateur</code> \u00e9tant de type <code>str</code>, le symbole <code>+</code> qui suit est le symbole de concat\u00e9nation, qui ne peut pas s'appliquer \u00e0 l'entier 2 situ\u00e9 apr\u00e8s car celui-ci est de type <code>int</code>.</p> <p>R\u00c8GLE D'USAGE IMPORTANTE : pour \u00e9viter ces probl\u00e8mes, il suffit de pr\u00e9ciser le type de variable que l'utilisateur doit saisir avant la fonction <code>input</code> comme indiqu\u00e9 ci-dessous :</p> <ul> <li>pour saisir un entier : <code>nom_variable = int(input(\"message \u00e0 afficher\"))</code></li> <li>pour saisir un flottant : <code>nom_variable = float(input(\"message \u00e0 afficher\"))</code></li> <li>pour saisir un bool\u00e9en : <code>nom_variable = bool(input(\"message \u00e0 afficher\"))</code></li> <li>pour saisir un entier long : <code>nom_variable = long(input(\"message \u00e0 afficher\"))</code></li> </ul> <p>Ainsi, pour r\u00e9gler le probl\u00e8me pr\u00e9c\u00e9dent, il suffit d'\u00e9crire :</p> \ud83d\udc0d Script Python<pre><code>age_utilisateur = int(input(\"Veuillez saisir votre \u00e2ge :\"))\nprint(f\"Dans deux ans, vous aurez {age_utilisateur + 2} ans\")\n</code></pre> \ud83d\udccb Algo<pre><code>Veuillez saisir votre \u00e2ge : 15\n\n\nDans deux ans, vous aurez 17 ans\n</code></pre> <p>Nous n'utiliserons les instructions d'entr\u00e9e en Python que dans les cas o\u00f9 cela s'av\u00e8re n\u00e9cessaire, par exemple si une interaction est n\u00e9cessaire avec l'utilisateur. Dans les autres cas, on privil\u00e9giera les appels de fonctions en modifiant leurs arguments.</p>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/","title":"TP05 BasesPythonExercices Corrige","text":"TP 05 : Les bases en Python  Th\u00e8me 4 : Langages et Programmation EXERCICES <p>Lien Capytale</p> <p>Objectif</p> <p>L'objectif final est que sachiez \u00e9crire les structures de bases (affectations, instructions conditionnelles, boucles <code>for</code>, boucle <code>while</code>, fonctions) dans le langage Python.</p> <p>Pour cela, une grande partie des exerciec ci-dessous consistent \u00e0 \u00e9crire dans le langage Python, des algorithmes \u00e9crits en langage naturel dans la partie 1 sur Les bases de l'algorithmique.</p> <p>N'h\u00e9sitez surtout pas \u00e0 revoir le notebook de cours sur les bases de Python, faites des allers-retours entre le cours et les exercices !</p>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#i-variables-et-affectations-en-python","title":"I. Variables et affectations en Python","text":""},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-1","title":"Exercice 1","text":"<p>Exercice n\u00b01 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 1 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses en affichant ce qu'il faut avec Python.</p> <p>Que valent <code>N</code> et <code>P</code> apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ?  </p> \ud83d\udccb Algo<pre><code>N \u2190 2\nP \u2190 3\nN \u2190 P + 1\nP \u2190 N\n</code></pre> \ud83d\udc0d Script Python<pre><code>N=2\nP=3\nN=P+1\nP=N\nprint(f\"N : {N} et P : {P}\")\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-2","title":"Exercice 2","text":"<p>Exercice n\u00b02 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 2 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses en affichant ce qu'il faut avec Python.</p> <p>Que vaut <code>B</code> apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ? \ud83d\udccb Algo<pre><code>A \u2190 8\nB \u2190 (A \u2265 10)\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>A = 8\nB = (A &gt;= 10)\nprint(B)  ## pour voir la valeur de B\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-3","title":"Exercice 3","text":"<p>Exercice n\u00b03 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 3 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>Supposons que <code>N</code> vaut 2 ; que vaut <code>P</code> apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ? \ud83d\udccb Algo<pre><code>P \u2190 N mod 5\nP \u2190 N div P\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>N = 2  # initialisation de N\nP = N % 5\nP = N // P\nprint(P)  # pour voir la valeur de P\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#ii-instructions-conditionnelles-if-elif-et-else","title":"II. Instructions conditionnelles : <code>if</code>, <code>elif</code> et <code>else</code>","text":""},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-4","title":"Exercice 4","text":"<p>Exercice n\u00b04 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 5 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>Supposons que <code>A</code> vaut 1 au d\u00e9but ; que vaut-il apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ? \ud83d\udccb Algo<pre><code>si A \u2265 0\nalors A \u2190 A - 1\nsinon A \u2190 A + 1\nfin si\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>A = 1  ## valeur intiale de A\nif A &gt;= 0:\n    A = A - 1   \nelse:\n    A = A + 1\nprint(A)  # pour voir la valeur finale de A\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-5","title":"Exercice 5","text":"<p>Exercice n\u00b05 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 6 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>L'algorithme ci-dessous est-il \u00e9quivalent (au sens ou une m\u00eame valeur de <code>A</code> initiale induit une m\u00eame valeur de <code>A</code> apr\u00e8s leur ex\u00e9cution) \u00e0 celui pr\u00e9sent\u00e9 dans l'exercice 5 ? \ud83d\udccb Algo<pre><code>si A \u2265 0\nalors A \u2190 A - 1\nfin si\nsi A &lt; 0\nalors A \u2190 A + 1\nfinsi\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>A = 0  ## valeur initiale de test\nif A &gt;= 0:\n    A = A - 1\nif A &lt; 0:\n    A = A + 1\nprint(A)  ## pour voir la valeur finale\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#iii-boucles-bornees-boucles-for","title":"III. Boucles born\u00e9es : boucles <code>for</code>","text":""},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-6","title":"Exercice 6","text":"<p>Exercice n\u00b06 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 9 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>Supposons que <code>A</code> vaut initialement 10 ; combien vaut-il apr\u00e8s l'ex\u00e9cution de cet algorithme ?  </p> \ud83d\udccb Algo<pre><code>pour i de 2 \u00e0 5 faire\n    A \u2190 A + i\nfin pour\n</code></pre> \ud83d\udc0d Script Python<pre><code>A = 10\nfor i in range(2, 6):  ## Attention : 6 !\n    A = A + i\nprint(A)  ## pour voir la valeur finale de A\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-7","title":"Exercice 7","text":"<p>Exercice n\u00b07 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 10 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>Supposons que <code>V</code> vaut 0 initialement ; combien vaut-il apr\u00e8s l'ex\u00e9cution de cet algorithme ? \ud83d\udccb Algo<pre><code>pour I de 1 \u00e0 4 par pas de 1 faire\nsi I est pair\n    alors V \u2190 V + I*I\nfin si\nfin pour\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>V = 0\nfor I in range(1, 5):\n    if I%2 == 0:  ## si i est divisible par 2\n        V = V + I*I\nprint(V)  ## pour voir la valeur finale de V\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-8","title":"Exercice 8","text":"<p>Exercice n\u00b08 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 12 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>Supposons que <code>A</code> vaut 1 initialement ; combien vaut-il apr\u00e8s l'ex\u00e9cution de cet algorithme ? \ud83d\udccb Algo<pre><code>pour i de 0 \u00e0 3 faire\n    pour j de 0 \u00e0 2 faire\n        A \u2190 A + i*j\n    fin pour\nfin pour\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>A = 1  # initialisation de A\nfor i in range(4):  ## ou range(0, 4)\n    for j in range(3):\n        A = A + i*j\nprint(A)  # pour voir la valeur finale de A\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-9","title":"Exercice 9","text":"<p>Exercice n\u00b09 :</p> EnonceSolution <p>Q1 : Quelles sont les valeurs affich\u00e9es dans la console  lors de l'ex\u00e9cution de chacun des programmes ci-dessous ? Attention, il faut r\u00e9pondre sans ex\u00e9cuter le code ! * Programme 1 : \ud83d\udc0d Script Python<pre><code>for i in range(10):\n    print(i)\n</code></pre> * Programme 2 : \ud83d\udc0d Script Python<pre><code>for k in range(2, 10):\n    print(k)\n</code></pre> * Programme 3 : \ud83d\udc0d Script Python<pre><code>for ind in range(2, 10, 3):\n    print(ind)\n</code></pre></p> <p>Q2 : V\u00e9rifiez en r\u00e9\u00e9crivant et en ex\u00e9cutant chacun de ces programmes.   </p> <ul> <li>Programme 1 : 0, 1, 2, ..., 9</li> <li>Programme 2 : 2, 3, 4, ..., 9</li> <li>Programme 3 : 2, 5, 8</li> </ul>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-10","title":"Exercice 10","text":"<p>Exercice n\u00b010 :</p> EnonceSolution <p>On consid\u00e8re le programme Python suivant :</p> \ud83d\udc0d Script Python<pre><code>chaine = 'peace and love'\ncompteur = 0\nfor caractere in chaine:\n    if caractere == 'e':\n        compteur = compteur + 1\n</code></pre> <p>Q1 : Quelle est le r\u00f4le de ce code. Quelle est la valeur finale de la variable <code>compteur</code> ?</p> <p>R\u00e9ponse (\u00e0 compl\u00e9ter) : </p> <p>Q2 : Recopiez ce code et v\u00e9rifiez la r\u00e9ponse \u00e0 la question pr\u00e9c\u00e9dente.</p> \ud83d\udc0d Script Python<pre><code># \u00e0 vous de jouer !\n</code></pre> <p>Q3 : Modifiez le code pour compter le nombre de <code>'a'</code>.</p> \ud83d\udc0d Script Python<pre><code># \u00e0 vous de jouer !\n</code></pre> <ul> <li>Q1 : Il compte le nombre d'apparition du caract\u00e8re 'e' dans chaine. La variable finale de compteur est donc 3.</li> <li>Q2 : Il n'y qu'\u00e0 recopier</li> <li>Q3 : Il suffit de remplacer 'e' par 'a' dans l'instruction conditionnelle \u00e0 la ligne 4</li> </ul>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#iv-boucles-non-bornees-boucles-while","title":"IV. Boucles non born\u00e9es : boucles <code>while</code>","text":""},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-11","title":"Exercice 11","text":"<p>Exercice n\u00b011 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 13 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>Supposons que <code>D</code> vaut 7 initialement ; que vaut-il apr\u00e8s l'ex\u00e9cution de cet algorithme ? ``` tant que D &gt; 3 faire D \u2190 D - 3 fin tant que \ud83d\udccb Algo<pre><code>```python\n# \u00e9crivez le programme Python correspondant\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>D = 7  ## valeur initiale de D\nwhile D &gt; 3:\n    D = D - 3\nprint(D)  ## pour voir la valeur finale de D\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-12","title":"Exercice 12","text":"<p>Exercice n\u00b012 :</p> EnonceSolution <p>Reprenez le programme Python de l'exercice pr\u00e9c\u00e9dent et ajoutez-y une variable qui compte le nombre d'it\u00e9rations dans la boucle <code>while</code>. Cela pour permettra de v\u00e9rifier la question 2 de l'exercice 14 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>On consid\u00e8re l'algorithme pr\u00e9c\u00e9dent. 1. Supposons que <code>D</code> vaut 2 apr\u00e8s l'ex\u00e9cution de cet algorithme. Quelles valeurs parmi celles propos\u00e9es ci-dessous pouvait-il avoir initialement ? -2 ; 2 ; 6 ; 14 ; 25. 2. Supposons que <code>D</code> vaut 25 initialement ; combien d'it\u00e9rations (c'est-\u00e0-dire de passages dans la r\u00e9p\u00e9titive) ont lieu avant que l'ex\u00e9cution de cet algorithme ne se termine ?</p> \ud83d\udc0d Script Python<pre><code># ajoutez une variable qui compte le nombre d'it\u00e9rations dans la r\u00e9p\u00e9titive tant que\n</code></pre> <p>On ajoute la variable <code>iter</code> qui vaut 0 au d\u00e9part et que l'on augmente de 1 \u00e0 chaque tour de boucle. On remplace aussi la valeur intiale de D par 25.  </p> \ud83d\udc0d Script Python<pre><code>D = 25  # valeur initiale de D\niter = 0\nwhile D &gt; 3:\n    iter = iter + 1\n    D = D - 3\nprint(iter, D)  # pour voir le nombre total d'it\u00e9rations\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-13","title":"Exercice 13","text":"<p>Exercice n\u00b013 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 15 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>Proposez un algorithme qui utilise une boucle Tant que qui a pour but d'afficher le quotient de la division enti\u00e8re d'un entier naturel A par un entier naturel B.</p> \ud83d\udc0d Script Python<pre><code># \u00e9crivez le programme Python correspondant\n</code></pre> <p>L'id\u00e9e est la suivante : avec une boucle Tant que, on retranche B \u00e0 A jusqu'\u00e0 obtenir un nombre &lt; B. Le nombre de fois que l'on a pu faire cela est le quotient cherch\u00e9, c'est donc le nombre de passages dans la boucle Tant que. On utilise une variable q qui compte le nombre de passages comme dans l'exercice pr\u00e9c\u00e9dent.  </p> \ud83d\udc0d Script Python<pre><code># valeurs pour tester\nA = 25\nB = 3\n# algorithme\nq = 0\nwhile A &gt;= B:\n    q = q + 1\n    A = A - B\n# pour voir le quotient\nprint(q)\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#v-les-fonctions","title":"V. Les fonctions","text":""},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-14","title":"Exercice 14","text":"<p>Exercice n\u00b014 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 16 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>Proposez le pseudo-code d'une fonction <code>minimum</code> qui renvoie le minimum des deux nombres donn\u00e9s en param\u00e8tres.</p> \ud83d\udc0d Script Python<pre><code># \u00e9crivez la fonction en Python\n</code></pre> \ud83d\udc0d Script Python<pre><code>def minimum(a, b):\n    if a &lt; b:\n        m = a\n    else:\n        m = b\n    return m\n</code></pre> <p>ou \ud83d\udc0d Script Python<pre><code>def minimum(a, b):\n    if a &lt; b:\n        return a\n    else:\n        return b\n</code></pre></p>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-15","title":"Exercice 15","text":"<p>Exercice n\u00b015 :</p> EnonceSolution <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 17 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python.</p> <p>Proposez le pseudo-code d'une fonction <code>minimum4</code> qui renvoie le minimum des 4 nombres donn\u00e9s en param\u00e8tres. Contrainte : vous devez faire appel \u00e0 la fonction <code>minimum</code> !</p> \ud83d\udc0d Script Python<pre><code># \u00e9crivez la fonction en Python\n</code></pre> \ud83d\udc0d Script Python<pre><code>def minimum4(a, b, c, d):\n    m1 = minimum(a, b)\n    m2 = minimum(c, d)\n    m = minimum(m1, m2)\nreturn m\n</code></pre>"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/#exercice-16","title":"Exercice 16","text":"<p>Exercice n\u00b016 :</p> EnonceSolution <p>Adaptez le code de l'exercice 10 pour \u00e9crire une fonction <code>compte_caractere(c, chaine)</code> qui renvoie le nombre de fois o\u00f9 appara\u00eet le caract\u00e8re <code>c</code> dans la cha\u00eene de caract\u00e8res <code>chaine</code> (on parle du nombre d'occurrences de <code>c</code>). </p> <p>Exemple : l'appel <code>compte_caractere('e', 'peace and love')</code> doit renvoyer la valeur 3, ce que l'on \u00e9crit :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; compte_caractere('e', 'peace and love')\n3\n</code></pre> \ud83d\udc0d Script Python<pre><code># \u00e0 vous de jouer !\n</code></pre> \ud83d\udc0d Script Python<pre><code>def compte_caractere(c, chaine):\n    compteur = 0\n    for caractere in chaine:\n        if caractere == c:\n            compteur = compteur + 1\n    return compteur\n</code></pre>"},{"location":"Divers/Liens_utiles/","title":"Liens utiles","text":""},{"location":"Divers/Liens_utiles/#a-propos-de-la-specialite-nsi","title":"\u00c0 propos de la sp\u00e9cialit\u00e9 NSI","text":"<ul> <li>Le site Eduscol </li> </ul>"},{"location":"Divers/Liens_utiles/#a-propos-de-la-culture-des-sciences-de-linformatique","title":"\u00c0 propos de la culture des sciences de l'informatique","text":"<ul> <li> <p>Interstices </p> </li> <li> <p>Inria </p> </li> </ul>"},{"location":"Divers/Liens_utiles/#a-propos-de-lorientation","title":"\u00c0 propos de l'orientation","text":"<ul> <li>Talents du num\u00e9rique </li> <li>Une brochure int\u00e9ressante.</li> </ul>"},{"location":"Divers/Liens_utiles/#pour-se-creuser-la-tete","title":"Pour se creuser la t\u00eate","text":"<p>Quelques sites de challenges/\u00e9nigmes/d\u00e9fis de programmation:</p> <ul> <li>PyD\u00e9fis </li> <li>Advent of Code </li> <li>MicroContest </li> <li>Hackinscience </li> </ul>"},{"location":"Divers/Liens_utiles/#pour-se-former-en-autonomie","title":"Pour se former en autonomie","text":"<p>Au cas o\u00f9 vous vous ennuieriez...</p> <ul> <li>France-IOI </li> <li>CheckIO </li> <li>CodinGame </li> </ul>"},{"location":"Divers/conseil/","title":"Conseils de travail","text":""},{"location":"Divers/conseil/#conditions-materielles","title":"Conditions mat\u00e9rielles","text":"<p>Nous travaillerons sur les notebooks Capytale de l'ENT principalement.  </p> <p>C'est en codant qu'on apprend \u00e0 coder</p> <p>Tous les exemples de code dans le cours doivent \u00eatre retap\u00e9s (r\u00e9sistez \u00e0 l'envie du copier-coller).</p> <p>Cela permet de :</p> <ul> <li>m\u00e9moriser la syntaxe ;</li> <li>v\u00e9rifier si le code propos\u00e9 ne contient pas d'erreur ;</li> </ul> <p>et le plus important :</p> <ul> <li>faire ses propres tests et modifications pour v\u00e9rifier sa bonne compr\u00e9hension. </li> </ul> <ul> <li>et un espace essentiel : un petit cahier \u00e0 spirale et un stylo \ud83d\udcdd  !  Afin de faire une fiche r\u00e9sum\u00e9 des divers notions abord\u00e9es.</li> </ul> <p></p>"},{"location":"Divers/conseil/#dossiers-fichiers-et-versionning","title":"Dossiers, fichiers et versionning","text":"<p>Cette ann\u00e9e en NSI nous allons manipuler un certain nombre de fichiers qui sont dans capytale sur l'ENT. Il est possible de les t\u00e9l\u00e9charger sur cl\u00e9 usb, dans ce cas il est important de les nommer et les classer de fa\u00e7on rigoureuse pour les retrouver rapidement et les partager.</p> <p>Conseils</p> <ul> <li>Utilisez des dossiers pour classer vos fichiers. Il n'y en a jamais assez.</li> <li>Prenez l'habitude de faire plusieurs sauvegardes de vos documents (sur le r\u00e9seau du lyc\u00e9e, sur l'ENT, sur cl\u00e9 USB).</li> <li>\u00c9vitez dans les noms de fichiers et de dossiers les espaces (utilisez plut\u00f4t _ ) ainsi que les caract\u00e8res accentu\u00e9s et les caract\u00e8res sp\u00e9ciaux.</li> <li>Un nom de fichier doit \u00eatre parlant (un peu comme une variable en fait). On \u00e9vitera de nommer ses codes Python <code>python1.py</code>, <code>python2.py</code>, <code>python3.py</code>, etc. Mais plut\u00f4t <code>NSI_T6_Variable_Python.py</code> par exemple pour un exercice de programmation.</li> <li>Lorsqu'on travaille sur un projet ou un programme cons\u00e9quent, il peut \u00eatre utile de conserver des archives du travail \u00e0 plusieurs \u00e9tapes de l'\u00e9laboration, plut\u00f4t que de ne conserver que la derni\u00e8re version. \u00c0 cet effet on pourra num\u00e9roter : <code>NSI_projet_morpion_v1.py</code>, puis <code>NSI_projet_morpion_v2.py</code>, <code>NSI_projet_morpion_v3.py</code>, etc.</li> </ul>"},{"location":"Divers/conseil/#usage-du-clavier","title":"Usage du clavier","text":"<p>Utiliser le clavier est souvent bien plus pratique et surtout plus rapide qu'utiliser la souris. Encore faut-il apprendre \u00e0 l'apprivoiser...</p> <p>La s\u00e9lection au clavier</p> <p>Outre les touches <code>DEBUT</code> et <code>FIN</code> qui permettent d'atteindre rapidement le d\u00e9but ou la fin d'une ligne, les fl\u00e8ches directionelles servent \u00e9videmment \u00e0 se d\u00e9placer dans du texte. Mais combin\u00e9es:</p> <ul> <li>\u00e0 la touche <code>CTRL</code> : elles permettent de se d\u00e9placer de mot en mot;</li> <li>\u00e0 la touche <code>MAJ</code> : elles permettent de s\u00e9lectionner un caract\u00e8re;</li> <li>aux touches <code>MAJ</code> et <code>CTRL</code>: elles permettent de s\u00e9lectionner une mot.</li> </ul> <p>De m\u00eame, en se pla\u00e7ant en d\u00e9but d'une ligne et en combinant la touche <code>MAJ</code> et <code>FIN</code>, on s\u00e9lectionne la ligne enti\u00e8re.</p> <p>Les raccourcis clavier</p> <p>Il existe de tr\u00e8s nombreux raccourcis clavier qui permettent d'ex\u00e9cuter des t\u00e2ches courantes sans passer par les menus du logiciel. Certains sont (quasi-)universels, c'est-\u00e0-dire que ce sont les m\u00eames sur tous les logiciels, d'autres sont sp\u00e9cifiques \u00e0 chaque logiciel. Il est important d'en conna\u00eetre quelques-uns pour \u00eatre plus efficace.</p> Les universelsIDENavigateur Web <ul> <li>La triplette magique <code>CTRL+X</code>, <code>CTRL+C</code>, <code>CTRL+V</code> pour couper, copier, coller;</li> <li><code>CTRL+O</code> pour ouvrir un fichier</li> <li><code>CTRL+N</code> pour cr\u00e9er un nouveau document;</li> <li><code>CTRL+S</code> pour sauvegarder le document en cours;</li> <li><code>CTRL+MAJ+S</code> pour sauvegarder en pr\u00e9cisant le nom du fichier;</li> <li><code>CTRL+Z</code> pour annuler la derni\u00e8re action, <code>CTRL+Y</code> ou <code>CTRL+MAJ+Z</code> pour la r\u00e9tablir;</li> <li><code>CTRL+W</code> pour fermer un onglet;</li> <li><code>CTRL+Q</code> ou <code>ALT+F4</code> pour fermer le logiciel;</li> <li><code>CTRL+A</code> pour s\u00e9lectionner tout (All).</li> </ul> <p>\u00c0 chercher de suite lorsqu'on utilise un nouvel IDE, les raccourcis pour les actions suivantes (entre parenth\u00e8ses ceux de Thonny):</p> <ul> <li>ex\u00e9cuter le code (<code>F5</code>)</li> <li>commenter/d\u00e9commenter une ligne (<code>CTRL+M</code>)</li> </ul> <ul> <li><code>CTRL+T</code> pour ouvrir un nouvel onglet;</li> <li><code>CTRL+H</code> pour ouvrir l'historique;</li> <li>combiner <code>CTRL</code> + clic pour forcer l'ouverture d'un lien dans un nouvel onglet;</li> <li>combiner <code>MAJ</code> + clic pour forcer l'ouverture d'un lien dans une nouvelle fen\u00eatre;</li> </ul> sources <ul> <li>site de C\u00e9dric Gouygou</li> </ul>"},{"location":"Divers/instal_python/","title":"Python","text":"<p>Le programme officiel de l'enseignement de sp\u00e9cialit\u00e9 nsi pr\u00e9cise que :</p> <p>Un langage de programmation est n\u00e9cessaire pour l\u2019\u00e9criture des programmes : un langage simple d\u2019usage, interpr\u00e9t\u00e9, concis, libre et gratuit, multiplateforme, largement r\u00e9pandu, riche de biblioth\u00e8ques adapt\u00e9es et b\u00e9n\u00e9ficiant d\u2019une vaste communaut\u00e9 d\u2019auteurs dans le monde \u00e9ducatif est \u00e0 privil\u00e9gier. Au moment de la conception de ce programme, le langage choisi est Python version 3 (ou sup\u00e9rieure).</p> <p>La pratique r\u00e9guli\u00e8re de la programmation en Python est primordiale pour r\u00e9ussir en NSI. Chaque \u00e9l\u00e8ve devrait donc disposer \u00e0 la maison d'un ordinateur \u00e9quip\u00e9 de Python et d'un environnement de d\u00e9veloppement (en anglais ide pour integrated development environment)</p>"},{"location":"Divers/instal_python/#installation-de-python","title":"Installation de Python","text":""},{"location":"Divers/instal_python/#sous-linux-ou-macos","title":"Sous Linux (ou MacOS)","text":"<p>Python fait normalement partie des principales distributions Linux et de MacOS, aucune installation n'est n\u00e9cessaire. Pour le v\u00e9rifier lancer un terminal et entrer simplement la commande <code>python</code> (ou \u00a0<code>python3</code>).</p>"},{"location":"Divers/instal_python/#sous-windows","title":"Sous Windows","text":"<ol> <li>T\u00e9l\u00e9charger les fichiers d'installation sur python.org</li> <li>Lancer l'installation</li> <li> <p>Ouvrir un terminal et y taper simplement <code>python</code> pour v\u00e9rifier que tout s'est d\u00e9roul\u00e9 correctement</p> <p>En cas de difficult\u00e9s</p> <p>Consulter le tutoriel vid\u00e9o suivant :  </p> </li> </ol>"},{"location":"Divers/instal_python/#installation-dun-ide","title":"Installation d'un ide","text":"<p>L'ide utilis\u00e9 en classe est VS Code (mais il y en a beaucoup d'autres), pour l'installer :</p> <ol> <li>Se rendre sur la page de t\u00e9l\u00e9chargement et s\u00e9lectionner le syst\u00e8me d'exploitation qui vous convient.</li> <li>Lancer la proc\u00e9dure d'installation</li> <li>Au premier lancement de VS Code, rechercher <code>python</code> dans les extensions (5eme icone de la barre lat\u00e9rale ou en tapant Ctrl\uff0bShift\uff0bX) et installer Python IntelliSense.</li> </ol>"},{"location":"T01_TypesBase/accueil/","title":"Types de base","text":"<p>Les machines ne manipulent pas les objets (textes, images, etc.) directement mais une repr\u00e9sentation de ces donn\u00e9es dont l'unit\u00e9 minimale est le bit (0/1).</p> <p> </p>"},{"location":"T01_TypesBase/index_typebases/","title":"Th\u00e8me 1 : Rep. des donn\u00e9es - Types et valeurs de base","text":"<ul> <li>\ud83d\uddf9 Codage des entiers  </li> <li>\ud83d\uddf9 Codage des non-entiers  </li> <li>\ud83d\uddf9 Bases  </li> <li>\u25a1 Codage des caract\u00e8res  </li> <li>\ud83d\uddf9 Bool\u00e9ens  </li> </ul>"},{"location":"T01_TypesBase/T1.1_Bases/Codage_Entiers/","title":"Th\u00e8me 1 - Repr\u00e9sentation des donn\u00e9es - Types et valeurs de bases","text":"05              Ecriture d'un entier positif dans une base b <p>Programme Terminale</p> Contenus Capacit\u00e9s attendues Commentaires Ecriture d'un entier positif dans une base \\(b \\leq 2\\) Passer de la repr\u00e9sentation d'une base \u00e0 l'autre Les bases 2, 10 et 16 sont privil\u00e9gi\u00e9es"},{"location":"T01_TypesBase/T1.1_Bases/Codage_Entiers/#ecriture-dun-entier-dans-une-base","title":"\u00c9criture d'un entier dans une base","text":"<p>Le monde se divise en 2 cat\u00e9gories : ceux qui comprennent le binaire et ceux qui ne le comprennent pas.</p>"},{"location":"T01_TypesBase/T1.1_Bases/Codage_Entiers/#le-systeme-decimal","title":"Le syst\u00e8me d\u00e9cimal","text":"<p>Depuis la pr\u00e9histoire, l'Homme a besoin de compter. Sa premi\u00e8re id\u00e9e:</p> <p> </p> <p>Pas tr\u00e8s pratique... Heureusement, il en eut rapidemennt une autre, beaucoup plus efficace: regrouper les b\u00e2tons en paquets.</p> <p> </p> <p> </p> <p>Des paquets de 5 et surtout de 10. Pourquoi 10 ? </p> <p>Pour \u00e9crire les nombres, regroup\u00e9s en paquets de 10, il a donc fallu inventer 10 chiffres pour compter les unit\u00e9s (en-dessous du paquet): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.</p> <p>Et le nombre 10 ne signifie ni plus ni moins que 1 paquet et 0 unit\u00e9.</p> <p>Ensuite, on fait un paquet de paquets, la centaine (100, c'est \u00e0 dire \\(10 \\times 10 = 10^2\\)), puis un paquet de centaines, le millier (1000, c'est-\u00e0-dire \\(10\\times 10\\times10=10^3\\)), et ainsi de suite.</p> <p>Au final, si on \u00e9crit le nombre 2022 on sait que c'est:</p> <ul> <li>2 mille, c'est-\u00e0-dire \\(2\\times 10^3\\) ;</li> <li>0 centaine, c'est-\u00e0-dire \\(0\\times 10^2\\) ;</li> <li>2 dizaines, c'est-\u00e0-dire \\(2\\times 10^1\\);</li> <li>2 unit\u00e9, c'est-\u00e0-dire \\(2\\times 10^0\\).</li> </ul> <p>Et bien entendu, \\(2022 = 2\\times 10^3 + 0\\times 10^2+ 2\\times 10^1 +2\\times 10^0\\)</p> <p>La position de chaque chiffre dans l'\u00e9criture du nombre correspond \u00e0 la puissance de 10 par laquelle on le multiplie.</p> <p>Homer compte</p> Octal D\u00e9cimal 0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 10 8 11 9 12 10 13 11 14 12 15 13 16 14 17 15 20 16 21 17 ... ... <p>Un autre exemple, la base octale</p> <p>Pour Homer Simpson, qui n'a que 8 doigts, il aurait \u00e9t\u00e9 certainement plus naturel de faire des paquets de 8... et donc de manipuler seulement 8 chiffres : 0, 1, 2, 3, 4, 5, 6 et 7.</p> <p>C'est le syst\u00e8me octal.</p> <p>Ainsi, \u00abson\u00bb 10 signifierait 1 paquet de 8 et 0 unit\u00e9, soit \u00abnotre\u00bb 8... Et donc notre 10 (en d\u00e9cimal) s'\u00e9crirait 12 (en octal).</p> <p>Enfin, 2022 (en d\u00e9cimal) s'\u00e9crit 3746 en octal puisque : </p> \\[\\begin{array}{rl}     3746_8 &amp;= 3\\times 8^3+7\\times 8^2+4\\times 8^1+5\\times 8^0 \\\\     &amp;= 8\\times 512+7\\times 64+4\\times 8+6\\times 1  \\\\     &amp;= 1536+448+32+6\\\\     &amp;= 2022     \\end{array}     \\]"},{"location":"T01_TypesBase/T1.1_Bases/Codage_Entiers/#notion-de-base","title":"Notion de base","text":"<p>\u00c9criture d'un entier en base \\(b\\)</p> <ul> <li> <p>Choisir une base, c'est choisir la \u00abtaille\u00bb du paquet, et donc le nombre de chiffres dont on aura besoin: en base \\(b\\), il y a \\(b\\) chiffres.</p> </li> <li> <p>Dans notre syst\u00e8me d\u00e9cimal, la base est \\(b=10\\).</p> </li> <li> <p>La position de chaque chiffre correspond \u00e0 la puissance de \\(b\\) par laquelle on le multiplie.</p> </li> <li> <p>On pr\u00e9cisera la base (si diff\u00e9rente de 10) en indice en fin du nombre. Par exemple, le nombre \\(312_5\\) est \u00e9crit en base 5.</p> </li> </ul> <p>Exemples\\[\\begin{array}{rl} 312_5 &amp;= 3\\times 5^2 + 1\\times 5^1 + 2\\times 5^0 \\\\ &amp;= 3\\times 25+1\\times 5+2\\times 1  \\\\ &amp;= 82 \\end{array} \\] \\[\\begin{array}{rl} 25072_8 &amp;= 2\\times 8^4 + 5\\times 8^3+0\\times 8^2+7\\times 8^1+2\\times 8^0 \\\\ &amp;= 2\\times 4096 + 5\\times 512 + 7\\times 8 + 2\\times 1  \\\\ &amp;= 10810 \\end{array} \\] </p>"},{"location":"T01_TypesBase/T1.1_Bases/Codage_Entiers/#le-systeme-binaire-base-2","title":"Le syst\u00e8me binaire (base 2)","text":"<p>Le binaire</p> <ul> <li>Le syst\u00e8me binaire est le syst\u00e8me de num\u00e9ration de base \\(b=2\\).</li> <li> <p>Il utilise donc seulement deux chiffres, 0 et 1, appel\u00e9s bits (contraction de l'anglais binary digit).</p> </li> <li> <p>Il est particuli\u00e8rement adapt\u00e9 \u00e0 l'informatique car il permet d'unifier la logique (Vrai/Faux), le calcul et l'\u00e9lectronique (voir vid\u00e9o suivante).</p> </li> <li> <p>Un regroupement de 8 bits est appel\u00e9 un octet.</p> </li> </ul> Vid\u00e9o <p><p> </p></p> <p>Conversions</p> Binaire \u2192 D\u00e9cimalD\u00e9cimal \u2192 BinaireD\u00e9cimal \u2192  Base quelconque <p>Il est utile de conna\u00eetre alors les puissances de 2 pour convertir rapidement de l'\u00e9criture binaire vers l'\u00e9criture d\u00e9cimale.</p> <p> </p> <p>Par exemple \\(10110101_2=128+32+16+4+1=181\\).</p> <ul> <li> <p>On peut utiliser l'algorithme de soustraction: on soustrait du nombre la plus grande puissance de 2 possible, et on recommence...</p> </li> <li> <p>On utilise l'algorithme de divisions: on effectue les divisions successives du nombre par 2. L'\u00e9criture en binaire est donn\u00e9e par les restes lus de bas en haut.</p> </li> </ul> <p> </p> <p>Les deux algorithmes de soustraction et de divisions fonctionnent \u00e9galement pour la conversion du d\u00e9cimal vers n'importe quelle autre base.</p>"},{"location":"T01_TypesBase/T1.1_Bases/Codage_Entiers/#le-systeme-hexadecimal-base-16","title":"Le syst\u00e8me hexad\u00e9cimal (base 16)","text":"<p>L'hexad\u00e9cimal</p> <ul> <li> <p>Le syst\u00e8me hexad\u00e9cimal est le syst\u00e8me de num\u00e9ration de base \\(b=16\\).</p> </li> <li> <p>Il utilise donc 16 chiffres : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.</p> </li> <li> <p>Bien qu'il n\u00e9cessite plus de chiffres, ce syst\u00e8me donne des \u00e9critures plus courtes et particuli\u00e8rement pratique du fait que 16 est une puissance de 2 : la conversion entre les syst\u00e8mes binaire et hexad\u00e9cimal se fait sans calcul, uniquement par regroupement de 4 bits.</p> </li> </ul> <p>Couleurs</p> <p>Le syst\u00e8me hexad\u00e9cimal est en particulier un mode de code informatique des couleurs.</p> <p>En effet une couleur (codage RGB) est compos\u00e9e de 3 valeurs correspondant aux composantes rouge, verte et bleue, et chacune de ces valeurs est un entier compris entre 0 et 255, c'est-\u00e0-dire entre 0 et FF en hexad\u00e9cimal: on peut les \u00e9crire avec seulement deux chiffres.</p> <p> </p> <p>Par exemple, la couleur rouge ci-contre a pour composantes (178, 26, 15), ce qui donne en hexad\u00e9cimal : (B2, 1A, 0F), qu'on \u00e9crit en g\u00e9n\u00e9ral de fa\u00e7on concat\u00e9n\u00e9e B21A0F et souvent pr\u00e9c\u00e9d\u00e9e d'un #.</p> Convertisseur <p>Un convertisseur  bien utile.</p>"},{"location":"T01_TypesBase/T1.1_Bases/Codage_Entiers/#exercices","title":"Exercices","text":""},{"location":"T01_TypesBase/T1.1_Bases/Codage_Entiers/#a-la-main","title":"\u00c0 la main","text":"<p>Exercices</p> Exercice  1Exercice  2Exercice  3Exercice  4Exercice  5Exercice  6 <p>Convertir de la base mentionn\u00e9e vers la base 10 (syst\u00e8me d\u00e9cimal).</p> <p>Attention, il y a un pi\u00e8ge...</p> <ol> <li>\\(131_6\\)</li> <li>\\(420_5\\)</li> <li>\\(1515_8\\)</li> <li>\\(716_4\\)</li> <li>\\(321_4\\)</li> </ol> <p>Convertir les \u00e9critures d\u00e9cimales vers la base mentionn\u00e9e.</p> <ol> <li>47 en base 5</li> <li>92 en base 4</li> </ol> <p>Convertir du binaire vers le d\u00e9cimal.</p> <ol> <li>1010</li> <li>101110</li> <li>10001101</li> <li>11111111</li> </ol> <p>Convertir du d\u00e9cimal vers le binaire.</p> <ol> <li>17</li> <li>34</li> <li>68</li> <li>100</li> <li>200</li> </ol> <p>Que remarquez-vous quand on passe de l'\u00e9criture binaire d'un nombre \u00e0 celle de son double?</p> <ol> <li> <p>V\u00e9rifier la conversion de la couleur rouge donn\u00e9e en exemple \u00e0 la section pr\u00e9c\u00e9dente.</p> </li> <li> <p>Convertir les \u00e9critures hexad\u00e9cimales en d\u00e9cimal: 99, D7, 1B8, ABC.</p> </li> <li> <p>Comment s'\u00e9crit la couleur blanche en code hexad\u00e9cimal?</p> </li> </ol> <p>Convertir les \u00e9critures d\u00e9cimales en hexad\u00e9cimal.</p> <ol> <li>45</li> <li>72</li> <li>421</li> </ol> <p>Exercice  7</p> Conversion Binaire \u2192 Hexad\u00e9cimalConversion Hexad\u00e9cimal  \u2192 BinaireApplication <ul> <li>On regroupe les bits par paquets de 4 (quitte \u00e0 ajouter des 0 pour compl\u00e9ter).</li> <li>On convertit chaque paquet en chiffre hexad\u00e9cimal.</li> <li>On concat\u00e8ne les chiffres</li> </ul> <p>Par exemple, \\(11111100101_2 = \\underbrace{0111}_{7} \\underbrace{1110}_{14=\\text{E}_{16}} \\underbrace{0101}_{5} = 7\\text{E}5_{16}\\) </p> <p>On fait la m\u00eame chose dans l'autre sens.</p> <ol> <li>Convertir \\(101101_2\\) puis \\(10011011111_2\\) en base 16.</li> <li>Convertir \\(8\\text{D}_{16}\\) puis \\(1\\text{CA}7_{16}\\) en binaire.</li> </ol>"},{"location":"T01_TypesBase/T1.1_Bases/Codage_Entiers/#avec-python","title":"Avec Python","text":"Fonctions de conversion <p>Pour convertir un entier \u00e9crit en d\u00e9cimal vers le binaire ou l'hexad\u00e9cimal, on peut utiliser les fonctions <code>bin</code> et <code>hex</code>, qui renvoient des cha\u00eenes de caract\u00e8res.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; bin(2021)\n'0b11111100101'\n&gt;&gt;&gt; hex(2021)\n'0x7e5'\n&gt;&gt;&gt;\n</code></pre> <p>Les pr\u00e9fixes <code>0b</code> et <code>0x</code> indiquent que les \u00e9critures sont respectivement en base 2  et en base 16.</p> <p>R\u00e9ciproquement, pour convertir l'\u00e9criture d'un nombre \u00e9crit en base \\(b\\) vers le d\u00e9cimal, on utilise la fonction <code>int</code> en passant en arguments l'\u00e9criture en cha\u00eene de caract\u00e8res et la base.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; int('11111100101', 2)\n2021\n&gt;&gt;&gt; int('7e5', 16)\n2021\n&gt;&gt;&gt;\n</code></pre> <p>Exercice  8</p> <p>Utilisez ces fonctions pour v\u00e9rifier vos r\u00e9sultats des exercices pr\u00e9c\u00e9dents.</p> <p>&gt;&gt;&gt; </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/","title":"C4 Repr\u00e9sentation des entiers positifs","text":"<p>Programme 1\u00e8re</p> Contenus Capacit\u00e9s attendues Commentaires Ecriture d'un entier positif dans une base \\(b \\geq 2\\) Passer de la repr\u00e9sentation d'une base \u00e0 l'autre Les bases 2, 10 et 16 sont privil\u00e9gi\u00e9es"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#activite-compter-avec-des-0-et-des-1","title":"Activit\u00e9 : Compter avec des 0 et des 1","text":"<p>C'est d\u00e9cid\u00e9 : nous allons changer de monnaie ! Fini les euros nous comptons d\u00e9sormais en Bin dont le symbole est \\(\\mathbb(B)\\). De tous nouveaux billets de banque ont \u00e9t\u00e9 \u00e9mis, vous en voyez la liste i-dessous :</p> <p> </p> <p> </p> <p> </p> <p></p> <p>Exercice  1<p>On suppose qu'on ne dispose que d'un seul exemplaire de chaque billet.  </p> <ol> <li>Peut-on r\u00e9unir exactement le somme de 73 B ? Comment ?  </li> <li>M\u00eame question pour 155 B.  </li> <li>M\u00eame question pour 218 B.  </li> </ol> </p> <p>Exercice  2<p>Pour simpliflier l'\u00e9criture d'une somme contenant au maximum un seul de ces billets, on propose d'utiliser le tableau suivant. Dans la colonne du billet on indique 1 si le billet est utilis\u00e9 et 0 sinon. Recopier et compl\u00e9ter le tableau ci-dessous.  </p> </p> 1B 2B 4B 8B 16B 32B 64B 128B 148 42 237 219 0 0 0 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 <p>Exercice  3</p> <ol> <li>Quelle somme maximale peut-on r\u00e9unir en utilisant au maximum un seul de Ces billets ?  </li> <li>Peut-on r\u00e9unir n'importe quelle somme (jusqu'\u00e0 la somme maximale) ? Expliquer.  </li> <li>Les valeurs de Ces billets n'ont pas \u00e9t\u00e9 Choisies au hasard, \u00e0 votre avis quel doit \u00eatre le montant du billet suivant ? Pourquoi ?  </li> <li>Dans le tableau Ci-dessus, que peut-on dire des nombres pour lesquels le billet 1 \\(\\mathbb(B)\\) n'est pas utilis\u00e9 ?  </li> <li>Proposer une m\u00e9thode pour trouver les billets \u00e0 utiliser pour une somme donn\u00e9e.</li> </ol>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#ecriture-dun-entier-dans-une-base","title":"\u00c9criture d'un entier dans une base","text":"<p>Le monde se divise en 2 cat\u00e9gories : ceux qui comprennent le binaire et ceux qui ne le comprennent pas.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#le-systeme-decimal","title":"Le syst\u00e8me d\u00e9cimal","text":"<p>Depuis la pr\u00e9histoire, l'Homme a besoin de compter. Sa premi\u00e8re id\u00e9e:</p> <p> </p> <p>Pas tr\u00e8s pratique... Heureusement, il en eut rapidemennt une autre, beaucoup plus efficace: regrouper les b\u00e2tons en paquets.</p> <p> </p> <p>Des paquets de 5 et surtout de 10. Pourquoi 10 ? </p> <p>Pour \u00e9crire les nombres, regroup\u00e9s en paquets de 10, il a donc fallu inventer 10 chiffres pour compter les unit\u00e9s (en-dessous du paquet): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.</p> <p>Et le nombre 10 ne signifie ni plus ni moins que 1 paquet et 0 unit\u00e9.</p> <p>Ensuite, on fait un paquet de paquets, la centaine (100, c'est \u00e0 dire \\(10 \\times 10 = 10^2\\)), puis un paquet de centaines, le millier (1000, c'est-\u00e0-dire \\(10\\times 10\\times10=10^3\\)), et ainsi de suite.</p> <p>Au final, si on \u00e9crit le nombre 2022 on sait que c'est:</p> <ul> <li>2 mille, c'est-\u00e0-dire \\(2\\times 10^3\\) ;</li> <li>0 centaine, c'est-\u00e0-dire \\(0\\times 10^2\\) ;</li> <li>2 dizaines, c'est-\u00e0-dire \\(2\\times 10^1\\);</li> <li>2 unit\u00e9, c'est-\u00e0-dire \\(2\\times 10^0\\).</li> </ul> <p>Et bien entendu, \\(2022 = 2\\times 10^3 + 0\\times 10^2+ 2\\times 10^1 +2\\times 10^0\\)</p> <p>La position de chaque chiffre dans l'\u00e9criture du nombre correspond \u00e0 la puissance de 10 par laquelle on le multiplie.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#notion-de-base","title":"Notion de base","text":"<p>\u00c9criture d'un entier en base \\(b\\)</p> <ul> <li> <p>Choisir une base, c'est choisir la \u00abtaille\u00bb du paquet, et donc le nombre de chiffres dont on aura besoin: en base \\(b\\), il y a \\(b\\) chiffres.</p> </li> <li> <p>Dans notre syst\u00e8me d\u00e9cimal, la base est \\(b=10\\).</p> </li> <li> <p>La position de chaque chiffre correspond \u00e0 la puissance de \\(b\\) par laquelle on le multiplie.</p> </li> <li> <p>On pr\u00e9cisera la base (si diff\u00e9rente de 10) en indice en fin du nombre. Par exemple, le nombre \\(312_5\\) est \u00e9crit en base 5.</p> </li> </ul> <p>Exemples\\[\\begin{array}{rl} 312_5 &amp;= 3\\times 5^2 + 1\\times 5^1 + 2\\times 5^0 \\\\ &amp;= 3\\times 25+1\\times 5+2\\times 1  \\\\ &amp;= 82 \\end{array} \\] \\[\\begin{array}{rl} 25072_8 &amp;= 2\\times 8^4 + 5\\times 8^3+0\\times 8^2+7\\times 8^1+2\\times 8^0 \\\\ &amp;= 2\\times 4096 + 5\\times 512 + 7\\times 8 + 2\\times 1  \\\\ &amp;= 10810 \\end{array} \\] </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#le-systeme-binaire-base-2","title":"Le syst\u00e8me binaire (base 2)","text":"<p>Le binaire</p> <ul> <li>Le binaire, c'est le syst\u00e8me de comptage des ordinateurs. Pourquoi le binaire et pas le d\u00e9cimal comme les humains ?  </li> <li>Un ordinateur est compos\u00e9 de circuits \u00e9lectroniques et de composants \u00e9lectriques, aliment\u00e9s par un signal \u00e9lectrique : 1, il y a du courant, 0, il n'y en a pas. Le plus simple pour compter est donc d'utiliser un syst\u00e8me en base 2 (le binaire) car on peut repr\u00e9senter ses deux valeurs possibles (0 et 1).  (voir vid\u00e9o suivante).</li> <li>Le syst\u00e8me binaire est le syst\u00e8me de num\u00e9ration de base \\(b=2\\).  </li> <li>Il utilise donc seulement deux chiffres, 0 et 1, appel\u00e9s bits (contraction de l'anglais binary digit).  Le nombre 10101 occupe 5 rangs. On dit qu'il s'\u00e9crit sur 5 bits</li> <li>Un regroupement de 8 bits est appel\u00e9 un octet.  </li> </ul> Vid\u00e9o <p><p> </p></p> <p>Exercice  4</p> Enonc\u00e9Correction <ol> <li>Combien de valeurs peut-on coder avec 1 bit ?  </li> <li>Combien de valeurs peut-on coder avec 2 bits ?  </li> <li>Combien de valeurs peut-on coder avec 3 bits ?  </li> <li>Combien de valeurs peut-on coder avec n bits ?</li> </ol> <ol> <li>Sur 1 bit : on peut code 2 valeurs.  </li> <li>Sur 2 bits : on peut code 4 valeurs (soit \\(2^2\\)).  </li> <li>Sur 3 bits : on peut code 8 valeurs (soit \\(2^3\\)).  </li> <li>Sur n bits : on peut code \\(2^n\\) valeurs.  </li> </ol> <p>Binaire \u2192 D\u00e9cimal<p>Il est utile de conna\u00eetre alors les puissances de 2 pour convertir rapidement de l'\u00e9criture binaire vers l'\u00e9criture d\u00e9cimale.</p> <p> </p> <p>Par exemple \\(10110101_2=128+32+16+4+1=181\\).</p> </p> <p>D\u00e9cimal \u2192 Binaire M\u00e9thode 1<ul> <li> <p>On peut utiliser l'algorithme de soustraction: on soustrait du nombre la plus grande puissance de 2 possible, et on recommence...</p> </li> <li> <p>On utilise l'algorithme de divisions: on effectue les divisions successives du nombre par 2. L'\u00e9criture en binaire est donn\u00e9e par les restes lus de bas en haut.</p> </li> </ul> <p> </p> </p> <p>D\u00e9cimal \u2192 Binaire M\u00e9thode 2<ul> <li>On peut utiliser un tableau.  Par exemple pour 217  </li> </ul> \\(2^7\\) \\(2^6\\) \\(2^5\\) \\(2^4\\) \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) 128 64 32 16 8 4 2 1 1 1 0 1 1 0 0 1 217-128=89 89-64=25 25 25-16=9 9-8=1 1 1 1-1=0 </p> <p>D\u00e9cimal \u2192  Base quelconque<p>Les deux algorithmes de soustraction et de divisions fonctionnent \u00e9galement pour la conversion du d\u00e9cimal vers n'importe quelle autre base.</p> </p> <p>Exercice  5</p> <p>\u00c9crire 96,196,119 et 168 en binaire avec cette m\u00e9thode.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#le-systeme-hexadecimal-base-16","title":"Le syst\u00e8me hexad\u00e9cimal (base 16)","text":"<p>L'hexad\u00e9cimal</p> <ul> <li> <p>Le syst\u00e8me hexad\u00e9cimal est le syst\u00e8me de num\u00e9ration de base \\(b=16\\).</p> </li> <li> <p>Il utilise donc 16 chiffres : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.</p> </li> <li> <p>Bien qu'il n\u00e9cessite plus de chiffres, ce syst\u00e8me donne des \u00e9critures plus courtes et particuli\u00e8rement pratique du fait que 16 est une puissance de 2 : la conversion entre les syst\u00e8mes binaire et hexad\u00e9cimal se fait sans calcul, uniquement par regroupement de 4 bits.</p> </li> </ul> <p>Couleurs</p> <p>Le syst\u00e8me hexad\u00e9cimal est en particulier un mode de code informatique des couleurs.</p> <p>En effet une couleur (codage RGB) est compos\u00e9e de 3 valeurs correspondant aux composantes rouge, verte et bleue, et chacune de ces valeurs est un entier compris entre 0 et 255, c'est-\u00e0-dire entre 0 et FF en hexad\u00e9cimal: on peut les \u00e9crire avec seulement deux chiffres.</p> <p> </p> <p>Par exemple, la couleur rouge ci-contre a pour composantes (178, 26, 15), ce qui donne en hexad\u00e9cimal : (B2, 1A, 0F), qu'on \u00e9crit en g\u00e9n\u00e9ral de fa\u00e7on concat\u00e9n\u00e9e B21A0F et souvent pr\u00e9c\u00e9d\u00e9e d'un #.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#exercices","title":"Exercices","text":""},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#a-la-main","title":"\u00c0 la main","text":"<p>Exercice  6</p> Enonc\u00e9Correction <p>Convertir de la base mentionn\u00e9e vers la base 10 (syst\u00e8me d\u00e9cimal).</p> <p>Attention, il y a un pi\u00e8ge...</p> <ol> <li>\\(131_6\\) </li> <li>\\(420_5\\) </li> <li>\\(1515_8\\) </li> <li>\\(716_4\\) </li> <li>\\(321_4\\) </li> </ol> <ol> <li>\\(131_6\\) :  \\(1 \\times 6^2 + 3 \\times 6^1 + 1 =55\\) </li> <li>\\(420_5\\)  :  \\(4 \\times 5^2 + 2 \\times 6^1 + 0 =110\\) </li> <li>\\(1515_8\\)  :  \\(1 \\times 8^3 + 5 \\times 8^2 + 1 \\times 5^1 + 5 =845\\) </li> <li>\\(716_4\\)  :  Impossible  les chiffres ne peuvent pas d\u00e9passer 3 dans une base 4.  </li> <li>\\(321_4\\)  :  \\(3 \\times 4^2 + 2 \\times 4^1 + 1 =57\\) </li> </ol> <p>Exercice  7</p> Enconc\u00e9Correction <p>Convertir les \u00e9critures d\u00e9cimales vers la base mentionn\u00e9e.</p> <ol> <li>47 en base 5  </li> <li>92 en base 4  </li> </ol> <ol> <li>\\(47 =  142_5\\)</li> <li>$92= 1130_4</li> </ol> <p>Exercice  8</p> Enonc\u00e9Correction <p>Convertir du binaire vers le d\u00e9cimal.</p> <ol> <li>1010  </li> <li>101110  </li> <li>10001101  </li> <li>11111111  </li> <li>101011001  </li> </ol> <ol> <li>\\(1010_2 = 1 \\times 2^3 + 0 \\times 2^2 + 1 \\times 2^1 + 0 =10\\) </li> <li>\\(101110 _2 = 1 \\times 2^5 + 0 \\times 2^4 + 1 \\times 2^3 + 1 \\times 2^2 + 1 \\times 2^1 + 0 =32+8+4+2=44\\) </li> <li>\\(10001101_2 = 1 \\times 2^7 + 0 \\times 2^6 + 0 \\times 2^5 + 0 \\times 2^4 + 1 \\times 2^3 + 1 \\times 2^2 + 0 \\times 2^1 + 1 =140\\) </li> <li>\\(11111111_2 = 1 \\times 2^7 + 1 \\times 2^6 + 1 \\times 2^5 + 1 \\times 2^4 + 1 \\times 2^3 + 1 \\times 2^2 + 1 \\times 2^1 + 1 =255\\) </li> <li>\\(101011001_2 = 1 \\times 2^8 + 1 \\times 2^6 + 1 \\times 2^4 + 1 \\times 2^3 + 1 =345\\) </li> </ol> <p>Exercice  9</p> Enonc\u00e9Correction <p>Convertir du d\u00e9cimal vers le binaire.</p> <ol> <li>17  </li> <li>34  </li> <li>68  </li> <li>100  </li> <li>200  </li> </ol> <p>Que remarquez-vous quand on passe de l'\u00e9criture binaire d'un nombre \u00e0 celle de son double?</p> <ol> <li>\\(17=10001_2\\) </li> <li>\\(34=100010_2\\) </li> <li>\\(68=1000100_2\\) </li> <li>\\(100=1100100_2\\) </li> <li>\\(200=11001000_2\\) </li> </ol> <p>Exercice  10</p> Enonc\u00e9Correction <ol> <li> <p>V\u00e9rifier la conversion de la couleur rouge donn\u00e9e en exemple \u00e0 la section pr\u00e9c\u00e9dente.</p> </li> <li> <p>Convertir les \u00e9critures hexad\u00e9cimales en d\u00e9cimal: 99, D7, 1B8, ABC.</p> </li> <li> <p>Comment s'\u00e9crit la couleur blanche en code hexad\u00e9cimal?</p> </li> </ol> <ol> <li>Voir cours  </li> <li>\\(99_{16}=9 \\times 16^1 + 9 = 153\\) \\(D7_{16}=13 \\times 16^1 + 7 = 215\\) \\(1B8_{16}= 1 \\times 16 ^2 + 11 \\times 16^1 + 8 = 440\\) \\(ABC_{16}=10 \\times 16^2 + 11 \\times 16^1 + 12 = 2748\\) </li> </ol> <p>Exercice  11</p> Enonc\u00e9Correction <p>Convertir les \u00e9critures d\u00e9cimales en hexad\u00e9cimal.</p> <ol> <li>45  </li> <li>72  </li> <li>421  </li> </ol> <p>Par divisions successives par 16, on obtient :  </p> <ol> <li>\\(45 =2D_{16}\\) </li> <li>\\(72=48_{16}\\) </li> <li>\\(421=1A5_{16}\\) </li> </ol> <p>Exercice  12</p> Enonc\u00e9eCorrection <p>C\u2019est en \\(11110010000_2\\) qu\u2019a \u00e9t\u00e9 d\u00e9montr\u00e9 le th\u00e9or\u00e8me fondamental de l\u2019informatique. Exprimer ce nombre en base dix</p> <p>On obtient 1936</p> <p>Exercice  13</p> Enonc\u00e9Correction <p>Convertir les nombres suivants en base 10 :  </p> <ol> <li>\\((1B7)_{16}\\) </li> <li>\\((ABE)_{16}\\) </li> <li>\\((A320)_{16}\\) </li> </ol> <ol> <li> <p>\\((1B7)_{16}=1 \\times 16^2 + 11 \\times 16^1 + 7 = 439\\) </p> </li> <li> <p>\\((ABE)_{16}=10 \\times 16^2 + 11 \\times 16^1 + 14 = 2750\\) </p> </li> <li> <p>\\((A320)_{16}=10 \\times 16^3 + 3 \\times 16^2 + 2 \\times 16^1 + 0 = 41760\\) </p> </li> </ol> <p>Exercice  14</p> Conversion Binaire \u2192 Hexad\u00e9cimalConversion Hexad\u00e9cimal  \u2192 BinaireApplication <ul> <li>On regroupe les bits par paquets de 4 (quitte \u00e0 ajouter des 0 pour compl\u00e9ter).</li> <li>On convertit chaque paquet en chiffre hexad\u00e9cimal.</li> <li>On concat\u00e8ne les chiffres</li> </ul> <p>Par exemple, \\(11111100101_2 = \\underbrace{0111}_{7} \\underbrace{1110}_{14=\\text{E}_{16}} \\underbrace{0101}_{5} = 7\\text{E}5_{16}\\) </p> <p>On fait la m\u00eame chose dans l'autre sens.</p> <ol> <li>Convertir \\(101101_2\\) puis \\(10011011111_2\\) en base 16.</li> <li>Convertir \\(8\\text{D}_{16}\\) puis \\(1\\text{CA}7_{16}\\) en binaire.</li> </ol> <p>Exercice  15</p> Conversion Binaire \u2192 Hexad\u00e9cimalCorrection 1Conversion Hexad\u00e9cimal  \u2192 BinaireCorrection 2 <p>Convertir les nombres binaires suivants en hexad\u00e9cimal  </p> <p>1. \\((01001101)_2\\) 2. \\((100110000111)_2\\) 3. \\((101110101100)_2\\) </p> <p>En regroupant par paquet de 4 :  </p> <p>1. \\((01001101)_2 = 0100\\, 1101_2\\) or  \\(0100_2\\) correspond \u00e0 4 soit \\(4_{16}\\) et  \\(1101_2\\) correspond \u00e0 8+4+1=13 soit \\(D_{16}\\) d'o\u00f9 =\\((01001101)_2 = 4D_{16}\\) 2. \\((100110000111)_2 = 1001 \\, 1000\\, 0111_2\\) donc  \\((100110000111)_2=987_{16}\\) 3. \\((101110101100)_2 = 1011\\, 1010 \\,1100_2\\)  donc \\((101110101100)_2=BAC_{16}\\) </p> <p>Convertir en binaire les nombres suivant : 1. \\((FABE51)_{16}\\) 2. \\((59A75)_{16}\\) </p> <p>1. \\(F_{16}=1111_2 \\, A_{16}=1010_2 \\, B_{16}=1011_2 \\, E_{16}=1110_2 \\, 5_{16}=0101_2 \\, 1_{16}=0001_2\\), d'o\u00f9  \\((FABE51)_{16}=111110101011111001010001_2\\) 2. \\(5_{16}=0101_2 \\, 9_{16}=1001_2 \\, A_{16}=1010_2 \\, 7_{16}=0111_2 \\, 5_{16}=0101_2\\), d'o\u00f9  \\((59A75)_{16}=01011001101001110101_2\\) </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#avec-python","title":"Avec Python","text":"Fonctions de conversion <p>Pour convertir un entier \u00e9crit en d\u00e9cimal vers le binaire ou l'hexad\u00e9cimal, on peut utiliser les fonctions <code>bin</code> et <code>hex</code>, qui renvoient des cha\u00eenes de caract\u00e8res.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; bin(2021)\n'0b11111100101'\n&gt;&gt;&gt; hex(2021)\n'0x7e5'\n&gt;&gt;&gt;\n</code></pre> <p>Les pr\u00e9fixes <code>0b</code> et <code>0x</code> indiquent que les \u00e9critures sont respectivement en base 2  et en base 16.</p> <p>R\u00e9ciproquement, pour convertir l'\u00e9criture d'un nombre \u00e9crit en base \\(b\\) vers le d\u00e9cimal, on utilise la fonction <code>int</code> en passant en arguments l'\u00e9criture en cha\u00eene de caract\u00e8res et la base.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; int('11111100101', 2)\n2021\n&gt;&gt;&gt; int('7e5', 16)\n2021\n&gt;&gt;&gt;\n</code></pre> <p>Exercice  16</p> <p>Utilisez ces fonctions pour v\u00e9rifier vos r\u00e9sultats des exercices pr\u00e9c\u00e9dents.</p> <p>&gt;&gt;&gt; </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#integer-overflow","title":"Integer Overflow","text":"<p>Enonc\u00e9 du probl\u00e8me</p> <p>Dans une usine, sur une machine qui fabrique en moyenne 200 pi\u00e8ces par jour, un compteur stock\u00e9 sur un octet affiche le nombre de pi\u00e8ces produites. quand un technicien r\u00e9cup\u00e8re les pi\u00e8ces fabriqu\u00e9es, il v\u00e9rifie que le nombre est conforme, puis appuie sur un bouton pour remettre le compteur \u00e0 z\u00e9ro. Un jour le compteur affiche 21 alors que 277 pi\u00e8ces ont \u00e9t\u00e9 produites. Il appelle le num\u00e9ro d\u2019assistance pour signaler que le compteur ne fonction plus. On lui r\u00e9pond que c\u2019est normal et qu\u2019une mise \u00e0 jour sera effectu\u00e9e prochainement pour corriger ce d\u00e9faut. Essayons d\u2019expliquer ce qui est arriv\u00e9 !</p> <p>Exercice  17</p> Enonc\u00e9Correction <p>1. Donner l\u2019\u00e9criture binaire de \\(277_{10}\\). 2. Sachant qu\u2019un octet est compos\u00e9 de 8 bits, compl\u00e9ter un octet avec le nombre obtenu ? Que remarquez-vous ? 3.  Expliquer alors le r\u00e9sultat 21 qui appara\u00eet sur le compteur.  </p> <p>1. Ecriture binaire de \\(277_{10}=100010101_2\\). 2. Sur un octet \\(277_{10}=00010101_2\\). Il y a un d\u00e9passement et donc il manque le premier 1.         3.  Le r\u00e9sultat obtenu est donc \\(00010101_2= 16 + 4 + 1 = 21\\)</p> <p>A retenir</p> <p>Si le nombre de bits obtenu est inf\u00e9rieur \u00e0 n, on rajoute des 0 pour parvenir \u00e0 n bits. S\u2019il n\u2019y a pas assez de bits disponibles, on dit que la capacit\u00e9 d\u2019\u00e9criture est insuffisante (on parle d\u2019overflow).</p> <p>Enonc\u00e9 du probl\u00e8me</p> <p>Combien de bits faut-il pour repr\u00e9senter un nombre entier en binaire ?  </p> <p>Pour \u00e9valuer le nombre de bits minimum n\u00e9cessaires \u00e0 l\u2019\u00e9criture en base 2 d\u2019un entier positif, il faut trouver la plus petite puissance de 2 qui soit strictement sup\u00e9rieure \u00e0 l\u2019entier \u00e0 \u00e9crire.  </p> <p>Exemple : comme \\(2^8\\) = 256 et \\(2^9\\) = 512, \\(2^8 \\leq 277 &lt; 2^9\\) donc 9 bits sont n\u00e9cessaires pour \u00e9crire l\u2019entier 277.  </p> <p>1. Combien de bits minimum sont n\u00e9cessaires pour stocker les entiers 1047 et 65 512 ? 2. Remplir le tableau suivant avec les tailles fr\u00e9quentes des entiers en binaire et g\u00e9n\u00e9ralisation.</p> Nombre d\u2019octets utilis\u00e9s 1 2 4 8 n Nombre de bits utilis\u00e9s 8 Nombre d\u2019entiers positifs qu\u2019on peut stocker \\(2^8 = 256\\) Plus grand entier positif que l\u2019on peut stocker \\(2^8 - 1 =255\\)"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers/#addition-en-binaire","title":"Addition en binaire","text":"<p>Voyons maintenant comment on ajoute des nombres exprim\u00e9s en base deux</p> <p></p> <p>Exercice  18</p> <p>Faites les additions suivantes :</p> <p>1. A=1101+10 2. B=101001+101 3. C=10101010+1011 4. D=1110101+10101  </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/","title":"Codage des entiers positifs en base b","text":""},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#ecriture-dun-entier-positif-dans-une-base-b-geq-2","title":"Ecriture d'un entier positif dans une base \\(b \\geq 2\\)","text":"<p>Programme 1\u00e8re |Contenus|Capacit\u00e9s attendues|Commentaires| |:---:|:---:|:---:| |Ecriture d'un entier positif dans une base \\(b \\geq 2\\)| Passer de la repr\u00e9sentation d'une base \u00e0 l'autre|Les bases 2, 10 et 16 sont privil\u00e9gi\u00e9es|</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#ecriture-dun-entier-dans-une-base","title":"\u00c9criture d'un entier dans une base","text":"<p>Le monde se divise en 2 cat\u00e9gories : ceux qui comprennent le binaire et ceux qui ne le comprennent pas.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#le-systeme-decimal","title":"Le syst\u00e8me d\u00e9cimal","text":"<p>Depuis la pr\u00e9histoire, l'Homme a besoin de compter. Sa premi\u00e8re id\u00e9e:</p> <p></p> <p>Pas tr\u00e8s pratique... Heureusement, il en eut rapidemennt une autre, beaucoup plus efficace: regrouper les b\u00e2tons en paquets.</p> <p></p> <p></p> <p>Des paquets de 5 et surtout de 10. Pourquoi 10 ? </p> <p>Pour \u00e9crire les nombres, regroup\u00e9s en paquets de 10, il a donc fallu inventer 10 chiffres pour compter les unit\u00e9s (en-dessous du paquet): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.</p> <p>Et le nombre 10 ne signifie ni plus ni moins que 1 paquet et 0 unit\u00e9.</p> <p>Ensuite, on fait un paquet de paquets, la centaine (100, c'est \u00e0 dire \\(10 \\times 10 = 10^2\\)), puis un paquet de centaines, le millier (1000, c'est-\u00e0-dire \\(10\\times 10\\times10=10^3\\)), et ainsi de suite.</p> <p>Au final, si on \u00e9crit le nombre 2022 on sait que c'est:</p> <ul> <li>2 mille, c'est-\u00e0-dire \\(2\\times 10^3\\) ;</li> <li>0 centaine, c'est-\u00e0-dire \\(0\\times 10^2\\) ;</li> <li>2 dizaines, c'est-\u00e0-dire \\(2\\times 10^1\\);</li> <li>2 unit\u00e9, c'est-\u00e0-dire \\(2\\times 10^0\\).</li> </ul> <p>Et bien entendu, \\(2022 = 2\\times 10^3 + 0\\times 10^2+ 2\\times 10^1 +2\\times 10^0\\)</p> <p>La position de chaque chiffre dans l'\u00e9criture du nombre correspond \u00e0 la puissance de 10 par laquelle on le multiplie.</p> <p>Homer compte</p> Octal D\u00e9cimal 0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 10 8 11 9 12 10 13 11 14 12 15 13 16 14 17 15 20 16 21 17 ... ... <p>Un autre exemple, la base octale</p> <p>Pour Homer Simpson, qui n'a que 8 doigts, il aurait \u00e9t\u00e9 certainement plus naturel de faire des paquets de 8... et donc de manipuler seulement 8 chiffres : 0, 1, 2, 3, 4, 5, 6 et 7.</p> <p>C'est le syst\u00e8me octal.</p> <p>Ainsi, \u00abson\u00bb 10 signifierait 1 paquet de 8 et 0 unit\u00e9, soit \u00abnotre\u00bb 8... Et donc notre 10 (en d\u00e9cimal) s'\u00e9crirait 12 (en octal).</p> <p>Enfin, 2022 (en d\u00e9cimal) s'\u00e9crit 3746 en octal puisque : </p> \\[\\begin{array}{rl}     3746_8 &amp;= 3\\times 8^3+7\\times 8^2+4\\times 8^1+5\\times 8^0 \\\\     &amp;= 8\\times 512+7\\times 64+4\\times 8+6\\times 1  \\\\     &amp;= 1536+448+32+6\\\\     &amp;= 2022     \\end{array}     \\]"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#-","title":"---","text":""},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#notion-de-base","title":"Notion de base","text":"<p>\u00c9criture d'un entier en base \\(b\\)</p> <ul> <li> <p>Choisir une base, c'est choisir la \u00abtaille\u00bb du paquet, et donc le nombre de chiffres dont on aura besoin: en base \\(b\\), il y a \\(b\\) chiffres.</p> </li> <li> <p>Dans notre syst\u00e8me d\u00e9cimal, la base est \\(b=10\\).</p> </li> <li> <p>La position de chaque chiffre correspond \u00e0 la puissance de \\(b\\) par laquelle on le multiplie.</p> </li> <li> <p>On pr\u00e9cisera la base (si diff\u00e9rente de 10) en indice en fin du nombre. Par exemple, le nombre \\(312_5\\) est \u00e9crit en base 5.</p> </li> </ul> <p>Exemples\\[\\begin{array}{rl} 312_5 &amp;= 3\\times 5^2 + 1\\times 5^1 + 2\\times 5^0 \\\\ &amp;= 3\\times 25+1\\times 5+2\\times 1  \\\\ &amp;= 82 \\end{array} \\] \\[\\begin{array}{rl} 25072_8 &amp;= 2\\times 8^4 + 5\\times 8^3+0\\times 8^2+7\\times 8^1+2\\times 8^0 \\\\ &amp;= 2\\times 4096 + 5\\times 512 + 7\\times 8 + 2\\times 1  \\\\ &amp;= 10810 \\end{array} \\] </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#le-systeme-binaire-base-2","title":"Le syst\u00e8me binaire (base 2)","text":"<p>Le binaire</p> <ul> <li>Le binaire, c'est le syst\u00e8me de comptage des ordinateurs. Pourquoi le binaire et pas le d\u00e9cimal comme les humains ?  </li> <li>Un ordinateur est compos\u00e9 de circuits \u00e9lectroniques et de composants \u00e9lectriques, aliment\u00e9s par un signal \u00e9lectrique : 1, il y a du courant, 0, il n'y en a pas. Le plus simple pour compter est donc d'utiliser un syst\u00e8me en base 2 (le binaire) car on peut repr\u00e9senter ses deux valeurs possibles (0 et 1).  (voir vid\u00e9o suivante).</li> <li>Le syst\u00e8me binaire est le syst\u00e8me de num\u00e9ration de base \\(b=2\\).  </li> <li>Il utilise donc seulement deux chiffres, 0 et 1, appel\u00e9s bits (contraction de l'anglais binary digit).  Le nombre 10101 occupe 5 rangs. On dit qu'il s'\u00e9crit sur 5 bits</li> <li>Un regroupement de 8 bits est appel\u00e9 un octet.  </li> </ul> Vid\u00e9o <p><p> </p></p> <p>Exercice  19</p> <ol> <li>Combien de valeurs peut-on coder avec 1 bit ?  </li> <li>Combien de valeurs peut-on coder avec 2 bits ?  </li> <li>Combien de valeurs peut-on coder avec 3 bits ?  </li> <li>Combien de valeurs peut-on coder avec n bits ?</li> </ol> <p>Conversions</p> Binaire \u2192 D\u00e9cimalD\u00e9cimal \u2192 Binaire M\u00e9thode 1D\u00e9cimal \u2192 Binaire M\u00e9thode 2D\u00e9cimal \u2192  Base quelconque <p>Il est utile de conna\u00eetre alors les puissances de 2 pour convertir rapidement de l'\u00e9criture binaire vers l'\u00e9criture d\u00e9cimale.</p> <p> </p> <p>Par exemple \\(10110101_2=128+32+16+4+1=181\\).</p> <ul> <li> <p>On peut utiliser l'algorithme de soustraction: on soustrait du nombre la plus grande puissance de 2 possible, et on recommence...</p> </li> <li> <p>On utilise l'algorithme de divisions: on effectue les divisions successives du nombre par 2. L'\u00e9criture en binaire est donn\u00e9e par les restes lus de bas en haut.</p> </li> </ul> <p> </p> <ul> <li>On peut utiliser un tableau.  Par exemple pour 217  </li> </ul> \\(2^7\\) \\(2^6\\) \\(2^5\\) \\(2^4\\) \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) 128 64 32 16 8 4 2 1 1 1 0 1 1 0 0 1 217-128=89 89-64=25 25 25-16=9 9-8=1 1 1 1-1=0 <p>Les deux algorithmes de soustraction et de divisions fonctionnent \u00e9galement pour la conversion du d\u00e9cimal vers n'importe quelle autre base.</p> <p>Exercice  20</p> <p>\u00c9crire 96,196,119 et 168 en binaire avec cette m\u00e9thode.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#le-systeme-hexadecimal-base-16","title":"Le syst\u00e8me hexad\u00e9cimal (base 16)","text":"<p>L'hexad\u00e9cimal</p> <ul> <li> <p>Le syst\u00e8me hexad\u00e9cimal est le syst\u00e8me de num\u00e9ration de base \\(b=16\\).</p> </li> <li> <p>Il utilise donc 16 chiffres : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.</p> </li> <li> <p>Bien qu'il n\u00e9cessite plus de chiffres, ce syst\u00e8me donne des \u00e9critures plus courtes et particuli\u00e8rement pratique du fait que 16 est une puissance de 2 : la conversion entre les syst\u00e8mes binaire et hexad\u00e9cimal se fait sans calcul, uniquement par regroupement de 4 bits.</p> </li> </ul> <p>Couleurs</p> <p>Le syst\u00e8me hexad\u00e9cimal est en particulier un mode de code informatique des couleurs.</p> <p>En effet une couleur (codage RGB) est compos\u00e9e de 3 valeurs correspondant aux composantes rouge, verte et bleue, et chacune de ces valeurs est un entier compris entre 0 et 255, c'est-\u00e0-dire entre 0 et FF en hexad\u00e9cimal: on peut les \u00e9crire avec seulement deux chiffres.</p> <p> </p> <p>Par exemple, la couleur rouge ci-contre a pour composantes (178, 26, 15), ce qui donne en hexad\u00e9cimal : (B2, 1A, 0F), qu'on \u00e9crit en g\u00e9n\u00e9ral de fa\u00e7on concat\u00e9n\u00e9e B21A0F et souvent pr\u00e9c\u00e9d\u00e9e d'un #.</p> Convertisseur <p>Un convertisseur  bien utile.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#exercices","title":"Exercices","text":""},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#a-la-main","title":"\u00c0 la main","text":"<p>Exercice  21</p> <p>Convertir de la base mentionn\u00e9e vers la base 10 (syst\u00e8me d\u00e9cimal).</p> <p>Attention, il y a un pi\u00e8ge...</p> <ol> <li>\\(131_6\\) </li> <li>\\(420_5\\) </li> <li>\\(1515_8\\) </li> <li>\\(716_4\\) </li> <li>\\(321_4\\) </li> </ol> <p>Exercice  22</p> <p>Convertir les \u00e9critures d\u00e9cimales vers la base mentionn\u00e9e.</p> <ol> <li>47 en base 5  </li> <li>92 en base 4  </li> </ol> <p>Exercice  23</p> <p>Convertir du binaire vers le d\u00e9cimal.</p> <ol> <li>1010  </li> <li>101110  </li> <li>10001101  </li> <li>11111111  </li> <li>101011001  </li> </ol> <p>Exercice  24</p> <p>Convertir du d\u00e9cimal vers le binaire.</p> <ol> <li>17  </li> <li>34  </li> <li>68  </li> <li>100  </li> <li>200  </li> </ol> <p>Que remarquez-vous quand on passe de l'\u00e9criture binaire d'un nombre \u00e0 celle de son double?</p> <p>Exercice  25</p> <p>1. V\u00e9rifier la conversion de la couleur rouge donn\u00e9e en exemple \u00e0 la section pr\u00e9c\u00e9dente.</p> \ud83d\udccb Algo<pre><code>2. Convertir les \u00e9critures hexad\u00e9cimales en d\u00e9cimal: 99, D7, 1B8, ABC.\n\n3. Comment s'\u00e9crit la couleur blanche en code hexad\u00e9cimal?\n</code></pre> <p>Exercice  26<p>Convertir les \u00e9critures d\u00e9cimales en hexad\u00e9cimal.</p> <ol> <li>45</li> <li>72</li> <li>421</li> </ol> </p> <p>Exercice  27</p> <p>C\u2019est en 11110010000 qu\u2019a \u00e9t\u00e9 d\u00e9montr\u00e9 le th\u00e9or\u00e8me fondamental de l\u2019informatique. Exprimer ce nombre en base dix</p> <p>Exercice  28</p> <p>Convertir les nombres suivants en base 10 :  </p> <ol> <li>\\((1B7)_{16}\\) </li> <li>\\((ABE)_{16}\\) </li> <li>\\((A320_{16}\\) </li> </ol> <p>Exercice  29</p> Conversion Binaire \u2192 Hexad\u00e9cimalConversion Hexad\u00e9cimal  \u2192 BinaireApplication <ul> <li>On regroupe les bits par paquets de 4 (quitte \u00e0 ajouter des 0 pour compl\u00e9ter).</li> <li>On convertit chaque paquet en chiffre hexad\u00e9cimal.</li> <li>On concat\u00e8ne les chiffres</li> </ul> <p>Par exemple, \\(11111100101_2 = \\underbrace{0111}_{7} \\underbrace{1110}_{14=\\text{E}_{16}} \\underbrace{0101}_{5} = 7\\text{E}5_{16}\\) </p> <p>On fait la m\u00eame chose dans l'autre sens.</p> <ol> <li>Convertir \\(101101_2\\) puis \\(10011011111_2\\) en base 16.</li> <li>Convertir \\(8\\text{D}_{16}\\) puis \\(1\\text{CA}7_{16}\\) en binaire.</li> </ol> <p>Exercice  30</p> Conversion Binaire \u2192 Hexad\u00e9cimalConversion Hexad\u00e9cimal  \u2192 Binaire <p>Convertir les nombres binaires suivants en hexad\u00e9cimal  </p> <p>1. \\((01001101)_2\\) 2. \\((100110000111)_2\\) 3. \\((101110101100)_2\\) </p> <p>Convertir en binaire les nombres suivant : 1. \\((FABE51)_{16}\\) 2. \\((59A75)_{16}\\) </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#avec-python","title":"Avec Python","text":"Fonctions de conversion <p>Pour convertir un entier \u00e9crit en d\u00e9cimal vers le binaire ou l'hexad\u00e9cimal, on peut utiliser les fonctions <code>bin</code> et <code>hex</code>, qui renvoient des cha\u00eenes de caract\u00e8res.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; bin(2021)\n'0b11111100101'\n&gt;&gt;&gt; hex(2021)\n'0x7e5'\n&gt;&gt;&gt;\n</code></pre> <p>Les pr\u00e9fixes <code>0b</code> et <code>0x</code> indiquent que les \u00e9critures sont respectivement en base 2  et en base 16.</p> <p>R\u00e9ciproquement, pour convertir l'\u00e9criture d'un nombre \u00e9crit en base \\(b\\) vers le d\u00e9cimal, on utilise la fonction <code>int</code> en passant en arguments l'\u00e9criture en cha\u00eene de caract\u00e8res et la base.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; int('11111100101', 2)\n2021\n&gt;&gt;&gt; int('7e5', 16)\n2021\n&gt;&gt;&gt;\n</code></pre> <p>Exercice  31</p> <p>Utilisez ces fonctions pour v\u00e9rifier vos r\u00e9sultats des exercices pr\u00e9c\u00e9dents.</p> <p>&gt;&gt;&gt; </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#integer-overflow","title":"Integer Overflow","text":"<p>Enonc\u00e9 du probl\u00e8me</p> <p>Dans une usine, sur une machine qui fabrique en moyenne 200 pi\u00e8ces par jour, un compteur stock\u00e9 sur un octet affiche le nombre de pi\u00e8ces produites. quand un technicien r\u00e9cup\u00e8re les pi\u00e8ces fabriqu\u00e9es, il v\u00e9rifie que le nombre est conforme, puis appuie sur un bouton pour remettre le compteur \u00e0 z\u00e9ro. Un jour le compteur affiche 21 alors que 277 pi\u00e8ces ont \u00e9t\u00e9 produites. Il appelle le num\u00e9ro d\u2019assistance pour signaler que le compteur ne fonction plus. On lui r\u00e9pond que c\u2019est normal et qu\u2019une mise \u00e0 jour sera effectu\u00e9e prochainement pour corriger ce d\u00e9faut. Essayons d\u2019expliquer ce qui est arriv\u00e9 !</p> <p>Exercice  32</p> <p>1. Donner l\u2019\u00e9criture binaire de \\(277_{10}\\). 2. Sachant qu\u2019un octet est compos\u00e9 de 8 bits, compl\u00e9ter un octet avec le nombre obtenu ? Que remarquez-vous ? 3.  Expliquer alors le r\u00e9sultat 21 qui appara\u00eet sur le compteur.  </p> <p>A retenir</p> <p>Si le nombre de bits obtenu est inf\u00e9rieur \u00e0 n, on rajoute des 0 pour parvenir \u00e0 n bits. S\u2019il n\u2019y a pas assez de bits disponibles, on dit que la capacit\u00e9 d\u2019\u00e9criture est insuffisante (on parle d\u2019overflow).</p> <p>Enonc\u00e9 du probl\u00e8me</p> <p>Combien de bits faut-il pour repr\u00e9senter un nombre entier en binaire ?  </p> <p>Pour \u00e9valuer le nombre de bits minimum n\u00e9cessaires \u00e0 l\u2019\u00e9criture en base 2 d\u2019un entier positif, il faut trouver la plus petite puissance de 2 qui soit strictement sup\u00e9rieure \u00e0 l\u2019entier \u00e0 \u00e9crire.  </p> <p>Exemple : comme \\(2^8\\) = 256 et \\(2^9\\) = 512, \\(2^8 \\leq 277 &lt; 2^9\\) donc 9 bits sont n\u00e9cessaires pour \u00e9crire l\u2019entier 277.  </p> <p>1. Combien de bits minimum sont n\u00e9cessaires pour stocker les entiers 1047 et 65 512 ? 2. Remplir le tableau suivant avec les tailles fr\u00e9quentes des entiers en binaire et g\u00e9n\u00e9ralisation.</p> Nombre d\u2019octets utilis\u00e9s 1 2 4 8 n Nombre de bits utilis\u00e9s 8 Nombre d\u2019entiers positifs qu\u2019on peut stocker \\(2^8 = 256\\) Plus grand entier positif que l\u2019on peut stocker $2^8 - 1 =255"},{"location":"T01_TypesBase/T1.1_Bases/T1_1_Codage_Entiers_Diapo/#addition-en-binaire","title":"Addition en binaire","text":"<p>Voyons maintenant comment on ajoute des nombres exprim\u00e9s en base deux</p> <p></p> <p>Exercice  33</p> <p>Faites les additions suivantes :</p> <p>1. A=1101+10 2. B=101001+101 3. C=10101010+1011 4. D=1110101+10101  </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_Perseverance/","title":"Th\u00e8me 1 - Repr\u00e9sentation des donn\u00e9es - Types et valeurs de bases","text":"TP              Le message secret de Perseverance"},{"location":"T01_TypesBase/T1.1_Bases/T1_Perseverance/#le-message-secret-de-perseverance","title":"Le message secret de Perseverance","text":"<p>Lors de sa descente vers la plan\u00e8te Mars le 18/02/2021, le rover Perseverance de la Nasa a frein\u00e9 sa chute gr\u00e2ce \u00e0 un parachute qui a intrigu\u00e9 quelques internautes du forum Reddit.</p> <p></p> <p>Vid\u00e9o du d\u00e9ploiement du parachute :</p> <p> </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_Perseverance/#mais-comment-ce-message-est-il-encode","title":"Mais comment ce message est-il encod\u00e9 ?","text":"<p>Si vous observez bien la conception du parachute, vous verrez qu\u2019il est constitu\u00e9 de colonnes verticales, enti\u00e8rement blanches, enti\u00e8rement rouges, ou blanches et rouges.</p> <p></p> <p>Source : NASA</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_Perseverance/#dans-la-peau-du-premier-decodeur-du-message-aucun-indication","title":"Dans la peau du premier d\u00e9codeur du message (aucun indication)","text":"<p>On peut sch\u00e9matiser le parachute sous cette forme : </p> <p></p> Indication 1 :  <p>Le codage est sur 10 bits.</p> <ul> <li>Essayez de d\u00e9composer les zones d\u00e9crites.  </li> <li>Que peuvent repr\u00e9senter les couleurs blanches, rouges ?  </li> <li>Les colonnes verticales peuvent \u00eatre d\u00e9coup\u00e9es en cercle de diam\u00e8tres diff\u00e9rents. Trouvez en combien de cercles le parachute est constitu\u00e9.</li> </ul> Indication 2 :  <ul> <li>A partir du sh\u00e9ma ci dessous, Positionnez les valeurs binaires dans chaques des cases du parachute.  </li> </ul> <p></p> Indication 3 :  <p>Les zones blanches et rouge se d\u00e9composent comme ceci :</p> <p></p> <ul> <li>Le tout premier secteur contenant un message est le secteur sur lequel est \u00e9crite la lettre D, qui est effectivement la signification de ce secteur. C'est en l'observant bien que vous comprendrez le codage qui a \u00e9t\u00e9 utilis\u00e9.</li> <li>Les autres secteurs sont marqu\u00e9s de points d'interrogation : c'est \u00e0 vous de d\u00e9couvrir ce qu'ils cachent.</li> <li>La phrase myst\u00e8re s'obtiendra en tournant en spirale depuis la lettre D, dans le sens horaire.</li> <li>La derni\u00e8re couronne (la plus \u00e0 l'ext\u00e9rieur) est un peu particuli\u00e8re, mais n'en disons pas plus...</li> </ul>"},{"location":"T01_TypesBase/T1.1_Bases/T1_Perseverance/#a-vous","title":"\u00c0 vous !","text":"<p>Un grand bravo aux brillants redditors <code>u/rdtwt1</code> et <code>u/tend0g</code>.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_Perseverance/#faites-votre-propre-parachute","title":"Faites votre propre parachute !","text":"<p>https://sjwarner.github.io/perseverance-parachute-generator/?</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1_Perseverance/#sources-attention-spoiler-ne-pas-consulter-avant-davoir-fin-le-tp-merci","title":"Sources (attention spoiler) ne pas consulter avant  d'avoir fin le TP (Merci\u00a7) :","text":"<ul> <li>Le monde</li> <li>reddit </li> <li>twitter </li> </ul>"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/","title":"T1.2 Valeurs bool\u00e9ennes","text":"<p>Histoire de l'informatique</p> <p> </p> <p>George Boole (1815-1864) est un math\u00e9maticien et logicien britannique connu pour avoir cr\u00e9\u00e9 la logique moderne, appel\u00e9e alg\u00e8bre de Boole.</p> <p>Cette alg\u00e8bre binaire n'accepte que deux valeurs, 0 et 1, et a donc d'importantes et nombreuses applications en informatique...</p>"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/#121-un-peu-de-logique","title":"1.2.1 Un peu de logique","text":"<p>En informatique, comme en math\u00e9matiques, on s'int\u00e9resse \u00e0 la valeur de v\u00e9rit\u00e9 de phrases ou d'expressions qui peuvent \u00eatre soit vraies, soit fausses. Mais rien d'autre, c'est le principe du tiers-exclu.</p> <p>Par exemple, que diriez-vous de ces phrases?</p> <ul> <li>A: Vous \u00eates en classe de premi\u00e8re.</li> <li>B: Baudelaire a \u00e9crit \u00abLes fleurs du mal\u00bb.</li> <li>C: La Terre est plate.</li> <li>D: \\(3 \\times 4 =12\\).</li> <li>E: La lettre <code>e</code> est dans le mot <code>abracadabra</code>.</li> <li>F: Georges Perec a \u00e9crit un roman de pr\u00e8s de 300 pages sans aucune lettre <code>e</code>.</li> <li>G: \\(2^{10} &lt; 10^3\\)</li> <li>H: La couleur orange est la plus belle des couleurs.</li> </ul>"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/#122-algebre-de-boole","title":"1.2.2 Alg\u00e8bre de Boole","text":"<p>Valeurs et op\u00e9rations fondamentales</p> <p>L'alg\u00e8bre de Boole consiste \u00e0 \u00e9tudier des op\u00e9rations sur un ensemble uniquement constitu\u00e9 de deux \u00e9l\u00e9ments qu'on appelle bool\u00e9ens.</p> <p>Selon le contexte (logique, calcul, \u00e9lectronique), ces deux \u00e9l\u00e9ments sont not\u00e9s:</p> <ul> <li>Faux (F) / Vrai (V)</li> <li>0 / 1</li> <li><code>False</code>/<code>True</code> (en Python, comme dans de nombreux langages)</li> </ul> <p>Les op\u00e9rations fondamentales ne sont plus l'addition et la multiplication mais:</p> <ul> <li>la n\u00e9gation, not\u00e9e \u00ac, ou plus simplement \u00abNON\u00bb (<code>not</code> en Python);</li> <li>la conjonction, not\u00e9e &amp;, ou plus simplement \u00abET\u00bb (<code>and</code> en Python);</li> <li>la disjonction, not\u00e9e |, ou plus simplement \u00abOU\u00bb (<code>or</code> en Python).</li> </ul> Tables de v\u00e9rit\u00e9 N\u00e9gation, \u00ac, \u00abNON\u00bb, <code>not</code>Conjonction, &amp;, \u00abET\u00bb, <code>and</code>Disjonction, |, \u00abOU\u00bb, <code>or</code> x \u00acx F V V F x y x &amp; y F F F F V F V F F V V V x y x | y F F F F V V V F V V V V"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/#123-avec-python","title":"1.2.3 Avec Python","text":"<p><code>True</code> &amp; <code>False</code></p> <ul> <li>Il existe deux valeurs bool\u00e9ennes en Python : <code>True</code> et <code>False</code>.</li> <li>Une variable prenant l'une de ces deux valeurs est de type <code>bool</code>.</li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; type(True)\n&lt;class 'bool'&gt;\n&gt;&gt;&gt; x = False\n&gt;&gt;&gt; x\nFalse\n&gt;&gt;&gt; type(x)\n&lt;class 'bool'&gt;\n</code></pre> <p>Op\u00e9rateurs de comparaison</p> Op\u00e9rateur Signification <code>==</code> est \u00e9gal \u00e0 <code>!=</code> est diff\u00e9rent de <code>&lt;</code> inf\u00e9rieur \u00e0 <code>&gt;</code> sup\u00e9rieur \u00e0 <code>&lt;=</code> inf\u00e9rieur ou \u00e9gal \u00e0 <code>&gt;=</code> sup\u00e9rieur ou \u00e9gal \u00e0 <code>in</code> appartient \u00e0 <code>not in</code> n'appartient pas \u00e0 <p>Exemples</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 2\n&gt;&gt;&gt; a == 3\nFalse\n&gt;&gt;&gt; a == 2\nTrue\n&gt;&gt;&gt; a != 1\nTrue\n&gt;&gt;&gt; a &gt; 2\nFalse\n&gt;&gt;&gt; a &lt;= 5\nTrue\n&gt;&gt;&gt; a % 2 == 0\nTrue\n&gt;&gt;&gt; x = (0 == 1)\n&gt;&gt;&gt; x\nFalse\n&gt;&gt;&gt; y = (3 + 2 == 5)\n&gt;&gt;&gt; y\nTrue\n&gt;&gt;&gt; 'e' in 'abracadabra'\nFalse\n&gt;&gt;&gt; 'b' in 'abracadabra'\nTrue\n&gt;&gt;&gt; 'A' not in 'abracadabra'\nTrue\n&gt;&gt;&gt; not True\nFalse\n&gt;&gt;&gt; True and False\nFalse\n&gt;&gt;&gt; True and True\nTrue\n&gt;&gt;&gt; False or True\nTrue\n&gt;&gt;&gt;\n</code></pre>"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/#124-exercices","title":"1.2.4 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Pr\u00e9dire si les variables suivantes contiennent le bool\u00e9en <code>True</code> ou le bool\u00e9en <code>False</code>. Contr\u00f4lez ensuite en ex\u00e9cutant le code et en inspectant le contenu des variables.</p> \ud83d\udc0d Script Python<pre><code>a = (2 &gt; 1)\nb = (3 == 1+2)\nc = (1 &lt; 0)\nd = (2 != 5/2)\ne = (2 != 5//2)\nf = ('a' == 'A')\ng = not a\nh = b and c\ni = b or c\nj = not c and (d or e)\n</code></pre> <p>Exercice  2 : le \u00abou exclusif\u00bb</p> \u00c9nonc\u00e9Correction <p>Une autre fonction logique importante est le ou exclusif, ou \u00abdisjonction exclusive\u00bb.</p> <p>C'est le \u00abou\u00bb dans le sens de \u00abFromage ou dessert\u00bb dans un menu au restaurant. Soit l'un, soit l'autre, mais pas les deux.</p> <p>Il se note en g\u00e9n\u00e9ral <code>xor</code> ou <code>^</code> en logique (<code>^</code> en Python).</p> <p>Si x et y sont deux bool\u00e9ens, alors x ^ y = (x &amp; \u00acy) | (\u00acx &amp; y).</p> <p>Construire la table de v\u00e9rit\u00e9 du <code>xor</code>.</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Construire la table de v\u00e9rit\u00e9 de l'expression (x | y) &amp; z o\u00f9 x, y et z sont trois bool\u00e9ens.</p> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>\u00c0 l'aide de tables de v\u00e9rit\u00e9, d\u00e9montrer les lois de Morgan:</p> <ul> <li>\u00ac(x | y) = \u00acx &amp; \u00acy</li> <li>\u00ac(x &amp; y) = \u00acx | \u00acy</li> </ul>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/","title":"C5 Repr\u00e9sentation des entiers n\u00e9gatifs","text":"<p>Programme 1ere</p> Contenus Capacit\u00e9s attendues Commentaires Repr\u00e9sentation binaire d\u2019un entier relatif \u00c9valuer le nombre de bits n\u00e9cessaires \u00e0 l\u2019\u00e9criture en base 2 d\u2019un entier, de la somme ou du produit de deux nombres entiers. Utiliser le compl\u00e9ment \u00e0 2. Il s\u2019agit de d\u00e9crire les tailles courantes des entiers (8, 16, 32 ou 64 bits). Il est possible d\u2019\u00e9voquer la repr\u00e9sentation des entiers de taille arbitraire de Python. <p>\u26a0    Attention \u26a0   </p> <p>La mani\u00e8re dont les nombres (entiers, non-entiers, positifs, n\u00e9gatifs...) sont trait\u00e9s par un langage de programmation est sp\u00e9cifique \u00e0 ce langage.</p> <p>Dans toute la suite de ce cours, pour simplifier, nous consid\u00e9rerons que les nombres sont cod\u00e9s sur 1 octet seulement. Ce qui ne correspond pas \u00e0 la r\u00e9alit\u00e9, mais permet de comprendre les notions essentielles.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#les-nombres-entiers-en-binaire-non-signe","title":"Les nombres entiers en binaire non sign\u00e9","text":"<p>L'expression \"non sign\u00e9\" signifie que la contrainte du signe n'existe pas : tous les nombres sont consid\u00e9r\u00e9s comme \u00e9tant positifs.</p> <p>Au chapitre T1.1, nous avons vu comment repr\u00e9senter un nombre entier positif en notation binaire.</p> <p>Sur un octet, le nombre minimal qu'on puisse coder est <code>00000000</code> soit l'entier naturel 0. Le nombre maximal qu'on puisse coder est <code>11111111</code> soit l'entier naturel 255.</p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <ol> <li>Quel est le plus grand entier non sign\u00e9 codable sur 16 bits ?</li> <li>... sur 32 bits ?</li> <li>... \\(n\\) bits ?</li> </ol> <ol> <li>Le plus grand entier non sign\u00e9 sut 16 bits est : \\(1111 1111 1111 1111\\) soit \\(N=1+2+2^2+2^3+\\dots+2^{15}= 2^{16}-1=65535\\)  (Voir cours de sp\u00e9cialit\u00e9 maths en premi\u00e8re)  </li> <li>\\(N=1+2+2^2+2^3+\\dots+2^{31}= 2^{31}-1=4294967295\\)</li> <li>Pour tout \\(n \\in \\mathbb{N}\\), \\(1+2+2^2+2^3+\\dots+2^{n-1}=2^{n}-1\\) (formule de la somme des termes d'une suite g\u00e9om\u00e9trique de raison 2).</li> </ol> <p>Python et les entiers </p> <p>Depuis la version 3 du langage Python, il n'y a plus de taille maximale pour les entiers en Python.</p> <p>Ceci implique que la taille n\u00e9cessaire au codage de l'entier est allou\u00e9e dynamiquement par Python (avec pour seule limite celle de la m\u00e9moire disponible). </p> <p>Exercice  6</p> \u00c9nonc\u00e9 <ol> <li>Effectuer la somme des deux nombres binaires <code>00001101</code> et <code>00001011</code>.</li> <li>V\u00e9rifier que le r\u00e9sultat est coh\u00e9rent en base 10.</li> </ol>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#les-nombres-entiers-en-binaire-signe","title":"Les nombres entiers en binaire sign\u00e9","text":""},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#la-fausse-bonne-idee","title":"La fausse bonne id\u00e9e","text":"<p>Comment diff\u00e9rencier les nombres positifs des nombres n\u00e9gatifs ?  </p> <p>L'id\u00e9e naturelle est de r\u00e9server 1 bit pour le signe de l'entier (+ ou -).</p> <p>Signe d'un entier relatif</p> <p>Par exemple, on peut d\u00e9cr\u00e9ter que le premier bit (appel\u00e9 bit de poids fort) sera le bit de signe :  </p> <ul> <li>par un <code>0</code> pour le \\(+\\) : ainsi la repr\u00e9sentation des entiers positifs est inchang\u00e9e;</li> <li>par un <code>1</code> pour le \\(-\\).</li> </ul> <p>Probl\u00e8me : Taille en bits d'un entier</p> <p>6 se coderait alors en <code>0110</code> et -6 en <code>1110</code> sur 4 bits. Mais sur 8 bits <code>1110</code> repr\u00e9sente l'entier 14 ! (on compl\u00e8te <code>0000 1110</code>). Dans ce cas <code>0000 0110</code> et -6 en <code>1000 0110</code> sur 8 bits</p> <p>Pour lever cette ambiguit\u00e9, il faut d\u00e9cider :</p> <ul> <li>de la taille du mot binaire qui va repr\u00e9senter l'entier, c'est-\u00e0-dire le nombre de bits;</li> <li>d'une fa\u00e7on efficace de repr\u00e9senter les nombres n\u00e9gatifs.</li> </ul> <p>Taille en bits d'un entier</p> <p>Pour repr\u00e9senter un nombre entier relatif, on a donc besoin de fixer un nombre <code>n</code>  de bits sur lequel le coder.</p> <p>En g\u00e9n\u00e9ral, <code>n</code> est une des valeurs suivantes : 8, 16, 32 ou 64 (1, 2, 4 ou 8 octets). Cela d\u00e9pend du langage de programmation utilis\u00e9 et de l'architecture mat\u00e9rielle de l'ordinateur.</p> <p>Le bit de poids fort repr\u00e9sente donc le signe et les <code>n-1</code> bits suivants la valeur absolue du nombre.</p> <p>Donc sur 8 bits, l'entier 6 est cod\u00e9 par <code>0|000 0110</code>. Et on serait tent\u00e9 de coder son oppos\u00e9 -6 par <code>1|000 0110</code>, n'est-ce pas?</p> <p>Probl\u00e8mes :</p> <p>Au moins deux (gros) inconv\u00e9nients \u00e0 cette m\u00e9thode:</p> <ul> <li>Le nombre 0 serait cod\u00e9 par <code>0|000 0000</code> et par <code>1|000 0000</code>. Deux repr\u00e9sentations pour un m\u00eame nombre, \u00e7a ne sent pas bon.</li> <li>Plus grave : l'addition telle qu'on la conna\u00eet ne fonctionnerait plus. Posez par exemple 6 + (-6) ...</li> </ul> <p> \u2003     0 0 0 0 0 1 1 0  + \u00a0 1 0 0 0 0 1 1 0  \u2003      1 0 0 0 1 1 0 0</p> <p>On n'obtient pas 0 mais \\(-12\\).</p> <p>Moralit\u00e9 :</p> <p>Indiquer le signe d'un nombre par son premier bit est une fausse bonne id\u00e9e, il faut trouver autre chose.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#complement-a-2","title":"Compl\u00e9ment \u00e0 2","text":""},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#a-la-recherche-de-loppose-dun-nombre","title":"\u00c0 la recherche de l'oppos\u00e9 d'un nombre","text":"<p>Id\u00e9e :</p> <p>Plut\u00f4t que de chercher \u00e0 \u00e9crire directement le nombre \\(-3\\), nous allons chercher \u00e0 d\u00e9terminer ce qu'il faut ajouter \u00e0 \\((+3)\\) pour obtenir 0.</p> <p>Que faut-il ajouter au nombre \\((+3)\\) pour obtenir 0 ?</p> <p> \u2003     0 0 0 0 0 1 1 0  + \u00a0 ? ? ? ? ? ? ? ?  \u2003      0 0 0 0 0 0 0 0</p> <p>Exercice  7</p> <p>A vous de d\u00e9terminer ce nombre.</p> <p>L'id\u00e9e naturelle est de commencer par la droite, en essayant de \u00abfabriquer du z\u00e9ro\u00bb en choisissant le bon bit \u00e0 ajouter :</p> <p> \u2003     0 0 0 0 0 1 1 0  + \u00a0 1 1 1 1 1 0 1 0  \u2003      0 0 0 0 0 0 0 0</p> <p>On arrive bien \u00e0 fabriquer des 0 sur tout notre octet, mais que devient la retenue (en anglais carry) de 1 qui d\u00e9borde de notre octet ?</p> <p>R\u00e9ponse : rien ! Elle sera perdue et c'est une tr\u00e8s bonne nouvelle. Ce nombre sera donc consid\u00e9r\u00e9 comme un 0 : nous avons trouv\u00e9 comment coder \\(-6\\).</p> <p>Le nombre \\(-6\\) s'\u00e9crit donc <code>11111010</code>.</p> <p>Comment, \u00e0 partir du nombre <code>00000110</code>, aurait-on pu le trouver directement (sans raisonner de proche en proche) ?</p> <p>On peut remarquer qu'en inversant chaque bit du nombre de d\u00e9part <code>00000110</code>, on obtient <code>11111001</code>, qui appel\u00e9 le compl\u00e9ment \u00e0 2 du nombre <code>00000110</code>.</p> <p>Il ne reste donc plus qu'\u00e0 ajouter <code>1</code> \u00e0 ce nombre <code>11111010</code> pour obtenir le nombre cherch\u00e9, <code>11111010</code></p> <p>  ce nombre <code>11111010</code> repr\u00e9sente 250 en codage non sign\u00e9. Il est donc n\u00e9cessaire, lorsqu'on repr\u00e9sente un nombre, de savoir si les nombres manipul\u00e9s seront des entiers naturels (non sign\u00e9s) ou bien relatifs (sign\u00e9s).</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#conclusion-ecriture-de-loppose-dun-nombre-positif","title":"Conclusion : \u00e9criture de l'oppos\u00e9 d'un nombre positif","text":"<p>Pour obtenir le compl\u00e9ment \u00e0 2 d'un entier n\u00e9gatif</p> <ul> <li>On prend le compl\u00e9ment \u00e0 2 de chaque bit du nombre de d\u00e9part<ul> <li>on code sa valeur absolue en binaire;</li> <li>on inverse tous les bits (on remplace les <code>0</code> par des <code>1</code> et les <code>1</code> par des <code>0</code>);</li> </ul> </li> <li>On ajoute 1 au nombre obtenu.</li> </ul> <p>Exercice  8</p> \u00c9nonc\u00e9Correction <p>Donner l'\u00e9criture binaire sur un octet du nombre \\(-13\\).</p> <p>Commen\u00e7ons par \u00e9crire le nombre 13 en binaire. Il s'\u00e9crit \u00a0<code>00001101</code>.</p> <ul> <li>en prenant le compl\u00e9ment \u00e0 2 de chaque bit, on obtient <code>11110010</code>.</li> <li>en ajoutant 1 \u00e0 ce dernier nombre, on obtient <code>11110011</code>. </li> </ul> <p>Le nombre \\(-13\\) s'\u00e9crit donc <code>11110011</code>.</p> <p>Exercice  9</p> <p>Donner l'\u00e9criture binaire sur un octet du nombre \\(-57\\).</p> <p>Exercice  10</p> <p>Donner l'\u00e9criture binaire sur un octet du nombre \\(-17\\).</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#bilan-complement-a-2","title":"Bilan : Compl\u00e9ment \u00e0 2 :","text":"<p>On adopte donc une autre m\u00e9thode, qui consiste \u00e0 repr\u00e9senter un entier relatif par un entier naturel.</p> <p>En binaire non sign\u00e9 : sur 8 bits, on peut repr\u00e9senter tous les entiers positifs de 0 \u00e0 255. Ceux qui ont un bit de poids fort \u00e9gal \u00e0 <code>0</code> correspondent aux entiers de 0 \u00e0 127 et ceux qui ont un bit de poids fort \u00e9gal \u00e0 <code>1</code> correspondent aux nombres de 128 \u00e0 255.</p> <p>En binaire sign\u00e9 : toujours sur 8 bits, les nombres de 0 \u00e0 127 conservent la m\u00eame repr\u00e9sentation (positifs, car avec <code>0</code> en bit de poids fort). En revanche, les \u00e9critures binaires avec un <code>1</code> en bit de poids fort repr\u00e9sentent les entiers n\u00e9gatifs de -128 \u00e0 -1.</p> <p>Ainsi sur 8 bits, on repr\u00e9sente \u00e0 nouveau 255 valeurs : de -128 \u00e0 +127, c'est-\u00e0-dire de \\(-2^7\\) \u00e0 \\(2^7 -1\\). Et puisque le bit de poids fort est r\u00e9serv\u00e9 au signe, il est logique que la valeur absolue soit inf\u00e9rieure \u00e0 128 puisqu'on ne dispose plus que de 7 bits...</p> <p> </p> <p>On repr\u00e9sente donc l'entier \\(-1\\) par <code>11111111</code> en binaire sur 8 bits. C'est sa notation en compl\u00e9ment \u00e0 2 (ou plut\u00f4t \\(2^n\\)).</p> <p>\u00c9crire la repr\u00e9sentation binaire d'un entier n\u00e9gatif</p> Compl\u00e9ment \u00e0 2Par d\u00e9calage <p>Pour obtenir le compl\u00e9ment \u00e0 2 d'un entier n\u00e9gatif:</p> <ul> <li>on code sa valeur absolue en binaire;</li> <li>on inverse tous les bits (on remplace les <code>0</code> par des <code>1</code> et les <code>1</code> par des <code>0</code>);</li> <li>on ajoute 1.</li> </ul> <p>Par exemple:</p> <ul> <li>\\(-6\\) s'\u00e9crit <code>11111010</code> sur 8 bits:    \\(6_{10} = 0000 0110_2  \\rightarrow 1111 1001_2 \\rightarrow 1111 1010_2\\).</li> <li>\\(-42\\) s'\u00e9crit <code>11010110</code> sur 8 bits:    \\(42_{10} = 0010 1010_2  \\rightarrow 1101 0101_2 \\rightarrow 1101 0110_2\\).</li> </ul> <p>La repr\u00e9sentation binaire d'un entier \\(x\\)  n\u00e9gatif sur \\(n\\) bits est celle de l'entier naturel (non sign\u00e9) \\(x + 2^n\\). </p> <p>Par exemple pour \\(x=-42\\), on repr\u00e9sente \\(-42+256=214\\) en binaire non sign\u00e9, c'est-\u00e0-dire <code>11010110</code>.</p> <p>D\u00e9passement de capacit\u00e9</p> <p>On ne peut coder qu'un nombre fini d'entiers selon la valeur de \\(n\\):  entre \\(-2^{n-1}\\) et \\(2^{n-1}-1\\).</p> <p>Tout calcul sur des entiers dont le r\u00e9sultat ne fait pas partie de cet intervalle donnera un r\u00e9sultat faux: il sera tronqu\u00e9 sur \\(n\\) bits! On parle de d\u00e9passement de capacit\u00e9    , overflow en anglais.</p> <p>En Python, tous les entiers sont sign\u00e9s. Contrairement \u00e0 certains langages de programmation, le type entier non sign\u00e9 n'existe pas nativement. Par d\u00e9faut les entiers sont cod\u00e9s sur 64 bits (ou 32 bits sur les machines 32 bits), ce qui laisse un peu de marge.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#travail-inverse-passage-du-binaire-signe-au-nombre-relatif","title":"Travail inverse : passage du binaire sign\u00e9 au nombre relatif","text":"<p>Consid\u00e9rons le nombre <code>11101101</code>, cod\u00e9 en binaire sign\u00e9. \u00c0 quel nombre relatif correspond-il ?</p> <ol> <li>On observe son bit de poids fort : ici 1, donc ce nombre est n\u00e9gatif. Si ce bit est \u00e9gal \u00e0 0, le nombre cod\u00e9 est positif, il suffit d'op\u00e9rer une conversion binaire classique.</li> <li>Comme ce nombre est n\u00e9gatif, il va falloir inverser le protocole pr\u00e9c\u00e9dent. On commence donc par enlever 1 au nombre propos\u00e9. On trouve <code>11101100</code>.</li> <li>On prend ensuite le compl\u00e9ment \u00e0 2 de chaque bit. On trouve <code>00010011</code>.</li> <li>On convertit en base 10 le nombre obtenu, qui \u00e9tait donc 19.</li> <li>Le nombre initial \u00e9tait donc \\(-19\\).</li> </ol> <p>Exercice  11</p> \u00c9nonc\u00e9Correction <p>En binaire sign\u00e9, \u00e0 quel nombre correspond <code>11110001</code>?</p> <p><code>11110001</code> - <code>1</code> = <code>11110000</code>. En prenant le compl\u00e9ment \u00e0 2, on trouve <code>00001111</code>, qui vaut 15. Le nombre <code>11110001</code> repr\u00e9sente donc \\(-15\\).</p> <p>Exercice  12</p> \u00c9nonc\u00e9Correction <ol> <li>En binaire sign\u00e9, quel est le plus grand nombre que l'on puisse \u00e9crire sur 16 bits ? </li> <li>Quel est le plus petit nombre que l'on puisse \u00e9crire sur 16 bits ?</li> <li>Au total, combien de nombres diff\u00e9rents peuvent \u00eatre \u00e9crits en binaire sign\u00e9 sur 16 bits?</li> </ol> <ol> <li>Le plus grand nombre est <code>0111 1111 1111 1111</code>, soit \\(+32 767\\).</li> <li>Le plus petit nombre est <code>1000 0000 0000 0000</code>. <code>1000 0000 0000 0000</code> - <code>1</code> = <code>0111 1111 1111 1111</code>. Donc le nombre minimal est \\(-32768\\).</li> <li>Il y a 32768 nombres n\u00e9gatifs (de \\(-32768\\) \u00e0 \\(-1\\)), le nombre 0, puis 326767 nombres positifs (de 1 \u00e0 32767). Il y a donc  65536 nombres au total, comme en binaire non sign\u00e9. </li> </ol>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#le-codage-des-entiers-une-source-intarissable-derreurs","title":"Le codage des entiers, une source intarissable d'erreurs...","text":""},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#le-vol-501-dariane-5","title":"Le vol 501 d'Ariane 5","text":"<p>Le 04 juin 1996, le vol inaugural d'Ariane 5 a malheureusement fini dans une gerbe d'\u00e9tincelles.</p> <p>En cause : un code pr\u00e9vu pour Ariane 4 avait \u00e9t\u00e9 gard\u00e9 pour le nouveau mod\u00e8le Ariane 5. Dans ce \u00abvieux\u00bb code, une donn\u00e9e issue d'un capteur (le capteur de vitesse horizontale) \u00e9tait cod\u00e9 sur 8 bits. La valeur maximale acceptable de cette donn\u00e9e \u00e9tait donc 255.</p> <p>Or, Ariane 5 \u00e9tant beaucoup plus puissante, le capteur de vitesse horizontale a renvoy\u00e9, au bout de 30 secondes, la valeur 300 : cette valeur a provoqu\u00e9 un d\u00e9passement des 8 bits pr\u00e9vus et a donn\u00e9 un r\u00e9sultat absurde. L'ordinateur de bord a cru que la fus\u00e9e \u00e9tait en train de se coucher et a violemment orient\u00e9 les tuy\u00e8res de propulsion pour redresser Ariane 5, alors que celle-ci s'\u00e9levait pourtant bien verticalement...  Ariane 5 a alors brusquement pivot\u00e9 avant d'exploser.</p> <p>Cette catastrophe (150 millions d'euros et des ann\u00e9es de travail perdus) a fait prendre conscience \u00e0 la communaut\u00e9 scientifique de l'importance de faire des tests logiciels toujours plus pouss\u00e9s : ce n'est pas parce qu'un code marche dans un environnement donn\u00e9 qu'il marchera de la m\u00eame mani\u00e8re dans d'autres conditions...</p> <p>Illustration en Python</p> <p>En Python, tous les entiers sont sign\u00e9s. Contrairement \u00e0 certains langages de programmation, le type entier non sign\u00e9 n'existe pas nativement. Par d\u00e9faut les entiers sont cod\u00e9s sur 64 bits (ou 32 bits sur les machines 32 bits), ce qui laisse un peu de marge.</p> \ud83d\udc0d Script Python<pre><code>import numpy\nun = numpy.int8(1)\nvie = numpy.int8(42)\n</code></pre> <p>\u00c0 l'aide du module <code>numpy</code>, effectuer en console les calculs suivants:</p> <ol> <li>127 + 1</li> <li>127 + 2</li> <li>127 + 127 </li> </ol> <p>Par exemple pour le premier calcul :  </p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import numpy\n&gt;&gt;&gt; numpy.int8(127) + numpy.int8(1)\n</code></pre> &gt;&gt;&gt;"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#le-bug-de-lannee-2038","title":"Le bug de l'ann\u00e9e 2038","text":"<p>Expliquons ce (superbe) gif issu de la page Wikipedia Bug de l'an 2038.</p> <p>Lorsqu'on demande \u00e0 Python l'heure qu'il est, par la fonction <code>time()</code> du module <code>time</code>, voici ce qu'il r\u00e9pond :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import time\n&gt;&gt;&gt; time.time()\n1664110696.4503427\n</code></pre> <p>Il nous renvoie le nombre de secondes \u00e9coul\u00e9es depuis le 1er janvier 1970 \u00e0 00h00. On appelle cela l'heure POSIX ou l'heure UNIX. Au 25 septembre 2022, il s'en donc \u00e9coul\u00e9 environ 1,6 milliards.</p> <p>Dans beaucoup de syst\u00e8mes informatiques, ce nombre de secondes est cod\u00e9 par un entier sign\u00e9 sur 32 bits. Le nombre maximum de secondes qui peut \u00eatre repr\u00e9sent\u00e9 est donc <code>01111111 11111111 11111111 11111111</code> </p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; int('01111111111111111111111111111111', 2)\n2147483647\n</code></pre> <p>Ce nombre repr\u00e9sente un peu plus de 2 milliards de secondes... En les comptant depuis le 01/01/1970 00h00m00s, on arrive au 19/01/2038 \u00e0 03h14m07s.</p> <p>\u00c0 la seconde d'apr\u00e8s, la repres\u00e9ntation binaire du temps sera <code>10000000 00000000 00000000 00000000</code>, qui sera interpr\u00e9t\u00e9 comme le nombre n\u00e9gatif \u22122147483648, et qui ram\u00e8nera donc les horloges au 13 d\u00e9cembre 1901...</p> <p>Vous pourrez lire sur la page Wikipedia cit\u00e9e plus haut plus d'informations sur ce probl\u00e8me.</p> <p>Exercice  13</p> <p>Reprendre le calcul et le raisonnement sur un code en 64 bits.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs/#exercices","title":"Exercices","text":"<p>Exercice  14</p> \u00c9nonc\u00e9Solution <p>Quel est l'intervalle de nombres entiers relatifs qu'on peut repr\u00e9senter:</p> <ol> <li>Sur 4 bits?</li> <li>Sur 32 bits?</li> <li>Sur 64 bits?</li> </ol> <p>On utilise l'encadrement donn\u00e9 dans l'encadr\u00e9 pr\u00e9c\u00e9dent avec la valeur de \\(n\\) correspondante:</p> <ol> <li>Pour \\(n=4\\), entre -8 et 7</li> <li>Pour \\(n=16\\), entre -32768 et 32767</li> <li>Pour \\(n=64\\), entre -9223372036854775808 et 9223372036854775801</li> </ol> <p>Exercice  15</p> \u00c9nonc\u00e9Solution <ol> <li>Convertir en compl\u00e9ment \u00e0 2 les nombres 12 et -53.</li> <li>Effectuer l'addition en binaire de ces deux nombres, et v\u00e9rifier que le r\u00e9sultat est correct.</li> </ol> <ol> <li>Comme 12 est positif, sa repr\u00e9sentation binaire est <code>00001100</code>.</li> </ol> <p>En revanche, -53 est n\u00e9gatif. Donc:</p> <ul> <li>on \u00e9crit sa valeur absolue, 53, en binaire: <code>00110101</code></li> <li>on effectue le compl\u00e9ment \u00e0 2 en inversant les bits : <code>11001010</code></li> <li>on ajoute 1 et on obtient <code>11001011</code></li> </ul> <p> 2. L'addition bit par bit donne : <code>11010111</code> </p> <p>Le r\u00e9sultat de 12 + (-53) est -41. Or sa repr\u00e9sentation est </p> <ul> <li>valeur absolue : <code>00101001</code></li> <li>compl\u00e9ment \u00e0 2 : <code>11010110</code></li> <li>+1 : <code>11010111</code></li> </ul> <p>On obtient bien le m\u00eame r\u00e9sultat.</p> <p>Exercice  16</p> \u00c9nonc\u00e9Solution <p>Quels sont les entiers relatifs dont la repr\u00e9sentation binaire en compl\u00e9ment \u00e0 2 (sur 8 bits) est:</p> <ol> <li><code>01100111</code></li> <li><code>10011001</code></li> </ol> <ol> <li> <p>L'\u00e9criture binaire commence par un 0, c'est donc un positif. On fait \u00abcomme d'habitude\u00bb: <code>01100111</code> est l'\u00e9criture binaire de 103.</p> </li> <li> <p>L'\u00e9criture binaire commence par un 1, c'est donc un n\u00e9gatif. </p> </li> </ol> <p>On effectue les op\u00e9rations dans l'autre sens:</p> <ul> <li>On soustrait 1 : on obtient <code>10011000</code></li> <li>compl\u00e9ment \u00e0 2 : on obtient <code>01100111</code></li> <li>on r\u00e9cup\u00e8re la valeur absolue : 103</li> </ul> <p>Le nombre est donc -103.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/","title":"Th\u00e8me 1 - Repr\u00e9sentation des donn\u00e9es - Types et valeurs de bases","text":"07              Ecriture d'un entier relatifs en binaire <p>Programme 1ere</p> Contenus Capacit\u00e9s attendues Commentaires Repr\u00e9sentation binaire d\u2019un entier relatif \u00c9valuer le nombre de bits n\u00e9cessaires \u00e0 l\u2019\u00e9criture en base 2 d\u2019un entier, de la somme ou du produit de deux nombres entiers. Utiliser le compl\u00e9ment \u00e0 2. Il s\u2019agit de d\u00e9crire les tailles courantes des entiers (8, 16, 32 ou 64 bits). Il est possible d\u2019\u00e9voquer la repr\u00e9sentation des entiers de taille arbitraire de Python. <p>\u26a0    Attention \u26a0   </p> <p>La mani\u00e8re dont les nombres (entiers, non-entiers, positifs, n\u00e9gatifs...) sont trait\u00e9s par un langage de programmation est sp\u00e9cifique \u00e0 ce langage.</p> <p>Dans toute la suite de ce cours, pour simplifier, nous consid\u00e9rerons que les nombres sont cod\u00e9s sur 1 octet seulement. Ce qui ne correspond pas \u00e0 la r\u00e9alit\u00e9, mais permet de comprendre les notions essentielles.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#les-nombres-entiers-en-binaire-non-signe","title":"Les nombres entiers en binaire non sign\u00e9","text":"<p>L'expression \"non sign\u00e9\" signifie que la contrainte du signe n'existe pas : tous les nombres sont consid\u00e9r\u00e9s comme \u00e9tant positifs.</p> <p>Au chapitre T1.1, nous avons vu comment repr\u00e9senter un nombre entier positif en notation binaire.</p> <p>Sur un octet, le nombre minimal qu'on puisse coder est <code>00000000</code> soit l'entier naturel 0. Le nombre maximal qu'on puisse coder est <code>11111111</code> soit l'entier naturel 255.</p> <p>Exercice  1</p> <ol> <li>Quel est le plus grand entier non sign\u00e9 codable sur 16 bits ?</li> <li>... sur 32 bits ?</li> <li>... \\(n\\) bits ?</li> </ol> <p>Python et les entiers </p> <p>Depuis la version 3 du langage Python, il n'y a plus de taille maximale pour les entiers en Python.</p> <p>Ceci implique que la taille n\u00e9cessaire au codage de l'entier est allou\u00e9e dynamiquement par Python (avec pour seule limite celle de la m\u00e9moire disponible). </p> <p>Exercice  2</p> <ol> <li>Effectuer la somme des deux nombres binaires <code>00001101</code> et <code>00001011</code>.</li> <li>V\u00e9rifier que le r\u00e9sultat est coh\u00e9rent en base 10.</li> </ol>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#les-nombres-entiers-en-binaire-signe","title":"Les nombres entiers en binaire sign\u00e9","text":""},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#la-fausse-bonne-idee","title":"La fausse bonne id\u00e9e","text":"<p>Comment diff\u00e9rencier les nombres positifs des nombres n\u00e9gatifs ?  </p> <p>L'id\u00e9e naturelle est de r\u00e9server 1 bit pour le signe de l'entier (+ ou -).</p> <p>Signe d'un entier relatif</p> <p>Par exemple, on peut d\u00e9cr\u00e9ter que le premier bit (appel\u00e9 bit de poids fort) sera le bit de signe :  </p> <ul> <li>par un <code>0</code> pour le \\(+\\) : ainsi la repr\u00e9sentation des entiers positifs est inchang\u00e9e;</li> <li>par un <code>1</code> pour le \\(-\\).</li> </ul> <p>Probl\u00e8me : Taille en bits d'un entier</p> <p>6 se coderait alors en <code>0110</code> et -6 en <code>1110</code> sur 4 bits. Mais sur 8 bits <code>1110</code> repr\u00e9sente l'entier 14 ! (on compl\u00e8te <code>0000 1110</code>). Dans ce cas <code>0000 0110</code> et -6 en <code>1000 0110</code> sur 8 bits</p> <p>Pour lever cette ambiguit\u00e9, il faut d\u00e9cider :</p> <ul> <li>de la taille du mot binaire qui va repr\u00e9senter l'entier, c'est-\u00e0-dire le nombre de bits;</li> <li>d'une fa\u00e7on efficace de repr\u00e9senter les nombres n\u00e9gatifs.</li> </ul> <p>Taille en bits d'un entier</p> <p>Pour repr\u00e9senter un nombre entier relatif, on a donc besoin de fixer un nombre <code>n</code>  de bits sur lequel le coder.</p> <p>En g\u00e9n\u00e9ral, <code>n</code> est une des valeurs suivantes : 8, 16, 32 ou 64 (1, 2, 4 ou 8 octets). Cela d\u00e9pend du langage de programmation utilis\u00e9 et de l'architecture mat\u00e9rielle de l'ordinateur.</p> <p>Le bit de poids fort repr\u00e9sente donc le signe et les <code>n-1</code> bits suivants la valeur absolue du nombre.</p> <p>Donc sur 8 bits, l'entier 6 est cod\u00e9 par <code>0|000 0110</code>. Et on serait tent\u00e9 de coder son oppos\u00e9 -6 par <code>1|000 0110</code>, n'est-ce pas?</p> <p>Probl\u00e8mes :</p> <p>Au moins deux (gros) inconv\u00e9nients \u00e0 cette m\u00e9thode:</p> <ul> <li>Le nombre 0 serait cod\u00e9 par <code>0|000 0000</code> et par <code>1|000 0000</code>. Deux repr\u00e9sentations pour un m\u00eame nombre, \u00e7a ne sent pas bon.</li> <li>Plus grave : l'addition telle qu'on la conna\u00eet ne fonctionnerait plus. Posez par exemple 6 + (-6) ...</li> </ul> <p>Moralit\u00e9 :</p> <p>Indiquer le signe d'un nombre par son premier bit est une fausse bonne id\u00e9e, il faut trouver autre chose.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#complement-a-2","title":"Compl\u00e9ment \u00e0 2","text":""},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#a-la-recherche-de-loppose-dun-nombre","title":"\u00c0 la recherche de l'oppos\u00e9 d'un nombre","text":"<p>Id\u00e9e :</p> <p>Plut\u00f4t que de chercher \u00e0 \u00e9crire directement le nombre \\(-3\\), nous allons chercher \u00e0 d\u00e9terminer ce qu'il faut ajouter \u00e0 \\((+3)\\) pour obtenir 0.</p> <p>Que faut-il ajouter au nombre \\((+3)\\) pour obtenir 0 ?</p> <p> \u2003     0 0 0 0 0 1 1 0  + \u00a0 ? ? ? ? ? ? ? ?  \u2003      0 0 0 0 0 0 0 0</p> <p>Exercice  3</p> <p>A vous de d\u00e9terminer ce nombre.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#conclusion-ecriture-de-loppose-dun-nombre-positif","title":"Conclusion : \u00e9criture de l'oppos\u00e9 d'un nombre positif","text":"<p>Pour obtenir le compl\u00e9ment \u00e0 2 d'un entier n\u00e9gatif</p> <ul> <li>On prend le compl\u00e9ment \u00e0 2 de chaque bit du nombre de d\u00e9part<ul> <li>on code sa valeur absolue en binaire;</li> <li>on inverse tous les bits (on remplace les <code>0</code> par des <code>1</code> et les <code>1</code> par des <code>0</code>);</li> </ul> </li> <li>On ajoute 1 au nombre obtenu.</li> </ul> <p>Exercice  4</p> <p>Donner l'\u00e9criture binaire sur un octet du nombre \\(-13\\).</p> <p>Exercice  5</p> <p>Donner l'\u00e9criture binaire sur un octet du nombre \\(-57\\).</p> <p>Exercice  6</p> <p>Donner l'\u00e9criture binaire sur un octet du nombre \\(-17\\).</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#bilan-complement-a-2","title":"Bilan : Compl\u00e9ment \u00e0 2 :","text":"<p>On adopte donc une autre m\u00e9thode, qui consiste \u00e0 repr\u00e9senter un entier relatif par un entier naturel.</p> <p>En binaire non sign\u00e9 : sur 8 bits, on peut repr\u00e9senter tous les entiers positifs de 0 \u00e0 255. Ceux qui ont un bit de poids fort \u00e9gal \u00e0 <code>0</code> correspondent aux entiers de 0 \u00e0 127 et ceux qui ont un bit de poids fort \u00e9gal \u00e0 <code>1</code> correspondent aux nombres de 128 \u00e0 255.</p> <p>En binaire sign\u00e9 : toujours sur 8 bits, les nombres de 0 \u00e0 127 conservent la m\u00eame repr\u00e9sentation (positifs, car avec <code>0</code> en bit de poids fort). En revanche, les \u00e9critures binaires avec un <code>1</code> en bit de poids fort repr\u00e9sentent les entiers n\u00e9gatifs de -128 \u00e0 -1.</p> <p>Ainsi sur 8 bits, on repr\u00e9sente \u00e0 nouveau 255 valeurs : de -128 \u00e0 +127, c'est-\u00e0-dire de \\(-2^7\\) \u00e0 \\(2^7 -1\\). Et puisque le bit de poids fort est r\u00e9serv\u00e9 au signe, il est logique que la valeur absolue soit inf\u00e9rieure \u00e0 128 puisqu'on ne dispose plus que de 7 bits...</p> <p> </p> <p>On repr\u00e9sente donc l'entier \\(-1\\) par <code>11111111</code> en binaire sur 8 bits. C'est sa notation en compl\u00e9ment \u00e0 2 (ou plut\u00f4t \\(2^n\\)).</p> <p>\u00c9crire la repr\u00e9sentation binaire d'un entier n\u00e9gatif</p> Compl\u00e9ment \u00e0 2Par d\u00e9calage <p>Pour obtenir le compl\u00e9ment \u00e0 2 d'un entier n\u00e9gatif:</p> <ul> <li>on code sa valeur absolue en binaire;</li> <li>on inverse tous les bits (on remplace les <code>0</code> par des <code>1</code> et les <code>1</code> par des <code>0</code>);</li> <li>on ajoute 1.</li> </ul> <p>Par exemple:</p> <ul> <li>\\(-6\\) s'\u00e9crit <code>11111010</code> sur 8 bits:    \\(6_{10} = 0000 0110_2  \\rightarrow 1111 1001_2 \\rightarrow 1111 1010_2\\).</li> <li>\\(-42\\) s'\u00e9crit <code>11010110</code> sur 8 bits:    \\(42_{10} = 0010 1010_2  \\rightarrow 1101 0101_2 \\rightarrow 1101 0110_2\\).</li> </ul> <p>La repr\u00e9sentation binaire d'un entier \\(x\\)  n\u00e9gatif sur \\(n\\) bits est celle de l'entier naturel (non sign\u00e9) \\(x + 2^n\\). </p> <p>Par exemple pour \\(x=-42\\), on repr\u00e9sente \\(-42+256=214\\) en binaire non sign\u00e9, c'est-\u00e0-dire <code>11010110</code>.</p> <p>D\u00e9passement de capacit\u00e9</p> <p>On ne peut coder qu'un nombre fini d'entiers selon la valeur de \\(n\\):  entre \\(-2^{n-1}\\) et \\(2^{n-1}-1\\).</p> <p>Tout calcul sur des entiers dont le r\u00e9sultat ne fait pas partie de cet intervalle donnera un r\u00e9sultat faux: il sera tronqu\u00e9 sur \\(n\\) bits! On parle de d\u00e9passement de capacit\u00e9    , overflow en anglais.</p> <p>En Python, tous les entiers sont sign\u00e9s. Contrairement \u00e0 certains langages de programmation, le type entier non sign\u00e9 n'existe pas nativement. Par d\u00e9faut les entiers sont cod\u00e9s sur 64 bits (ou 32 bits sur les machines 32 bits), ce qui laisse un peu de marge.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#travail-inverse-passage-du-binaire-signe-au-nombre-relatif","title":"Travail inverse : passage du binaire sign\u00e9 au nombre relatif","text":"<p>Consid\u00e9rons le nombre <code>11101101</code>, cod\u00e9 en binaire sign\u00e9. \u00c0 quel nombre relatif correspond-il ?</p> <ol> <li>On observe son bit de poids fort : ici 1, donc ce nombre est n\u00e9gatif. Si ce bit est \u00e9gal \u00e0 0, le nombre cod\u00e9 est positif, il suffit d'op\u00e9rer une conversion binaire classique.</li> <li>Comme ce nombre est n\u00e9gatif, il va falloir inverser le protocole pr\u00e9c\u00e9dent. On commence donc par enlever 1 au nombre propos\u00e9. On trouve <code>11101100</code>.</li> <li>On prend ensuite le compl\u00e9ment \u00e0 2 de chaque bit. On trouve <code>00010011</code>.</li> <li>On convertit en base 10 le nombre obtenu, qui \u00e9tait donc 19.</li> <li>Le nombre initial \u00e9tait donc \\(-19\\).</li> </ol> <p>Exercice  7</p> <p>En binaire sign\u00e9, \u00e0 quel nombre correspond <code>11110001</code>?</p> <p>Exercice  8</p> <ol> <li>En binaire sign\u00e9, quel est le plus grand nombre que l'on puisse \u00e9crire sur 16 bits ?  </li> <li>Quel est le plus petit nombre que l'on puisse \u00e9crire sur 16 bits ?  </li> <li>Au total, combien de nombres diff\u00e9rents peuvent \u00eatre \u00e9crits en binaire sign\u00e9 sur 16 bits?  </li> </ol>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#le-codage-des-entiers-une-source-intarissable-derreurs","title":"Le codage des entiers, une source intarissable d'erreurs...","text":""},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#le-vol-501-dariane-5","title":"Le vol 501 d'Ariane 5","text":"<p>Le 04 juin 1996, le vol inaugural d'Ariane 5 a malheureusement fini dans une gerbe d'\u00e9tincelles.</p> <p>En cause : un code pr\u00e9vu pour Ariane 4 avait \u00e9t\u00e9 gard\u00e9 pour le nouveau mod\u00e8le Ariane 5. Dans ce \u00abvieux\u00bb code, une donn\u00e9e issue d'un capteur (le capteur de vitesse horizontale) \u00e9tait cod\u00e9 sur 8 bits. La valeur maximale acceptable de cette donn\u00e9e \u00e9tait donc 255.</p> <p>Or, Ariane 5 \u00e9tant beaucoup plus puissante, le capteur de vitesse horizontale a renvoy\u00e9, au bout de 30 secondes, la valeur 300 : cette valeur a provoqu\u00e9 un d\u00e9passement des 8 bits pr\u00e9vus et a donn\u00e9 un r\u00e9sultat absurde. L'ordinateur de bord a cru que la fus\u00e9e \u00e9tait en train de se coucher et a violemment orient\u00e9 les tuy\u00e8res de propulsion pour redresser Ariane 5, alors que celle-ci s'\u00e9levait pourtant bien verticalement...  Ariane 5 a alors brusquement pivot\u00e9 avant d'exploser.</p> <p>Cette catastrophe (150 millions d'euros et des ann\u00e9es de travail perdus) a fait prendre conscience \u00e0 la communaut\u00e9 scientifique de l'importance de faire des tests logiciels toujours plus pouss\u00e9s : ce n'est pas parce qu'un code marche dans un environnement donn\u00e9 qu'il marchera de la m\u00eame mani\u00e8re dans d'autres conditions...</p> <p>Illustration en Python</p> <p>En Python, tous les entiers sont sign\u00e9s. Contrairement \u00e0 certains langages de programmation, le type entier non sign\u00e9 n'existe pas nativement. Par d\u00e9faut les entiers sont cod\u00e9s sur 64 bits (ou 32 bits sur les machines 32 bits), ce qui laisse un peu de marge.</p> \ud83d\udc0d Script Python<pre><code>import numpy\nun = numpy.int8(1)\nvie = numpy.int8(42)\n</code></pre> <p>\u00c0 l'aide du module <code>numpy</code>, effectuer en console les calculs suivants:</p> <ol> <li>127 + 1</li> <li>127 + 2</li> <li>127 + 127 </li> </ol> <p>Par exemple pour le premier calcul :  </p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import numpy\n&gt;&gt;&gt; numpy.int8(127) + numpy.int8(1)\n</code></pre>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#le-bug-de-lannee-2038","title":"Le bug de l'ann\u00e9e 2038","text":"<p>Expliquons ce (superbe) gif issu de la page Wikipedia Bug de l'an 2038.</p> <p>Lorsqu'on demande \u00e0 Python l'heure qu'il est, par la fonction <code>time()</code> du module <code>time</code>, voici ce qu'il r\u00e9pond :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import time\n&gt;&gt;&gt; time.time()\n1664110696.4503427\n</code></pre> <p>Il nous renvoie le nombre de secondes \u00e9coul\u00e9es depuis le 1er janvier 1970 \u00e0 00h00. On appelle cela l'heure POSIX ou l'heure UNIX. Au 25 septembre 2022, il s'en donc \u00e9coul\u00e9 environ 1,6 milliards.</p> <p>Dans beaucoup de syst\u00e8mes informatiques, ce nombre de secondes est cod\u00e9 par un entier sign\u00e9 sur 32 bits. Le nombre maximum de secondes qui peut \u00eatre repr\u00e9sent\u00e9 est donc <code>01111111 11111111 11111111 11111111</code> </p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; int('01111111111111111111111111111111', 2)\n2147483647\n</code></pre> <p>Ce nombre repr\u00e9sente un peu plus de 2 milliards de secondes... En les comptant depuis le 01/01/1970 00h00m00s, on arrive au 19/01/2038 \u00e0 03h14m07s.</p> <p>\u00c0 la seconde d'apr\u00e8s, la repres\u00e9ntation binaire du temps sera <code>10000000 00000000 00000000 00000000</code>, qui sera interpr\u00e9t\u00e9 comme le nombre n\u00e9gatif \u22122147483648, et qui ram\u00e8nera donc les horloges au 13 d\u00e9cembre 1901...</p> <p>Vous pourrez lire sur la page Wikipedia cit\u00e9e plus haut plus d'informations sur ce probl\u00e8me.</p> <p>Exercice  9</p> <p>Reprendre le calcul et le raisonnement sur un code en 64 bits.</p>"},{"location":"T01_TypesBase/T1.2_Relatifs/T1_2_Relatifs_eleve/#exercices","title":"Exercices","text":"<p>Exercice  10</p> <p>Quel est l'intervalle de nombres entiers relatifs qu'on peut repr\u00e9senter:</p> <ol> <li>Sur 4 bits?  </li> <li>Sur 32 bits? </li> <li>Sur 64 bits?  </li> </ol> <p>Exercice  11</p> <ol> <li>Convertir en compl\u00e9ment \u00e0 2 les nombres 12 et -53.  </li> <li>Effectuer l'addition en binaire de ces deux nombres, et v\u00e9rifier que le r\u00e9sultat est correct.</li> </ol> <p>Exercice  12</p> <p>Quels sont les entiers relatifs dont la repr\u00e9sentation binaire en compl\u00e9ment \u00e0 2 (sur 8 bits) est:</p> <ol> <li><code>01100111</code> </li> <li><code>10011001</code> </li> </ol>"},{"location":"T01_TypesBase/T1.3_Flottants/T1_3_Flottants/","title":"C6 Repr\u00e9sentation des flottants","text":"<p>Avant de commencer, demandez \u00e0 Python d'effectuer les calculs suivants (que vous aurez bien entendu faits de t\u00eate auparavant) dans un terminal: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; 0.1 + 0.2\n\n&gt;&gt;&gt; 0.5 - 0.2 - 0.2 - 0.1\n</code></pre></p> <p>Un nombre flottant permet de repr\u00e9senter les nombres \u00e0 virgule... Mais pas tous...</p> <p>En Python, un nombre flottant est du type <code>float</code>.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; type(0.5)\n&lt;class 'float'&gt;\n</code></pre>"},{"location":"T01_TypesBase/T1.3_Flottants/T1_3_Flottants/#ecriture-binaire","title":"\u00c9criture binaire","text":"<p>Comme pour les entiers, on utilise le syst\u00e8me binaire, qu'on prolonge \u00e0 la partie \u00e0 droite de la virgule par les puissances n\u00e9gatives de 2.</p> <p>Base 2 \u2192 Base 10</p> <p>On utilise un tableau de conversion avec les puissances de 2:</p> <p> </p> <p>Exemple: Que vaut \\(101,011_2\\) en d\u00e9cimal?</p> Correction <p>\\(101,011_2 = 1 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 + 0\\times 2^{-1} + 1 \\times 2^{-2} +1 \\times 2^{-2} = 4 + 1 + 0,25 + 0, 125 = 5,375\\)</p> <p>Remarque: si l'\u00e9criture en base 2 est finie, alors l'\u00e9criture en base 10 est \u00e9galement finie.</p> <p>Base 10 \u2192 Base 2</p> <p>Prenons par exemple le nombre \\(3,6875\\). Il comporte une partie enti\u00e8re (3)  et une partie d\u00e9cimale (0,6875)</p> <ul> <li>On \u00e9crit la partie enti\u00e8re \u00abcomme d'habitude\u00bb : \\(3 = 11_2\\).</li> <li> <p>On convertit la partie d\u00e9cimale par des multiplications successives par 2:      </p> <p>Et on prend les parties enti\u00e8res des r\u00e9sultats dans l'ordre: \\(0,6875=0,1011_2\\)</p> </li> <li> <p>Donc \\(3,6875=11,1011_2\\).</p> </li> </ul> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <ol> <li>Donner l'\u00e9criture binaire de \\(20,875\\).  </li> <li>Donner l'\u00e9criture binaire de \\(12,375\\).  </li> <li>Donner l'\u00e9criture binaire de \\(6,125\\). </li> <li>Donner l'\u00e9criture binaire de \\(0,1\\).</li> <li>En d\u00e9duire celle de \\(0,2\\).</li> </ol> <ol> <li>\\(20,875 = 10100,111_2\\)</li> <li>\\(0,1 = 0,00011\\overline{0011}_2\\)</li> <li>\\(0,2 = 0,0011\\overline{0011}_2\\) </li> </ol> <p>\u00c9critures binaires infinies</p> <p>Un nombre ayant une \u00e9criture d\u00e9cimale finie peut ne pas admettre une \u00e9criture binaire finie: par exemple, seul \\(0,5\\) admet une \u00e9criture binaire finie parmi les nombres d\u00e9cimaux \u00e0 un chiffre apr\u00e8s la vrigule !</p> <p>Or la m\u00e9moire d'un ordinateur, quelqu'il soit, est toujours finie. Certains nombres ne peuvent donc pas \u00eatre repr\u00e9sent\u00e9s correctement en machine : c'est une impossibilit\u00e9 th\u00e9orique. Cela am\u00e8ne aux comportements \u00e9tranges vus en introduction...</p>"},{"location":"T01_TypesBase/T1.3_Flottants/T1_3_Flottants/#precautions-dusage","title":"Pr\u00e9cautions d'usage","text":"<p>Un nombre admettant une \u00e9criture binaire infinie ne peut pas \u00eatre correctement repr\u00e9sent\u00e9: le nombre manipul\u00e9 sur la machine est donc une valeur approch\u00e9e.  Il faut garder en t\u00eate que les calculs sont potentiellement faux, du moins impr\u00e9cis, lorsque des flottants interviennent.</p> <p> </p> <p>Comparaison de flottants</p> <ul> <li>On ne teste JAMAIS l'\u00e9galit\u00e9 de flottants:     Pas bien<pre><code>&gt;&gt;&gt; a = 0.1\n&gt;&gt;&gt; b = 0.3 - 0.2\n&gt;&gt;&gt; if a == b:\n        print(\"a et b sont \u00e9gaux\")\n    else:\n        print(\"a et b sont diff\u00e9rents\")\n\na et b sont diff\u00e9rents\n&gt;&gt;&gt; \n</code></pre></li> <li>On teste plut\u00f4t s'ils sont suffisamment proches, c'est-\u00e0-dire que leur diff\u00e9rence (en valeur absolue) est inf\u00e9rieure \u00e0 une pr\u00e9cision donn\u00e9e, suffisament petite:     Bien<pre><code>&gt;&gt;&gt; a = 0.1\n&gt;&gt;&gt; b = 0.3 - 0.2\n&gt;&gt;&gt; epsilon = 10 ** (-12)\n&gt;&gt;&gt; if abs(a-b) &lt; epsilon:\n        print(\"a et b sont \u00e9gaux\")\n    else:\n        print(\"a et b sont diff\u00e9rents\")\n\na et b sont \u00e9gaux\n&gt;&gt;&gt;\n</code></pre></li> </ul> <p>Histoire de l'informatique: Antimissile Patriot</p> <p>Lors de la guerre du Golfe, en 1991, les am\u00e9ricains disposaient de syst\u00e8mes d'antimissiles Patriot pour intercepter les missiles Scud irakiens. Les Patriot disposaient d'une horloge interne \u00e9mettant un signal tous les 0.1 secondes, d\u00e8s leur mise sous tension. Une dur\u00e9e \u00e9coul\u00e9e est donc : 0.1 \u00d7 le nombre de \u00abtics\u00bb.</p> <p>Sur ces syst\u00e8mes, les nombres sont cod\u00e9s en virgule fixe sur 24 bits: c'est tout simplement une troncature de l'\u00e9criture binaire.</p> <p>Or \\(0,1 = 0,00011001100110011001100|\\overline{1100}\\) </p> <p>L'erreur commise est donc d'environ \\(0,000000000000000000000001100 \\simeq 9,54 \\times 10^{-8}\\).</p> <p>Sur 100 heures de surveillance cela entra\u00eene donc un d\u00e9calage d'horloge interne de \\(0,34\\) seconde... ce qui correspond \u00e0 une distance de plus de 500 m\u00e8tres \u00e0 la vitesse d'un missile Scud ( 1676 m/s ).</p> <p>Ainsi un Patriot est pass\u00e9 \u00e0 plus de 500 m\u00e8tres d'un Scud le 25 f\u00e9vrier 1991 qui s'est abattu sur la caserne de Dahran et a caus\u00e9 ainsi la mort de 28 personnes.</p>"},{"location":"T01_TypesBase/T1.3_Flottants/T1_3_Flottants/#norme-ieee-754-hors-programme","title":"Norme IEEE-754 (Hors programme)","text":"<p>Virgule fixe</p> <p>Sur certains microcontr\u00f4leurs, on utilise un codage en virgule fixe: on retient un nombre fixe de chiffre apr\u00e8s la virgule (voir pr\u00e9c\u00e9demment).</p> <p>La distance entre deux nombres successifs est donc toujours la m\u00eame, \u00e9gale \u00e0 \\(2^{-n}\\) o\u00f9 \\(n\\) est le nombre de chiffres conserv\u00e9s apr\u00e8s la virgule.</p> <p>Probl\u00e8me: l\u2019erreur relative commise sur le codage des nombres peut devenir tr\u00e8s grande lorsque les nombres sont petits...</p> <p>Virgule flottante</p> <p>L'id\u00e9e est de retenir un nombre fixe de chiffres significatifs. Ainsi, les petits nombres seront plus serr\u00e9s que les grands (pour avoir une erreur relative tol\u00e9rable).</p> <p>On se rapproche donc de l'\u00e9criture scientifique des nombres r\u00e9els, en binaire:</p> <p> </p> <ul> <li>\\((-1)^s\\) d\u00e9signe le signe: \\(s=0\\) pour un nombre positif, \\(s=1\\) pour un n\u00e9gatif;</li> <li>\\(m\\) est la mantisse ;</li> <li>\\(e\\) est l'exposant. On note \\(E = e +127\\) l'exposant d\u00e9cal\u00e9 (pour \u00eatre positif).</li> </ul> <p>Exemple: \\(25,90625\\) (base 10) \\(\\Rightarrow 11001,111101\\) (base 2) \\(\\Rightarrow (-1)^0 \\times 1,1001111101 \\times 2^4\\) (notation scientifique en base 2)</p> <p>On choisit ensuite une variante (simple pr\u00e9cision, double pr\u00e9cision, ou plus) qui d\u00e9termine le nombre de bits pour coder la mantisse et l'exposant (un seul suffit toujours pour le signe).</p> signe exposant \\(E\\) mantisse taille totale simple pr\u00e9cision 1 8 23 32 double pr\u00e9cision 1 11 52 64 <p>On code ainsi un nombre dans l'ordre : \\(s\\) puis \\(E\\) (exposant d\u00e9cal\u00e9) puis \\(m\\).</p> <p>Ainsi  \\(20,90625\\) se code en simple pr\u00e9cision <code>0 10000011 10011110100000000000000</code> .</p> <p>Selon les valeurs de l\u2019exposant d\u00e9cal\u00e9 (notez que le d\u00e9calage vaut \\(2^b-1\\) o\u00f9 \\(b\\) est le nombre de bits utilis\u00e9s pour coder l\u2019exposant), le nombre final peut appartenir \u00e0 l'une ou l'autre des cat\u00e9gories suivantes.</p> <p>En simple pr\u00e9cision :</p> <ul> <li>Normalis\u00e9s : \\(0 &lt; E &lt; 255\\)</li> <li>D\u00e9normalis\u00e9s : \\(E = 0\\) et \\(m \\neq 0\\) de la forme \\((-1)^s \\times 0, m \\times 2^{-126}\\)</li> <li>Infinis : \\(E = 255\\) et \\(m = 0\\) </li> <li>Ind\u00e9finis (Not a Number, <code>NaN</code>) : \\(E=255\\) et \\(m \\neq0\\)</li> </ul> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On imagine un codage en virgule flottante sur simplement 6 bits, avec 1 bit pour le signe, 3 bits pour l'exposant et 2 pour la mantisse.</p> <p>On a ainsi \\(E = e + 3\\).</p> <ol> <li>D\u00e9terminer les nombres ind\u00e9finis.</li> <li>D\u00e9terminer l'\u00e9criture de \\(-\\infty\\) et \\(+\\infty\\).</li> <li>Placer sur une droite gradu\u00e9e les nombres normalis\u00e9s positifs.</li> <li>Placer sur une autre droite gradu\u00e9e les nombres d\u00e9normalis\u00e9s positifs.</li> </ol> <p> </p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Quel nombre s'\u00e9crit en virgule flottante simple pr\u00e9cision : <code>11000101000000101100001101000000</code> ?</p> <p>Il s'agit de \\(-2092,203125\\).</p>"},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/","title":"T1.3 Repr\u00e9sentation des entiers relatifs","text":""},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/#131-signe-dun-entier-et-taille-en-bits","title":"1.3.1 Signe d'un entier et taille en bits","text":"<p>Au chapitre T1.1, nous avons vu comment repr\u00e9senter un nombre entier positif en notation binaire.</p> <p>Par exemple, l'entier 6 (en base 10) s'\u00e9crit <code>110</code> en binaire.</p> <p>Pour repr\u00e9senter tous les entiers relatifs, il faut \u00e9tendre cette repr\u00e9sentation aux entiers n\u00e9gatifs. Une premi\u00e8re n\u00e9cessit\u00e9 est de r\u00e9server un bit pour le signe de l'entier (+ ou -).</p> <p>Signe d'un entier relatif</p> <p>On choisit de repr\u00e9senter le signe d'un nombre entier relatif:</p> <ul> <li>sur le bit de poids fort (le plus \u00e0 gauche), pour reprendre la notation classique;</li> <li>par un <code>0</code> pour le + : ainsi la repr\u00e9sentation des entiers positifs est inchang\u00e9e;</li> <li>par un <code>1</code> pour le -.</li> </ul> <p>Mais o\u00f9 placer ce bit de signe?</p> <p>En effet, 6 se coderait alors en <code>0110</code> et -6 en <code>1110</code>? Mais <code>1110</code> repr\u00e9sente l'entier 14 !</p> <p>Pour lever cette ambiguit\u00e9, il faut d\u00e9cider :</p> <ul> <li>de la taille du mot binaire qui va repr\u00e9senter l'entier, c'est-\u00e0-dire le nombre de bits;</li> <li>d'une fa\u00e7on efficace de repr\u00e9senter les nombres n\u00e9gatifs.</li> </ul> <p>Taille en bits d'un entier</p> <p>Pour repr\u00e9senter un nombre entier relatif, on a donc besoin de fixer un nombre <code>n</code>  de bits sur lequel le coder.</p> <p>En g\u00e9n\u00e9ral, <code>n</code> est une des valeurs suivantes : 8, 16, 32 ou 64 (1, 2, 4 ou 8 octets). Cela d\u00e9pend du langage de programmation utilis\u00e9 et de l'architecture mat\u00e9rielle de l'ordinateur.</p> <p>Le bit de poids fort repr\u00e9sente donc le signe et les <code>n-1</code> bits suivants la valeur absolue du nombre.</p> <p>Sur 8 bits par exemple, l'entier 6 est cod\u00e9 par <code>0|000 0110</code>. Et on serait tent\u00e9 de coder son oppos\u00e9 -6 par <code>1|000 0110</code>, n'est-ce pas?</p> <p>Faux.</p> <p>Au moins deux (gros) inconv\u00e9nients \u00e0 cette m\u00e9thode:</p> <ul> <li>Le nombre 0 serait cod\u00e9 par <code>0|000 0000</code> et par <code>1|000 0000</code>. Deux repr\u00e9sentations pour un m\u00eame nombre, \u00e7a ne sent pas bon.</li> <li>L'addition telle qu'on la conna\u00eet ne fonctionnerait plus. Posez par exemple 6 + (-6) ...</li> </ul>"},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/#132-complement-a-2","title":"1.3.2 Compl\u00e9ment \u00e0 2","text":"<p>On adopte donc une autre m\u00e9thode, qui consiste \u00e0 repr\u00e9senter un entier relatif par un entier naturel.</p> <p>En binaire non sign\u00e9: sur 8 bits, on peut repr\u00e9senter tous les entiers positifs de 0 \u00e0 255. Ceux qui ont un bit de poids fort \u00e9gal \u00e0 <code>0</code> correspondent aux entiers de 0 \u00e0 127 et ceux qui ont un bit de poids fort \u00e9gal \u00e0 <code>1</code> correspondent aux nombres de 128 \u00e0 255.</p> <p>En binaire sign\u00e9: toujours sur 8 bits, les nombres de 0 \u00e0 127 conservent la m\u00eame repr\u00e9sentation (positifs, car avec <code>0</code> en bit de poids fort). En revanche, les \u00e9critures binaires avec un <code>1</code> en bit de poids fort repr\u00e9sentent les entiers n\u00e9gatifs de -128 \u00e0 -1.</p> <p>Ainsi sur 8 bits, on repr\u00e9sente \u00e0 nouveau 255 valeurs : de -128 \u00e0 +127, c'est-\u00e0-dire de \\(-2^7\\) \u00e0 \\(2^7 -1\\). Et puisque le bit de poids fort est r\u00e9serv\u00e9 au signe, il est logique que la valeur absolue soit inf\u00e9rieure \u00e0 128 puisqu'on ne dispose plus que de 7 bits...</p> <p> </p> <p>On repr\u00e9sente donc l'entier \\(-1\\) par <code>11111111</code> en binaire sur 8 bits. C'est sa notation en compl\u00e9ment \u00e0 2 (ou plut\u00f4t \\(2^n\\)).</p> <p>\u00c9crire la repr\u00e9sentation binaire d'un entier n\u00e9gatif</p> Compl\u00e9ment \u00e0 2Par d\u00e9calage <p>Pour obtenir le compl\u00e9ment \u00e0 2 d'un entier n\u00e9gatif:</p> <ul> <li>on code sa valeur absolue en binaire;</li> <li>on inverse tous les bits (on remplace les <code>0</code> par des <code>1</code> et les <code>1</code> par des <code>0</code>);</li> <li>on ajoute 1.</li> </ul> <p>Par exemple:</p> <ul> <li>\\(-6\\) s'\u00e9crit <code>11111010</code> sur 8 bits:    \\(6_{10} = 0000 0110_2  \\rightarrow 1111 1001_2 \\rightarrow 1111 1010_2\\).</li> <li>\\(-42\\) s'\u00e9crit <code>11010110</code> sur 8 bits:    \\(42_{10} = 0010 1010_2  \\rightarrow 1101 0101_2 \\rightarrow 1101 0110_2\\).</li> </ul> <p>La repr\u00e9sentation binaire d'un entier \\(x\\)  n\u00e9gatif sur \\(n\\) bits est celle de l'entier naturel (non sign\u00e9) \\(x + 2^n\\). </p> <p>Par exemple pour \\(x=-42\\), on repr\u00e9sente \\(-42+256=214\\) en binaire non sign\u00e9, c'est-\u00e0-dire <code>11010110</code>.</p>"},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/#133-integer-overflow","title":"1.3.3 Integer Overflow","text":"<p>D\u00e9passement de capacit\u00e9</p> <p>On ne peut coder qu'un nombre fini d'entiers selon la valeur de \\(n\\):  entre \\(-2^{n-1}\\) et \\(2^{n-1}-1\\).</p> <p>Tout calcul sur des entiers dont le r\u00e9sultat ne fait pas partie de cet intervalle donnera un r\u00e9sultat faux: il sera tronqu\u00e9 sur \\(n\\) bits! On parle de d\u00e9passement de capacit\u00e9    , overflow en anglais.</p> <p>En Python, tous les entiers sont sign\u00e9s. Contrairement \u00e0 certains langages de programmation, le type entier non sign\u00e9 n'existe pas nativement. Par d\u00e9faut les entiers sont cod\u00e9s sur 64 bits (ou 32 bits sur les machines 32 bits), ce qui laisse un peu de marge.</p> <p>Pour sp\u00e9cifier qu'on travaille sur 8 bits, on utilisera le module <code>numpy</code>:</p> \ud83d\udc0d Script Python<pre><code>import numpy\nun = numpy.int8(1)\nvie = numpy.int8(42)\n</code></pre>"},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/#134-exercices","title":"1.3.4 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Solution <p>Quel est l'intervalle de nombres entiers relatifs qu'on peut repr\u00e9senter:</p> <ol> <li>Sur 4 bits?</li> <li>Sur 16 bits?</li> <li>Sur 64 bits?</li> </ol> <p>On utilise l'encadrement donn\u00e9 dans l'encadr\u00e9 pr\u00e9c\u00e9dent avec la valeur de \\(n\\) correspondante:</p> <ol> <li>Pour \\(n=4\\), entre -8 et 7</li> <li>Pour \\(n=16\\), entre -32768 et 32767</li> <li>Pour \\(n=64\\), entre -9223372036854775808 et 9223372036854775801</li> </ol> <p>Exercice  2</p> \u00c9nonc\u00e9Solution <ol> <li>Convertir en compl\u00e9ment \u00e0 2 les nombres 12 et -53.</li> <li>Effectuer l'addition en binaire de ces deux nombres, et v\u00e9rifier que le r\u00e9sultat est correct.</li> </ol> <ol> <li>Comme 12 est positif, sa repr\u00e9sentation binaire est <code>00001100</code>.</li> </ol> <p>En revanche, -53 est n\u00e9gatif. Donc:</p> <ul> <li>on \u00e9crit sa valeur absolue, 53, en binaire: <code>00110101</code></li> <li>on effectue le compl\u00e9ment \u00e0 2 en inversant les bits : <code>11001010</code></li> <li>on ajoute 1 et on obtient <code>11001011</code></li> </ul> <p> 2. L'addition bit par bit donne : <code>11010111</code> </p> <p>Le r\u00e9sultat de 12 + (-53) est -41. Or sa repr\u00e9sentation est </p> <ul> <li>valeur absolue : <code>00101001</code></li> <li>compl\u00e9ment \u00e0 2 : <code>11010110</code></li> <li>+1 : <code>11010111</code></li> </ul> <p>On obtient bien le m\u00eame r\u00e9sultat.</p> <p>Exercice  3</p> \u00c9nonc\u00e9Solution <p>Quels sont les entiers relatifs dont la repr\u00e9sentation binaire en compl\u00e9ment \u00e0 2 (sur 8 bits) est:</p> <ol> <li><code>01100111</code></li> <li><code>10011001</code></li> </ol> <ol> <li> <p>L'\u00e9criture binaire commence par un 0, c'est donc un positif. On fait \u00abcomme d'habitude\u00bb: <code>01100111</code> est l'\u00e9criture binaire de 103.</p> </li> <li> <p>L'\u00e9criture binaire commence par un 1, c'est donc un n\u00e9gatif. </p> </li> </ol> <p>On effectue les op\u00e9rations dans l'autre sens:</p> <ul> <li>On soustrait 1 : on obtient <code>10011000</code></li> <li>compl\u00e9ment \u00e0 2 : on obtient <code>01100111</code></li> <li>on r\u00e9cup\u00e8re la valeur absolue : 103</li> </ul> <p>Le nombre est donc -103.</p> <p>Exercice  4</p> \u00c9nonc\u00e9Solution <ol> <li>V\u00e9rifier que sur 8 bits, <code>10000000</code> repr\u00e9sente -128 et <code>11111111</code> repr\u00e9sente -1.</li> <li>V\u00e9rifier en effectuant l'addition en binaire, que 42 + (-42) = 0</li> </ol> <p><code>10000000</code> -&gt; <code>01111111</code> -&gt; '10000000' qui est 128 (la valeur absolue). Donc -128</p> <p><code>11111111</code> -&gt; <code>11111110</code> -&gt; '00000001' qui est 1 (la valeur absolue). Donc -1</p> <p>On a 42 qui est repr\u00e9sent\u00e9 par <code>00101010</code> et -42 par <code>11010110</code>. L'addition bit par bit donne <code>100000000</code> mais comme on est sur 8 bits, le premier bit <code>1</code> est perdu (overflow). Donc on obtient bien <code>00000000</code>, c'est-\u00e0-dire 0.</p> <p>Exercice  5 : Integer Overflow</p> \u00c9nonc\u00e9Solution <p>\u00c0 l'aide du module <code>numpy</code>, effectuer en console les calculs suivants:</p> <ol> <li>127 + 1</li> <li>127 + 2</li> <li>127 + 127 </li> </ol> <p>Par exemple pour le premier calcul: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import numpy\n&gt;&gt;&gt; numpy.int8(127) + numpy.int8(1)\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import numpy\n&gt;&gt;&gt; numpy.int8(127)+numpy.int8(1)\n&lt;console&gt;:1: RuntimeWarning: overflow encountered in byte_scalars\n-128\n\n&gt;&gt;&gt; numpy.int8(127)+numpy.int8(2)\n&lt;console&gt;:1: RuntimeWarning: overflow encountered in byte_scalars\n-127\n\n&gt;&gt;&gt; numpy.int8(127)+numpy.int8(127)\n&lt;console&gt;:1: RuntimeWarning: overflow encountered in byte_scalars\n-2\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/","title":"C13 Les Booleens","text":"Contenus Capacit\u00e9s Attendues Commentaires Valeurs bool\u00e9ennes : 0,1.Op\u00e9rateurs bool\u00e9ens : and, or, not.Expressions bool\u00e9ennes Dresser la table d\u2019une expression bool\u00e9enne. Le ou exclusif (xor) est \u00e9voqu\u00e9.Quelques applications directes comme l\u2019addition binaire sont pr\u00e9sent\u00e9es.L\u2019attention des \u00e9l\u00e8ves est attir\u00e9e sur le caract\u00e8re s\u00e9quentiel de certains op\u00e9rateurs bool\u00e9ens."},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#reperes-historiques","title":"Rep\u00e8res historiques","text":"<p>En 1847, le  britannique  George BOOLE  inventa un formalisme permettant d'\u00e9crire des raisonnements logiques : l'alg\u00e8bre de Boole. La notion m\u00eame d'informatique n'existait pas \u00e0 l'\u00e9poque, m\u00eame si les calculs \u00e9taient d\u00e9j\u00e0 automatis\u00e9s (penser \u00e0 la Pascaline de 1642).</p> <p>Bien plus tard, en  1938, les travaux de l'am\u00e9ricain Claude  SHANNON  prouva  que des  circuits  \u00e9lectriques peuvent  r\u00e9soudre tous  les  probl\u00e8mes  que l'alg\u00e8bre  de  Boole peut elle-m\u00eame r\u00e9soudre.  Pendant la deuxi\u00e8me guerre mondiale, les travaux  d'Alan  TURING  puis de John VON NEUMANN  poseront d\u00e9finitivement les bases de l'informatique moderne.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#algebre-de-boole","title":"Alg\u00e8bre de Boole","text":"<p>L'alg\u00e8bre de Boole d\u00e9finit des op\u00e9rations dans un ensemble qui ne contient que deux \u00e9l\u00e9ments not\u00e9s 0 et 1, ou bien FAUX et VRAI ,ou encore False et True (en Python)</p> <p>Les op\u00e9rations fondamentales sont :</p> <ul> <li>la conjonction (\"ET\") </li> <li>la disjonction (\"OU\") </li> <li>la n\u00e9gation (\"NON\").</li> </ul> <p>Dans  toute la  suite,  <code>x</code> et  <code>y</code> d\u00e9signeront  des  Bool\u00e9ens (\u00e9l\u00e9ments  d'une alg\u00e8bre de Boole) quelconques, <code>F</code> d\u00e9signera FAUX et <code>V</code> d\u00e9signera VRAI.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#operateurs-booleens-operandes","title":"Op\u00e9rateurs Bool\u00e9ens &amp; Op\u00e9randes","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#quest-ce-quun-operateur","title":"Qu'est-ce qu'un Op\u00e9rateur ?","text":"<p>De mani\u00e8re g\u00e9n\u00e9rale et intuitive, un Op\u00e9rateur est un concept (plut\u00f4t math\u00e9matique) qui op\u00e8re/agit sur des donn\u00e9es en entr\u00e9e, appel\u00e9es Op\u00e9randes, et qui renvoie en sortie un (unique) r\u00e9sultat (d\u00e9pendant usuellement des donn\u00e9es en entr\u00e9e). Au sens math\u00e9matique, un Op\u00e9rateur \\(\\otimes\\) (par exemple) peut donc \u00eatre vu comme une fonction \\(f\\) (par exemple) mais les notations pour la valeur de sortie ne sont pas exactement les m\u00eames.  </p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#operateurs-booleens","title":"Op\u00e9rateurs Bool\u00e9ens","text":"<p>Dans ce contexte, Un Op\u00e9rateur Bool\u00e9en ou Op\u00e9rateur Logique, correspond au cas particulier o\u00f9 :</p> <ul> <li>les donn\u00e9es en entr\u00e9e sont des bool\u00e9ens (Vrai/True/\\(1\\) ou False/Faux/\\(0\\))</li> <li>Le r\u00e9sultat en sortie est \u00e9galement un bool\u00e9en</li> </ul> <p>Op\u00e9rateur Bool\u00e9ens / Logiques &amp; Op\u00e9randes</p> <p>Un Op\u00e9rateur Bool\u00e9en, ou Op\u00e9rateur Logique, est une fonction logique \\(f\\) qui :</p> <ul> <li>prend en entr\u00e9e un ou plusieurs bool\u00e9ens/bits (appel\u00e9s Op\u00e9randes), et</li> <li>produit en sortie un (unique) bool\u00e9en/bit de r\u00e9sultat</li> </ul> <p>L'\u00e9quivalent au sens math\u00e9matique d'un op\u00e9rateur bool\u00e9en/logique, serait une fonction dite fonction bool\u00e9enne ou ** fonction logique**, c\u00e0d une fonction qui re\u00e7oit en entr\u00e9e un/des bool\u00e9ens/bits (\\(0\\) ou \\(1\\)) et qui renvoie en sortie un unique bool\u00e9en/bit (\\(0\\) ou \\(1\\)).</p> <p>L'Op\u00e9rateur Bool\u00e9en de la N\u00e9gation</p> <p>L'Op\u00e9rateur bool\u00e9en qui consiste \u00e0 renvoyer en sortie syst\u00e9matiquement le contraire de ce que l'on a re\u00e7u en entr\u00e9e, est appel\u00e9 l'Op\u00e9rateur de la N\u00e9gation :</p> <ul> <li><code>Vrai</code> en entr\u00e9e renvoie <code>Faux</code> en sortie</li> <li><code>Faux</code> en entr\u00e9e renvoie <code>Vrai</code> en sortie</li> </ul>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#fonctions-booleenneslogiques-tables-de-verite","title":"Fonctions Bool\u00e9ennes/Logiques &amp; Tables de V\u00e9rit\u00e9","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#definition","title":"D\u00e9finition","text":"<p>Fonctions Bool\u00e9ennes/Logiques &amp; Tables de V\u00e9rit\u00e9</p> <p>Les fonctions bool\u00e9ennes / fonctions logiques, sont des fonctions qui prennent en entr\u00e9e un ou plusieurs bits/valeurs bool\u00e9ennes, et qui produisent en r\u00e9sultat de sortie un unique bit/valeur bool\u00e9enne. Elles peuvent donc se repr\u00e9senter par une Table de V\u00e9rit\u00e9.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#exemples","title":"Exemples","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#fonction-booleenne-a-2-entrees","title":"Fonction Bool\u00e9enne \u00e0 2 entr\u00e9es","text":"<p>Une fonction bool\u00e9enne \\(f\\) avec \\(2\\) entr\u00e9es \\(x\\), \\(y\\), sera enti\u00e8rement d\u00e9finie par une Table de V\u00e9rit\u00e9 de \\(2^2=4\\) lignes. En effet, il existe \\(4\\) mani\u00e8res d'arranger deux variables \\(x\\) et \\(y\\) prenant chacune des valeurs bool\u00e9ennes (\\(0\\) ou \\(1\\)) donn\u00e9es en entr\u00e9e : \\(00\\), \\(01\\), \\(10\\) ou bien \\(11\\) Chaque valeur \\(f(x,y)\\) \u00e9tant ou bien un \\(0\\), ou bien un \\(1\\).</p> \\(x\\) \\(y\\) \\(f(x,y)\\)(\\(1\\) bit) \\(0\\) \\(0\\) \\(f(0,0)\\) \\(0\\) \\(1\\) \\(f(0,1)\\) \\(1\\) \\(0\\) \\(f(1,0)\\) \\(1\\) \\(1\\) \\(f(1,0)\\) <p>Ex</p> <ol> <li> <p>Un videur de bo\u00eete de nuit a re\u00e7u comme consigne de ne laisser passer que les personnes suivant le dress code suivant :</p> <ul> <li>une chemise (\\(x\\))</li> <li>ET un pantalon (\\(y\\))</li> </ul> <p>\u00c9tablir la Table de V\u00e9rit\u00e9 correspondant \u00e0 cette situation :</p> \\(x\\)(Chemise) \\(y\\)(Pantalon) \\(f(x,y)\\)(\\(1\\) bit)(Puis-je entrer ?) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) - \\(x\\)(Chemise) \\(y\\)(Pantalon) \\(f(x,y)\\)(\\(1\\) bit)(Puis-je entrer ?) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) </li> <li> <p>Le dress code a chang\u00e9 :</p> <ul> <li>une chemise (\\(x\\))</li> <li>OU un pantalon (\\(y\\))</li> </ul> <p>\u00c9tablir la Table de V\u00e9rit\u00e9 correspondant \u00e0 cette situation :</p> \\(x\\)(Chemise) \\(y\\)(Pantalon) \\(f(x,y)\\)(\\(1\\) bit)(Puis-je entrer ?) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) - \\(x\\)(Chemise) \\(y\\)(Pantalon) \\(f(x,y)\\)(\\(1\\) bit)(Puis-je entrer ?) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) </li> </ol>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#fonction-booleenne-a-3-entrees","title":"Fonction Bool\u00e9enne \u00e0 3 entr\u00e9es","text":"<p>Une fonction bool\u00e9enne \\(f\\) avec 3 entr\u00e9es \\(x\\), \\(y\\) et \\(z\\), sera enti\u00e8rement d\u00e9finie par une Table de V\u00e9rit\u00e9 de \\(2^3=8\\) lignes. En effet, il existe \\(8\\) mani\u00e8res d'arranger trois variables \\(x\\), \\(y\\) et \\(z\\) prenant chacune des valeurs bool\u00e9ennes (\\(0\\) ou \\(1\\)) donn\u00e9es en entr\u00e9e : \\(000\\), \\(001\\), \\(010\\), \\(011\\), \\(100\\), \\(101\\), \\(110\\) ou bien \\(111\\) Chaque valeur \\(f(x,y,z)\\) \u00e9tant ou bien un \\(0\\), ou bien un \\(1\\).</p> \\(x\\) \\(y\\) \\(z\\) \\(f(x,y,z)\\)(\\(1\\) bit) \\(0\\) \\(0\\) \\(0\\) \\(f(0,0,0)\\) \\(0\\) \\(0\\) \\(1\\) \\(f(0,0,1)\\) \\(0\\) \\(1\\) \\(0\\) \\(f(0,1,0)\\) \\(0\\) \\(1\\) \\(1\\) \\(f(0,1,1)\\) \\(1\\) \\(0\\) \\(0\\) \\(f(1,0,0)\\) \\(1\\) \\(0\\) \\(1\\) \\(f(1,0,1)\\) \\(1\\) \\(1\\) \\(0\\) \\(f(1,1,0)\\) \\(1\\) \\(1\\) \\(1\\) \\(f(1,1,1)\\) <p>Ex</p> <ol> <li> <p>Un videur de bo\u00eete de nuit a re\u00e7u comme consigne de ne laisser passer que les personnes suivant le dress code suivant :</p> <ul> <li>une chemise (\\(x\\))</li> <li>ET (un pantalon \\(y\\) OU une jupe \\(z\\))</li> </ul> <p>\u00c9tablir la Table de V\u00e9rit\u00e9 correspondant \u00e0 cette situation :</p> \\(x\\)(Chemise) \\(y\\)(Pantalon) \\(z\\)(Jupe) \\(f(x,y,z)\\)(\\(1\\) bit)(Puis-je entrer ?) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) - \\(x\\)(Chemise) \\(y\\)(Pantalon) \\(z\\)(Jupe) \\(f(x,y,z)\\)(\\(1\\) bit)(Puis-je entrer ?) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) </li> <li> <p>Le dress code a chang\u00e9 :</p> <ul> <li>Pantalon Obligatoire pour tout le monde</li> <li>une chemise (\\(x\\)) ET des Chaussures (\\(z\\)) (avec \u00e9ventuellement un maillot en dessous)</li> <li>OU (pas de chemise, mais avec maillot (\\(y\\)) ET Sans Chaussures)</li> </ul> <p>\u00c9tablir la Table de V\u00e9rit\u00e9 correspondant \u00e0 cette situation :</p> \\(x\\)(Chemise) \\(y\\)(Maillot) \\(z\\)(Chaussures) \\(f(x,y,z)\\)(\\(1\\) bit)(Puis-je entrer ?) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) - \\(x\\)(Chemise) \\(y\\)(Maillot) \\(z\\)(Chaussures) \\(f(x,y,z)\\)(\\(1\\) bit)(Puis-je entrer ?) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) </li> </ol>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#fonction-booleenne-a-n-entrees","title":"Fonction Bool\u00e9enne \u00e0 \\(n\\) entr\u00e9es","text":"<p>Nombres de Lignes d'une Table de V\u00e9rit\u00e9</p> <p>Une Table de V\u00e9rit\u00e9 d'une fonction bool\u00e9enne avec \\(n\\) bits en entr\u00e9e (le nombre total de colonnes, sauf la derni\u00e8re colonne du r\u00e9sultat), aura besoin de \\(2^n\\) lignes (correspondant aux \\(2^n\\) combinaisons possibles avec les \\(n\\) bits en entr\u00e9e).</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#portes-logiques","title":"Portes Logiques","text":"<p>Def</p> <p>Une Porte Logique  / Logic Gate  est une impl\u00e9mentation mat\u00e9rielle d'un Op\u00e9rateur Bool\u00e9en, c\u00e0d un circuit \u00e9lectronique \u00e9l\u00e9mentaire impl\u00e9mentant la m\u00eame fonctionnalit\u00e9 pr\u00e9cise et distincte, que l'op\u00e9rateur bool\u00e9en correspondant.</p> <p>Il existe plusieurs Portes Logiques, chacune d'entre elles ayant des fonctionnalit\u00e9s basiques, pr\u00e9cises et distinctes. Ces Portes Logiques sont donc des circuits (\u00e9lectroniques) qui :</p> <ul> <li>acceptent en entr\u00e9e un ou des signaux logiques (\\(0\\) ou \\(1\\)) pr\u00e9sent\u00e9s \u00e0 leurs entr\u00e9es sous forme de tensions.  </li> <li>renvoie en sortie un signal logique (\\(0\\) ou \\(1\\))</li> </ul> <p>Circuits Combinatoires</p> <p>Ce type de circuits \u00e9lectroniques, dont la sortie ne d\u00e9pend QUE des valeurs bool\u00e9ennes/bits en entr\u00e9e est appel\u00e9 un circuit combinatoire</p> <p>Ce cours traite principalement de quelques circuits combinatoires classiques.</p> <p>Exp</p> <p>Un simple transistor permet de r\u00e9aliser le circuit \u00e9lectronique \u00e9l\u00e9mentaire appel\u00e9 Porte Logique NOT (NON) ou Porte Logique de la N\u00e9gation, ou Inverseur.</p> <p>Voici les caract\u00e9ristiques des portes logiques les plus usuelles.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#porte-not-non-inverseur","title":"Porte NOT ( NON ) / Inverseur","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#definition_1","title":"D\u00e9finition","text":"<p>Def</p> <p>La Porte Logique NOT (NON), ou Inverseur, ou Op\u00e9rateur de N\u00e9gation, est d\u00e9fini par la phrase suivante : </p> <p>La sortie est VRAI si et seulement si l'unique entr\u00e9e est FAUX</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#circuits-et-schemas","title":"Circuits et Sch\u00e9mas","text":"<p>La Porte NOT est implant\u00e9e par un simple transistor : c'est la plus simple de toutes les portes, et c'est la seule porte logique unaire (avec une seule entr\u00e9e/op\u00e9rande)</p> <p></p> <p>NOT</p> <ul> <li>symbole usuel : ~  </li> <li>fran\u00e7ais : NON  </li> <li>anglais (et Python) : <code>not</code> </li> <li>notation logique :  \\(\\neg\\) </li> <li>notation math\u00e9matique :  \\(\\overline{x}\\) </li> </ul>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#table-de-verite","title":"Table de V\u00e9rit\u00e9","text":"<p>La Porte NOT n'admet qu'un seul bit en entr\u00e9e (A) et les r\u00e9sultats de son unique sortie (S) sont r\u00e9sum\u00e9s dans sa Table de V\u00e9rit\u00e9:</p> <p>Table de v\u00e9rit\u00e9 de NOT </p> \\(A\\) \\(S=not\\) \\(A=\\overline{A} =\\) ~ \\(A\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\)"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#exemples-en-python","title":"Exemples en Python","text":"\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; n = 20\n&gt;&gt;&gt; not(n % 10 == 0)\nFalse\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#porte-and-et-conjonction","title":"Porte AND ( ET ) / Conjonction","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#definition_2","title":"D\u00e9finition","text":"<p>Def</p> <p>La Porte Logique AND (ET), ou Op\u00e9rateur de Conjonction, est d\u00e9fini par la phrase suivante :</p> <p>La sortie est VRAI si et seulement si l'une ET l'autre entr\u00e9es sont VRAI (simultan\u00e9ment) \\(\\Leftrightarrow\\) les deux entr\u00e9es sont VRAI (simultan\u00e9ment)</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#circuits-et-schemas_1","title":"Circuits et Sch\u00e9mas","text":"<p>AND</p> <ul> <li>symbole usuel : &amp; (appel\u00e9 esperluette en fran\u00e7ais et ampersand en anglais)  </li> <li>fran\u00e7ais : ET  </li> <li>anglais (et Python) : <code>and</code> </li> <li>notation logique : \\(\\wedge\\) </li> <li>notation math\u00e9matique :  <code>.</code> </li> </ul>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#table-de-verite_1","title":"Table de V\u00e9rit\u00e9","text":"<p>La Porte AND (ET) admet deux valeurs en entr\u00e9e (not\u00e9es \\(A\\) et \\(B\\)), et une unique valeur de Sortie (\\(S\\)).</p> <p>Table de v\u00e9rit\u00e9 de AND </p> \\(A\\) \\(B\\) \\(S=A\\) \\(and\\) \\(B\\) \\(=A\\) &amp; \\(B\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\)"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#exemples-en-python_1","title":"Exemples en Python","text":"\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; n = 20\n&gt;&gt;&gt; (n % 10 == 0) and (n % 7 == 0)\nFalse\n&gt;&gt;&gt; (n % 4 == 0) and (n % 5 == 0)\nTrue\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#levaluation-paresseuse","title":"L'\u00e9valuation paresseuse","text":"<p>Pouvez-vous pr\u00e9voir le r\u00e9sultat du code ci-dessous ?</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; (n % 4 == 0) and (n % 0 == 0)\n    ---------------------------------------------------------------------------\n\n    ZeroDivisionError                         Traceback (most recent call last)\n\n    &lt;ipython-input-3-d8a98dcba9be&gt; in &lt;module&gt;\n    ----&gt; 1 (n % 4 == 0) and (n % 0 == 0)\n\n\n    ZeroDivisionError: integer division or modulo by zero\n</code></pre> <p>\u00c9videmment, la division par 0 provoque une erreur. Mais observez maintenant ce code :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; (n % 7 == 0) and (n % 0 == 0)\nFalse\n</code></pre> <p>On appelle \u00e9valuation paresseuse le fait que l'interpr\u00e9teur Python s'arr\u00eate d\u00e8s que sa d\u00e9cision est prise : comme le premier bool\u00e9en vaut False et que la conjonction <code>and</code> est appel\u00e9e, il n'est pas n\u00e9cessaire d'\u00e9valuer le deuxi\u00e8me bool\u00e9en. </p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#porte-or-ou-disjonction","title":"Porte OR ( OU ) / Disjonction","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#definition_3","title":"D\u00e9finition","text":"<p>Def</p> <p>La Porte Logique OR (OU), ou Op\u00e9rateur de Disjonction, est d\u00e9fini par la phrase suivante :</p> <p>La sortie est VRAI si et seulement si l'une OU l'autre des entr\u00e9es est VRAI \\(\\Leftrightarrow\\) au moins l'une des entr\u00e9es est VRAI</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#circuits-et-schemas_2","title":"Circuits et Sch\u00e9mas","text":"<p>OR</p> <ul> <li>symbole usuel : | appel\u00e9 pipe en anglais  </li> <li>fran\u00e7ais : OU  </li> <li>anglais (et Python) : <code>or</code> </li> <li>notation logique : \\(\\vee\\) </li> <li>notation math\u00e9matique :  \\(+\\) </li> </ul>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#table-de-verite_2","title":"Table de V\u00e9rit\u00e9","text":"<p>La Porte OR (OU) admet deux valeurs en entr\u00e9e (not\u00e9es \\(A\\) et \\(B\\)), et une unique valeur de Sortie (\\(S\\)).</p> <p>Table de v\u00e9rit\u00e9 de OR </p> \\(A\\) \\(B\\) \\(S=A\\) \\(or\\) \\(B\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\)"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#exemples-en-python_2","title":"Exemples en Python","text":"\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; n = 20\n&gt;&gt;&gt; (n % 10 == 0) or (n % 7 == 0)\nTrue\n&gt;&gt;&gt; (n % 4 == 0) or (n % 5 == 0)\nTrue\n&gt;&gt;&gt; (n % 7 == 0) or (n % 3 == 0)\nFalse\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#levaluation-paresseuse-retour","title":"L'\u00e9valuation paresseuse (retour)","text":"<p>Pouvez-vous pr\u00e9voir le r\u00e9sultat du code ci-dessous ?</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; (n % 5 == 0) or (n % 0 == 0)\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#porte-nand-non-et","title":"Porte NAND ( NON-ET )","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#definition_4","title":"D\u00e9finition","text":"<p>Def</p> <p>La Porte Logique NAND (NOT-AND / NON-ET), ou Op\u00e9rateur de N\u00e9gation de la Conjonction, est d\u00e9fini par la phrase suivante :</p> <p>La sortie est VRAI si et seulement si PAS TOUTES les entr\u00e9es ne sont VRAI (simultan\u00e9ment) \\(\\Leftrightarrow\\) au plus une des entr\u00e9es est VRAI \\(\\Leftrightarrow\\) au moins une des entr\u00e9es est FAUX</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#circuits-et-schemas_3","title":"Circuits et Sch\u00e9mas","text":"<p>Deux transistors en s\u00e9rie constituent une porte NAND / NOT-AND / NON-ET.</p> <p></p> <p>NAND</p> <p>On note \\(S=A\\) \\(nand\\) \\(B=\\overline{A\\land B}=\\overline{A.B}=\\) ~ \\((A\\) &amp; \\(B)=A \\uparrow B\\)</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#table-de-verite_3","title":"Table de V\u00e9rit\u00e9","text":"<p>La Porte NAND (NON-ET) admet deux valeurs en entr\u00e9e (not\u00e9es \\(A\\) et \\(B\\)), et une unique valeur de Sortie (\\(S\\)).</p> <p>Table de v\u00e9rit\u00e9 de NAND </p> \\(A\\) \\(B\\) \\(S=A\\) \\(nand\\) \\(B\\) \\(=A \\uparrow B\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\)"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#universalite","title":"Universalit\u00e9","text":"<p>NAND est Universelle</p> <p>La Porte Logique NAND (NON ET) est dite universelle / compl\u00e8te, ce qui veut dire qu'elle permet de reconstituer (\u00e0 elle seule) toutes les autres portes logiques.</p> <p>C'est une propri\u00e9t\u00e9 tr\u00e8s importante car, le circuit \u00e9lectronique CMOS de la fonction NAND \u00e9tant des plus simples, la fonction NAND sert souvent de \u00ab brique de base \u00bb \u00e0 des circuits int\u00e9gr\u00e9s beaucoup plus complexes.</p> <p>Universalit\u00e9 de NAND (\\(\\uparrow\\))</p> <p>Gr\u00e2ce \u00e0 des Tables de V\u00e9rit\u00e9, montrer les \u00e9galit\u00e9s suivantes :  </p> \\(\\neg A = A\\uparrow A\\) \\(A\\) &amp; \\(B = (A\\uparrow B)\\uparrow (A\\uparrow B)\\) \\(A\\) or \\(B = (A\\uparrow A)\\uparrow (B\\uparrow B)\\)"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#porte-nor-non-ou","title":"Porte NOR ( NON-OU )","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#definition_5","title":"D\u00e9finition","text":"<p>Def</p> <p>La Porte Logique NOR (NOT-OR / NON-OU), ou Op\u00e9rateur de N\u00e9gation de la Disjonction, ou NI/NI, est d\u00e9fini par la phrase suivante :</p> <p>La sortie est VRAI si et seulement si AUCUNE des entr\u00e9es n'est VRAI \\(\\Leftrightarrow\\) les deux entr\u00e9es sont FAUX \\(\\Leftrightarrow\\) NI l'une NI l'autre des entr\u00e9es n'est VRAI</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#circuits-et-schemas_4","title":"Circuits et Sch\u00e9mas","text":"<p>Deux transistors en parall\u00e8les constituent une porte NOR / NOT-OR / NON-OU.</p> <p></p> <p>NOR</p> <p>On note \\(S =  A\\) \\(nor\\) \\(B=A \\downarrow B\\)</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#table-de-verite_4","title":"Table de V\u00e9rit\u00e9","text":"<p>La Porte NOR (NON-OU) admet deux valeurs en entr\u00e9e (not\u00e9es \\(A\\) et \\(B\\)), et une unique valeur de Sortie (\\(S\\)).</p> <p>Table de v\u00e9rit\u00e9 de NOR </p> \\(A\\) \\(B\\) \\(S=A\\) \\(nor\\) \\(B\\) \\(=A \\downarrow B\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\)"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#universalite_1","title":"Universalit\u00e9","text":"<p>NOR est Universelle</p> <p>La Porte Logique NOR (NON OU) est dite universelle / compl\u00e8te, ce qui veut dire qu'elle permet de reconstituer (\u00e0 elle seule) toutes les autres portes logiques.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#porte-xor-ou-exclusif-difference","title":"Porte XOR (OU EXCLUSIF) / Diff\u00e9rence","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#definition_6","title":"D\u00e9finition","text":"<p>Def</p> <p>La Porte Logique XOR (Exclusive OR / OU EXCLUSIF), ou Op\u00e9rateur de Diff\u00e9rence, ou Op\u00e9rateur de Disjonction Exclusive, est d\u00e9fini par la phrase suivante :</p> <p>La sortie est VRAI si et seulement si les entr\u00e9es NE sont PAS \u00e9gales entre elles \\(\\Leftrightarrow\\) L'une des entr\u00e9es EXCLUSIVEMENT est VRAI (pas les deux)</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#circuits-et-schema","title":"Circuits et Sch\u00e9ma","text":"<p>XOR</p> <p>On note \\(S= A\\) \\(xor\\) \\(B = A\\oplus B\\) = \\(A\\) ^ \\(B\\)</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#table-de-verite_5","title":"Table de V\u00e9rit\u00e9","text":"<p>La Porte XOR (OU EXCLUSIF) admet deux valeurs en entr\u00e9e (not\u00e9es \\(A\\) et \\(B\\)), et une unique valeur de Sortie (\\(S\\)).</p> <p>Table de v\u00e9rit\u00e9 de XOR </p> \\(A\\) \\(B\\) \\(S=A\\) \\(xor\\) \\(B\\)\\(A\\oplus B\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) <p>Exo</p> <ol> <li>\u00c9crire la table de v\u00e9rit\u00e9 de la loi d\u00e9finie par : \\(f(A,B) =\\) (not A and B ) or (A and not B )  </li> </ol> <p>Table de v\u00e9rit\u00e9   </p> \\(A\\) \\(B\\) not A (not A and B) not B A and not B (not A and B ) or (A and not B) \\(0\\) \\(0\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(0\\) \\(1\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(1\\) \\(0\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(1\\) \\(1\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) <ol> <li>Concevoir un circuit qui, \u00e9tant donn\u00e9es deux entr\u00e9es A et B, donne en sortie la valeur A xor B , en utilisant seulement des portes Non, Et, Ou.</li> </ol> <p>Application en \u00e9lectricit\u00e9 domestique.</p> <p>Une application utilis\u00e9e de l\u2019op\u00e9rateur logique XOR en \u00e9lectricit\u00e9 domestique est dans les salles o\u00f9 une ampoule peut \u00eatre allum\u00e9e ou \u00e9teinte par deux interrupteurs plac\u00e9s pr\u00e8s de deux entr\u00e9es. Chacun des deux interrupteurs peut soit allumer ou \u00e9teindre l\u2019ampoule quelle que soit la position de l\u2019autre interrupteur. Pour obtenir une telle fonctionnalit\u00e9, on doit brancher les deux interrupteurs afin de former un op\u00e9rateur XOR. C\u2019est le montage dit \u00ab va-et-vient \u00bb.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#proprietes","title":"Propri\u00e9t\u00e9s","text":"<p>Table de V\u00e9rit\u00e9</p> <ol> <li> <p>Remplir la Table de V\u00e9rit\u00e9 Suivante :</p> \\(A\\) \\(B\\) \\(A \\lor B\\) \\(\\neg (A \\land B)\\) \\((A \\lor B)\\land (\\neg (A \\land B))\\) \\(0\\) \\(0\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(0\\) \\(1\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(1\\) \\(0\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) \\(1\\) \\(1\\) \\(\\,\\) \\(\\,\\) \\(\\,\\) </li> <li> <p>Que constatez-vous ?</p> </li> </ol> <p>Construire les circuits correpondants pour tester vos r\u00e9ponses :   </p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#applications-du-xor","title":"Applications du XOR","text":""},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#en-cryptographie","title":"En Cryptographie","text":"<p>Le XOR joue un r\u00f4le fondamental en Cryptographie car il poss\u00e8de une propri\u00e9t\u00e9 tr\u00e8s int\u00e9ressante :  \\((x \\oplus y) \\oplus y=x\\)</p> <p>Si \\(x\\) est un message et \\(y\\) une cl\u00e9 de chiffrage, alors \\(x\\oplus y\\) est le message chiffr\u00e9. Mais en refaisant un XOR du message chiffr\u00e9 avec la cl\u00e9 \\(y\\), on retrouve donc le message \\(x\\) initial. En pratique, cette m\u00e9thode est souvent utilis\u00e9e avec une cl\u00e9 \\(y\\) \u00e0 usage unique, c\u00e0d avec la technique du masque jetable.</p> <p>Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe :</p> <p>Diaporama de cours </p> <p>Attention</p> <p>Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/T1_4_Booleens/#exercices","title":"EXERCICES","text":"<p>\u00c9tablir des tables de v\u00e9rit\u00e9</p> Enonc\u00e9Solution 1Solution 2Solution 3Solution 4 <p>\u00c9crire les tables de v\u00e9rit\u00e9 des expressions bool\u00e9ennes suivantes :</p> <ol> <li>NOT(A) and B  </li> <li>B or (A and B ) </li> <li>A and (A or B)  </li> <li>(NOT(A) and B) or (A and C)  </li> </ol> \\(A\\) \\(B\\) \\(NOT(A)\\) \\(NOT(A)\\) and \\(B\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(A\\) \\(B\\) \\(A\\) and \\(B\\) \\(B\\) or (\\(A\\) and \\(B\\)) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(A\\) \\(B\\) \\(A\\) or \\(B\\) \\(A\\) and (\\(A\\) or \\(B\\)) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(A\\) \\(B\\) \\(C\\) \\(NOT(A)\\) \\(S_1=NOT(A)\\) and \\(B\\) \\(S_2=A\\) and \\(C\\) \\(S_1\\) or \\(S2\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) <p>Construire les circuits correpondants pour tester vos r\u00e9ponses :   </p> <p>\u00c9quivalence d'expressions bool\u00e9ennes</p> Enonc\u00e9Solution 1Solution 2 <ol> <li>Montrer que (a AND b) = NOT(NOT(a) OR NOT(b))  </li> <li>Montrer que (a OR b) = NOT(NOT(a) AND NOT(b))</li> </ol> <p>Deux expressions bool\u00e9ennes sont \u00e9quivalentes si leurs tables de v\u00e9rit\u00e9 le sont.</p> <p>Autrement dit, si pour toutes les entr\u00e9es des tables de v\u00e9rit\u00e9, l'ensemble des valeurs de sorties de ces m\u00eames tables sont \u00e9quivalentes alors les expressions bool\u00e9ennes sont \u00e9quivalentes.</p> \\(A\\) \\(B\\) \\(A\\) AND \\(B\\) \\(NOT(A)\\) \\(NOT(B)\\) \\(NOT(A)\\) OR \\(NOT(B)\\) \\(NOT(NOT(A)\\) OR \\(NOT(B)\\)) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(A\\) \\(B\\) \\(A\\) OR \\(B\\) \\(NOT(A)\\) \\(NOT(B)\\) \\(NOT(A)\\) AND \\(NOT(B)\\) \\(NOT(NOT(A)\\) AND \\(NOT(B)\\)) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) <p>Exo</p> <p>On consid\u00e8re le circuit logique ci-dessous.  </p> <p></p> <ol> <li>Donner l\u2019expression bool\u00e9enne de S (la sortie) en fonction des variables A, B et C (dans cet ordre sur le sch\u00e9ma).   </li> <li>Compl\u00e9ter la table de v\u00e9rit\u00e9 ci-dessous.</li> </ol> \\(A\\) \\(B\\) \\(C\\) \\(S\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) <p>Exo</p> <p>On consid\u00e8re le circuit logique suivant.  </p> <p> </p> <ol> <li>Donner l\u2019expression de Out en fonction de E1, E2 et C.  </li> <li>Compl\u00e9ter le tableau de v\u00e9rit\u00e9 de ce circuit.</li> </ol> \\(C\\) \\(E1\\) \\(E2\\) \\(S\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) <p>Remarque</p> <p>Le circuit \u00e9tudi\u00e9 est appel\u00e9 multiplexeur \u00e0 2 entr\u00e9es. Selon la valeur de la commande (C ), il permet de reproduire en sortie (Out) : - le signal E 1 si C est \u00e0 0. - le signal E 2 si C est \u00e0 1.  </p> <p>Circuit MUX-4 (difficile)</p> <p>On consid\u00e8re un multiplexeur \u00e0 4 entr\u00e9es, dont le circuit est repr\u00e9sent\u00e9 ci-dessous.  </p> <p> </p> <ol> <li>Par analyse du circuit, d\u00e9terminer l\u2019expression bool\u00e9enne de Out en fonction des entr\u00e9es E1, E2, E3, E4 et des commandes C0 et C1. On peut par exemple ci-dessous v\u00e9rifier quelle est la l\u2019entr\u00e9e reproduite en sortie selon les valeurs de C0 et C1.   </li> </ol> <p></p> <ol> <li>Quelles sont les valeurs des commandes C0 et C1 qui permettent de s\u00e9lectionner en sortie (Out) :  </li> <li>l\u2019entr\u00e9e E 1 ?  </li> <li>l\u2019entr\u00e9e E 2 ?  </li> <li>l\u2019entr\u00e9e E 3 ?  </li> <li>l\u2019entr\u00e9e E 4 ?  </li> </ol> <p>Remarque</p> <p>Le circuit \u00e9tudi\u00e9 est appel\u00e9 multiplexeur \u00e0 4 entr\u00e9es. Selon la valeur des commandes C0 et C1, il permet de reproduire en sortie (Out) le signal E1, E2, E3 ou E4 . Voir la derni\u00e8re question de l\u2019exercice.</p> <p>Le demi-additionneur (half adder)</p> <p>Le circuit \u00e9tudi\u00e9, appel\u00e9 demi-additionneur, permet d\u2019additionner deux bits A et B. Il comporte deux sorties C et S qui repr\u00e9sentent deux expressions bool\u00e9ennes.  </p> <p></p> <ol> <li>Donner les expressions bool\u00e9ennes de C et S en fonction de A et B .  </li> <li>Compl\u00e9ter la table de v\u00e9rit\u00e9 de C et S.  </li> </ol> <p>Table de v\u00e9rit\u00e9 : S </p> \\(A\\) \\(B\\) \\(S\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) <p>Table de v\u00e9rit\u00e9 : c </p> \\(A\\) \\(B\\) \\(C\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) <ol> <li>Quel est le r\u00f4le des sorties C et S dans la fonction du circuit ?</li> </ol> Remarque <p>Le choix de la lettre C vient du fait qu\u2019en anglais, \" retenue \" se dit \"carry\" .</p> <p>additionneur</p> <p>En pratique, une addition binaire est une suite d\u2019additions sur 1 bit. N\u00e9anmoins, il faut conna\u00eetre la retenue pour encha\u00eener ces additions. On r\u00e9alise alors le circuit ci-dessous, appel\u00e9 additionneur complet. Il comporte deux sorties Cout , S et trois entr\u00e9es, le bit A, le bit B et la retenue pr\u00e9c\u00e9dente Cin  </p> <p></p> <ol> <li>R\u00e9aliser ce circuit ci-dessous.   </li> </ol> <p> </p> <ol> <li>Compl\u00e9ter la table de v\u00e9rit\u00e9 ci-dessous.  </li> </ol> \\(Cin\\) \\(A\\) \\(B\\) \\(Cout\\) \\(S\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) <p>Exo</p> <p>Calculer les op\u00e9rations suivantes :</p> \ud83d\udc0d Script Python<pre><code>  1011011\n&amp; 1010101\n----------\n\n\n  1011011\n| 1010101\n----------\n\n\n  1011011\n^ 1010101\n----------\n</code></pre> solution \ud83d\udc0d Script Python<pre><code>  1011011\n&amp; 1010101\n----------\n  1010001\n\n  1011011\n| 1010101\n----------\n  1011111\n\n  1011011\n^ 1010101\n----------\n  0001110\n</code></pre> <p>Op\u00e9rateurs ET, OU, OU EXCLUSIF en Python :python:</p> <p>Les op\u00e9rateurs <code>&amp;</code>, <code>|</code> et <code>^</code> sont utilisables directement en Python Testez-les syntaxes suivantes et v\u00e9rifier les r\u00e9sultats :</p> \ud83d\udc0d Script Python<pre><code># calcul A\n&gt;&gt;&gt; 12 &amp; 7\n4\n</code></pre> \ud83d\udc0d Script Python<pre><code># calcul B\n&gt;&gt;&gt; 12 | 7\n15\n</code></pre> \ud83d\udc0d Script Python<pre><code># calcul C\n&gt;&gt;&gt; 12 ^ 5\n9\n</code></pre> - <p>Pour comprendre ces r\u00e9sultats, il faut travailler en binaire. Voici les m\u00eames calculs : calcul A  </p> <p>12 -&gt; 1100 7 -&gt; 0111 \ud83d\udc0d Script Python<pre><code>  1100\n&amp; 0111\n----------\n  0100  \n</code></pre></p> <p>0100 -&gt; 4</p> \ud83d\udc0d Script Python<pre><code># calcul A\n&gt;&gt;&gt; bin(0b1100 &amp; 0b111)\n    '0b100'\n</code></pre> <p>calcul B  </p> <p>12 -&gt; 1100 7 -&gt; 0111 \ud83d\udc0d Script Python<pre><code>  1100\n| 0111\n----------\n  1111  \n</code></pre></p> <p>1111 -&gt; 15 \ud83d\udc0d Script Python<pre><code># calcul B\n&gt;&gt;&gt; bin(0b1100 | 0b111)\n'0b1111'\n</code></pre></p> <p>calcul C  </p> <p>12 -&gt; 1100 5 -&gt; 0101 \ud83d\udc0d Script Python<pre><code>  1100\n^ 0101\n----------\n  1001  \n</code></pre></p> <p>1001 -&gt; 9   \ud83d\udc0d Script Python<pre><code># calcul C\n&gt;&gt;&gt; bin(0b1100 ^ 0b111)\n    '0b1011'\n</code></pre></p> <p>DIFFICILE - La Cl\u00e9 Endommag\u00e9e, :sk-copyleft: PyD\u00e9fis par Snarkturne</p> <p>Vous avez \u00e9t\u00e9 r\u00e9cemment contact\u00e9 par un de vos amis agent secret. Un message cod\u00e9 vous a \u00e9t\u00e9 remis, sous la forme d'une liste de nombres. Ce code a \u00e9t\u00e9 obtenu en utilisant la m\u00e9thode du masque jetable. Voici comment l'appliquer.</p> <p>Pour chiffrer le texte \"RENDEZVOUSICI\" avec la cl\u00e9 [106, 204, 99, 53, 152, 30, 68, 27, 100, 249, 40, 94, 223], on effectue des op\u00e9rations \u00abou exclusif\u00bb entre le code ASCII des lettres du texte et le nombre correspondant dans la cl\u00e9.</p> <p>Les codes ASCII de R, E et N sont respectivement 82, 69 et 78 (Page Ascii sur Wikip\u00e9dia). En cons\u00e9quence, le premier nombre du message chiffr\u00e9 sera le r\u00e9sultat d'un ou exclusif entre 106 et 82 c'est \u00e0 dire 56 (Page Xor sur Wikip\u00e9dia). Le deuxi\u00e8me nombre sera un ou exclusif entre 204 et 69 (on trouve 137) et le troisi\u00e8me entre 99 et 78 (on trouve 45). En proc\u00e9dant ainsi pour les 13 caract\u00e8res, on obtient le message chiffr\u00e9 : [56, 137, 45, 113, 221, 68, 18, 84, 49, 170, 97, 29, 150]</p> <p>L'op\u00e9ration de d\u00e9chiffrement est identique. Un ou exclusif entre le premier nombre du message chiffr\u00e9 et le premier nombre de la cl\u00e9 redonne 82, qui est le code ASCII de R. Un ou exclusif entre le second nombre du message chiffr\u00e9 et le second nombre de la cl\u00e9 donne 68, le code ASCII de E...</p> <p>On peut donc chiffrer et d\u00e9chiffrer tant qu'on conna\u00eet la bonne suite de nombre qui constitue la cl\u00e9. La cl\u00e9 est tr\u00e8s longue : aussi longue que le message \u00e0 chiffrer (c'est une des caract\u00e9ristiques de la m\u00e9thode du masque jetable). Malheureusement pour vous, bien que conserviez habituellement tr\u00e8s pr\u00e9cieusement les fichiers de cl\u00e9s, celui-ci a \u00e9t\u00e9 endommag\u00e9 (cyber attaque ?). Un sp\u00e9cialiste forensic a n\u00e9anmoins pu analyser le disque d\u00e9fectueux et r\u00e9cup\u00e9rer une portion de la cl\u00e9 :</p> \ud83d\udc0d Script Python<pre><code>cle = [141, 78, 245, 94, 220, 246, 225, 56, 170, 28, 138, 174, 121, 18, 108, 209, 133, 205, 202, 94, 176, 15, 4, 66, 96, 4, 86, 131, 222, 175, 249, 145, 133, 88, 83, 103, 67, 252, 80, 143]\n</code></pre> <p>Et le message \u00e0 d\u00e9chiffrer est le suivant :</p> \ud83d\udc0d Script Python<pre><code>msg = [160,68,222,209,99,2,242,45,250,206,141,103,170,129,122,115,207,169,145,242, 251,76,141,47,1,160,168,235,189,239,19,197,191,37,154,15,52,154,75,29, 21,25,56,242,251,100,68,30,81,48,207,62,99,118,221,96,75,151,158,146, 198,236,27,231,140,80,215,36,65,148,238,85,224,211,214,148,52,1,139,86,92,81,192,0,6,174,214,254,146,157,77,38,87,138,131,57,225,173,107,159,151,105,253,25,140,60,22,70,38,60,228,85,20,255,232,109,158,180,238,161,46,44,72,83,190,236,87,183,246,235,37,250,213,232,5,195,210,189,113,68,8,77,118,232,51,47,134,100,127,225,226,184,204,29,65,150,52,103,94,118,114,182,125,60,134,92,31,63,99,234,193,47,68,238,29,236,3,139,208,106,12,114,98,164,228,56,124,14,237,157,80,172,35,20,3,224,149,210,142,235,43,180,27,243,143,123,97,97,12,251,159,234,209,83,232,245,187,245,210,180,132,128,99,108,42,198,28,9,139,214,105,68,227,30,20,153,240,39,77,111,243,40,147,239,207,82,228,139,146,138,135,119,64,101,165,238,188,138,102,126,89,43,129,250,202,83,65,123,232,235,25,131,172,76,79,236,7,225,115,204,240,187,147,200,168,77,182,73,9,182,148,35,29,199,171,114,189,153,225,198,150,200,151,150,74,195,17,218,148,104,220,201,213,230,158,91,100,39,193,108,244,55,228,183,50,168,11,119,49,157,226,206,54,229,58,239,106,187,101,103,242,181,161,235,254,55,100,105,204,89,255,132,117,212,25,80,124,178,179,18,200,214,85,141,111,148,204,141,134,187,134,222,166,54,2,230,5,11,240,57,204,76,191,229,35,179,42,103,89,205,172,201,12,210,172,99,135,247,63,104,207,45,222,6,95,193,20,49,25,24,28,93,250,91,44,15,136,86,220,186,245,83,227,38,83,250,133,141,202,224,203,22,155,39,58,84,224,41,13,161,124,231,156,226,66,240,1,120,151,98,51,163,227,87,6,88,153,71,13,124,132,202,2,38,156,53,182,23,92,211,172,251,218,32,75,188,224,132,6,103,83,165,26,68,106,101,253,109,239,140,103,72,180,93,44,32,47,203,251,142,164,62,6,200,28,180,18,144,191,164,117,239,82,222,230,56,80,37,133,208,136,134,31,243,64,72,13,39,74,19,205,145,250,170,213,192,27,26,35,6,174,31,193,209,96,142,180,53,143,29,246,22,6,60,23,33,218,62,115,189,164,108,7,31,77,106,158,208,218,68,14,65,234,88,88,138,107,156,53,68,144,5,231,199,187,46,58,98,186,69,201,94,126,35,177,192,190,80,177,191,244,142,168,133,144,149,87,0,173,173,205,121,43,208,225,11,87,118,24,5,15,105,35,80,6,104,33,133,112,69,68,169,128,137,155,147,131,62,211,131,51,246,4,192,9,158,117,27,127,255,89,249,54,185,50,42,251,191,165,61,111,6,39,50,129,105,74,115,174,178,116,247,174,111,241,59,140,240,218,171,81,127,128,224,224,43,212,174,186,53,24,173,145,118,61,5,30,27,208,143,104,149,174,204,43,2,121,25,65,41,41,225,112,82,137,189,74,96,11,53,16,227,106,96,209,239,14,160,173,216,136,88,188,159,109,86,31,255,7,121,177,69,239,253,161,194,120,89,77,154,138,145,82,184,56,232,159,93,176,233,254,124,153,44,246,106,47,10,72,225,93,43,222,25,21,255,69,252,60,8,116,158,58,116,53,209,19,253,64,144,174,147,217,44,103,185,242,61,27,65,117,141,150,94,34,227,147,255,68,246,168,155,83,166,171,225,44,80,32,110,197,61,72,28,166,1,181,58,55,148,187,254,123,51,157,221,50,224,131,241,86,35,157,170,247,86,184,59,158,116,85,45,200,199,146,161,3,150,125,240,102,159,160,160,83,30,63,131,114,86,221,194,178,238,33,208,106,197,204]\n</code></pre> <p>Vous avez donc \u00e0 votre disposition une portion de cl\u00e9 not\u00e9e <code>cle</code>, et l'int\u00e9gralit\u00e9 du message chiffr\u00e9 not\u00e9 <code>msg</code>, qui vous est donn\u00e9 en entr\u00e9e du probl\u00e8me. Avec ces \u00e9l\u00e9ments, saurez-vous d\u00e9terminer le lieu du rendez-vous fix\u00e9 par votre ami ? </p> <p>Exercice BAC - Terminale</p> <p>L\u2019objectif de l\u2019exercice est d\u2019\u00e9tudier une m\u00e9thode de cryptage d\u2019une cha\u00eene de caract\u00e8res \u00e0 l\u2019aide du codage ASCII et de la fonction logique XOR. </p> <p>Question 1</p> <p>Le nombre 65, donn\u00e9 ici en \u00e9criture d\u00e9cimale, s\u2019\u00e9crit 01000001 en notation binaire. En d\u00e9taillant la m\u00e9thode utilis\u00e9e, donner l\u2019\u00e9criture binaire du nombre 89.  </p> <p>Question 2</p> <p>La fonction logique OU EXCLUSIF, appel\u00e9e XOR et repr\u00e9sent\u00e9e par le symbole  \\(\\oplus\\), fournit une sortie \u00e9gale \u00e0 1 si l\u2019une ou l\u2019autre des deux entr\u00e9es vaut 1 mais pas les deux. On donne ci-dessous la table de v\u00e9rit\u00e9 de la fonction XOR.  </p> \\(E_1\\) \\(E_2\\) \\(E_1 \\oplus E_2\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) <p>Si on applique cette fonction \u00e0 un nombre cod\u00e9 en binaire, elle op\u00e8re bit \u00e0 bit. \\(1100 \\oplus 1010 = 0110\\). Poser et calculer l\u2019op\u00e9ration : \\(11001110 \\oplus 01101011\\) </p> <p>Question 3</p> <p>On donne, ci-dessous, un extrait de la table ASCII qui permet d\u2019encoder les caract\u00e8res de A \u00e0 Z.  On peut alors consid\u00e9rer l\u2019op\u00e9ration XOR entre deux caract\u00e8res en effectuant le XOR entre les codes ASCII des deux caract\u00e8res. Par exemple : 'F'  XOR 'S' sera le r\u00e9sultat de \\(01000110 \\oplus 01010011\\).   </p> <p></p> <p>On souhaite mettre au point une m\u00e9thode de cryptage \u00e0 l\u2019aide de la fonction XOR. Pour cela, on dispose d\u2019un message \u00e0 crypter et d\u2019une cl\u00e9 de cryptage de m\u00eame longueur que ce message. Le message et la cl\u00e9 sont compos\u00e9s uniquement des caract\u00e8res du tableau ci-dessus et on applique la fonction XOR caract\u00e8re par caract\u00e8re entre les lettres du message \u00e0 crypter et les lettres de la cl\u00e9 de cryptage.   </p> <p>Par exemple, voici le cryptage du mot ALPHA \u00e0 l\u2019aide de la cl\u00e9 YAKYA : </p> <p></p> <p>Ecrire une fonction <code>xor_crypt(message, cle)</code> qui prend en param\u00e8tres deux cha\u00eenes de caract\u00e8res et qui renvoie la liste des entiers correspondant au message crypt\u00e9.    </p> Aide <ul> <li>On pourra utiliser la fonction native du langage Python <code>ord(c)</code> qui prend en param\u00e8tre un caract\u00e8re c et qui renvoie un nombre repr\u00e9sentant le code ASCII du caract\u00e8re c.  </li> <li>On consid\u00e8re \u00e9galement que l\u2019on dispose d\u2019une fonction \u00e9crite <code>xor(n1,n2)</code> qui prend en param\u00e8tre deux nombres \\(n1\\) et \\(n2\\) et qui renvoie le r\u00e9sultat de  \\(n1 \\oplus n2\\).  </li> </ul> Fonction \u00e0 trou \ud83d\udc0d Script Python<pre><code>def xor_crypt(message,cle):\n    liste = []\n    for i in range(...):\n        code_caractere = ...\n        code_cle = ord(cle[i])\n        code_caractere_crypte = xor(code_caractere,code_cle)\n        liste.append(....)\n    return liste\n</code></pre> <p>Question 4</p> <p>On souhaite maintenant g\u00e9n\u00e9rer une cl\u00e9 de la taille du message \u00e0 partir d\u2019un mot quelconque. On consid\u00e8re que le mot choisi est plus court que le message, il faut donc le reproduire un certain nombre de fois pour cr\u00e9er une cl\u00e9 de la m\u00eame longueur que le message.  Par exemple, si le mot choisi est YAK pour crypter le message ALPHABET, la cl\u00e9 sera YAKYAKYA. Cr\u00e9er une fonction <code>generer_cle(mot,n)</code> qui renvoie la cl\u00e9 de longueur <code>n</code> \u00e0 partir de la cha\u00eene de caract\u00e8res <code>mot</code>. </p> aide \ud83d\udc0d Script Python<pre><code>def genere_cle(mot,n):\n    nb_fois = n ... len(mot)\n    reste = n ... len(mot)\n    cle = nb_fois * mot\n    for i in range(...):\n        cle += ...\n    return cle\n</code></pre> <p>Question 5</p> <p>Recopier et compl\u00e9ter la table de v\u00e9rit\u00e9 de \\((E1 \\oplus E_2)\\).  </p> \\(E_1\\) \\(E_2\\) \\(E_1 \\oplus E_2\\) \\((E_1 \\oplus E_2) \\oplus E_2\\) \\(0\\) \\(0\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) <p>A l\u2019aide de ce r\u00e9sultat, proposer une d\u00e9marche pour d\u00e9crypter un message crypt\u00e9.  </p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/","title":"Les op\u00e9rateurs bool\u00e9ens","text":""},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#1-reperes-historiques","title":"1. Rep\u00e8res historiques","text":"<p>En 1847, le  britannique  George BOOLE  inventa un formalisme permettant d'\u00e9crire des raisonnements logiques : l'alg\u00e8bre de Boole. La notion m\u00eame d'informatique n'existait pas \u00e0 l'\u00e9poque, m\u00eame si les calculs \u00e9taient d\u00e9j\u00e0 automatis\u00e9s (penser \u00e0 la Pascaline de 1642).</p> <p>Bien plus tard, en  1938, les travaux de l'am\u00e9ricain Claude  SHANNON  prouva  que des  circuits  \u00e9lectriques peuvent  r\u00e9soudre tous  les  probl\u00e8mes  que l'alg\u00e8bre  de  Boole peut  elle-m\u00eame r\u00e9soudre.  Pendant la deuxi\u00e8me guerre mondiale, les travaux  d'Alan  TURING  puis de John VON NEUMANN poseront d\u00e9finitivement les bases de l'informatique moderne.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#2-algebre-de-boole","title":"2. Alg\u00e8bre de Boole","text":"<p>L'alg\u00e8bre de Boole d\u00e9finit des op\u00e9rations dans un ensemble qui ne contient que deux \u00e9l\u00e9ments not\u00e9s 0 et 1, ou bien FAUX et VRAI ,ou encore False et True (en Python)</p> <p>Les op\u00e9rations fondamentales sont :</p> <ul> <li>la conjonction (\"ET\") </li> <li>la disjonction (\"OU\") </li> <li>la n\u00e9gation (\"NON\").</li> </ul> <p>Dans  toute la  suite,  <code>x</code> et  <code>y</code> d\u00e9signeront  des  Bool\u00e9ens (\u00e9l\u00e9ments  d'une alg\u00e8bre de Boole) quelconques, <code>F</code> d\u00e9signera FAUX et <code>V</code> d\u00e9signera VRAI.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#21-conjonction-and","title":"2.1 Conjonction (AND)","text":"<ul> <li>symbole usuel : &amp; (appel\u00e9 esperluette en fran\u00e7ais et ampersand en anglais)</li> <li>fran\u00e7ais : ET</li> <li>anglais (et Python) : <code>and</code></li> <li>notation logique : \\(\\wedge\\)</li> <li>notation math\u00e9matique :  <code>.</code></li> </ul> <p>C'est l'op\u00e9ration d\u00e9finie par:</p> <ul> <li><code>x &amp; F = F</code></li> <li><code>x &amp; V = x</code></li> </ul> <p>Puisque l'alg\u00e8bre de  Boole ne contient que deux \u00e9l\u00e9ments,  on peut \u00e9tudier tous les cas possibles et les regrouper dans un tableau appel\u00e9 table de v\u00e9rit\u00e9:</p> <p>Table de v\u00e9rit\u00e9 de AND </p> <code>x</code> <code>y</code> <code>x &amp; y</code> F F F F V F V F F V V V <p>On repr\u00e9sente souvent les op\u00e9rateurs bool\u00e9ens \u00e0 l'aide de portes logiques:</p> <p></p> <p>Notation usuelle en \u00e9lectronique : \\(Q=A \\wedge B\\)</p> <p></p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#exemples-en-python","title":"Exemples en Python","text":"\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; n = 20\n&gt;&gt;&gt; (n % 10 == 0) and (n % 7 == 0)\nFalse\n&gt;&gt;&gt; (n % 4 == 0) and (n % 5 == 0)\nTrue\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#levaluation-paresseuse","title":"L'\u00e9valuation paresseuse","text":"<p>Pouvez-vous pr\u00e9voir le r\u00e9sultat du code ci-dessous ?</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; (n % 4 == 0) and (n % 0 == 0)\n    ---------------------------------------------------------------------------\n\n    ZeroDivisionError                         Traceback (most recent call last)\n\n    &lt;ipython-input-3-d8a98dcba9be&gt; in &lt;module&gt;\n    ----&gt; 1 (n % 4 == 0) and (n % 0 == 0)\n\n\n    ZeroDivisionError: integer division or modulo by zero\n</code></pre> <p>\u00c9videmment, la division par 0 provoque une erreur. Mais observez maintenant ce code :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; (n % 7 == 0) and (n % 0 == 0)\nFalse\n</code></pre> <p>On appelle \u00e9valuation paresseuse le fait que l'interpr\u00e9teur Python s'arr\u00eate d\u00e8s que sa d\u00e9cision est prise : comme le premier bool\u00e9en vaut False et que la conjonction <code>and</code> est appel\u00e9e, il n'est pas n\u00e9cessaire d'\u00e9valuer le deuxi\u00e8me bool\u00e9en. </p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#22-disjonction-or","title":"2.2 Disjonction (OR)","text":"<ul> <li>symbole usuel : | appel\u00e9 pipe en anglais</li> <li>fran\u00e7ais : OU</li> <li>anglais (et Python) : <code>or</code></li> <li>notation logique : \\(\\vee\\)</li> <li>notation math\u00e9matique :  \\(+\\)</li> </ul> <p>C'est l'op\u00e9ration d\u00e9finie par:</p> <p>C'est l'op\u00e9ration d\u00e9finie par:</p> <ul> <li><code>x | V = V</code></li> <li><code>x | F = x</code></li> </ul> <p>On en d\u00e9duit la table suivante:</p> <p>Table de v\u00e9rit\u00e9 de OR </p> <code>x</code> <code>y</code> <code>x or y</code> F F F F V V V F V V V V <p></p> <p>Notation usuelle en \u00e9lectronique : \\(Q=A \\vee B\\)</p> <p></p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#exemples-en-python_1","title":"Exemples en Python","text":"\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; n = 20\n&gt;&gt;&gt; (n % 10 == 0) or (n % 7 == 0)\nTrue\n&gt;&gt;&gt; (n % 4 == 0) or (n % 5 == 0)\nTrue\n&gt;&gt;&gt; (n % 7 == 0) or (n % 3 == 0)\nFalse\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#levaluation-paresseuse-retour","title":"L'\u00e9valuation paresseuse (retour)","text":"<p>Pouvez-vous pr\u00e9voir le r\u00e9sultat du code ci-dessous ?</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; (n % 5 == 0) or (n % 0 == 0)\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#23-negation-not","title":"2.3  N\u00e9gation (NOT)","text":"<ul> <li>symbole usuel : ~</li> <li>fran\u00e7ais : NON</li> <li>anglais (et Python) : <code>not</code></li> <li>notation logique :  \\(\\neg\\)</li> <li>notation math\u00e9matique :  \\(\\overline{x}\\)</li> </ul> <p>C'est l'op\u00e9ration d\u00e9finie par:</p> <ul> <li><code>~V = F</code></li> <li><code>~F = V</code></li> </ul> <p>On en d\u00e9duit la table suivante:</p> <p>Table de v\u00e9rit\u00e9 de NOT </p> <code>x</code> <code>~x</code> F V V F <p></p> <p>Notation usuelle en \u00e9lectronique : \\(Q=\\neg A\\)</p> <p></p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#exemples-en-python_2","title":"Exemples en Python","text":"\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; n = 20\n&gt;&gt;&gt; not(n % 10 == 0)\nFalse\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#24-exercice-1","title":"2.4 Exercice 1","text":"<p>Comprendre ce m\u00e8me : </p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#25-exercice-2","title":"2.5 Exercice 2","text":"<ol> <li>Ouvrir le simulateur de circuits et cr\u00e9er pour chaque op\u00e9ration AND, OR, NOT un circuit \u00e9lectrique illustrant ses propri\u00e9t\u00e9s.</li> </ol> <p>Exemple (inint\u00e9ressant) de circuit : </p> <ol> <li>Utiliser successivement les circuits XOR, NAND et NOR et \u00e9tablir pour chacun leur table de v\u00e9rit\u00e9.</li> </ol>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#3-fonctions-composees","title":"3. Fonctions compos\u00e9es","text":""},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#31-disjonction-exclusive-xor","title":"3.1 Disjonction exclusive XOR","text":"<p>(en fran\u00e7ais OU EXCLUSIF)</p> <p><code>x ^ y = (x &amp; ~y) | (~x &amp; y)</code></p> <p>Table de v\u00e9rit\u00e9 de XOR </p> <code>x</code> <code>y</code> <code>x ^ y</code> F F F F V V V F V V V F <p></p> <p></p> <p>Le XOR joue un r\u00f4le fondamental en cryptographie car il poss\u00e8de une propri\u00e9t\u00e9 tr\u00e8s int\u00e9ressante :  \\((x\\wedge y)\\wedge y=x\\)</p> <p>Si \\(x\\) est un message et \\(y\\) une cl\u00e9 de chiffrage, alors \\(x\\wedge y\\) est le message chiffr\u00e9.  Mais en refaisant un XOR du message chiffr\u00e9 avec la cl\u00e9 \\(y\\), on retrouve donc le message \\(x\\) initial.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#32-fonction-non-et-nand","title":"3.2 Fonction Non Et (NAND)","text":"<p><code>x \u2191 y = ~(x &amp; y)</code></p> <p>Table de v\u00e9rit\u00e9 de NAND </p> <code>x</code> <code>y</code> <code>x \u2191 y</code> F F V F V V V F V V V F <p></p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#33-fonction-non-ou-nor","title":"3.3 Fonction Non Ou (NOR)","text":"<p><code>x \u2193 y = ~(x &amp; y)</code></p> <p>Table de v\u00e9rit\u00e9 de NOR </p> <code>x</code> <code>y</code> <code>x \u2193 y</code> F F V F V F V F F V V F <p></p> <p>Il est temps de se reposer un peu et d'admirer cette vid\u00e9o : </p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#remarque","title":"Remarque :","text":"<p>Les fonctions NAND ET NOR sont dites universelles : chacune d'entre elles peut g\u00e9n\u00e9rer l'int\u00e9gralit\u00e9 des autres portes logiques. Il est donc possible de coder toutes les op\u00e9rations uniquement avec des NAND (ou uniquement avec des NOR). Voir Wikipedia</p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#34-exercice-4","title":"3.4 Exercice 4","text":"<p>Calculer les op\u00e9rations suivantes.</p> \ud83d\udc0d Script Python<pre><code>   1011011\n&amp;  1010101\n----------\n\n\n   1011011\n|  1010101\n----------\n\n\n   1011011\n^  1010101\n----------\n</code></pre> solution \ud83d\udc0d Script Python<pre><code> 1011011\n&amp;1010101\n----------\n 1010001\n\n 1011011\n|1010101\n----------\n 1011111\n\n 1011011\n^1010101\n----------\n 0001110\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#35-calculs-en-python","title":"3.5 Calculs en Python","text":"<p>les op\u00e9rateurs <code>&amp;</code>, <code>|</code> et <code>^</code> sont utilisables directement en Python</p> \ud83d\udc0d Script Python<pre><code># calcul A\n&gt;&gt;&gt; 12 &amp; 7\n4\n</code></pre> \ud83d\udc0d Script Python<pre><code># calcul B\n&gt;&gt;&gt; 12 | 7\n15\n</code></pre> \ud83d\udc0d Script Python<pre><code># calcul C\n&gt;&gt;&gt; 12 ^ 5\n9\n</code></pre> <p>Pour comprendre ces r\u00e9sultats, il faut travailler en binaire. Voici les m\u00eames calculs :</p> \ud83d\udc0d Script Python<pre><code># calcul A\n&gt;&gt;&gt; bin(0b1100 &amp; 0b111)\n    '0b100'\n</code></pre> \ud83d\udc0d Script Python<pre><code># calcul B\n&gt;&gt;&gt; bin(0b1100 | 0b111)\n   '0b1111'\n</code></pre> \ud83d\udc0d Script Python<pre><code># calcul C\n&gt;&gt;&gt; bin(0b1100 ^ 0b111)\n    '0b1011'\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#exercice-5-preparation-du-pydefi","title":"Exercice 5 : pr\u00e9paration du pyd\u00e9fi","text":"<p>Objectif : chiffrer (= crypter) le mot \"BONJOUR\" avec la cl\u00e9 (de m\u00eame taille) \"MAURIAC\".  </p> <p>Protocole de chiffrage : XOR entre le code ASCII des lettres de m\u00eame position.</p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#exercice","title":"Exercice","text":"<p>\u00c0 faire sur Capytale : Lien</p> <p>R\u00e9solvez le pyd\u00e9fi la cl\u00e9 endommag\u00e9e</p>"},{"location":"T01_TypesBase/T1.4_Booleens/data/cours/#complement-proprietes-des-operateurs-logiques","title":"Compl\u00e9ment : propri\u00e9t\u00e9s des op\u00e9rateurs logiques","text":"<p>Les propri\u00e9t\u00e9s suivantes sont facilement d\u00e9montrables \u00e0 l'aide de tables de v\u00e9rit\u00e9s: (source : G.Connan)</p> <p></p> <p>Toutes ces lois sont ais\u00e9ment compr\u00e9hensibles si on les transpose en math\u00e9matiques : </p> <ul> <li>&amp; \u00e9quivaut \u00e0 \\(\\times\\)</li> <li>\\(|\\) \u00e9quivaut \u00e0 \\(+\\)</li> <li>\\(\\neg\\) \u00e9quivaut \u00e0 \\(-\\)</li> </ul>"},{"location":"T02_TypesConstruits/accueil/","title":"Types construits","text":"<p>\u00c0 partir des types de bases, on construit des types conteneurs qui permettent de stocker diff\u00e9rents objets et d'y acc\u00e9der.</p> <p> </p>"},{"location":"T02_TypesConstruits/index_typeconstruits/","title":"Th\u00e8me 2 :  Types construits","text":"<p>\u00c0 partir des types de bases, on construit des types conteneurs qui permettent de stocker diff\u00e9rents objets et d'y acc\u00e9der.</p> <p> </p> <ul> <li>\ud83d\uddf9 Listes - Tableaux  </li> <li>\ud83d\uddf9 Tuples    </li> <li>\ud83d\uddf9 Dictionnaires  </li> </ul>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/","title":"T2.1 Tableaux et listes","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#211-notion-de-tableau-indices","title":"2.1.1 Notion de tableau, indices","text":"<p>En informatique (comme ailleurs...), un tableau permet de stocker de fa\u00e7on structur\u00e9e plusieurs valeurs, en g\u00e9n\u00e9ral de m\u00eame type1.</p> <p>Voici comment on se repr\u00e9sente traditionnellement un tableau de 6 entiers, avec des cases (ou cellules):</p> <p> </p> <p>Bien entendu, il faut stocker ce tableau dans un variable et lui donner un nom. Appelons-le <code>t</code>. Ce tableau est ordonn\u00e9, le premier \u00e9l\u00e9ment est 4, le deuxi\u00e8me est 2, et le dernier est 12.</p> <p>On rep\u00e8re chaque \u00e9l\u00e9ment du tableau par sa position, le num\u00e9ro de la case, qu'on appelle indice.</p> <p> </p> <p>G\u00e9n\u00e9ralement, on utilise la notation <code>t[i]</code> pour d\u00e9signer l'\u00e9lement d'indice <code>i</code> du tableau <code>t</code>. Par exemple, dans notre exemple, <code>t[3]</code> contient la valeur 42.</p> <p>Enfin la taille d'un tableau est le nombre d'\u00e9l\u00e9ments qu'il contient. Ici le tableau <code>t</code> a une taille \u00e9gale \u00e0 6.</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#212-tableau-et-liste-de-python","title":"2.1.2 Tableau et liste de Python","text":"<p>Le type <code>list</code></p> <p>En Python, on impl\u00e9mente le type abstrait de tableau par le type <code>list</code>. On d\u00e9finit un tableau avec des crochets et on s\u00e9pare ses \u00e9l\u00e9ments par des virgules. Par abus de langage on parle de liste plut\u00f4t que de tableau2.</p> <p>Une liste vide se d\u00e9clarera par <code>[]</code>.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; t = [4, 2, 1, 42, 78, 12]\n&gt;&gt;&gt; type(t)\n&lt;class 'list'&gt;\n&gt;&gt;&gt; t[3]\n42\n&gt;&gt;&gt; len(t)\n6\n&gt;&gt;&gt; t[6]\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n&gt;&gt;&gt; t[-1]\n12\n&gt;&gt;&gt; liste_vide = []\n&gt;&gt;&gt; len(liste_vide)\n0\n</code></pre> <p>Remarques:</p> <ul> <li>on obtient la taille d'une liste avec la fonction <code>len</code>;</li> <li>un indice sup\u00e9rieur \u00e0 <code>len(t) - 1</code> provoque une erreur <code>IndexError: list index out of range</code> (en dehors de la liste);</li> <li>on peut utiliser les indices n\u00e9gatifs: en particulier l'indice -1 permet d'acc\u00e8der facilement au dernier \u00e9lement.</li> </ul>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#213-modification-de-liste","title":"2.1.3 Modification de liste","text":"<p>En Python, les objets de type <code>list</code> sont modifiables (on emploie le mot mutable). Et c'est souvent une bonne chose, car des listes peuvent \u00e9voluer apr\u00e8s leur cr\u00e9ation. </p> <p>Modification d'un \u00e9l\u00e9ment existant</p> <p>On modifie un \u00e9l\u00e9ment du tableau par simple affectation, en \u00e9crasant sa valeur avec la nouvelle.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille[0] = \"Bartholomew\" # oui, c'est son vrai nom\n&gt;&gt;&gt; famille\n['Bartholomew', 'Lisa', 'Maggie']   \n</code></pre> <p>Ajout d'un \u00e9l\u00e9ment en fin de liste</p> <p>La m\u00e9thode <code>append</code> permet d'ajouter un \u00e9l\u00e9ment en fin de liste (et donc d'augmenter la taille de la liste).</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille.append(\"Homer\")\n&gt;&gt;&gt; famille\n['Bart', 'Lisa', 'Maggie', 'Homer']  \n</code></pre> <p>Suppression d'un \u00e9l\u00e9ment</p> <p>La m\u00e9tode <code>remove</code> permet de supprimer la premi\u00e8re occurrence de l'\u00e9l\u00e9ment (et seulement la premi\u00e8re). \u00c0 condition bien entendu que l'\u00e9l\u00e9ment soit dans la liste...</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; matieres = [\"nsi\", \"maths\", \"anglais\", \"fran\u00e7ais\", \"maths\"]\n&gt;&gt;&gt; matieres.remove(\"maths\")\n&gt;&gt;&gt; matieres\n[\"nsi\", \"anglais\", \"fran\u00e7ais\", \"maths\"]\n&gt;&gt;&gt; matieres.remove(\"espagnol\")\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nValueError: list.remove(x): x not in list\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#214-creation-de-listes","title":"2.1.4 Cr\u00e9ation de listes","text":"<p>Jusqu'\u00e0 pr\u00e9sent on a cr\u00e9\u00e9 des listes en extension, c'est-\u00e0-dire qu'on a \u00e9crit tous les \u00e9l\u00e9ments un par un entre crochets. Voici deux autres fa\u00e7ons de faire, souvent pratiques et parfois plus rapides lorsque la taille de la liste est grande.</p> <p>Avec une boucle <code>for</code></p> <p>On cr\u00e9e une liste vide, puis on lui ajoute \u00e9l\u00e9ment par \u00e9l\u00e9ment.</p> <p>Cr\u00e9ation d'une liste contenant les entiers multiples de 3 ou de 5 inf\u00e9rieurs \u00e0 100:</p> \ud83d\udc0d Script Python<pre><code>multiples = []\nfor k in range(101):\n    if k%3 == 0 or k%5 == 0:\n        multiples.append(k)\n</code></pre> <p>\u00c9lements identiques</p> <p>Il est souvent pratique d'initialiser une liste de taille donn\u00e9e, souvent en la remplissant de la m\u00eame valeur, souvent 0. Par exemple, pour produire une liste contenant 26 z\u00e9ros:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; lst = 26 * [0]\n&gt;&gt;&gt; lst\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#215-parcours-de-listes","title":"2.1.5 Parcours de listes","text":"<p>Il existe principalement deux m\u00e9thodes pour parcourir une liste: par ses \u00e9l\u00e9ments ou par les indices. Mais dans les deux cas on utilise une boucle <code>for</code>.</p> <p>Parcours par \u00e9l\u00e9ment</p> <p>On l'a d\u00e9j\u00e0 rencontr\u00e9 sur la boucle <code>for</code>:</p> <p>\ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfor membre in famille:\n    print(membre)\n</code></pre> affichera: \ud83d\udc0d Script Python<pre><code>Bart\nLisa\nMaggie\n</code></pre></p> <p>Parcours par indice</p> <p>Chaque \u00e9l\u00e9ment \u00e9tant accessible par son indice (de <code>0</code> \u00e0 <code>len(liste) - 1</code> ), il suffit de faire parcourir \u00e0 une variable <code>i</code> l'ensemble des entiers de <code>0</code> \u00e0 <code>len(liste) - 1</code>, par l'instruction <code>range(len(liste))</code> :</p> <p>Le code suivant affichera donc la m\u00eame chose que le pr\u00e9c\u00e9dent: \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfor i in range(len(famille)):\n    print(famille[i])\n</code></pre></p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#216-exercices","title":"2.1.6 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Solution <p>Dans la liste suivante:</p> <ul> <li>remplacer <code>\"Loki\"</code> par <code>\"Thor\"</code></li> <li>ajouter <code>\"Dr. Strange\"</code></li> <li>supprimer l'intrus.</li> </ul> \ud83d\udc0d Script Python<pre><code>avengers = [\"Black Widow\", \"Captain America\", \"Loki\", \"Iron Man\", \"Hulk\", \"Batman\", \"Hawkeye\"]\n</code></pre> \ud83d\udc0d Script Python<pre><code>avengers[2] = 'Thor'\navengers.append('Dr. Strange')\navengers.remove('Batman')\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Solution <p>Construire une liste de 100 \u00e9l\u00e9ments tous \u00e9gaux \u00e0 0. Puis remplacer tous les \u00e9l\u00e9ments d'indice impair par des 1.</p> \ud83d\udc0d Script Python<pre><code>lst = 100 * [0]\nfor k in range(100):\n    if k%2 != 0:\n        lst[k] = 1\n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Solution <p>Trouvez le nombre qui est exactement \u00e0 la m\u00eame place dans la liste <code>list1</code> et dans la liste <code>list2</code>, sachant que :</p> <ul> <li>les deux listes ont la m\u00eame taille</li> <li>vous n'avez droit qu'\u00e0 une seule boucle <code>for</code>. </li> </ul> \ud83d\udc0d Script Python<pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n</code></pre> \ud83d\udc0d Script Python<pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n\nfor i in range(len(list1)):\n    if list1[i] == list2[i]:\n        print(list1[i])\n</code></pre> <p>Exercice  4</p> \u00c9nonc\u00e9Solution <p>On consid\u00e8re la liste </p> \ud83d\udc0d Script Python<pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> <p>Construire la liste <code>temp_pos</code> qui ne contient que les \u00e9l\u00e9ments positifs de <code>temp</code>. </p> \ud83d\udc0d Script Python<pre><code>temp_pos = []\nfor t in temp:\n    if t &gt;= 0:\n        temp_pos.append(t)\n</code></pre> <p>Exercice  5 (BNS)</p> \u00c9nonc\u00e9Solution <p>Programmer la fonction <code>recherche</code>, prenant en param\u00e8tre un tableau non vide <code>tab</code> (type <code>list</code>) d'entiers et un entier <code>n</code>, et qui renvoie l'indice de la derni\u00e8re occurrence de l'\u00e9l\u00e9ment cherch\u00e9. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau.</p> <p>Exemples :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; recherche([5, 3],1)\n2\n&gt;&gt;&gt; recherche([2,4],2)\n0\n&gt;&gt;&gt; recherche([2,3,5,2,4],2)\n3\n</code></pre> \ud83d\udc0d Script Python<pre><code>def recherche(tab: list, n: int) -&gt; int:\n'''\n    Renvoie l'indice de la derni\u00e8re occurence de l'entier n dans la liste tab.\n    Si tab est vide, renvoie la longueur de la liste tab.\n    '''\n    indice_max = len(tab) # valeur par d\u00e9faut si tab est vide\n    for i in range(len(tab)):\n        if tab[i] == n:\n            indice_max = i\n    return i\n</code></pre> <p>Exercice  6</p> \u00c9nonc\u00e9Solution <p>Construire une liste de taille 26 contenant le nombre d'occurences de chaque lettre de l'alphabet dans le texte suivant:</p> \ud83d\udc0d Script Python<pre><code>texte_long = '''\nmpaowhuqhvyywtvypjkfrrasexnwzrgpargvpjlfbjsxxjipjgkyscgdiqswpvpbzigfkljhicuftshk\nqekwqojwchsgyuvakynjpxlacrnbojawdisjzbcqjflhgqofhccdxnqpbnxcxcypawaqgzbikretwlkf\nqodnoseirzvssdczsyczqjbugcgjuorxciblnojkvygxqirysffsmjyokjdsxlymjokgodupumjoxcmi\nteeenikwlkzidirjnmexsmqjefsgpbpoynusfpudmxwcwrzzqzuobjtlyshbvvgjkhoujsdlnsyfshuu\nmfmqmssbyrzybswyswbdmqmcwsdudrfdnmlmnchossxcwarfmpkrcqcyvyjkplzexrnebukxhqbnzkgh\nnalfpkxghypaimemqzmcreozagufiljxdmgrwftyajtonfisefxujtdmpgxttugxhvpgdqhvgzohovbe\nqaafwqfiokzhtbxgoxpzzvbswlxdtykgufqevlmjjrddufrogzsfzzuaqpqfzinvmfpcylgftkkhqylp\nrgzywwefwghhrivsjtvbbcixhztwujdqqesdertmtwdricrzmwsibhstsgnnxbvqnyklcbrcxtycvcww\nojphbqyrjffndkgwqfqvarfupklwwixekudmbspqtydkegltqvwjzfooscehpnfwvvnkrxsfakwezvol\nmpvnprcrwomddjneyrhpxmnrveibxqxcjluezypvsbfudilpjdqflsdhwucjgtusxjjcnewamoewwjhu\n'''\n</code></pre> \ud83d\udc0d Script Python<pre><code>occurences = 26 * [0]\nfor lettre in texte_long:\n    indice = ord(lettre) - ord('a')\n    occurences[indice] += 1\n</code></pre> <p> </p> <ol> <li> <p>m\u00eame si Python l'autorise, il n'y a pas beaucoup de situations o\u00f9 on va cr\u00e9er un tableau avec des valeurs de types diff\u00e9rents.\u00a0\u21a9</p> </li> <li> <p>en fait la liste est un autre type abstrait de donn\u00e9es en informatique. Python identifie un peu les deux. C'est un peu plus compliqu\u00e9 en r\u00e9alit\u00e9, mais c'est une autre histoire...\u00a0\u21a9</p> </li> </ol>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes2/","title":"T2.1 Tableaux \u00e0 plusieurs dimensions","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes2/#217-listes-de-listes","title":"2.1.7 Listes de listes","text":"<p>Nous avons vu qu'une liste pouvait contenir des \u00e9l\u00e9ments de tous types : des entiers, des chaines des caract\u00e8res... et pourquoi pas une liste qui contient des listes ?</p> <p>On obtient alors un tableau \u00e0 deux dimensions... qu'on appelle \u00e9galement matrice.</p> <p>Exemple</p> <p>La liste <code>tab</code> ci-dessous est compos\u00e9e de 3 listes qui elles-m\u00eames contiennent trois nombres : \ud83d\udc0d Script Python<pre><code>tab =  [[3, 5, 2],\n        [7, 1, 4], \n        [8, 6, 9]]\n</code></pre></p> <p>On acc\u00e8de aux lignes du tableau avec un simple crochet:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; tab[1]\n[7, 1, 4]\n</code></pre> <p>Et aux \u00e9l\u00e9ments par un double crochet:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; tab[2][1]\n6\n</code></pre> <p></p> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re le jeu du Morpion (ou Tic-Tac-Toe) dont la surface de jeu vierge est represent\u00e9e par le tableau : \ud83d\udc0d Script Python<pre><code> tab = [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']]\n</code></pre></p> <p>Les premiers coups jou\u00e9s sont ceux-ci :</p> <ul> <li><code>tab[1][1] = 'X'</code> </li> <li><code>tab[2][1] = 'O'</code> </li> <li><code>tab[2][2] = 'X'</code> </li> <li><code>tab[0][0] = 'O'</code> </li> </ul> <p>Quel coup doit maintenant jouer le joueur  <code>'X'</code> pour s'assurer la victoire ?</p> \ud83d\udc0d Script Python<pre><code>tab[0][2] = 'X'\n# ou\ntab[1][2] = 'X'\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes2/#218-parcours-dune-liste-de-listes","title":"2.1.8 Parcours d'une liste de listes","text":"<p>Exemple</p> <ul> <li> <p>Parcours par \u00e9l\u00e9ments : \ud83d\udc0d Script Python<pre><code>for ligne in tab:\n    for elt in ligne:\n        print(elt)\n</code></pre></p> </li> <li> <p>Parcours par indice : \ud83d\udc0d Script Python<pre><code>for i in range(3):\n    for j in range(3):\n        print(tab[i][j])\n</code></pre></p> </li> </ul> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re la liste <code>m</code> ('m' comme matrice) suivante :  </p> \ud83d\udc0d Script Python<pre><code>m = [[1, 9, 4], [4, 1, 8], [7, 10, 1]]\n</code></pre> <p>Quelle est la somme de tous les nombres de la matrice <code>m</code> ?</p> \ud83d\udc0d Script Python<pre><code>m = [[1, 9, 4], [4, 1, 8], [7, 10, 1]]\n\nsomme = 0\nfor ligne in m:\n    for elt in ligne:\n        somme += elt\n\nprint(somme)\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/","title":"T2.1 Compl\u00e9ments sur les listes","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#219-copie-de-listes","title":"2.1.9 Copie de listes","text":"<p>Vu en classe : une copie un peu trop parfaite</p> <p>Observez le code ci-dessous, r\u00e9alis\u00e9 sans trucage. \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; listA = [1, 2, 3]\n&gt;&gt;&gt; listB = listA\n&gt;&gt;&gt; listA.append(7)\n&gt;&gt;&gt; listB\n[1, 2, 3, 7]\n&gt;&gt;&gt; listB.append(8)\n&gt;&gt;&gt; listA\n[1, 2, 3, 7, 8]\n</code></pre></p> <p>Tout se passe comme si les listes  <code>listA</code> et<code>listB</code> \u00e9taient devenus des clones \u00absynchronis\u00e9s\u00bb depuis l'affectation <code>listB = listA</code>.</p> <p>Analyse gr\u00e2ce \u00e0 PythonTutor</p> <p> </p> <p>L'illustration de PythonTutor nous donne la cl\u00e9 de l'\u00e9nigme : </p> <p><code>listA</code> et<code>listB</code> sont en fait un seul et m\u00eame objet.</p> <p>Comment en avoir le c\u0153ur net ? En observant leur adresse-m\u00e9moire, disponible gr\u00e2ce \u00e0 la fonction <code>id</code> :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; id(listA)\n140485841327616\n&gt;&gt;&gt; id(listB)\n140485841327616\n</code></pre> <p>Ceci met en \u00e9vidence que la m\u00e9taphore du tiroir dont on se sert pour expliquer ce qu'est une variable est malheureusement inexacte. Une variable est une r\u00e9f\u00e9rence vers une adresse-m\u00e9moire. Si deux variables font r\u00e9f\u00e9rence \u00e0 la m\u00eame adresse-m\u00e9moire, alors elles sont totalement identiques:  toute modification de l'une entra\u00eene une modification de l'autre.  </p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#mais-alors-comment-copier-le-contenu-dune-liste-vers-une-autre-sans-creer-un-clone","title":"Mais alors, comment copier le contenu d'une liste vers une autre sans cr\u00e9er un clone ?","text":"<p>Deux fa\u00e7ons (entre autres) de cr\u00e9er une vraie copie d'une liste</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; listA = [3, 4, 5]\n&gt;&gt;&gt; listB = listA.copy()\n&gt;&gt;&gt; listC = list(listA)\n</code></pre> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Contr\u00f4ler les adresses m\u00e9moires avec la fonction <code>id</code> pour prouver que les exemples pr\u00e9c\u00e9dents produisent bien des objets diff\u00e9rents.</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#2110-listes-en-comprehension","title":"2.1.10 Listes en compr\u00e9hension","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#des-exemples-simples","title":"Des exemples simples","text":"<p>On a d\u00e9j\u00e0 vu comment cr\u00e9er une liste par extension, c'est-\u00e0-dire en explicitant tous ses \u00e9l\u00e9ments:</p> \ud83d\udc0d Script Python<pre><code>tab = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre> <p>Ou bien par ajouts successifs \u00e0 l'aide d'une boucle <code>for</code>, ce qui est est bien plus efficace, surtout lorsque la taille du tableau est grande:</p> \ud83d\udc0d Script Python<pre><code>tab = []\nfor k in range(10):\n    tab.append(k**2)\n</code></pre> <p>Python permet \u00e9galement de combiner ces deux \u00e9critures, en \u00abrentrant\u00bb la boucle <code>for</code> dans les crochets de d\u00e9finition de la liste:</p> \ud83d\udc0d Script Python<pre><code>tab = [k**2 for k in range(10)]\n</code></pre> <p>On dit qu'on a cr\u00e9\u00e9 la liste en compr\u00e9hension: la liste des carr\u00e9s des entiers allant de 0 \u00e0 9.</p> <p> </p> <p>On peut \u00e9galement cr\u00e9er une liste en compr\u00e9hension en parcourant les \u00e9l\u00e9ments d'un iterable d\u00e9j\u00e0 existant, au lieu d'un <code>range</code>. Cr\u00e9ons par exemple la liste des images par une fonction <code>f</code> calcul\u00e9es sur une liste d'ant\u00e9c\u00e9dents:</p> \ud83d\udc0d Script Python<pre><code>antecedents = [-1, 0, 5, 10, 100]\n\ndef f(x):\n    return 2*x + 3\n\nimages = [f(x) for x in antecedents]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#avec-un-filtre","title":"Avec un filtre","text":"<p>Reprenons par exemple l'exercice 4 du cours sur les listes. On souhaitait garder les valeurs positives de la liste <code>temp</code>:</p> <p>\ud83d\udc0d Script Python<pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> La solution retenue: \ud83d\udc0d Script Python<pre><code>temp_pos = []\nfor t in temp:\n    if t &gt;= 0:\n        temp_pos.append(t)\n</code></pre></p> <p>On peut cr\u00e9er la m\u00eame chose en compr\u00e9hension, en incluant l'instruction conditionnelle <code>if</code> dans la d\u00e9finition de la liste:</p> \ud83d\udc0d Script Python<pre><code>temp_pos = [t for t in temp if t &gt;= 0]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#en-deux-dimensions","title":"En deux dimensions","text":"<p>On peut se servir de cette m\u00e9thode pour construire rapidement des tableaux \u00e0 deux dimensions. Par exemple, voici comment on peut cr\u00e9er un tableau de z\u00e9ros de 3 lignes et 5 colonnes:</p> \ud83d\udc0d Script Python<pre><code>tab = [5 * [0] for i in range(3)]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#2111-exercices","title":"2.1.11 Exercices","text":"<p>Dans chaque exercice, la liste doit \u00eatre cr\u00e9e en compr\u00e9hension.</p> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Cr\u00e9er la liste constitu\u00e9e des valeurs absolues des entiers contenus dans la liste <code>valeurs</code>.</p> \ud83d\udc0d Script Python<pre><code>valeurs = [-2, 5, 1, -9, 2, 12, -8, -15, 7, 14, -27, 0, -2, 4, -5]\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Cr\u00e9er la liste contenant tous les entiers inf\u00e9rieurs ou \u00e9gaux \u00e0 100 multiples de 7.</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Reprende le pyd\u00e9fi Le jardin des Hesp\u00e9rides en \u00e9crivant en compr\u00e9hension la liste des nombres \u00e0 sommer.</p> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re la liste suivante: \ud83d\udc0d Script Python<pre><code>lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]\n</code></pre> Seuls les nombres entre 65 et 90 ont une signification : ce sont des codes Unicode de lettres (r\u00e9cup\u00e9rables par la fonction <code>chr</code>).</p> <p>Cr\u00e9er une liste <code>sol</code> qui contient les lettres correspondants aux nombres ayant une signification.</p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Consulter l'\u00e9nonc\u00e9 du pyd\u00e9fi Le lion de N\u00e9m\u00e9e .</p> <ol> <li> <p>\u00c9crire une fonction prenant en param\u00e8tre une lettre et qui renvoie sa \u00abvaleur\u00bb. Pour rappel: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; ord('A')\n65\n</code></pre></p> </li> <li> <p>\u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res et qui renvoie sa \u00abvaleur\u00bb. Vous devez cr\u00e9er une liste en compr\u00e9hension utilisant la fonction de la question 1, et l'utilisation de la fonction <code>sum</code> est autoris\u00e9e.</p> </li> <li>Cr\u00e9er en compr\u00e9hension la liste des valeurs des divinit\u00e9s.</li> </ol> <p>Pour la fonction <code>split</code> utilis\u00e9e ci-dessous, voir sur cette page .</p> \ud83d\udc0d Script Python<pre><code>divinites = 'ARTEMIS ASCLEPIOS ATHENA ATLAS CHARON CHIRON CRONOS DEMETER EOS ERIS EROS GAIA HADES HECATE HEPHAISTOS HERA HERMES HESTIA HYGIE LETO MAIA METIS MNEMOSYNE NYX OCEANOS OURANOS PAN PERSEPHONE POSEIDON RHADAMANTHE SELENE THEMIS THETIS TRITON ZEUS'.split()\n</code></pre> \ud83d\udc0d Script Python<pre><code>divinites = 'ARTEMIS ASCLEPIOS ATHENA ATLAS CHARON CHIRON CRONOS DEMETER EOS ERIS EROS GAIA HADES HECATE HEPHAISTOS HERA HERMES HESTIA HYGIE LETO MAIA METIS MNEMOSYNE NYX OCEANOS OURANOS PAN PERSEPHONE POSEIDON RHADAMANTHE SELENE THEMIS THETIS TRITON ZEUS'.split()\n\ndef valeur(lettre: str) -&gt; int:\n'''\n    Renvoie la valeur d'une lettre capitale de l'alphabet.\n    Par ex: A -&gt; 1, B -&gt; 2, ... Z -&gt; 26\n    '''\n    return ord(lettre) - 64\n\ndef valeur_mot(mot: str) -&gt; int:\n'''\n    Renvoie la valeur d'un mot \u00e9tant la somme des valeurs des lettres le \n    constituant.\n    '''\n    valeurs_lettres = [valeur(l) for l in mot]\n    return sum(valeurs_lettres)\n\nvaleurs_divinites = [valeur_mot(d) for d in divinites]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/","title":"C12 Les tableaux en Python","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/#notion-de-tableau-indices","title":"Notion de tableau, indices","text":"<p>En informatique (comme ailleurs...), un tableau permet de stocker de fa\u00e7on structur\u00e9e plusieurs valeurs, en g\u00e9n\u00e9ral de m\u00eame type.</p> <p>Remarque :</p> <p>m\u00eame si Python l'autorise, il n'y a pas beaucoup de situations o\u00f9 on va cr\u00e9er un tableau avec des valeurs de types diff\u00e9rents.</p> <p>Voici comment on se repr\u00e9sente traditionnellement un tableau de 6 entiers, avec des cases (ou cellules):</p> <p></p> <p>Bien entendu, il faut stocker ce tableau dans un variable et lui donner un nom. Appelons-le <code>t</code>. Ce tableau est ordonn\u00e9, le premier \u00e9l\u00e9ment est 4, le deuxi\u00e8me est 2, et le dernier est 12.</p> <p>On rep\u00e8re chaque \u00e9l\u00e9ment du tableau par sa position, le num\u00e9ro de la case, qu'on appelle indice.</p> <p></p> <p>G\u00e9n\u00e9ralement, on utilise la notation <code>t[i]</code> pour d\u00e9signer l'\u00e9lement d'indice <code>i</code> du tableau <code>t</code>. Par exemple, dans notre exemple, <code>t[3]</code> contient la valeur 42.</p> <p>Enfin la taille ou longueur d'un tableau est le nombre d'\u00e9l\u00e9ments qu'il contient. Ici le tableau <code>t</code> a une taille \u00e9gale \u00e0 6.</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/#les-tableaux-en-python","title":"Les tableaux en Python","text":"<p>ATTENTION :</p> <p>Dans la suite nous allons employer le terme \u00abtableau\u00bb. Pour parler de ces \u00abtableaux\u00bb les concepteurs de Python ont choisi d'utiliser le terme de \u00ablist\u00bb (\u00abliste\u00bb en fran\u00e7ais). Pour \u00e9viter toute confusion, notamment par rapport \u00e0 des notions qui seront abord\u00e9es en terminale, le choix a \u00e9t\u00e9 fait d'employer \u00abtableau\u00bb \u00e0 la place de \u00abliste\u00bb (dans la documentation vous rencontrerez le terme \u00ablist\u00bb, cela ne devra pas vous pertuber)</p> <p>Les tableaux sont des s\u00e9quences, ils sont modifiables (on parle d'objets \u00abmutables\u00bb).</p> <p>En Python, on impl\u00e9mente le type abstrait de tableau par le type <code>list</code>. On d\u00e9finit un tableau avec des crochets et on s\u00e9pare ses \u00e9l\u00e9ments par des virgules. Par abus de langage on parle de liste plut\u00f4t que de tableau</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/#declaration-dune-liste-ou-dun-tableau","title":"\u2712 D\u00e9claration d'une liste ou d'un tableau","text":"<p>Exemples</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"] \nprint(famille)\n['Bart', 'Lisa', 'Maggie']\n</code></pre> <p>Remarques :</p> <ul> <li> <p>M\u00eame si cela n'a ici un grand int\u00e9r\u00eat, les \u00e9l\u00e9ments d'une liste peuvent donc \u00eatre de types diff\u00e9rents : ici, tous les \u00e9l\u00e9ments de ma liste sont des cha\u00eenes de caract\u00e8res (<code>str</code>), mais la liste <code>[\"Bart\", 5, \"Lisa\", \"Maggie\"]</code> est aussi une liste valide.</p> </li> <li> <p>Une liste vide se d\u00e9clarera avec <code>[]</code>.</p> </li> </ul> \ud83d\udc0d Script Python<pre><code>copies_corrigees = []\n</code></pre> <p>Nous verrons plus tard qu'il est fr\u00e9quent dans les exercices de partir d'une liste vide et d'ajouter progressivement des \u00e9l\u00e9ments.</p> <p>D\u00e9finition : listes en python<p>Une liste est un ensemble de valeurs, regroup\u00e9es en un seul objet.</p> </p> <p>Exemples :</p> \ud83d\udc0d Script Python<pre><code>lst1 = [2, 1, 7, 0] # lst est une liste de nombres entiers\nlst2 = [2.1, 1.1, 7.5, 0.36] # lst est une liste de float\nlst3 = [\"albert\", \"paul\", \"jacques\"] # lst est une liste de str\n\n# mais une liste peut contenir des \u00e9l\u00e9ments de types diff\u00e9rents :\nlst4 = [\"1G4\",\"NSI\", 22, 13.7, True] # cette liste contient des \u00e9l\u00e9ments de diff\u00e9rents types. \n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/#acces-aux-elements-dune-liste","title":"\u2712 Acc\u00e9s aux \u00e9l\u00e8ments d'une liste","text":"<p>On acc\u00e8de \u00e0 un \u00e9l\u00e9ment d'une liste en mettant entre crochets l'indice de l'\u00e9l\u00e9ment (qui commence \u00e0 z\u00e9ro).</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;famille[0]\n'Bart'\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;famille[2]\n'Maggie'\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;famille[3]\n\nTraceback (most recent call last):\n  File \"&lt;input&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n</code></pre> <p>Remarques :</p> <ul> <li> <p>Un indice qui d\u00e9passe la valeur \u00a0<code>longueur de la liste -1</code> provoquera donc une erreur <code>list index out of range</code>. C'est une erreur tr\u00e8s fr\u00e9quente lorsqu'on manipule des listes.</p> </li> <li> <p>Il est par contre possible d'utiliser des indices n\u00e9gatifs. On utilise par exemple tr\u00e8s souvent l'indice -1 pour acc\u00e9der au dernier \u00e9l\u00e9ment de la liste, sans avoir \u00e0 conna\u00eetre la longueur de celle-ci :</p> </li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;famille[-1]\n'Maggie'\n</code></pre> <p>D\u00e9finitions : Indices des \u00e9l\u00e9ments d'une liste</p> <p>Les \u00e9l\u00e9ments d'une listes sont num\u00e9rot\u00e9s, on dit indic\u00e9s.</p> <ul> <li>Le premier \u00e9l\u00e9ment a li'ndice 0  </li> <li>Le second \u00e9l\u00e9ment a li'ndice 1  </li> <li>Le troisi\u00e8me \u00e9l\u00e9ment a li'ndice 2  </li> </ul> <p>etc...</p> <p>remarque tr\u00e8s importante :</p> <p>L'indice du dernier \u00e9l\u00e9ment est \u00e9gal \u00e0 len(lst) - 1</p> <p>Par exemple si la liste \u00e0 4 \u00e9l\u00e9ment, ils ont les indices \\(0\\), \\(1\\), \\(2\\) et \\(3\\), la longueur de la liste est \\(4\\)</p> <p>notations :</p> <p>Souvent, quand nous travaillerons avec des listes, nous les repr\u00e9senterons avec des cases pour les \u00e9l\u00e9ments, et les indices report\u00e9s (au dessus ou en dessous) :</p> <p></p> <p>Les indices permettent d'acc\u00e9der \u00e0 la valeur des \u00e9l\u00e9ments :</p> \ud83d\udc0d Script Python<pre><code>lst[0] est le premier \u00e9l\u00e9ment de la liste\nlst[1] est le second \u00e9l\u00e9ment de la liste\nlst[2] est le troisi\u00e8me \u00e9l\u00e9ment de la liste\nect\n\nLe dernier \u00e9l\u00e9ment d une liste de longueur 6 \u00e0 l indice 5\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/#longueur-dune-liste","title":"\u2712 Longueur d'une liste","text":"<p>La longueur d'une liste sera donn\u00e9e par la fonction <code>len()</code>, qui renvoie donc un nombre entier positif ou nul.</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;len(famille)\n3\n</code></pre> - Le dernier \u00e9l\u00e9ment d'une liste <code>maliste</code> (non vide) sera donc toujours l'\u00e9l\u00e9ment d'indice <code>len(maliste)-1</code>.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;famille[len(famille) - 1]\n'Maggie'\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;famille[len(famille)]\nTraceback (most recent call last):\n   File \"&lt;input&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/#parcours-des-elements-dune-liste","title":"\u2712 Parcours des \u00e9l\u00e9ments d'une liste","text":"<p>Il existe principalement deux m\u00e9thodes pour parcourir une liste: par ses \u00e9l\u00e9ments ou par les indices. Mais dans les deux cas on utilise une boucle <code>for</code>.</p> <p>Parcours \u00abpar \u00e9l\u00e9ments\u00bb</p> <p>C'est la m\u00e9thode la plus naturelle, celle d\u00e9j\u00e0 vue lors de la pr\u00e9sentation de la boucle <code>for</code>. Nous allons simplement it\u00e9rer sur les \u00e9l\u00e9ments de la liste. On l'a d\u00e9j\u00e0 rencontr\u00e9 sur la boucle <code>for</code>:</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n\nfor membre in famille:\n    print(membre)\n\nBart\nLisa\nMaggie\n</code></pre> <p>Remarque :</p> <ul> <li>Penser \u00e0 donner un nom signifiant \u00e0 la variable qui parcourt la liste. Il aurait par exemple \u00e9t\u00e9 tr\u00e8s maladroit d'\u00e9crire </li> </ul> \ud83d\udc0d Script Python<pre><code>for k in famille:\n    print(k)\n\nBart\nLisa\nMaggie\n</code></pre> <p>En effet le nom de variable <code>k</code> est habituellement utilis\u00e9 pour les nombres (les indices, les compteurs...).</p> <p>Exo</p> <p>Apr\u00e8s un r\u00e9f\u00e9rendum, la liste <code>urne</code> contient uniquement des <code>'oui'</code> ou des <code>'non'</code>. D\u00e9terminer le pourcentage de <code>oui</code> de ce r\u00e9f\u00e9rendum.</p> \ud83d\udc0d Script Python<pre><code>urne = ['oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'oui']\n</code></pre> <p>Avantages et inconv\u00e9nients du Parcours par \u00e9l\u00e9ment</p> \ud83d\udc0d Script Python<pre><code>    for membre in famille:\n        print(membre)\n</code></pre> <p>Les avantages :</p> <ul> <li>la simplicit\u00e9 : un code plus facile \u00e0 \u00e9crire, avec un nom de variable explicite.</li> <li>la s\u00e9curit\u00e9  : pas de risque d'<code>index out of range</code> !</li> </ul> <p>Les inconv\u00e9nients :</p> <ul> <li>m\u00e9thode rudimentaire : lorsqu'on est \u00abpositionn\u00e9\u00bb sur un \u00e9l\u00e9ment, il n'est pas possible d'acc\u00e9der au pr\u00e9c\u00e9dent ou au suivant. (et c'est parfois utile).</li> <li>on n'acc\u00e9de pas \u00e0 la position (indice) de l'\u00e9l\u00e9ment.</li> <li>on ne peut pas modifier l'\u00e9l\u00e9ment sur lequel on est positionn\u00e9 :</li> </ul> \ud83d\udc0d Script Python<pre><code>lst = [1, 2, 3]\nfor nb in lst:\n    nb = nb * 2 # (1)\n\nlst \n\n[1, 2, 3]\n</code></pre> <ol> <li>On veut multiplier par 2 chaque \u00e9l\u00e9ment de la liste</li> <li>La liste <code>lst</code> n'a pas chang\u00e9...</li> </ol> <p>Parcours \u00abpar indice\u00bb</p> <p>Chaque \u00e9l\u00e9ment \u00e9tant accessible par son indice (de <code>0</code> \u00e0   <code>len(liste) - 1</code> ), il suffit de faire parcourir \u00e0 une variable <code>i</code> l'ensemble des entiers de <code>0</code> \u00e0   <code>len(liste) - 1</code>, par l'instruction <code>range(len(liste))</code> :</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n\nfor i in range(len(famille)):\n    print(famille[i])\n\nBart\nLisa\nMaggie\n</code></pre> <p>Bonne habitude \u00e0 prendre : nommer sa variable d'indice <code>i</code>, <code>j</code>, <code>k</code> ou <code>indice</code> mais pas autre chose !  </p> <p>Avantages et inconv\u00e9nients du Parcours par indice</p> \ud83d\udc0d Script Python<pre><code>    for i in range(len(famille)):\n        print(famille[i])\n</code></pre> <p>Les avantages  :</p> <ul> <li>le contr\u00f4le : en parcourant par indice, on peut s'arr\u00eater o\u00f9 on veut, on peut acc\u00e9der au suivant/pr\u00e9c\u00e9dent...</li> <li>pour les tableaux \u00e0 deux dimensions, on retrouve la d\u00e9signation classique d'un \u00e9l\u00e9ment par num\u00e9ro de ligne / num\u00e9ro de colonne.</li> </ul> <p>Les inconv\u00e9nients :</p> <ul> <li>la complexit\u00e9 : il faut conna\u00eetre le nombre d'\u00e9l\u00e9ments de la liste (ou le r\u00e9cup\u00e9rer par la fonction <code>len()</code> )</li> <li>le risque d'erreur : encore et toujours le <code>index out of range</code>...</li> </ul> <p>FICHE : les listes</p> <p>d\u00e9finition </p> <p>Une liste est un ensemble de valeurs, regroup\u00e9es en un seul objet.</p> <p>exemples :</p> \ud83d\udc0d Script Python<pre><code>lst1 = [2, 1, 7, 0] # lst est une liste de nombres entiers\nlst2 = [2.1, 1.1, 7.5, 0.36] # lst est une liste de float\nlst3 = [\"albert\", \"paul\", \"jacques\"] # lst est une liste de str\n\n# mais une liste peut contenir des \u00e9l\u00e9ments de types diff\u00e9rents :\nlst4 = [\"1G4\",\"NSI\", 22, 13.7, True] # cette liste contient des \u00e9l\u00e9ments de diff\u00e9rents types. \n</code></pre> <p>type : une liste \u00e0 le type list </p> <p>indices </p> <p>Les \u00e9l\u00e9ments d'une listes sont num\u00e9rot\u00e9s, on dit indic\u00e9s.</p> <ul> <li>Le premier \u00e9l\u00e9ment a l'indice 0</li> <li>Le second \u00e9l\u00e9ment a li'ndice 1</li> <li>Le troisi\u00e8me \u00e9l\u00e9ment a li'ndice 2</li> </ul> <p>etc...</p> <p>** remarque tr\u00e8s importante :**</p> <p>L'indice du dernier \u00e9l\u00e9ment est \u00e9gal \u00e0 len(lst) - 1</p> <p>modifier l'\u00e9l\u00e9ment d'indice i </p> <p>Il suffit d'affecter une valeur \u00e0 l'\u00e9lement d'indice i \ud83d\udc0d Script Python<pre><code>lst = [\"a\", \"b\", \"c\"]\nlst[1] = \"e\" # maintenant lst vaut : [\"a\", \"e\", \"c\"]\n</code></pre></p> <p>longueur </p> <p>La fonction len() renvoie la longueur d'une liste :</p> \ud83d\udc0d Script Python<pre><code>lst = [1, 2, 3]\nnombre_elements = len(lst) # nombre d'\u00e9l\u00e9ment prendra la valeur 3\n</code></pre> <p>Parcours par indice ce code est \u00e0 connaitre SANS AUCUNE HESITATION</p> \ud83d\udc0d Script Python<pre><code>    for i in range(len(lst)) :\n        print( lst[i] )\n</code></pre> <p>on peut aussi modifier tout les \u00e9l\u00e9ments gr\u00e2ce \u00e0 un parcours :</p> \ud83d\udc0d Script Python<pre><code>    lst = [1, 2, 3]\n    for i in range(len(lst)) :\n        lst[i] = 2 * lst[i] # maintenant lst vaut : [2, 4, 6]\n</code></pre> <p>Parcours par valeur ce code est \u00e0 connaitre SANS AUCUNE HESITATION</p> \ud83d\udc0d Script Python<pre><code>    for elt in lst :\n        print(elt)\n</code></pre> <p>exemple :</p> \ud83d\udc0d Script Python<pre><code>    lst = [1, 2, 3]\n    for elt in lst :\n        print(3*elt)\n</code></pre> \ud83d\udc0d Script Python<pre><code>    3\n    6\n    9\n</code></pre> <p>Exo</p> <p>On donne la liste : \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 1, 5, 9]\n</code></pre></p> <p>En utilisant un parcours par indice :</p> <ol> <li>Afficher les \u00e9l\u00e9ments de cette liste.  </li> <li>Afficher les \u00e9l\u00e9ments de cette liste dans l'ordre inverse (en commen\u00e7ant par 9)</li> </ol> <p>Exo</p> <p>Trouvez le nombre qui est exactement \u00e0 la m\u00eame place dans la liste <code>list1</code> et dans la liste <code>list2</code>, sachant que :</p> <ul> <li>les deux listes ont la m\u00eame taille  </li> <li>vous n'avez droit qu'\u00e0 une seule boucle <code>for</code>. </li> </ul> \ud83d\udc0d Script Python<pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\n\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n</code></pre> <p>Exo</p> <p>Dans la liste </p> \ud83d\udc0d Script Python<pre><code>lst = [2428970, 1518306, 4971405, 1690994, 7918102, 4030834, 8830131, 7514856, 7903128, 6307569, 6624056, 5260490, 6447835, 4598783, 9108626, 5045240, 4128269, 4460134, 2497873, 5076659, 8104003, 7604887, 7451976, 4136924, 5691945, 8726293, 7855592, 3562473, 8849129, 6488474, 5303587, 2606124, 5484044, 4559758, 7592232, 2211406, 9974334, 7988936, 7582946, 7668748, 1799997, 3837917, 3196209, 7064342, 2543765, 1182013, 7253381, 1153735, 1037391, 4375946, 4445821, 5965587, 6001887, 4162629, 5235783, 8716582, 4901175, 5445422, 1120005, 8332321, 7075046, 2194175, 5557300, 2887907, 5103214, 2520744, 5104399, 2065665, 3035703, 7890213, 1758301, 3407982, 1355453, 4896338, 7979392, 9671602, 9690721, 7423779, 7423780, 3080825, 6785783, 3836837, 7310931, 1857470, 3492507, 2823231, 1492310, 1911148, 9620515, 5564910, 7009452, 7464745, 9608747, 7267383, 6939140, 6556578, 3592267, 8135497, 4881660, 5346884, 6859150]\n</code></pre> <p>se cachent deux nombres cons\u00e9cutifs. Pouvez-vous les trouver ?</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/#modification-dune-liste","title":"\u2712 Modification d'une liste","text":"<p>En Python, les objets de type <code>list</code> sont modifiables (on emploie le mot mutable). Et c'est souvent une bonne chose, car des listes peuvent \u00e9voluer apr\u00e8s leur cr\u00e9ation. </p> <p>Modification d'un \u00e9l\u00e9ment existant</p> <p>On modifie un \u00e9l\u00e9ment du tableau par simple affectation, en \u00e9crasant sa valeur avec la nouvelle.</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfamille[0] = \"Bartholomew\" # oui, c'est son vrai nom\nprint(famille)\n\n['Bartholomew', 'Lisa', 'Maggie']\n</code></pre> <p>Ajout d'un \u00e9lement \u00e0 la fin d'une liste : la m\u00e9thode append()</p> <p>On modifie un \u00e9l\u00e9ment du tableau par simple affectation, en \u00e9crasant sa valeur avec la nouvelle.</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfamille.append(\"Milhouse\")\nprint(famille  )\n\n['Bart', 'Lisa', 'Maggie', 'Milhouse']\n</code></pre> <p>Remarques :</p> <ul> <li>La m\u00e9thode <code>append()</code> rajoute donc un \u00e9l\u00e9ment \u00e0 la fin de la liste.  </li> <li>Dans beaucoup d'exercices, on part d'une liste vide <code>[]</code> que l'on remplit peu \u00e0 peu avec des <code>append()</code>.  </li> <li>(HP) Il est possible d'ins\u00e9rer un \u00e9l\u00e9ment \u00e0 la position <code>i</code> avec la m\u00e9thode <code>insert</code> :</li> </ul> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfamille.insert(1, \"Nelson\") # on ins\u00e8re \u00e0 la position 1\nprint(famille)\n\n['Bart', 'Nelson', 'Lisa', 'Maggie']\n</code></pre> <p>Exo</p> <p>Construire une liste contenant tous les nombres inf\u00e9rieurs \u00e0 100 qui sont divisibles par 7.</p> <p>Suppression d'un \u00e9l\u00e9ment d'une liste par la m\u00e9thode remove()</p> \ud83d\udc0d Script Python<pre><code>famille = ['Bart', 'Nelson', 'Lisa', 'Maggie']\nfamille.remove(\"Nelson\")\nprint(famille)\n\n['Bart', 'Lisa', 'Maggie']\n</code></pre> <p>Remarques :</p> <ul> <li>Attention, <code>remove</code> n'enl\u00e8ve que la premi\u00e8re occurrence de l'\u00e9l\u00e9ment d\u00e9sign\u00e9. S'il y en a d'autres apr\u00e8s, elles resteront dans la liste :</li> </ul> \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 5, 1, 9, 4]\nlst.remove(4)\nprint(lst)\n\n[3, 1, 5, 1, 9, 4]\n</code></pre> <ul> <li>Si l'\u00e9l\u00e9ment \u00e0 supprimer n'est pas trouv\u00e9, un message d'erreur est renvoy\u00e9 :</li> </ul> \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 5, 1, 9]\nlst.remove(2)\n</code></pre> \ud83d\udccb Algo<pre><code>Traceback (most recent call last):\nFile \"&lt;input&gt;\", line 2, in &lt;module&gt;\nValueError: list.remove(x): x not in list\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/#exercices","title":"\u2712 Exercices","text":"<p>Exo</p> <p>On consid\u00e8re la liste </p> \ud83d\udc0d Script Python<pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> <p>Construire la liste <code>temp_pos</code> qui ne contient que les \u00e9l\u00e9ments positifs de <code>temp</code>.</p> <p>Exercice 7. BNS - EP</p> <p>Programmer la fonction <code>recherche(tab: list, n: int) -&gt; int</code>, prenant en param\u00e8tre un tableau non vide <code>tab</code> (type <code>list</code>) d'entiers et un entier <code>n</code>, et qui renvoie l'indice de la derni\u00e8re occurrence de l'\u00e9l\u00e9ment cherch\u00e9. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau.</p> <p>Exemples :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; recherche([5, 3],1)\n2\n&gt;&gt;&gt; recherche([2,4],2)\n0\n&gt;&gt;&gt; recherche([2,3,5,2,4],2)\n3\n</code></pre> <p>Exo</p> <p>On consid\u00e8re la liste <code>lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]</code>. Seuls les nombres entre 60 et 90 ont une signification : ce sont des codes ASCII (r\u00e9cup\u00e9rables par la fonction <code>chr</code> ).  Cr\u00e9er une liste <code>sol</code> qui contient les lettres correspondants aux nombres ayant une signification.</p> \ud83d\udc0d Script Python<pre><code>lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Les_tableaux/#cours","title":"Cours","text":"<p>Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe :</p> <p>Diaporama de cours </p> <p>Attention</p> <p>Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/","title":"Th\u00e8me 2 - Types construits","text":"00              Les Listes en Python <p>Programme Premi\u00e8re</p> Contenus Capacit\u00e9s attendues Commentaires Tableau index\u00e9, tableau donn\u00e9 en compr\u00e9hension Lire et modifier les \u00e9l\u00e9ments d\u2019un tableau gr\u00e2ce \u00e0 leurs index. Construire un tableau par compr\u00e9hension. Utiliser des tableaux de tableaux pour repr\u00e9senter des matrices : notation a <code>[i][j]</code>. It\u00e9rer sur les \u00e9l\u00e9ments d\u2019un tableau. Seuls les tableaux dont les \u00e9l\u00e9ments sont du m\u00eame type sont pr\u00e9sent\u00e9s. Aucune connaissance des tranches (slices) n\u2019est exigible. L\u2019aspect dynamique des tableaux de Python n\u2019est pas \u00e9voqu\u00e9. Python identifie listes et tableaux. Il n\u2019est pas fait r\u00e9f\u00e9rence aux tableaux de la biblioth\u00e8que NumPy."},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#notion-de-tableau-indices","title":"Notion de tableau, indices","text":"<p>En informatique (comme ailleurs...), un tableau permet de stocker de fa\u00e7on structur\u00e9e plusieurs valeurs, en g\u00e9n\u00e9ral de m\u00eame type1.</p> <p>Voici comment on se repr\u00e9sente traditionnellement un tableau de 6 entiers, avec des cases (ou cellules):</p> <p> </p> <p>Bien entendu, il faut stocker ce tableau dans un variable et lui donner un nom. Appelons-le <code>t</code>. Ce tableau est ordonn\u00e9, le premier \u00e9l\u00e9ment est 4, le deuxi\u00e8me est 2, et le dernier est 12.</p> <p>On rep\u00e8re chaque \u00e9l\u00e9ment du tableau par sa position, le num\u00e9ro de la case, qu'on appelle indice.</p> <p> </p> <p>G\u00e9n\u00e9ralement, on utilise la notation <code>t[i]</code> pour d\u00e9signer l'\u00e9lement d'indice <code>i</code> du tableau <code>t</code>. Par exemple, dans notre exemple, <code>t[3]</code> contient la valeur 42.</p> <p>Enfin la taille d'un tableau est le nombre d'\u00e9l\u00e9ments qu'il contient. Ici le tableau <code>t</code> a une taille \u00e9gale \u00e0 6.</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#tableau-et-liste-de-python","title":"Tableau et liste de Python","text":"<p>Le type <code>list</code></p> <p>En Python, on impl\u00e9mente le type abstrait de tableau par le type <code>list</code>. On d\u00e9finit un tableau avec des crochets et on s\u00e9pare ses \u00e9l\u00e9ments par des virgules. Par abus de langage on parle de liste plut\u00f4t que de tableau2.</p> <p>Une liste vide se d\u00e9clarera par <code>[]</code>.</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#declaration-dune-liste","title":"D\u00e9claration d'une liste","text":"<p>Exemple  1</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; t = [4, 2, 1, 42, 78, 12]\n&gt;&gt;&gt; type(t)\n&lt;class 'list'&gt;\n&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"] # (1)\n&gt;&gt;&gt; type(famille)\n&lt;class 'list'&gt;\n</code></pre> 1. Nous prendrons souvent l'exemple de la famille Simpsons.</p> <ul> <li>Une liste vide se d\u00e9clarera avec <code>[]</code>. \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; copies_corrigees = []\n</code></pre> Nous verrons plus tard qu'il est fr\u00e9quent dans les exercices de partir d'une liste vide et d'ajouter progressivement des \u00e9l\u00e9ments.</li> </ul>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#acces-aux-elements-dune-liste","title":"Acc\u00e8s aux \u00e9l\u00e9ments d'une liste","text":"<p>Exemple  2</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; t = [4, 2, 1, 42, 78, 12]\n&gt;&gt;&gt; t[3]\n42\n&gt;&gt;&gt; t[-1]\n12\n&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"] # (1)\n&gt;&gt;&gt; famille[0]\n'Bart'\n&gt;&gt;&gt; famille[1]\n'Lisa'\n&gt;&gt;&gt; famille[2]\n'Maggie'\n&gt;&gt;&gt; famille[3]\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n</code></pre> <p>Remarques :</p> <ul> <li> <p>Un indice qui d\u00e9passe la valeur \u00a0<code>longueur de la liste -1</code> provoquera donc une erreur <code>list index out of range</code>. C'est une erreur tr\u00e8s fr\u00e9quente lorsqu'on manipule des listes.</p> </li> <li> <p>Il est par contre possible d'utiliser des indices n\u00e9gatifs. On utilise par exemple tr\u00e8s souvent l'indice -1 pour acc\u00e9der au dernier \u00e9l\u00e9ment de la liste, sans avoir \u00e0 conna\u00eetre la longueur de celle-ci :</p> </li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; famille[-1]\n'Maggie'\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#longueur-dune-liste","title":"Longueur d'une liste","text":"<p>Exemple  3</p> <p>La longueur d'une liste sera donn\u00e9e par la fonction <code>len()</code>, qui renvoie donc un nombre entier positif ou nul. \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; len(famille)\n3\n</code></pre></p> <p>Remarques :</p> <ul> <li>La liste vide a pour longueur 0 : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; len([])\n0\n</code></pre></li> <li>Le dernier \u00e9l\u00e9ment d'une liste <code>maliste</code> (non vide) sera donc toujours l'\u00e9l\u00e9ment d'indice <code>len(maliste)-1</code>. \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; famille[len(famille) - 1]\n'Maggie'\n</code></pre></li> <li>Comme indiqu\u00e9 pr\u00e9c\u00e9demment, ce dernier \u00e9l\u00e9ment est aussi accessible par l'indice -1.</li> </ul> <p>Remarques bis:</p> <ul> <li>on obtient la taille d'une liste avec la fonction <code>len</code>;</li> <li>un indice sup\u00e9rieur \u00e0 <code>len(t) - 1</code> provoque une erreur <code>IndexError: list index out of range</code> (en dehors de la liste);</li> <li>on peut utiliser les indices n\u00e9gatifs: en particulier l'indice -1 permet d'acc\u00e8der facilement au dernier \u00e9lement.</li> </ul>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#parcours-des-elements-dune-liste","title":"Parcours des \u00e9l\u00e9ments d'une liste","text":"<p>Il existe principalement deux m\u00e9thodes pour parcourir une liste : - par ses \u00e9l\u00e9ments  - par les indices.  Mais dans les deux cas on utilise une boucle <code>for</code>.  Ces deux m\u00e9thodes sont \u00e0 ma\u00eetriser imp\u00e9rativement.</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#parcours-par-elements","title":"Parcours \u00abpar \u00e9l\u00e9ments\u00bb","text":"<p>C'est la m\u00e9thode la plus naturelle, celle d\u00e9j\u00e0 vue lors de la pr\u00e9sentation de la boucle <code>for</code>. Nous allons simplement it\u00e9rer sur les \u00e9l\u00e9ments de la liste.</p> <p>Exemple  4</p> <p>Le code : \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n\nfor membre in famille:\n    print(membre)\n</code></pre> renverra : \ud83d\udc0d Script Python<pre><code>Bart\nLisa\nMaggie\n</code></pre></p> <p>Remarque :</p> <ul> <li>Penser \u00e0 donner un nom signifiant \u00e0 la variable qui parcourt la liste. Il aurait par exemple \u00e9t\u00e9 tr\u00e8s maladroit d'\u00e9crire  \ud83d\udc0d Script Python<pre><code>for k in famille:\n    print(k)\n</code></pre> En effet le nom de variable <code>k</code> est habituellement utilis\u00e9 pour les nombres (les indices, les compteurs...).</li> </ul> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Apr\u00e8s un r\u00e9f\u00e9rendum, la liste <code>urne</code> contient uniquement des <code>'oui'</code> ou des <code>'non'</code>. D\u00e9terminer le vainqueur de ce r\u00e9f\u00e9rendum.</p> \ud83d\udc0d Script Python<pre><code>urne = ['oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'oui']\n</code></pre> \ud83d\udc0d Script Python<pre><code>urne = ['oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'oui']\n\nnb_oui = 0\nfor vote in urne:\n    if vote == 'oui':\n        nb_oui += 1\nprint('pourcentage de oui', 100*nb_oui/len(urne), '%')\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#parcours-par-indice","title":"Parcours \u00abpar indice\u00bb","text":"<p>Chaque \u00e9l\u00e9ment \u00e9tant accessible par son indice (de <code>0</code> \u00e0   <code>len(liste) - 1</code> ), il suffit de faire parcourir \u00e0 une variable <code>i</code> l'ensemble des entiers de <code>0</code> \u00e0   <code>len(liste) - 1</code>, par l'instruction <code>range(len(liste))</code> :</p> <p>Exemple  5</p> <p>Le code : \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n\nfor i in range(len(famille)):\n    print(famille[i])\n</code></pre> renverra : \ud83d\udc0d Script Python<pre><code>Bart\nLisa\nMaggie\n</code></pre></p> <p> Bonne habitude \u00e0 prendre : nommer sa variable d'indice <code>i</code>, <code>j</code>, <code>k</code> ou <code>indice</code> mais pas autre chose !  </p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#avantages-et-inconvenients-de-chaque-methode","title":"Avantages et inconv\u00e9nients de chaque m\u00e9thode","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#parcours-par-element","title":"Parcours par \u00e9l\u00e9ment","text":"\ud83d\udc0d Script Python<pre><code>    for membre in famille:\n        print(membre)\n</code></pre> <p>Les avantages </p> <ul> <li>la simplicit\u00e9 : un code plus facile \u00e0 \u00e9crire, avec un nom de variable explicite.</li> <li>la s\u00e9curit\u00e9  : pas de risque d'<code>index out of range</code> !</li> </ul> <p>Les inconv\u00e9nients </p> <ul> <li>m\u00e9thode rudimentaire : lorsqu'on est \u00abpositionn\u00e9\u00bb sur un \u00e9l\u00e9ment, il n'est pas possible d'acc\u00e9der au pr\u00e9c\u00e9dent ou au suivant. (et c'est parfois utile).</li> <li>on n'a pas acc\u00e8s \u00e0 l'indice correspondant \u00e0 la valeur.</li> <li>on ne peut pas modifier l'\u00e9l\u00e9ment sur lequel on est positionn\u00e9 :</li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; lst = [1, 2, 3]\n&gt;&gt;&gt; for nb in lst:\n        nb = nb * 2 # (1)\n\n&gt;&gt;&gt; lst \n[1, 2, 3] # (2)\n</code></pre> <ol> <li>On veut multiplier par 2 chaque \u00e9l\u00e9ment de la liste</li> <li>La liste <code>lst</code> n'a pas chang\u00e9...</li> </ol>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#_1","title":"Les Listes en Python","text":"<p>Parcours par indice </p> \ud83d\udc0d Script Python<pre><code>    for i in range(len(famille)):\n        print(famille[i])\n</code></pre> <p>Les avantages </p> <ul> <li>le contr\u00f4le : en parcourant par indice, on peut s'arr\u00eater o\u00f9 on veut, on peut acc\u00e9der au suivant/pr\u00e9c\u00e9dent...</li> <li>pour les tableaux \u00e0 deux dimensions, on retrouve la d\u00e9signation classique d'un \u00e9l\u00e9ment par num\u00e9ro de ligne / num\u00e9ro de colonne.</li> </ul> <p>Les inconv\u00e9nients </p> <ul> <li>la complexit\u00e9 : il faut conna\u00eetre le nombre d'\u00e9l\u00e9ments de la liste (ou le r\u00e9cup\u00e9rer par la fonction <code>len()</code> )</li> <li>le risque d'erreur : encore et toujours le <code>index out of range</code>...</li> </ul> <p>Exercice  2</p> \u00c9nonc\u00e9Correction  <p>On donne la liste : \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 1, 5, 9]\n</code></pre> En utilisant un parcours par indice :</p> <ol> <li>Afficher les \u00e9l\u00e9ments de cette liste.</li> <li>Afficher les \u00e9l\u00e9ments de cette liste dans l'ordre inverse (en commen\u00e7ant par 9)</li> </ol> \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 1, 5, 9]\n\nfor i in range(len(lst)-1, -1, -1):\n    print(lst[i])\n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Trouvez le nombre qui est exactement \u00e0 la m\u00eame place dans la liste <code>list1</code> et dans la liste <code>list2</code>, sachant que :</p> <ul> <li>les deux listes ont la m\u00eame taille</li> <li>vous n'avez droit qu'\u00e0 une seule boucle <code>for</code>. </li> </ul> \ud83d\udc0d Script Python<pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n</code></pre> \ud83d\udc0d Script Python<pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n\nfor i in range(len(list1)):\n    if list1[i] == list2[i]:\n        print(list1[i])\n</code></pre> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>Dans la liste </p> <p>\ud83d\udc0d Script Python<pre><code>lst = [2428970, 1518306, 4971405, 1690994, 7918102, 4030834, 8830131, 7514856, 7903128, 6307569, 6624056, 5260490, 6447835, 4598783, 9108626, 5045240, 4128269, 4460134, 2497873, 5076659, 8104003, 7604887, 7451976, 4136924, 5691945, 8726293, 7855592, 3562473, 8849129, 6488474, 5303587, 2606124, 5484044, 4559758, 7592232, 2211406, 9974334, 7988936, 7582946, 7668748, 1799997, 3837917, 3196209, 7064342, 2543765, 1182013, 7253381, 1153735, 1037391, 4375946, 4445821, 5965587, 6001887, 4162629, 5235783, 8716582, 4901175, 5445422, 1120005, 8332321, 7075046, 2194175, 5557300, 2887907, 5103214, 2520744, 5104399, 2065665, 3035703, 7890213, 1758301, 3407982, 1355453, 4896338, 7979392, 9671602, 9690721, 7423779, 7423780, 3080825, 6785783, 3836837, 7310931, 1857470, 3492507, 2823231, 1492310, 1911148, 9620515, 5564910, 7009452, 7464745, 9608747, 7267383, 6939140, 6556578, 3592267, 8135497, 4881660, 5346884, 6859150]\n</code></pre> se cachent deux nombres cons\u00e9cutifs. Pouvez-vous les trouver ?</p> \ud83d\udc0d Script Python<pre><code>lst = [2428970, 1518306, 4971405, 1690994, 7918102, 4030834, 8830131, 7514856, 7903128, 6307569, 6624056, 5260490, 6447835, 4598783, 9108626, 5045240, 4128269, 4460134, 2497873, 5076659, 8104003, 7604887, 7451976, 4136924, 5691945, 8726293, 7855592, 3562473, 8849129, 6488474, 5303587, 2606124, 5484044, 4559758, 7592232, 2211406, 9974334, 7988936, 7582946, 7668748, 1799997, 3837917, 3196209, 7064342, 2543765, 1182013, 7253381, 1153735, 1037391, 4375946, 4445821, 5965587, 6001887, 4162629, 5235783, 8716582, 4901175, 5445422, 1120005, 8332321, 7075046, 2194175, 5557300, 2887907, 5103214, 2520744, 5104399, 2065665, 3035703, 7890213, 1758301, 3407982, 1355453, 4896338, 7979392, 9671602, 9690721, 7423779, 7423780, 3080825, 6785783, 3836837, 7310931, 1857470, 3492507, 2823231, 1492310, 1911148, 9620515, 5564910, 7009452, 7464745, 9608747, 7267383, 6939140, 6556578, 3592267, 8135497, 4881660, 5346884, 6859150]\n\nfor i in range(len(lst)-1): # Il faut s'arr\u00eater \u00e0 l'avant-dernier \u00e9l\u00e9ment de la liste\n    if lst[i] + 1 == lst[i+1]:\n        print(lst[i], lst[i+1])\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#creation-de-listes","title":"Cr\u00e9ation de listes","text":"<p>Jusqu'\u00e0 pr\u00e9sent on a cr\u00e9\u00e9 des listes en extension, c'est-\u00e0-dire qu'on a \u00e9crit tous les \u00e9l\u00e9ments un par un entre crochets. Voici deux autres fa\u00e7ons de faire, souvent pratiques et parfois plus rapides lorsque la taille de la liste est grande.</p> <p>Avec une boucle <code>for</code> et la m\u00e9thode <code>append</code></p> <p>On cr\u00e9e une liste vide, puis on lui ajoute \u00e9l\u00e9ment par \u00e9l\u00e9ment.</p> <p>Cr\u00e9ation d'une liste contenant les entiers multiples de 3 ou de 5 inf\u00e9rieurs \u00e0 100:</p> \ud83d\udc0d Script Python<pre><code>multiples = []\nfor k in range(101):\n    if k%3 == 0 or k%5 == 0:\n        multiples.append(k)\n</code></pre> <p>Construction d'une liste en compr\u00e9hension </p> <p>C'est une grande caract\u00e9ristique du langage Python (m\u00eame si ce n'est pas une exclustivit\u00e9) : la m\u00e9thode de liste en compr\u00e9hension propose une mani\u00e8re \u00e9l\u00e9gante, rapide et naturelle pour cr\u00e9er des listes.</p> <p>\u00aben compr\u00e9hension\u00bb, pourquoi ? Cette expression vient des math\u00e9matiques. On dit qu'on d\u00e9finit un sous-ensemble par compr\u00e9hension lorsqu'on part d'un ensemble plus grand dont on ne garde que les \u00e9l\u00e9ments v\u00e9rifiant une certaine propri\u00e9t\u00e9.</p> <p>Exemple  6 </p> <p>Imaginons que nous poss\u00e9dons une liste <code>data</code> de temp\u00e9ratures, dont nous ne voulons garder que celles strictement sup\u00e9rieures \u00e0 20.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; data = [1, 7, 9, 15, 5, 20, 10, 18]\n&gt;&gt;&gt; good = [p for p in tab1 if p &gt; 10]\n&gt;&gt;&gt; good\n[15, 20, 18]\n</code></pre> <p>Explications :</p> <p></p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#le-filtre-eventuel","title":"le filtre \u00e9ventuel","text":"<p>C'est lui qui donne tout son sens \u00e0 cette m\u00e9thode : il permet de ne garder que certaines valeurs.  Il est pourtant \u00e9ventuel : que se passe-t-il s'il n'y a pas de filtre ?</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; data = [17, 22, 15, 28, 16, 13, 21, 23]\n&gt;&gt;&gt; good = [t for t in data]\n&gt;&gt;&gt; good\n[17, 22, 15, 28, 16, 13, 21, 23]\n</code></pre> On se retrouve \u00e9videmment avec une nouvelle liste qui contient exactement les \u00e9l\u00e9ments de la liste de d\u00e9part, ce qui n'est pas tr\u00e8s int\u00e9ressant. Pourtant les listes en compr\u00e9hension sans filtre sont tr\u00e8s fr\u00e9quentes, nous le verrons plus loin.</p> <p>\u00c9lements identiques</p> <p>Il est souvent pratique d'initialiser une liste de taille donn\u00e9e, souvent en la remplissant de la m\u00eame valeur, souvent 0. Par exemple, pour produire une liste contenant 26 z\u00e9ros:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; lst = 26 * [0]\n&gt;&gt;&gt; lst\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n</code></pre> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Construire une liste contenant tous les nombres inf\u00e9rieurs \u00e0 100 qui sont divisibles par 7.</p> \ud83d\udc0d Script Python<pre><code>lst = []\nfor n in range(1, 101):\n    if n % 7 == 0:\n        lst.append(n)\n</code></pre> <p>Exercice  6</p> \u00c9nonc\u00e9Solution <p>On consid\u00e8re la liste </p> \ud83d\udc0d Script Python<pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> <p>Construire la liste <code>temp_pos</code> qui ne contient que les \u00e9l\u00e9ments positifs de <code>temp</code>. </p> \ud83d\udc0d Script Python<pre><code>temp_pos = []\nfor t in temp:\n    if t &gt;= 0:\n        temp_pos.append(t)\n</code></pre> <p>``` \" ) }}</p> <p>Exercice  7</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re la liste <code>lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]</code>. Seuls les nombres entre 60 et 90 ont une signification : ce sont des codes ASCII (r\u00e9cup\u00e9rables par la fonction <code>chr</code> ). Cr\u00e9er (en compr\u00e9hension) une liste <code>sol</code> qui contient les lettres correspondants aux nombres ayant une signification.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]\n&gt;&gt;&gt; decode = [chr(k) for k in lst if k &gt; 60  and k &lt; 90]\n&gt;&gt;&gt; decode\n['B', 'R', 'A', 'V', 'O']\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#modification-de-liste","title":"Modification de liste","text":"<p>En Python, les objets de type <code>list</code> sont modifiables (on emploie le mot mutable). Et c'est souvent une bonne chose, car des listes peuvent \u00e9voluer apr\u00e8s leur cr\u00e9ation. </p> <p>Modification d'un \u00e9l\u00e9ment existant</p> <p>On modifie un \u00e9l\u00e9ment du tableau par simple affectation, en \u00e9crasant sa valeur avec la nouvelle.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille[0] = \"Bartholomew\" # oui, c'est son vrai nom\n&gt;&gt;&gt; famille\n['Bartholomew', 'Lisa', 'Maggie']   \n</code></pre> <p>Ajout d'un \u00e9l\u00e9ment en fin de liste</p> <p>La m\u00e9thode <code>append</code> permet d'ajouter un \u00e9l\u00e9ment en fin de liste (et donc d'augmenter la taille de la liste).</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille.append(\"Homer\")\n&gt;&gt;&gt; famille\n['Bart', 'Lisa', 'Maggie', 'Homer']  \n</code></pre> <p>Suppression d'un \u00e9l\u00e9ment</p> <p>La m\u00e9tode <code>remove</code> permet de supprimer la premi\u00e8re occurrence de l'\u00e9l\u00e9ment (et seulement la premi\u00e8re). \u00c0 condition bien entendu que l'\u00e9l\u00e9ment soit dans la liste...</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; matieres = [\"nsi\", \"maths\", \"anglais\", \"fran\u00e7ais\", \"maths\"]\n&gt;&gt;&gt; matieres.remove(\"maths\")\n&gt;&gt;&gt; matieres\n[\"nsi\", \"anglais\", \"fran\u00e7ais\", \"maths\"]\n&gt;&gt;&gt; matieres.remove(\"espagnol\")\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nValueError: list.remove(x): x not in list\n</code></pre> <p>Remarques :</p> <ul> <li>Attention, <code>remove</code> n'enl\u00e8ve que la premi\u00e8re occurrence de l'\u00e9l\u00e9ment d\u00e9sign\u00e9. S'il y en a d'autres apr\u00e8s, elles resteront dans la liste : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; lst = [3, 1, 4, 5, 1, 9, 4]\n&gt;&gt;&gt; lst.remove(4)\n&gt;&gt;&gt; lst\n[3, 1, 5, 1, 9, 4]\n</code></pre></li> <li>Si l'\u00e9l\u00e9ment \u00e0 supprimer n'est pas trouv\u00e9, un message d'erreur est renvoy\u00e9 : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; lst = [3, 1, 4, 5, 1, 9]\n&gt;&gt;&gt; lst.remove(2)\nTraceback (most recent call last):\n  File \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nValueError: list.remove(x): x not in list\n</code></pre></li> </ul> <p>Exercice  8</p> \u00c9nonc\u00e9Solution <p>Dans la liste suivante:</p> <ul> <li>remplacer <code>\"Loki\"</code> par <code>\"Thor\"</code></li> <li>ajouter <code>\"Dr. Strange\"</code></li> <li>supprimer l'intrus.</li> </ul> \ud83d\udc0d Script Python<pre><code>avengers = [\"Black Widow\", \"Captain America\", \"Loki\", \"Iron Man\", \"Hulk\", \"Batman\", \"Hawkeye\"]\n</code></pre> \ud83d\udc0d Script Python<pre><code>avengers[2] = 'Thor'\navengers.append('Dr. Strange')\navengers.remove('Batman')\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#un-phenomene-inquietant-la-copie-de-liste-hors-programme-enfin-presque","title":"Un ph\u00e9nom\u00e8ne inqui\u00e9tant : la copie de liste (Hors Programme enfin presque ....)","text":"<p>une copie un peu trop parfaite</p> <p>Observez le code ci-dessous, r\u00e9alis\u00e9 sans trucage. \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; listA = [1, 2, 3]\n&gt;&gt;&gt; listB = listA\n&gt;&gt;&gt; listA.append(7)\n&gt;&gt;&gt; listB\n[1, 2, 3, 7]\n&gt;&gt;&gt; listB.append(8)\n&gt;&gt;&gt; listA\n[1, 2, 3, 7, 8]\n</code></pre></p> <p>Tout se passe comme si les listes  <code>listA</code> et<code>listB</code> \u00e9taient devenus des clones \u00absynchronis\u00e9s\u00bb depuis l'affectation <code>listB = listA</code>.</p> <p>Analyse gr\u00e2ce \u00e0 PythonTutor</p> <p> </p> <p>L'illustration de PythonTutor nous donne la cl\u00e9 de l'\u00e9nigme : </p> <p><code>listA</code> et<code>listB</code> sont en fait un seul et m\u00eame objet.</p> <p>Comment en avoir le c\u0153ur net ? En observant leur adresse-m\u00e9moire, disponible gr\u00e2ce \u00e0 la fonction <code>id</code> :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; id(listA)\n140485841327616\n&gt;&gt;&gt; id(listB)\n140485841327616\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2_1_Listes/#mais-alors-comment-copier-le-contenu-dune-liste-vers-une-autre-sans-creer-un-clone","title":"Mais alors, comment copier le contenu d'une liste vers une autre sans cr\u00e9er un clone ?","text":"<p>Exemple fondateur n\u00b012 </p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; listA = [3, 4, 5]\n&gt;&gt;&gt; listB = list(listA)\n</code></pre> D'autres possibilit\u00e9s existent, comme <code>listA.copy()</code>, ou encore <code>listA[::]</code>...  </p> <p>Exercice  9</p> \u00c9nonc\u00e9Correction <p>Effectuer les tests n\u00e9cessaires pour prouver que l'exemple pr\u00e9c\u00e9dent a bien produit deux objets diff\u00e9rents.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; listA = [3, 4, 5]\n&gt;&gt;&gt; listB = list(listA)\n&gt;&gt;&gt; listA.append(9)\n&gt;&gt;&gt; listB\n[3, 4, 5]\n&gt;&gt;&gt; id(listA)\n140157471522368\n&gt;&gt;&gt; id(listB)\n140157465797184\n</code></pre> <ol> <li> <p>m\u00eame si Python l'autorise, il n'y a pas beaucoup de situations o\u00f9 on va cr\u00e9er un tableau avec des valeurs de types diff\u00e9rents.\u00a0\u21a9</p> </li> <li> <p>en fait la liste est un autre type abstrait de donn\u00e9es en informatique. Python identifie un peu les deux. C'est un peu plus compliqu\u00e9 en r\u00e9alit\u00e9, mais c'est une autre histoire...\u00a0\u21a9</p> </li> </ol>"},{"location":"T02_TypesConstruits/T2.1_Listes/T7_1_Les_tableaux_final/","title":"T7 1 Les tableaux final","text":"Th\u00e8me 2 - Types Construits                           06              Les types construits : Les Tableaux   I. Notion de tableau, indices  <p>En informatique (comme ailleurs...), un tableau permet de stocker de fa\u00e7on structur\u00e9e plusieurs valeurs, en g\u00e9n\u00e9ral de m\u00eame type.</p> <p>Remarque : m\u00eame si Python l'autorise, il n'y a pas beaucoup de situations o\u00f9 on va cr\u00e9er un tableau avec des valeurs de types diff\u00e9rents.</p> <p>Voici comment on se repr\u00e9sente traditionnellement un tableau de 6 entiers, avec des cases (ou cellules):</p> <p></p> <p>Bien entendu, il faut stocker ce tableau dans un variable et lui donner un nom. Appelons-le <code>t</code>. Ce tableau est ordonn\u00e9, le premier \u00e9l\u00e9ment est 4, le deuxi\u00e8me est 2, et le dernier est 12.</p> <p>On rep\u00e8re chaque \u00e9l\u00e9ment du tableau par sa position, le num\u00e9ro de la case, qu'on appelle indice.</p> <p></p> <p>G\u00e9n\u00e9ralement, on utilise la notation <code>t[i]</code> pour d\u00e9signer l'\u00e9lement d'indice <code>i</code> du tableau <code>t</code>. Par exemple, dans notre exemple, <code>t[3]</code> contient la valeur 42.</p> <p>Enfin la taille ou longueur d'un tableau est le nombre d'\u00e9l\u00e9ments qu'il contient. Ici le tableau <code>t</code> a une taille \u00e9gale \u00e0 6.</p> <p></p>   II. Les tableaux en Python <p>ATTENTION : Dans la suite nous allons employer le terme \u00abtableau\u00bb. Pour parler de ces \u00abtableaux\u00bb les concepteurs de Python ont choisi d'utiliser le terme de \u00ablist\u00bb (\u00abliste\u00bb en fran\u00e7ais). Pour \u00e9viter toute confusion, notamment par rapport \u00e0 des notions qui seront abord\u00e9es en terminale, le choix a \u00e9t\u00e9 fait d'employer \u00abtableau\u00bb \u00e0 la place de \u00abliste\u00bb (dans la documentation vous rencontrerez le terme \u00ablist\u00bb, cela ne devra pas vous pertuber)</p> <p>Les tableaux sont des s\u00e9quences, ils sont modifiables (on parle d'objets \u00abmutables\u00bb).</p> <p>En Python, on impl\u00e9mente le type abstrait de tableau par le type <code>list</code>. On d\u00e9finit un tableau avec des crochets et on s\u00e9pare ses \u00e9l\u00e9ments par des virgules. Par abus de langage on parle de liste plut\u00f4t que de tableau</p> <p></p>   II.1 \u2712 D\u00e9claration d'une liste ou d'un tableau <p>Exemple :</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"] \nprint(famille)\n</code></pre> \ud83d\udccb Algo<pre><code>['Bart', 'Lisa', 'Maggie']\n</code></pre> <p>Remarques :</p> <ul> <li> <p>M\u00eame si cela n'a ici un grand int\u00e9r\u00eat, les \u00e9l\u00e9ments d'une liste peuvent donc \u00eatre de types diff\u00e9rents : ici, tous les \u00e9l\u00e9ments de ma liste sont des cha\u00eenes de caract\u00e8res (<code>str</code>), mais la liste <code>[\"Bart\", 5, \"Lisa\", \"Maggie\"]</code> est aussi une liste valide.</p> </li> <li> <p>Une liste vide se d\u00e9clarera avec <code>[]</code>.</p> </li> </ul> \ud83d\udc0d Script Python<pre><code>copies_corrigees = []\n</code></pre> <p>Nous verrons plus tard qu'il est fr\u00e9quent dans les exercices de partir d'une liste vide et d'ajouter progressivement des \u00e9l\u00e9ments.</p> <p>Nous avons vus en d\u00e9but d'ann\u00e9e, les 4 types de bases : int, float, str et bool</p> <p>Il existe d'autres types de variables. Nous allons en voir 2 aujourd'hui :</p> <ul> <li>les listes</li> <li>les tuples </li> </ul> <p>D\u00e9finition : listes en python</p>    Une liste est un ensemble de valeurs, regroup\u00e9es en un seul objet.  ### Exemples :  \ud83d\udc0d Script Python<pre><code>lst1 = [2, 1, 7, 0] # lst est une liste de nombres entiers\nlst2 = [2.1, 1.1, 7.5, 0.36] # lst est une liste de float\nlst3 = [\"albert\", \"paul\", \"jacques\"] # lst est une liste de str\n\n# mais une liste peut contenir des \u00e9l\u00e9ments de types diff\u00e9rents :\nlst4 = [\"1G4\",\"NSI\", 22, 13.7, True] # cette liste contient des \u00e9l\u00e9ments de diff\u00e9rents types. \n</code></pre> <p></p>   II.2 \u2712 Acc\u00e9s aux \u00e9l\u00e8ments d'une liste <p>On acc\u00e8de \u00e0 un \u00e9l\u00e9ment d'une liste en mettant entre crochets l'indice de l'\u00e9l\u00e9ment (qui commence \u00e0 z\u00e9ro).</p> \ud83d\udc0d Script Python<pre><code>famille[0]\n</code></pre> \ud83d\udccb Algo<pre><code>'Bart'\n</code></pre> \ud83d\udc0d Script Python<pre><code>famille[2]\n</code></pre> \ud83d\udccb Algo<pre><code>'Maggie'\n</code></pre> \ud83d\udc0d Script Python<pre><code>famille[3]\n</code></pre> \ud83d\udccb Algo<pre><code>Traceback (most recent call last):\n  File \"&lt;input&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n</code></pre> <p>Remarques :</p> <ul> <li> <p>Un indice qui d\u00e9passe la valeur \u00a0<code>longueur de la liste -1</code> provoquera donc une erreur <code>list index out of range</code>. C'est une erreur tr\u00e8s fr\u00e9quente lorsqu'on manipule des listes.</p> </li> <li> <p>Il est par contre possible d'utiliser des indices n\u00e9gatifs. On utilise par exemple tr\u00e8s souvent l'indice -1 pour acc\u00e9der au dernier \u00e9l\u00e9ment de la liste, sans avoir \u00e0 conna\u00eetre la longueur de celle-ci :</p> </li> </ul> \ud83d\udc0d Script Python<pre><code>famille[-1]\n</code></pre> \ud83d\udccb Algo<pre><code>'Maggie'\n</code></pre> <p>2. Comment trouver un ami dans la liste ? - utiliser les indices</p> <p></p> <p>Dans une liste, les \u00e9l\u00e9ments sont indic\u00e9s. (c'est \u00e0 dire, num\u00e9rot\u00e9s)</p> <p></p> <p>D\u00e9finitions : Indices des \u00e9l\u00e9ments d'une liste</p>   Les \u00e9l\u00e9ments d'une listes sont num\u00e9rot\u00e9s, on dit **indic\u00e9s**.  + Le premier \u00e9l\u00e9ment a li'ndice 0 + Le second \u00e9l\u00e9ment a li'ndice 1 + Le troisi\u00e8me \u00e9l\u00e9ment a li'ndice 2  etc...  #### remarque tr\u00e8s importante :  **L'indice du dernier \u00e9l\u00e9ment** est \u00e9gal \u00e0 **len(lst) - 1**  Par exemple si la liste \u00e0 4 \u00e9l\u00e9ment, ils ont les indices $0$, $1$, $2$ et $3$, la longueur de la liste est $4$  ### notations :  Souvent, quand nous travaillerons avec des listes, nous les repr\u00e9senterons avec des cases pour les \u00e9l\u00e9ments, et les indices report\u00e9s (au dessus ou en dessous) :  ![tableau_indice.png](attachment:tableau_indice.png)       Les indices permettent d'acc\u00e9der \u00e0 la valeur des \u00e9l\u00e9ments :   \ud83d\udc0d Script Python<pre><code>lst[0] est le premier \u00e9l\u00e9ment de la liste\nlst[1] est le second \u00e9l\u00e9ment de la liste\nlst[2] est le troisi\u00e8me \u00e9l\u00e9ment de la liste\nect\n\nLe dernier \u00e9l\u00e9ment d une liste de longueur 6 \u00e0 l indice 5\n</code></pre> <p></p>   II.3 \u2712 Longueur d'une liste <p>La longueur d'une liste sera donn\u00e9e par la fonction <code>len()</code>, qui renvoie donc un nombre entier positif ou nul.</p> \ud83d\udc0d Script Python<pre><code>len(famille)\n</code></pre> \ud83d\udccb Algo<pre><code>3\n</code></pre> <ul> <li>Le dernier \u00e9l\u00e9ment d'une liste <code>maliste</code> (non vide) sera donc toujours l'\u00e9l\u00e9ment d'indice <code>len(maliste)-1</code>.</li> </ul> \ud83d\udc0d Script Python<pre><code>famille[len(famille) - 1]\n</code></pre> \ud83d\udccb Algo<pre><code>'Maggie'\n</code></pre> \ud83d\udc0d Script Python<pre><code>famille[len(famille)]\n</code></pre> \ud83d\udccb Algo<pre><code>Traceback (most recent call last):\n  File \"&lt;input&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n</code></pre> <p></p>   II.4 \u2712 Parcours des \u00e9l\u00e9ments d'une liste <p>Il existe principalement deux m\u00e9thodes pour parcourir une liste: par ses \u00e9l\u00e9ments ou par les indices. Mais dans les deux cas on utilise une boucle <code>for</code>.</p> <p>M\u00e9thode 1 : Parcours \u00abpar \u00e9l\u00e9ments\u00bb   </p> <p>C'est la m\u00e9thode la plus naturelle, celle d\u00e9j\u00e0 vue lors de la pr\u00e9sentation de la boucle <code>for</code>. Nous allons simplement it\u00e9rer sur les \u00e9l\u00e9ments de la liste. On l'a d\u00e9j\u00e0 rencontr\u00e9 sur la boucle <code>for</code>:</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n\nfor membre in famille:\n    print(membre)\n</code></pre> \ud83d\udccb Algo<pre><code>Bart\nLisa\nMaggie\n</code></pre> <p>Remarque :</p> <ul> <li>Penser \u00e0 donner un nom signifiant \u00e0 la variable qui parcourt la liste. Il aurait par exemple \u00e9t\u00e9 tr\u00e8s maladroit d'\u00e9crire </li> </ul> \ud83d\udc0d Script Python<pre><code>for k in famille:\n    print(k)\n</code></pre> \ud83d\udccb Algo<pre><code>Bart\nLisa\nMaggie\n</code></pre> <p>En effet le nom de variable <code>k</code> est habituellement utilis\u00e9 pour les nombres (les indices, les compteurs...).</p> <p>\ud83d\udcbb Exercice 1.</p> <p>Apr\u00e8s un r\u00e9f\u00e9rendum, la liste <code>urne</code> contient uniquement des <code>'oui'</code> ou des <code>'non'</code>. D\u00e9terminer le pourcentage de <code>oui</code> de ce r\u00e9f\u00e9rendum.</p> \ud83d\udc0d Script Python<pre><code>urne = ['oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'oui']\n</code></pre> <p>Avantages et inconv\u00e9nients du Parcours par \u00e9l\u00e9ment </p> \ud83d\udc0d Script Python<pre><code>    for membre in famille:\n        print(membre)\n</code></pre> <p>Les avantages :</p> <ul> <li>la simplicit\u00e9 : un code plus facile \u00e0 \u00e9crire, avec un nom de variable explicite.</li> <li>la s\u00e9curit\u00e9  : pas de risque d'<code>index out of range</code> !</li> </ul> <p>Les inconv\u00e9nients :</p> <ul> <li>m\u00e9thode rudimentaire : lorsqu'on est \u00abpositionn\u00e9\u00bb sur un \u00e9l\u00e9ment, il n'est pas possible d'acc\u00e9der au pr\u00e9c\u00e9dent ou au suivant. (et c'est parfois utile).</li> <li>on n'acc\u00e9de pas \u00e0 la position (indice) de l'\u00e9l\u00e9ment.</li> <li>on ne peut pas modifier l'\u00e9l\u00e9ment sur lequel on est positionn\u00e9 :</li> </ul> \ud83d\udc0d Script Python<pre><code>lst = [1, 2, 3]\nfor nb in lst:\n    nb = nb * 2 # (1)\n\nlst \n</code></pre> \ud83d\udccb Algo<pre><code>[1, 2, 3]\n</code></pre> <ol> <li>On veut multiplier par 2 chaque \u00e9l\u00e9ment de la liste</li> <li>La liste <code>lst</code> n'a pas chang\u00e9...</li> </ol> <p>M\u00e9thode 2 :  Parcours \u00abpar indice\u00bb </p> <p>Chaque \u00e9l\u00e9ment \u00e9tant accessible par son indice (de <code>0</code> \u00e0   <code>len(liste) - 1</code> ), il suffit de faire parcourir \u00e0 une variable <code>i</code> l'ensemble des entiers de <code>0</code> \u00e0   <code>len(liste) - 1</code>, par l'instruction <code>range(len(liste))</code> :</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n\nfor i in range(len(famille)):\n    print(famille[i])\n</code></pre> \ud83d\udccb Algo<pre><code>Bart\nLisa\nMaggie\n</code></pre> <p>Bonne habitude \u00e0 prendre : nommer sa variable d'indice <code>i</code>, <code>j</code>, <code>k</code> ou <code>indice</code> mais pas autre chose !  </p> <p>Avantages et inconv\u00e9nients du Parcours par indice </p> \ud83d\udc0d Script Python<pre><code>    for i in range(len(famille)):\n        print(famille[i])\n</code></pre> <p>Les avantages  :</p> <ul> <li>le contr\u00f4le : en parcourant par indice, on peut s'arr\u00eater o\u00f9 on veut, on peut acc\u00e9der au suivant/pr\u00e9c\u00e9dent...</li> <li>pour les tableaux \u00e0 deux dimensions, on retrouve la d\u00e9signation classique d'un \u00e9l\u00e9ment par num\u00e9ro de ligne / num\u00e9ro de colonne.</li> </ul> <p>Les inconv\u00e9nients :</p> <ul> <li>la complexit\u00e9 : il faut conna\u00eetre le nombre d'\u00e9l\u00e9ments de la liste (ou le r\u00e9cup\u00e9rer par la fonction <code>len()</code> )</li> <li>le risque d'erreur : encore et toujours le <code>index out of range</code>...</li> </ul> <p> FICHE : les listes </p> d\u00e9finition   Une liste est un ensemble de valeurs, regroup\u00e9es en un seul objet.  #### exemples :  \ud83d\udc0d Script Python<pre><code>lst1 = [2, 1, 7, 0] # lst est une liste de nombres entiers\nlst2 = [2.1, 1.1, 7.5, 0.36] # lst est une liste de float\nlst3 = [\"albert\", \"paul\", \"jacques\"] # lst est une liste de str\n\n# mais une liste peut contenir des \u00e9l\u00e9ments de types diff\u00e9rents :\nlst4 = [\"1G4\",\"NSI\", 22, 13.7, True] # cette liste contient des \u00e9l\u00e9ments de diff\u00e9rents types. \n</code></pre>  #### type : une liste \u00e0 le type list indices   Les \u00e9l\u00e9ments d'une listes sont num\u00e9rot\u00e9s, on dit **indic\u00e9s**.  + Le premier \u00e9l\u00e9ment a l'indice 0 + Le second \u00e9l\u00e9ment a li'ndice 1 + Le troisi\u00e8me \u00e9l\u00e9ment a li'ndice 2  etc...  #### remarque tr\u00e8s importante :  **L'indice du dernier \u00e9l\u00e9ment** est \u00e9gal \u00e0 **len(lst) - 1**   modifier l'\u00e9l\u00e9ment d'indice **i**   Il suffit d'affecter une valeur \u00e0 l'\u00e9lement d'indice **i** \ud83d\udc0d Script Python<pre><code>lst = [\"a\", \"b\", \"c\"]\nlst[1] = \"e\" # maintenant lst vaut : [\"a\", \"e\", \"c\"]\n</code></pre> longueur   La fonction **len()** renvoie la longueur d'une liste :  \ud83d\udc0d Script Python<pre><code>lst = [1, 2, 3]\nnombre_elements = len(lst) # nombre d'\u00e9l\u00e9ment prendra la valeur 3\n</code></pre> Parcours par indice  #### ce code est \u00e0 connaitre SANS AUCUNE HESITATION  \ud83d\udc0d Script Python<pre><code>    for i in range(len(lst)) :\n        print( lst[i] )\n</code></pre>  #### on peut aussi modifier tout les \u00e9l\u00e9ments gr\u00e2ce \u00e0 un parcours :  \ud83d\udc0d Script Python<pre><code>    lst = [1, 2, 3]\n    for i in range(len(lst)) :\n        lst[i] = 2 * lst[i] # maintenant lst vaut : [2, 4, 6]\n</code></pre> Parcours par valeur  #### ce code est \u00e0 connaitre SANS AUCUNE HESITATION  \ud83d\udc0d Script Python<pre><code>    for elt in lst :\n        print(elt)\n</code></pre>  #### exemple :  \ud83d\udc0d Script Python<pre><code>    lst = [1, 2, 3]\n    for elt in lst :\n        print(3*elt)\n</code></pre> \ud83d\udc0d Script Python<pre><code>    3\n    6\n    9\n</code></pre> <p></p> <p>\ud83d\udcbb Exercice 2.</p> <p>On donne la liste : \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 1, 5, 9]\n</code></pre></p> <p>En utilisant un parcours par indice :</p> <ol> <li>Afficher les \u00e9l\u00e9ments de cette liste.  </li> <li>Afficher les \u00e9l\u00e9ments de cette liste dans l'ordre inverse (en commen\u00e7ant par 9)</li> </ol> \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 1, 5, 9]\n</code></pre> <p>\ud83d\udcbb Exercice 3.</p> <p>Trouvez le nombre qui est exactement \u00e0 la m\u00eame place dans la liste <code>list1</code> et dans la liste <code>list2</code>, sachant que :</p> <ul> <li>les deux listes ont la m\u00eame taille  </li> <li>vous n'avez droit qu'\u00e0 une seule boucle <code>for</code>. </li> </ul> \ud83d\udc0d Script Python<pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\n\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n</code></pre> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p>\ud83d\udcbb Exercice 4.</p> <p>Dans la liste </p> \ud83d\udc0d Script Python<pre><code>lst = [2428970, 1518306, 4971405, 1690994, 7918102, 4030834, 8830131, 7514856, 7903128, 6307569, 6624056, 5260490, 6447835, 4598783, 9108626, 5045240, 4128269, 4460134, 2497873, 5076659, 8104003, 7604887, 7451976, 4136924, 5691945, 8726293, 7855592, 3562473, 8849129, 6488474, 5303587, 2606124, 5484044, 4559758, 7592232, 2211406, 9974334, 7988936, 7582946, 7668748, 1799997, 3837917, 3196209, 7064342, 2543765, 1182013, 7253381, 1153735, 1037391, 4375946, 4445821, 5965587, 6001887, 4162629, 5235783, 8716582, 4901175, 5445422, 1120005, 8332321, 7075046, 2194175, 5557300, 2887907, 5103214, 2520744, 5104399, 2065665, 3035703, 7890213, 1758301, 3407982, 1355453, 4896338, 7979392, 9671602, 9690721, 7423779, 7423780, 3080825, 6785783, 3836837, 7310931, 1857470, 3492507, 2823231, 1492310, 1911148, 9620515, 5564910, 7009452, 7464745, 9608747, 7267383, 6939140, 6556578, 3592267, 8135497, 4881660, 5346884, 6859150]\n</code></pre> <p>se cachent deux nombres cons\u00e9cutifs. Pouvez-vous les trouver ?</p> \ud83d\udc0d Script Python<pre><code>lst = [2428970, 1518306, 4971405, 1690994, 7918102, 4030834, 8830131, 7514856, 7903128, 6307569, 6624056, 5260490, 6447835, 4598783, 9108626, 5045240, 4128269, 4460134, 2497873, 5076659, 8104003, 7604887, 7451976, 4136924, 5691945, 8726293, 7855592, 3562473, 8849129, 6488474, 5303587, 2606124, 5484044, 4559758, 7592232, 2211406, 9974334, 7988936, 7582946, 7668748, 1799997, 3837917, 3196209, 7064342, 2543765, 1182013, 7253381, 1153735, 1037391, 4375946, 4445821, 5965587, 6001887, 4162629, 5235783, 8716582, 4901175, 5445422, 1120005, 8332321, 7075046, 2194175, 5557300, 2887907, 5103214, 2520744, 5104399, 2065665, 3035703, 7890213, 1758301, 3407982, 1355453, 4896338, 7979392, 9671602, 9690721, 7423779, 7423780, 3080825, 6785783, 3836837, 7310931, 1857470, 3492507, 2823231, 1492310, 1911148, 9620515, 5564910, 7009452, 7464745, 9608747, 7267383, 6939140, 6556578, 3592267, 8135497, 4881660, 5346884, 6859150]\n</code></pre> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p></p>   II.5 \u2712 Modification d'une liste <p>En Python, les objets de type <code>list</code> sont modifiables (on emploie le mot mutable). Et c'est souvent une bonne chose, car des listes peuvent \u00e9voluer apr\u00e8s leur cr\u00e9ation. </p> <p>Modification d'un \u00e9l\u00e9ment existant</p> <p>On modifie un \u00e9l\u00e9ment du tableau par simple affectation, en \u00e9crasant sa valeur avec la nouvelle.</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfamille[0] = \"Bartholomew\" # oui, c'est son vrai nom\nfamille\n</code></pre> \ud83d\udccb Algo<pre><code>['Bartholomew', 'Lisa', 'Maggie']\n</code></pre> <p>Ajout d'un \u00e9lement \u00e0 la fin d'une liste : la m\u00e9thode append()</p> <p>On modifie un \u00e9l\u00e9ment du tableau par simple affectation, en \u00e9crasant sa valeur avec la nouvelle.</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfamille.append(\"Milhouse\")\nfamille  \n</code></pre> \ud83d\udccb Algo<pre><code>['Bart', 'Lisa', 'Maggie', 'Milhouse']\n</code></pre> <p>Remarques :</p> <ul> <li>La m\u00e9thode <code>append()</code> rajoute donc un \u00e9l\u00e9ment \u00e0 la fin de la liste.  </li> <li>Dans beaucoup d'exercices, on part d'une liste vide <code>[]</code> que l'on remplit peu \u00e0 peu avec des <code>append()</code>.  </li> <li>(HP) Il est possible d'ins\u00e9rer un \u00e9l\u00e9ment \u00e0 la position <code>i</code> avec la m\u00e9thode <code>insert</code> :</li> </ul> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfamille.insert(1, \"Nelson\") # on ins\u00e8re \u00e0 la position 1\nfamille\n</code></pre> \ud83d\udccb Algo<pre><code>['Bart', 'Nelson', 'Lisa', 'Maggie']\n</code></pre> <p>\ud83d\udcbb Exercice 5.</p> <p>Construire une liste contenant tous les nombres inf\u00e9rieurs \u00e0 100 qui sont divisibles par 7.</p> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p>Suppression d'un \u00e9l\u00e9ment d'une liste par la m\u00e9thode remove() </p> \ud83d\udc0d Script Python<pre><code>famille = ['Bart', 'Nelson', 'Lisa', 'Maggie']\nfamille.remove(\"Nelson\")\nfamille\n</code></pre> \ud83d\udccb Algo<pre><code>['Bart', 'Lisa', 'Maggie']\n</code></pre> <p>Remarques :</p> <ul> <li>Attention, <code>remove</code> n'enl\u00e8ve que la premi\u00e8re occurrence de l'\u00e9l\u00e9ment d\u00e9sign\u00e9. S'il y en a d'autres apr\u00e8s, elles resteront dans la liste :</li> </ul> \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 5, 1, 9, 4]\nlst.remove(4)\nlst\n</code></pre> \ud83d\udccb Algo<pre><code>[3, 1, 5, 1, 9, 4]\n</code></pre> <ul> <li>Si l'\u00e9l\u00e9ment \u00e0 supprimer n'est pas trouv\u00e9, un message d'erreur est renvoy\u00e9 :</li> </ul> \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 5, 1, 9]\nlst.remove(2)\n</code></pre> \ud83d\udccb Algo<pre><code>Traceback (most recent call last):\n  File \"&lt;input&gt;\", line 2, in &lt;module&gt;\nValueError: list.remove(x): x not in list\n</code></pre> <p></p>   II.6 \u2712 Exercices <p>\ud83d\udcbb Exercice 6.</p> <p>On consid\u00e8re la liste </p> \ud83d\udc0d Script Python<pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> <p>Construire la liste <code>temp_pos</code> qui ne contient que les \u00e9l\u00e9ments positifs de <code>temp</code>.</p> \ud83d\udc0d Script Python<pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p>\ud83d\udcbb Exercice 7. BNS - EP</p> <p>Programmer la fonction <code>recherche(tab: list, n: int) -&gt; int</code>, prenant en param\u00e8tre un tableau non vide <code>tab</code> (type <code>list</code>) d'entiers et un entier <code>n</code>, et qui renvoie l'indice de la derni\u00e8re occurrence de l'\u00e9l\u00e9ment cherch\u00e9. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau.</p> <p>Exemples :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; recherche([5, 3],1)\n2\n&gt;&gt;&gt; recherche([2,4],2)\n0\n&gt;&gt;&gt; recherche([2,3,5,2,4],2)\n3\n</code></pre> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p>\ud83d\udcbb Exercice 8.</p> <p>On consid\u00e8re la liste <code>lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]</code>. Seuls les nombres entre 60 et 90 ont une signification : ce sont des codes ASCII (r\u00e9cup\u00e9rables par la fonction <code>chr</code> ).  Cr\u00e9er une liste <code>sol</code> qui contient les lettres correspondants aux nombres ayant une signification.</p> \ud83d\udc0d Script Python<pre><code>lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.2_Tuples/T2.2_Tuples/","title":"T2.2 Tuples","text":"<p>Comme les listes, en Python les tuples sont des s\u00e9quences ordonn\u00e9es d'\u00e9l\u00e9ments (de n'importe quel type).</p> <p>\u25b6 On les d\u00e9clare avec des parenth\u00e8ses:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; t1 = (1, 2, 4, 8, 16, 32, 64, 128)\n&gt;&gt;&gt; t2 = (\"Gon\", \"Kirua\", \"Leolio\")\n&gt;&gt;&gt; type(t1)\n&lt;class 'tuple'&gt;\n</code></pre> <p>\u25b6 Comme ils sont ordonn\u00e9s, on peut d\u00e9signer les \u00e9l\u00e9ments du tuple par leur indice, comme une liste. La fonction <code>len</code> est \u00e9galement valable.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; t1[2]\n4\n&gt;&gt;&gt; t2[0]\n'Gon'\n&gt;&gt;&gt; t1[-1]\n128\n&gt;&gt;&gt; len(t2)\n3\n</code></pre> <p>\u25b6 Un tuple est un objet iterable, on peut donc le parcourir: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; for nom in t2:\n...     print(nom, \"est un hunter\")\n...     \n... \nGon est un hunter\nKirua est un hunter\nLeolio est un hunter\n</code></pre></p> <p>Diff\u00e9rence entre tuple et liste</p> <p>Un tuple est un objet non mutable, c'est-\u00e0-dire qu'on ne peut pas le modifier : ni r\u00e9affecter ses \u00e9l\u00e9ments, ni ajouter ou supprimer d'\u00e9l\u00e9ment.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; t = (1, 2, 3)\n&gt;&gt;&gt; t[0] = 0\nTraceback (most recent call last):\nFile \"&lt;console&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n&gt;&gt;&gt; t.append(4)\nTraceback (most recent call last):\nFile \"&lt;console&gt;\", line 1, in &lt;module&gt;\nAttributeError: 'tuple' object has no attribute 'append'\n&gt;&gt;&gt; t.remove(1)\nTraceback (most recent call last):\nFile \"&lt;console&gt;\", line 1, in &lt;module&gt;\nAttributeError: 'tuple' object has no attribute 'remove'    \n</code></pre> <p> </p> <p>Utilisation d'un tuple</p> <p>On se sert d'un tuple pour repr\u00e9senter une s\u00e9quence de donn\u00e9es qui n'a pas vocation \u00e0 \u00eatre modifi\u00e9e au cours du programme, comme par exemple des constantes.</p> <p>On verra plus tard dans l'ann\u00e9e une vertu du caract\u00e8re non mutable de ce type d'objet.</p>"},{"location":"T02_TypesConstruits/T2.3_Dictionnaires/T2.3_Dictionnaires/","title":"T2.3 Dictionnaires","text":"<p>Jusqu'\u00e0 pr\u00e9sent, nous avons rencontr\u00e9 deux types de conteneurs (ou ensemble d'\u00e9l\u00e9ments) : les listes et les tuples. Ces deux types ont en commun le rep\u00e9rage de leurs \u00e9l\u00e9ments par un indice, qui est un nombre entier. Ces deux types sont ordonn\u00e9s, on les appelle des s\u00e9quences. L'indice est la cl\u00e9 qui permet d'acc\u00e9der \u00e0 un \u00e9l\u00e9ment de l'ensemble.</p> <p>Prenons comme exemple un autre ensemble d'\u00e9l\u00e9ments: les num\u00e9ros de t\u00e9l\u00e9phone sauvegard\u00e9s dans l'application \u00ab Contacts \u00bb de votre smartphone. Ces num\u00e9ros ne sont pas ordonn\u00e9s, et ne sont pas rep\u00e9rables par un indice, mais (en g\u00e9n\u00e9ral) par un nom.</p> <p>Grosso modo, le contenu de votre application \u00ab Contacts \u00bb est un ensemble d'associations <code>nom: num\u00e9ro</code>. En Informatique, on parle de p-uplet nomm\u00e9: un ensemble de (p) valeurs appel\u00e9es par un descripteur autre qu'un indice.</p> <p>En Python, on repr\u00e9sentera ces p-uplets nomm\u00e9s par des dictionnaires.</p>"},{"location":"T02_TypesConstruits/T2.3_Dictionnaires/T2.3_Dictionnaires/#231-definition-dun-dictionnaire-cles-et-valeurs","title":"2.3.1 D\u00e9finition d'un dictionnaire, cl\u00e9s et valeurs","text":"<p>Le type <code>dict</code></p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; contacts = {\"jean-mi\": '0155551010', \"b\u00e9n\u00e9dicte\": '0516526600', \"marc\": '0545974500'}\n</code></pre> <ul> <li> <p>Un dictionnaire (type <code>dict</code>) est une donn\u00e9e composite qui n'est pas ordonn\u00e9e (\u00e0 la diff\u00e9rence des listes !). Il fonctionne par un syst\u00e8me de <code>cl\u00e9: valeur</code>.</p> </li> <li> <p>Les cl\u00e9s, comme les valeurs, peuvent \u00eatre de types diff\u00e9rents.</p> </li> <li> <p>Un dictionnaire est d\u00e9limit\u00e9 par des accolades, les associations <code>cl\u00e9: valeur</code> s\u00e9par\u00e9es par des espaces.</p> </li> <li> <p>On acc\u00e8de \u00e0 une valeur par sa cl\u00e9 : </p> </li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; contacts[\"jean-mi\"]\n'0155551010'\n</code></pre> <p>M\u00e9thodes <code>keys</code> et <code>values</code></p> <p>On peut lister les cl\u00e9s d'un dictionnaires: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; contacts.keys()\ndict_keys(['jean-mi', 'b\u00e9n\u00e9dicte', 'marc'])\n</code></pre> et ses valeurs: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; contacts.values()\ndict_values(['0155551010', '0516526600', '0545974500'])\n</code></pre></p> <p>Ajout/modification/suppression d'\u00e9l\u00e9ments</p> <p>Pour modifier une valeur associ\u00e9e \u00e0 une cl\u00e9, on r\u00e9affecte la nouvelle valeur :</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; contacts[\"jean-mi\"] = '0605040302'\n&gt;&gt;&gt; contacts\n{'jean-mi': '0605040302', 'b\u00e9n\u00e9dicte': '0516526600', 'marc': '0545974500'}\n</code></pre> Si la cl\u00e9 n'existe pas, cela ajoute une paire <code>cl\u00e9: valeur</code> au dictionnaire: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; contacts[\"xavier\"] = '0545387000'\n&gt;&gt;&gt; contacts\n{'jean-mi': '0605040302', 'b\u00e9n\u00e9dicte': '0516526600', 'marc': '0545974500', 'xavier': '0545387000'}\n</code></pre></p> <p>La suppression d'une cl\u00e9 (et donc de sa valeur) se fait par le mot-cl\u00e9 <code>del</code>: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; del contacts[\"jean-mi\"]\n&gt;&gt;&gt; contacts\n{'b\u00e9n\u00e9dicte': '0516526600', 'marc': '0545974500', 'xavier': '0545387000'}\n</code></pre></p>"},{"location":"T02_TypesConstruits/T2.3_Dictionnaires/T2.3_Dictionnaires/#232-methodes-sur-les-dictionnaires","title":"2.3.2 M\u00e9thodes sur les dictionnaires","text":"<p>Parcours d'un dictionnaire</p> <p>On utilise comme pour les listes une boucle <code>for</code> avec l'op\u00e9rateur <code>in</code>. Cet op\u00e9rateur <code>in</code> peut \u00e9galement tester l'appartenance d'une cl\u00e9 \u00e0 un dictionnaire, hors d'un <code>for</code>.</p> M\u00e9thode basiqueM\u00e9thode avanc\u00e9e avec <code>items</code> <p>On parcourt par d\u00e9faut sur les cl\u00e9s:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; for nom in contacts:\n...    print(\"le num\u00e9ro de {} est {}\".format(nom, contacts[nom]))\n...\nle num\u00e9ro de b\u00e9n\u00e9dicte est 0516526600\nle num\u00e9ro de marc est 0545974500\nle num\u00e9ro de xavier est 0545387000\n</code></pre> <p>Il serait \u00e9quivalent de faire <code>for nom in contacts.keys()</code>.</p> <p>On peut \u00e9galement parcourir le dictionnaire sur les valeurs, mais sans possibilit\u00e9 alors de r\u00e9cup\u00e9rer la cl\u00e9 \u00e0 partir de la valeur (puisque plusieurs cl\u00e9s peuvent avoir la m\u00eame valeur).</p> <p>On utilisera pour cela: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; for v in contacts.values():\n...    print(v)\n...\n0516526600\n0545974500\n0545387000\n</code></pre></p> <p>Il peut \u00eatre utile de parcourir \u00e0 la fois sur les cl\u00e9s et sur les valeurs, c'est \u00e0 dire sur l'\u00e9l\u00e9ment complet <code>cl\u00e9: valeur</code> du dictionnaire, notamment si on souhaite r\u00e9cup\u00e9rer la cl\u00e9 associ\u00e9e \u00e0 une valeur donn\u00e9e.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; for k, v in contacts.items():\n...     print(v, \"est associ\u00e9 \u00e0\", k)\n... \n0516526600 est associ\u00e9 \u00e0 b\u00e9n\u00e9dicte\n0545974500 est associ\u00e9 \u00e0 marc\n0545387000 est associ\u00e9 \u00e0 xavier\n</code></pre> <p>Cr\u00e9ation d'une liste vide et construction de dictionnaire</p> <p>Comme les listes, il est tr\u00e8s fr\u00e9quent qu'on ait besoin de construire le dictionnaire par ajouts successifs en partant d'un dictionnaire vide.</p> <p>On peut cr\u00e9er un dictionnaire vide de deux fa\u00e7ons: <code>{}</code> ou <code>dict()</code>: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; dico = {}\n&gt;&gt;&gt; dico = dict()\n&gt;&gt;&gt; chiffres = ['z\u00e9ro', 'un', 'deux', 'trois', 'quatre', 'cinq', 'six', 'sept', 'huit', 'neuf']\n&gt;&gt;&gt; for c in chiffres:\n...     dico[c]\u00a0= len(c)\n...\n&gt;&gt;&gt; dico\n{'z\u00e9ro': 4, 'un': 2, 'deux': 4, 'trois': 5, 'quatre': 6, 'cinq': 4, 'six': 3, 'sept': 4, 'huit': 4, 'neuf': 4}\n</code></pre></p> <p>On peut bien \u00e9videmment cr\u00e9er un dictionnaire en compr\u00e9hension (hors-programme). On peut r\u00e9sumer le code pr\u00e9c\u00e9dent en: \ud83d\udc0d Script Python<pre><code>dico = {c: len(c) for c in chiffres}\n</code></pre></p>"},{"location":"T02_TypesConstruits/T2.3_Dictionnaires/T2.3_Dictionnaires/#233-exercices","title":"2.3.3 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re le contenu de mon dressing, repr\u00e9sent\u00e9 par un dictionnaire: \ud83d\udc0d Script Python<pre><code>dressing = {\"pantalons\": 3, \"pulls\": 4, \"tee-shirts\": 8}\n</code></pre></p> <ol> <li>J'ai oubli\u00e9 mes 5 chemises... Ajoutez-les au dictionnaire <code>dressing</code>.</li> <li>\u00c9crire une fonction (ou plut\u00f4t une proc\u00e9dure, pas de return) <code>ajout(habit)</code> qui prend en param\u00e8tre un type d'habit et qui augmente son nombre de 1 dans le dictionnaire.</li> <li>Am\u00e9liorer la fonction pour qu'elle cr\u00e9e une nouvelle entr\u00e9e si le type d'habit n'existe pas comme cl\u00e9.</li> </ol> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re la liste suivante : \ud83d\udc0d Script Python<pre><code>lst = ['5717', '1133', '5545', '4031', '6398', '2734', '3070', '1346', '7849', '7288', '7587', '6217', '8240', '5733', '6466', '7972', '7341', '6616', '5061', '2441', '2571', '4496', '4831', '5395', '8584', '3033', '6266', '2452', '6909', '3021', '5404', '3799', '5053', '8096', '2488', '8519', '6896', '7300', '5914', '7464', '5068', '1386', '9898', '8313', '1072', '1441', '7333', '5691', '6987', '5255']\n</code></pre></p> <p>Quel est le chiffre qui revient le plus fr\u00e9quemment dans cette liste ?</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>On mod\u00e9lise des informations (nom, taille et poids) sur des Pok\u00e9mons de la fa\u00e7on suivante:</p> <p>\ud83d\udc0d Script Python<pre><code>exemple_pokemons = {\n    'Bulbizarre': (70, 7),\n    'Herbizarre': (100, 13),\n    'Abo': (200, 7),\n    'Jungko': (170, 52)}\n</code></pre> Par exemple, <code>Bulbizarre</code> est un pok\u00e9mon qui mesure 70 cm et p\u00e8se 7 kg.</p> <ol> <li>Ajouer le pok\u00e9mon <code>Goupix</code> qui mesure 60 cm et p\u00e8se 10 kg.</li> <li>Compl\u00e9ter la fonction <code>plus_grand</code> qui prend en param\u00e8tre un dictionnaire et qui renvoie un tuple contenant le nom du pokemon le plus grand et sa taille.</li> </ol> \ud83d\udc0d Script Python<pre><code>def plus_grand(pokemons: dict) -&gt; tuple:\n    grand = ''\n    taille_max = 0\n    for  in pokemons. :\n        if taille &gt; taille_max:\n            grand =\n            taille_max = \n    return \n</code></pre> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>Reprendre l'exercice \u00abLe lion de N\u00e9m\u00e9e\u00bb et construire un dictionnaire dont les cl\u00e9s sont les noms des divinit\u00e9s et les valeurs leur \u00abvaleur\u00bb selon l'\u00e9nonc\u00e9.</p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Voici un dictionnaire <code>dates</code> dont les cl\u00e9s sont des pr\u00e9noms au format <code>str</code> et les valeurs des dates de naissance au format <code>tuple</code>.</p> <p>\ud83d\udc0d Script Python<pre><code>dates = {\"Alan\": (23, 6, 1912),\n         \"Grace\": (9, 12, 1906),\n         \"Linus\": (28, 12, 1969),\n         \"Guido\": (31, 1, 1956),\n         \"Ada\": (10, 12, 1815),\n         \"Tim\": (8, 6, 1955),\n         \"Dennis\": (9, 9, 1941),\n         \"Hedy\": (9, 11, 1914),\n         \"Steve\": (24, 2, 1955)\n        }\n</code></pre> Par exemple, Linus est n\u00e9 le 28 d\u00e9cembre 1969.</p> <ol> <li> <p>Ajouter les deux entr\u00e9es suivantes: Margaret, n\u00e9e le 17 ao\u00fbt 1936 et John, n\u00e9 le 28 d\u00e9cembre 1903.</p> </li> <li> <p>\u00c9crire une fonction <code>calendrier</code> qui prend en param\u00e8tre un dictionnaire constitu\u00e9 d'entr\u00e9es <code>nom: (jour, mois, ann\u00e9e)</code> comme <code>dates</code> et qui renvoie un dictionnaire dont les cl\u00e9s sont les mois de l'ann\u00e9e et les valeurs les listes des noms n\u00e9s ce mois-l\u00e0. Par exemple, <code>calendrier(dates)</code> doit renvoyer un dictionnaire contenant l'entr\u00e9e <code>\"juin\": [\"Alan\", \"Tim\"]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>plus_jeune</code> qui renvoie le nom de la personne la plus jeune du dictionnaire.</p> </li> </ol>"},{"location":"T03_TraitementDonnees/accueil/","title":"Traitement de donn\u00e9es en tables","text":"<p>Afin de pouvoir \u00eatre trait\u00e9es efficacement, les donn\u00e9es doivent \u00eatre structur\u00e9es, \u00e0 l'aide de descripteurs communs. </p> <p> </p>"},{"location":"T03_TraitementDonnees/index_traitdonnes/","title":"Th\u00e8me 3 : Traitement de donn\u00e9es en tables","text":"<p>Afin de pouvoir \u00eatre trait\u00e9es efficacement, les donn\u00e9es doivent \u00eatre structur\u00e9es, \u00e0 l'aide de descripteurs communs. </p> <p> </p> <ul> <li>\ud83d\uddf9 Recherche dans une table  </li> <li>\u25a1 Tri d'une table  </li> <li>\u25a1 Fusion de tables  </li> </ul>"},{"location":"T03_TraitementDonnees/T3.1_Manipulation/T3.1_Manipulation/","title":"T3.1 Tables de donn\u00e9es","text":""},{"location":"T03_TraitementDonnees/T3.1_Manipulation/T3.1_Manipulation/#311-donnees-tabulees","title":"3.1.1 Donn\u00e9es tabul\u00e9es","text":"<p>Lorsqu'on souhaite manipuler des donn\u00e9es, il est tr\u00e8s fr\u00e9quent de les pr\u00e9senter sous forme de tableaux: extrait de compte bancaire, bulletin scolaire, statistiques sportives, etc.  On parle alors de donn\u00e9es tabul\u00e9es.</p> <p> </p> <p>Ces tables sont le principal moyen de stocker des donn\u00e9es structur\u00e9es, et il est tr\u00e8s important de savoir traiter efficacement ces donn\u00e9es pour en tirer de l'information. </p> <p>Vocabulaire</p> <ul> <li>une table est une collection d'enregistrements;</li> <li>chaque enregistrement contient des valeurs correspondant aux champs ou attributs de la table (des enregistrements).</li> </ul> Nom Classe LV1 Sp\u00e9s Safia 1G1 Anglais Maths,Physique-Chimie Dawson 1G1 Anglais Maths,Physique-Chimie Nathan 1G5 Anglais LLCE,Physique-Chimie M\u00e9lodie 1G1 Anglais Maths,Physique-Chimie Manon 1G2 Anglais HGGSP,LLCE <p>Dans la table ci-dessus, les champs/attributs sont <code>'Nom'</code>, <code>'Classe'</code>, <code>'LV1'</code> et <code>'Sp\u00e9s'</code> et chaque ligne est un enregistrement.</p> <p>Repr\u00e9sentation des tables en Python</p> <p>Puisque chaque enregistrement contient une valeur pour chaque champ de la table, il para\u00eet naturel de repr\u00e9senter chaque enregistrement par un dictionnaire.</p> <p>Par exemple, le premier enregistrement de la table pr\u00e9c\u00e9dente est  \ud83d\udc0d Script Python<pre><code>{'Nom': 'Safia', 'Classe': '1G1', 'LV1': 'Anglais', 'Sp\u00e9s': 'Maths,Physique-Chimie'}\n</code></pre></p> <p>Une table sera donc repr\u00e9sent\u00e9e par une liste de dictionnaires.</p>"},{"location":"T03_TraitementDonnees/T3.1_Manipulation/T3.1_Manipulation/#312-fichiers-csv","title":"3.1.2 Fichiers CSV","text":"<p>Les tables de donn\u00e9es que nous manipulerons sont repr\u00e9sent\u00e9es par des fichiers au format <code>csv</code> (comma separated values) qui est un format fr\u00e9quemment utilis\u00e9 pour importer ou exporter des donn\u00e9es tabul\u00e9es.</p> <p>C'est un simple fichier texte dans lequel la premi\u00e8re ligne contient les champs, et chaque ligne suivante les enregistrements. Les champs et valeurs sont s\u00e9par\u00e9es par un d\u00e9limiteur, g\u00e9n\u00e9ralement la virgule (comma in english).</p> <p>Virgule ou point-virgule?</p> <p>Il peut \u00eatre n\u00e9cessaire (comme dans l'exemple de la table pr\u00e9c\u00e9dente) de conserver la virgule pour s\u00e9parer une valeur composite. On utilise alors parfois le point-virgule pour s\u00e9parer les champs et valeurs...  Lors de l'import d'un fichier <code>csv</code> avec un tableur, il faut pr\u00e9ciser \u00e0 l'ouverture quel d\u00e9limiteur il faut utiliser. </p> <p>Exercice</p> <ul> <li>T\u00e9l\u00e9charger ce fichier  et l'ouvrir avec LibreOffice Calc. Observer l'importance de pr\u00e9ciser les d\u00e9limiteurs.</li> <li>L'ouvrir ensuite avec l'\u00e9diteur de texte (<code>gedit</code>) pour observer sa construction.</li> </ul> <p>Charger un fichier CSV avec Python</p> <p>Avec une ouverture classique de fichier texte, les donn\u00e9es import\u00e9es sont sous forme d'une liste, dont la premi\u00e8re valeur contient les champs, et les autres les enregistrements:</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; data = open('pokedex.csv').read().splitlines()\n&gt;&gt;&gt; data[:5]\n['No;Nom;Type;PV;Attaque;D\u00e9fense;Vitesse;ASp\u00e9;DSp\u00e9;Talent;Nom US;code', '1;Bulbizarre;plante,poison;45;49;49;45;65;65;Engrais,Chlorophylle;Bulbasaur;77140', '2;Herbizarre;plante,poison;60;62;63;60;80;80;Engrais,Chlorophylle;Ivysaur;67530', '3;Florizarre;plante,poison;80;82;83;80;100;100;Engrais,Chlorophylle;Venusaur;65357', '4;Salam\u00e8che;feu;39;52;43;65;60;50;Brasier,Force Soleil;Charmander;10140']\n</code></pre> Pour obtenir une liste de dictionnaires, il faudrait donc retravailler ces donn\u00e9es (c'est un bon exercice, je vous le conseille...).</p> <p>On va donc plut\u00f4t utiliser un module d\u00e9di\u00e9 \u00e0 la manipulation de fichiers au format <code>csv</code>, le module ... <code>csv</code>:</p> Code-type d'importation d'un fichier CSV<pre><code>import csv\n\nwith open('pokedex.csv') as f:       # (1)\n    table = list(csv.DictReader(f, delimiter=';')) # (2)\n</code></pre> <ol> <li>On charge le fichier dans une variable <code>f</code></li> <li>On applique la fonction <code>DictReader</code> du module <code>csv</code> au fichier, en pr\u00e9cisant le d\u00e9limiteur et enfin en convertissant en type <code>list</code>.</li> </ol> <p>Exercice</p> <p>Ex\u00e9cuter le code pr\u00e9c\u00e9dent et contr\u00f4ler que la variable <code>table</code> est bien une liste de dictionnaires avec l'inspecteur d'objet de Thonny.</p>"},{"location":"T03_TraitementDonnees/T3.1_Manipulation/T3.1_Manipulation/#313-export-en-csv","title":"3.1.3 Export en csv","text":"<p>\u00c9crire un fichier CSV</p> <p>Le module <code>csv</code> permet \u00e9galement d'exporter une table (une liste de dictionnaires, donc) vers un fichier CSV, avec la fonction <code>DictWriter</code>.</p> Code-type d'exportation d'une table vers un fichier CSV<pre><code>def export_csv(nomfichier: str, table: list, champs: list) -&gt; None:\n'''\n    \u00c9crit dans un fichier le contenu d'une table connaissant ses champs.\n\n    - nomfichier: le nom du fichier \u00e0 cr\u00e9er, d'extension csv. S'il existe, il sera \u00e9cras\u00e9, \n    sinon il sera cr\u00e9\u00e9.\n    - table: la table \u00e0 exporter dans le fichier.\n    - champs: une liste de str contenant les intitul\u00e9s des champs de la table.\n    '''\n    with open(nomfichier, \"w\") as sortie:\n        w = csv.DictWriter(sortie, champs)\n        w.writeheader()\n        w.writerows(table)\n</code></pre>"},{"location":"T03_TraitementDonnees/T3.2_TriTable/T3.2_TriTable/","title":"T3.2 Op\u00e9rations sur les tables","text":"<p>L'objectif maintenant est d'exploiter les donn\u00e9es repr\u00e9sent\u00e9es sous forme d'une table. Puisque celle-ci est une liste de dictionnaires, on va utiliser les techniques de manipulation des listes et dictionnaires d\u00e9j\u00e0 rencontr\u00e9es.</p> <p>Pour illustrer ces diff\u00e9rentes techniques dans les exemples et exercices suivants, on utilisera cette table.</p>"},{"location":"T03_TraitementDonnees/T3.2_TriTable/T3.2_TriTable/#321-recherche-et-agregation","title":"3.2.1 Recherche et agr\u00e9gation","text":"<p>Recherche</p> <p>On souhaite d'abord v\u00e9rifier qu'une valeur appartient \u00e0 une table ou non. Pour cela il suffit de parcourir les enregistrements de la table et v\u00e9rifier que la valeur recherch\u00e9e est une valeur de l'enregistrement.</p> Recherche d'une valeur dans une table (\u00e0 compl\u00e9ter)<pre><code>def recherche(valeur, table: list) -&gt; bool:\n'''\n    Renvoie True ou False selon que valeur appara\u00eet ou non dans les valeurs de table.\n    '''\n    for e in table:\n        for v in e. ... () :\n            if v == ...\n                return ...\n    return ...\n</code></pre> Correction <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Dans la pratique, la fonction pr\u00e9c\u00e9dente n'a que peu d'int\u00e9r\u00eat. On va plut\u00f4t rechercher si une valeur est pr\u00e9sente dans un champ donn\u00e9. Ainsi on n'a pas besoin de parcourir toutes les valeurs d'un enregistrement.</p> <p>Modifier alors la fonction pr\u00e9c\u00e9dente pour qu'elle prenne en param\u00e8tre un champ et qu'elle recherche si la valeur est pr\u00e9sente pour le champ pr\u00e9cis\u00e9.</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On souhaite d\u00e9sormais r\u00e9cup\u00e9rer certaines donn\u00e9es si la valeur recherch\u00e9e est trouv\u00e9e.</p> <p>Modifier la fonction pr\u00e9c\u00e9dente (ou en cr\u00e9er une nouvelle) pour qu'elle renvoie la liste des valeurs correspondant \u00e0 un champ 2 (de retour) lorsque la valeur cherch\u00e9e est trouv\u00e9e (dans un champ 1 de recherche).</p> <p>Par exemple, si <code>table_sw</code> est la table contenant les donn\u00e9es du fichier 'sw.csv': \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; recherche('Jedi', 'Statut', 'Nom', table_sw)\n['Obi-Wan Kenobi', 'Yoda', 'Luke Skywalker', 'Rey']\n</code></pre></p> <p>Agr\u00e9gation</p> <p>Il s'agit de r\u00e9cup\u00e9rer une donn\u00e9e statistique sur les donn\u00e9es contenues dans une table, par exemple pour compter le nombre d'enregistrements qui satisfont \u00e0 une certaine condition.</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>compte</code> qui prend en param\u00e8tre une valeur, un champ et une table et renvoie le nombre d'occurences de la valeur dans le champ de la table.</p> <p>Par exemple: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; compte('Dro\u00efde', 'Esp\u00e8ce', table_sw)\n3\n</code></pre></p>"},{"location":"T03_TraitementDonnees/T3.2_TriTable/T3.2_TriTable/#322-selection","title":"3.2.2 S\u00e9lection","text":"<p>S\u00e9lection d'une ligne v\u00e9rifiant un crit\u00e8re</p> <p>On cherche ici \u00e0 cr\u00e9er une nouvelle table en extrayant les enregistrements d'une table existante v\u00e9rifiant un certain crit\u00e8re. Par exemple:</p> Nom Esp\u00e8ce Force Statut Obi-Wan Kenobi Humain oui Jedi Rey Humain oui Jedi Yoda Yoda oui Jedi Luke Skywalker Humain oui Jedi <p>Cela consiste donc \u00e0 cr\u00e9er une liste en parcourant la table existante et en s\u00e9lectionnant les enregistrements selon un crit\u00e8re: c'est exactement ainsi qu'on cr\u00e9e une liste en compr\u00e9hension avec filtre .</p> <p>Par exemple, on peut cr\u00e9er la table pr\u00e9c\u00e9dente en s\u00e9lectionnant les enregistrements dont la valeur deu champ <code>'Statut'</code> est <code>'Jedi'</code> avec : \ud83d\udc0d Script Python<pre><code>table_jedi = [e for e in table_sw if e['Statut'] == 'Jedi']\n</code></pre></p> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <ol> <li>Cr\u00e9er la table des personnages d'esp\u00e8ce humaine.</li> <li>Cr\u00e9er la table des personnages d'esp\u00e8ce humaine qui ma\u00eetrisent la force.</li> </ol> <p>S\u00e9lection de colonnes</p> <p>On peut \u00e9galement avoir \u00e0 extraire d'une table certaines colonnes, c'est-\u00e0-dire seulement des donn\u00e9es d'un ou plusieurs champs. On appelle \u00e9galement cette op\u00e9ration projection1.</p> <p>Par exemple, on veut cr\u00e9er la table suivante:</p> Nom Esp\u00e8ce Dark Vador Humain Obi-Wan Kenobi Humain R2-D2 Dro\u00efde ... ... Jango Fett Humain <p>Il s'agit donc de cr\u00e9er une nouvelle table (liste) dont les enregistrements sont des dictionnaires qui ne contiennent que les couples <code>champ: valeur</code> des enregistrements de la table initiale pour les champs pr\u00e9cis\u00e9s (sous forme d'une liste par exemple).</p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <ol> <li> <p>Compl\u00e9ter la fonction de projection:     Fonction de projection (\u00e0 compl\u00e9ter)<pre><code>def projection(table: list, liste_champs: list) -&gt; list:\n'''\n    Renvoie une table (liste de dictinonaires) des enregistrements de table ne contenant uniquement\n    les champs appartenant \u00e0 liste_champs.\n    '''\n    table_proj = ...\n    for e in ...:\n        table_proj.append({c: v for c, v in ... if ... })\n    return ...\n</code></pre></p> </li> <li> <p>Utiliser cette fonction pour obtenir la table pr\u00e9c\u00e9dente.</p> </li> </ol>"},{"location":"T03_TraitementDonnees/T3.2_TriTable/T3.2_TriTable/#323-tri","title":"3.2.3 Tri","text":"<p>Trier une table selon un champ permet d'am\u00e9liorer sa lisibilit\u00e9 selon l'information recherch\u00e9e. Puisqu'une table est une liste, on pourrait utiliser les algorithmes \u00e9tudi\u00e9es au th\u00e8me 7. Mais ceux-ci sont peu efficaces, comme on a pu le voir.</p> <p>On va donc utiliser les fonctions natives de Python pour trier une liste: la m\u00e9thode <code>sort</code> et la fonction <code>sorted</code>.</p> <p>Diff\u00e9rence fondamentale entre <code>sort</code> et <code>sorted</code></p> <ul> <li>La m\u00e9thode <code>sort</code> trie en place, c'est-\u00e0-dire qu'elle modifie la liste \u00e0 laquelle on applique la m\u00e9thode et renvoie <code>None</code>:     \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; l = [4, 0, 1, 3, 2]\n&gt;&gt;&gt; a = l.sort()\n&gt;&gt;&gt; l\n[0, 1, 2, 3, 4]\n&gt;&gt;&gt; a\n&gt;&gt;&gt;\n</code></pre></li> <li>La fonction <code>sorted</code> ne modifie pas la liste mais cr\u00e9e une nouvelle liste:   \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; l = [4, 0, 1, 3, 2]\n&gt;&gt;&gt; a = sorted(l)\n&gt;&gt;&gt; a\n[0, 1, 2, 3, 4]\n&gt;&gt;&gt; l\n[4, 0, 1, 3, 2]\n</code></pre></li> </ul> <p>Dans notre cas, on pr\u00e9f\u00e8rera ne pas modifier la table \u00e9tudi\u00e9e, mais plut\u00f4t cr\u00e9er une nouvelle table tri\u00e9e: on utilisera donc la fonction <code>sorted</code>.</p> <p>Ordre de tri</p> <p>Par d\u00e9faut le tri avec <code>sorted</code>  se fait dans l'ordre croissant. Si on veut un ordre d\u00e9croissant, il suffit de passer un argument <code>reverse</code> (un bool\u00e9en) \u00e0 la fonction:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; sorted([4, 0, 1, 3, 2], reverse=True)\n[4, 3, 2, 1, 0]\n</code></pre> <p>Cl\u00e9 de tri</p> <p>Par d\u00e9faut:</p> <ul> <li>les objets de type <code>int</code> sont tri\u00e9s avec l'ordre usuel;</li> <li>les objets de type <code>str</code> sont tri\u00e9s avec l'ordre alphab\u00e9tique;</li> <li>les objets de type <code>list</code> ou <code>tuple</code> sont tri\u00e9s avec l'ordre lexicographique : on trie selon le premier \u00e9l\u00e9ment, puis le deuxi\u00e8me, etc.     \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; sorted([(2, 5), (1, 3), (1, 2), (2, 7), (1, 6), (0, 10), (3, 4), (2, 0)])\n[(0, 10), (1, 2), (1, 3), (1, 6), (2, 0), (2, 5), (2, 7), (3, 4)]\n</code></pre></li> </ul> <p>Lorsqu'on souhaite trier des donn\u00e9es diff\u00e9remment, il faut pr\u00e9ciser une cl\u00e9 de tri: selon quel crit\u00e9re on veut trier. Cela sera particuli\u00e8rement utile pour trier des dictionnaires...</p> <p>Cette cl\u00e9 de tri doit imp\u00e9rativement \u00eatre une fonction, que l'on pr\u00e9cisera avec l'argument <code>key</code>. En g\u00e9n\u00e9ral on cr\u00e9era cette fonction pour l'occasion.</p> Exemple 1Exemple 2 <p>Pour trier la liste: \ud83d\udc0d Script Python<pre><code>l = [(2, 5), (1, 3), (1, 2), (2, 7), (1, 6), (0, 10), (3, 4), (2, 0)]\n</code></pre> sur le deuxi\u00e8me \u00e9l\u00e9ment (d'indice 1), la cl\u00e9 de tri doit \u00eatre la fonction qui, \u00e0 un tuple de d\u00e9part, renvoie l'\u00e9l\u00e9ment d'indice 1:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; def cle_tri(t: tuple) -&gt; int:\n        return t[1]\n&gt;&gt;&gt; sorted([(2, 5), (1, 3), (1, 2), (2, 7), (1, 6), (0, 10), (3, 4), (2, 0)], key=cle_tri)\n[(2, 0), (1, 2), (1, 3), (3, 4), (2, 5), (1, 6), (2, 7), (0, 10)]\n</code></pre> <p>Python ne sait pas comparer des dictionnaires (peut-\u00eatre tout simplement parce que cela n'a pas de sens). Il faut donc pr\u00e9ciser sur quel champ comparer les donn\u00e9es pour les trier.</p> <p>Voici une table: \ud83d\udc0d Script Python<pre><code>releve =[{'Nom': 'Alice', 'Anglais': 17, 'Info': 18, 'Maths': 16},\n         {'Nom': 'Bob', 'Anglais': 19, 'Info': 13, 'Maths': 14},\n         {'Nom': 'Carol', 'Anglais': 15, 'Info': 17, 'Maths': 19}]\n</code></pre></p> <p>Pour la trier sur les notes obtenues en Informatique, il faut construire la fonction suivante: \ud83d\udc0d Script Python<pre><code>def cle(dico):\n    return dico['Info']\n</code></pre></p> <p>Puis on peut trier la table, en pr\u00e9cisant par exemple l'ordre d\u00e9croissant: \ud83d\udc0d Script Python<pre><code>classement_info = sorted(releve, key=cle, reverse=True)\n</code></pre></p> <p>Exercice  6</p> \u00c9nonc\u00e9Correction <ol> <li> <p>Trier la table <code>table_sw</code> selon le champ <code>'Nom'</code>.</p> </li> <li> <p>Trier la table <code>table_sw</code> selon le champ <code>'Esp\u00e8ce'</code>, puis le champ <code>'Nom'</code> (rappel: Python sait trier des tuples).</p> </li> </ol> <p>Exercice  7</p> \u00c9nonc\u00e9Correction <p>On peut r\u00e9soudre le pyd\u00e9fi \u00abLe lion de N\u00e9m\u00e9e\u00bb (cf. T2.1.11 exercice 5) en choisissant la fonction <code>valeur</code> comme cl\u00e9 de tri. Faites-le.</p> <ol> <li> <p>c'est notamment le vocabulaire des bases de donn\u00e9es, au programme de Terminale.\u00a0\u21a9</p> </li> </ol>"},{"location":"T03_TraitementDonnees/T3.3_FusionTable/T3.3_FusionTable/","title":"T3.3 Fusion (par jointure) de tables","text":"<p>Lorsqu'on travaille sur des donn\u00e9es, il est fr\u00e9quent de manipuler plusieurs tables dans lesquelles les m\u00eames donn\u00e9es peuvent se trouver, avec diff\u00e9rents champs. Par exemple voici une nouvelle table (\u00e0 cr\u00e9er dans un fichier CSV, puis \u00e0 importer pour manipulation):</p> Nom Affiliation Dark Vador Empire Obi-Wan Kenobi R\u00e9publique R2-D2 R\u00e9publique Rey R\u00e9bellion Han Solo R\u00e9bellion Grand Moff Tarkin Empire Leia Organa R\u00e9bellion C-3PO R\u00e9publique Luke Skywalker R\u00e9bellion Padm\u00e9 Amidala R\u00e9publique Dark Sidious Empire <p>On peut donc vouloir les fusionner, c'est-\u00e0-dire construire une nouvelle table qui contient les donn\u00e9es des deux tables, \u00e0 condition qu'elles poss\u00e8dent un champ commun, sur lequel on proc\u00e8de \u00e0 l'op\u00e9ration de jointure. Ici le champ commun est <code>'Nom'</code>, et on obtiendrait la table suivante:</p> Nom Esp\u00e8ce Force Statut Affiliation Dark Vador Humain oui Sith Empire Obi-Wan Kenobi Humain oui Jedi R\u00e9publique R2-D2 Dro\u00efde non Astrom\u00e9cano R\u00e9publique Rey Humain oui Jedi R\u00e9bellion Han Solo Humain non Contrebandier R\u00e9bellion Leia Organa Humain oui S\u00e9natrice R\u00e9bellion C-3PO Dro\u00efde non Protocole R\u00e9publique Luke Skywalker Humain oui Jedi R\u00e9bellion Padm\u00e9 Amidala Humain non S\u00e9natrice R\u00e9publique Dark Sidious Humain oui Sith Empire <p>On ne conserve bien \u00e9videmment que les enregistrements existants dans les deux tables.</p> <p>Fusion par jointure</p> <p>La fusion par jointure consiste \u00e0 :</p> <ul> <li>cr\u00e9er une table vide qui accueillera les enregistrements contruits en fusionnant ceux des deux tables;</li> <li>parcourir les enregistrements de la premi\u00e8re table;</li> <li>pour chacun des enregistrements de la deuxi\u00e8me  table, regarder si les enregistrements ont la m\u00eame valeur pour le champ commun;</li> <li>si c'est le cas, cr\u00e9er une copie de l'enregistrement de la premi\u00e8re table, \u00e0 laquelle on ajoute les donn\u00e9es (champ: valeur) de la deuxi\u00e8me table.</li> </ul> Code \u00e0 compl\u00e9terCode compl\u00e9t\u00e9 Jointure de deux tables<pre><code>def fusion(table1: list, table2: list, champ: str) -&gt; list:\n    nouvelle_table = ...\n    for ligne1 in table1:\n        for ligne2 in table2:\n            if ...:\n                ligne = dict(ligne1)\n                for cle in ...:\n                    ...\n                        ligne[cle] = ...\n                nouvelle_table.append(...)\n    return ...\n</code></pre>"},{"location":"T03_TraitementDonnees/T3.4_TP/T3.4_TP_Pokedex/","title":"TP Pokedex","text":"<p>\u00c0 faire en ligne sur Capytale : https://capytale2.ac-paris.fr/web/c/0a28-520690 </p> <p>Dans tout ce TP, on manipulera la table contenue dans ce fichier.</p> <ol> <li>Commencez par ouvrir le fichier avec l'\u00e9diteur de texte. Contr\u00f4lez le d\u00e9limiteur utilis\u00e9.</li> <li>Importez les donn\u00e9es dans une table.</li> <li>Existe-t-il un pokemon dont le nom est <code>Apireine</code> ? Si oui, quel est son <code>'Nom US'</code>?</li> <li>Modifiez la table pour ne conserver que les champs:      \ud83d\udc0d Script Python<pre><code>'Nom', 'Type', 'PV', 'Attaque', 'D\u00e9fense', 'code'\n</code></pre></li> <li>Combien de pokemons ont une <code>'Attaque'</code> sup\u00e9rieure ou \u00e9gale \u00e0 50?</li> <li>\u00c0 partir de la table initiale, cr\u00e9ez une nouvelle table qui ne contient que les pokemons de type <code>'Plante'</code>.</li> <li>Cr\u00e9ez une nouvelle table tri\u00e9e sur le champ <code>'PV'</code> par ordre d\u00e9croissant.</li> <li>Voici une table des coordonn\u00e9es g\u00e9ographiques des communes fran\u00e7aises. Cr\u00e9ez une nouvelle table en fusionnant les deux tables sur le champ <code>'code'</code>.</li> <li>Cr\u00e9ez une carte avec folium pour localiser les pokemons...</li> </ol> <p>Cr\u00e9er une carte avec le module <code>folium</code></p> <p>Le module <code>folium</code> de Python permet de cr\u00e9er une carte au format <code>html</code> grace \u00e0 OpenStreetMap et le module <code>webbrowser</code> permet de l'afficher dans un navigateur.</p> \ud83d\udc0d Script Python<pre><code>import folium\nimport webbrowser\n\nlieu = [48.8704, 2.31673] # (1)\n\nc = folium.Map(location=lieu, zoom_start=15) # (2)\n\nfolium.Marker(location=lieu, popup=\"Qui habite ici?\").add_to(c) # (3)\n\nc.save('maCarte.html') # (4)\nwebbrowser.open('maCarte.html') # (5)\n</code></pre> <ol> <li>On d\u00e9finit une variable <code>lieu</code> contenant des coordonn\u00e9es g\u00e9ographiques.</li> <li>On cr\u00e9e une carte <code>c</code> centr\u00e9e en <code>lieu</code>.</li> <li>On ajoute \u00e0 la carte <code>c</code> un marker centr\u00e9 en <code>lieu</code>.</li> <li>On sauvegarde la carte au format HTML.</li> <li>On affiche la carte dans un navigateur.</li> </ol> <p>Il est bien \u00e9videmment possible d'ajouter autant de markers que souhait\u00e9.</p> <p>Correction</p>"},{"location":"T04_IHMWeb/accueil/","title":"Interactions entre l'homme et la machine sur le Web","text":"<p>Lorsqu'on navigue sur le Web, nous interagissons avec une machine distante via des pages, qui g\u00e8rent des \u00e9v\u00e9nements (clics, soumissions de formulaires par exemple) qui doivent \u00eatre g\u00e9r\u00e9s automatiquement.</p> <p> </p> <p>Avant de commencer un petit web-escape game... </p>"},{"location":"T04_IHMWeb/index_web/","title":"Th\u00e8me 4 : Interactions entre l'homme et la machine sur le Web","text":"<p>Lorsqu'on navigue sur le Web, nous interagissons avec une machine distante via des pages, qui g\u00e8rent des \u00e9v\u00e9nements (clics, soumissions de formulaires par exemple) qui doivent \u00eatre g\u00e9r\u00e9s automatiquement.</p> <p> </p> <ul> <li>\ud83d\uddf9 Modalit\u00e9s de l'interaction entre l'homme et la machine</li> <li>\ud83d\uddf9 Interaction </li> </ul>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/","title":"C10 Le web","text":""},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#activites","title":"Activit\u00e9s","text":""},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#activite-1-modele-client-serveur","title":"Activit\u00e9 1 : Mod\u00e8le client serveur","text":"<p>En faisant vos propres recherches et en vous aidant de la vid\u00e9o ci-dessus, r\u00e9pondre aux questions suivantes :</p> <ol> <li>Quand et par qui a \u00e9t\u00e9 invent\u00e9 le Web ?</li> <li>Peut-on dire Internet \u00e0 la place du Web ?</li> <li>Sur quel principe de fonctionnement repose le Web ?</li> </ol>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#activite-2-les-elements-dune-page-web","title":"Activit\u00e9 2 : Les \u00e9l\u00e9ments d'une page Web","text":"<p>Attention</p> <p>Dans cette activit\u00e9, on commence \u00e0 cr\u00e9er des pages HTML, pour visualiser la page produite, deux solutions s'offrent \u00e0 vous :</p> <ol> <li>installer l'extension HTML Preview de VS code, dans ce cas vous pourrez afficher c\u00f4te \u00e0 c\u00f4te dans VS Code le code source de votre page HTML ainsi que sa pr\u00e9visualisation.</li> <li>ouvrir \u00e0 l'aide de Firefox le fichier local de votre page HTML (taper Ctrl\uff0bO dans Firefox). Apr\u00e8s avoir modifi\u00e9 le source HTML dans VS Code, mettre \u00e0 jour l'affichage dans Firefox en appuyant sur F5 pour actualiser.</li> </ol> <ol> <li> <p>Squelette d'une page Web L'\u00e9diteur VS Code, permet d'ins\u00e9rer rapidement la structure de base d'une page web :</p> <ul> <li>cr\u00e9er un fichier vide appel\u00e9 <code>structure.html</code>,</li> <li>ouvrir ce fichier dans VS Code,</li> <li>taper simplement <code>!</code> et entr\u00e9e (ou alors taper <code>html</code> et dans le menu d'abbreviation s\u00e9lectioner <code>html:5</code>)</li> </ul> <p>Vous devriez obtenir le r\u00e9sultat suivant : HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <ol> <li>Un document html est constitu\u00e9 d'un en-t\u00eate, suivi d'un corps. Rep\u00e9r\u00e9 les balises permettant de d\u00e9limiter :<ol> <li>Le document html</li> <li>L'en-t\u00eate</li> <li>Le corps</li> </ol> </li> <li>L'en-t\u00eate contient une balise <code>&lt;title&gt;</code>, quel est son r\u00f4le ? </li> </ol> </li> <li> <p>Ajout de contenu Dans le corps du document, c'est \u00e0 dire entre les balises <code>&lt;body&gt;</code> et <code>&lt;body&gt;</code>, ins\u00e9rer le contenu suivant :</p> HTML<pre><code>&lt;p&gt;Mon premier site web.&lt;/p&gt;\n    &lt;p&gt;\n       &lt;h1&gt; Introduction &lt;/h1&gt;\n\n       &lt;h2&gt; Le HTML et les balises &lt;/h2&gt;\n          &lt;ul&gt;\n              &lt;li&gt; le d\u00e9but d'une liste indent\u00e9e &lt;/li&gt;\n              &lt;li&gt; la suite ... &lt;/li&gt;\n          &lt;/ul&gt;  \n    Pour apprendre le fonctionnement des balises, voir &lt;a href=\"https://developer.mozilla.org/fr/docs/Apprendre/HTML/Introduction_%C3%A0_HTML/Getting_started\"&gt; ici&lt;/a&gt; par exemple !\n    &lt;/p&gt;\n</code></pre> </li> <li> <p>Observer le r\u00e9sultat obtenu dans l'affichage et en d\u00e9duire le r\u00f4le des balises suivantes :  </p> <ol> <li><code>&lt;h1&gt;</code> et <code>&lt;h2&gt;</code></li> <li><code>&lt;ul&gt;</code> et <code>&lt;li&gt;</code></li> <li><code>&lt;p&gt;</code></li> </ol> </li> <li> <p>Ajouter un sous-titre 'Mes tests de balises' dans la page Web</p> </li> <li>Dans ce sous-titre cr\u00e9er une liste avec deux \u00e9l\u00e9ments : \"\u00e9l\u00e8ment 1\", \"\u00e9l\u00e8ment 2\".</li> <li>Ajouter un paragraphe au d\u00e9but (juste apr\u00e9s le titre de niveau 1) dans lequelle on \u00e9crira \"Ne pas oublier de prendre des notes sur les divers notions cues dans ce chapitre.\"</li> <li> <p>Au paragraphe cr\u00e9e \u00e0 la question pr\u00e9c\u00e9dente rajouter :</p> HTML<pre><code>    Un exemple de format et de logiciel pour la prise de notes : &lt;a href=\"https://www.nextinpact.com/article/44926/visual-studio-code-editeur-credible-pour-publication-et-markdown\"&gt;Visual code et markdown&lt;/a&gt;\n</code></pre> </li> <li> <p>Quelle est la modification produite dans la page ?</p> </li> <li> <p>Ajouter un lien dans votre page Web sur le mot \"Markdown\" : <code>https://code.visualstudio.com/docs/languages/markdown</code></p> </li> <li> <p>Rechercher vous-m\u00eame sur le Web la balise permettant d'ins\u00e9rer une image dans une page HTML puis l'utiliser pour ins\u00e9rer une image illustrant le web (attention \u00e0 utiliser une image libre de droit)</p> </li> </ol>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#activite-3-lapparence-dune-page-web","title":"Activit\u00e9 3 : L'apparence d'une page Web","text":"<p>Important</p> <p>Les balises HTML permettent de structurer le contenu d'une page web, en d\u00e9finissant les titres, les paragraphes, ... Pour modifier l'apparence d'une page, on a recours au css (cascadind style sheet) qui permettent de modifier l'apparence du contenu de la page</p> <p>Une courte introduction \u00e0 css </p>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#cours","title":"Cours","text":"<p>Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe :</p> <p>Diaporama de cours </p> <p>Attention</p> <p>Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.</p>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#exercices","title":"Exercices","text":""},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#exercice-1-corrections","title":"Exercice 1 : Corrections","text":"<p>Corriger les erreurs dans les fragments de code HTML suivant :</p> <ol> <li><code>&lt;h&gt; Mon titre principal &lt;/h&gt;</code></li> <li><code>&lt;href=\"http://www.wikipedia.fr\"&gt;un lien vers Wikipedia&lt;/href&gt;</code></li> <li><code>&lt;p&gt; Ce paragraphe contient un &lt;a href=\"autre_page.html\"&gt;lien vers une autre page&lt;/p&gt;&lt;/a&gt;</code></li> </ol>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#exercice-2-structurer-une-page-web","title":"Exercice 2 : Structurer une page Web","text":"<p>Quelles sont les balises html permettant de d\u00e9limiter :</p> <ol> <li>Un titre ou un sous titre ?</li> <li>Un paragraphe ?</li> <li>Un lien ?</li> <li>Un tableau ? Une ligne d'un tableau ? Une case dans un tableau ?</li> </ol>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#exercice-3-modifier-lapparence-dune-page-web","title":"Exercice 3 : Modifier l'apparence d'une page web","text":"<ol> <li>Enregistrer dans le r\u00e9pertoire suivant le fichier html suivant :  </li> </ol> <p>Le site \u00e0 modifier  </p> <p>Pour cela, vous pouvez par exemple cliquer \u00e0 droite sur le bouton ci-dessus, puis s\u00e9lectionner \"Enregistrer la cible du lien sous ...\"  </p> <ol> <li>Par la m\u00e9thode de votre choix (mais de pr\u00e9f\u00e9rence en cr\u00e9ant une feuille de style dans un fichier s\u00e9par\u00e9), modifier l'apparence de cette page web de sorte que :  <ul> <li>Le fond de la page soit de couleur noire,  </li> <li>Les liens soient jaunes et pas soulign\u00e9s,  </li> <li>Les titres de niveau 1 soient en gras et en blanc,  </li> <li>Les titres de niveau 2 soient en bleu clair, encadr\u00e9 avec un trait de couleur rouge  </li> </ul> </li> </ol>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#exercice-4-creer-un-mini-site","title":"Exercice 4 : Cr\u00e9er un mini-site","text":"<p>R\u00e9aliser  un mini site Web, en utilisant le html et les feuilles de style. Le sujet du site est au choix, par exemple : votre CV, vos films pr\u00e9f\u00e9r\u00e9s, un site de recette de cuisines, un site sur un sport ou une de vos passions, ou sur une c\u00e9l\u00e9brit\u00e9 (sportif, acteur, chanteur ...) . Respecter le cahier des charges suivant :</p> <ul> <li>au moins 5 pages reli\u00e9es entre elles par des liens internes et des liens vers des sites ext\u00e9rieurs</li> <li>au moins 5 images, attention \u00e0 utiliser des images libres de droits ou \u00e0 cr\u00e9er vos propres illustrations pour votre site</li> <li>au moins une page de votre site devra contenir des informations organis\u00e9es sous la forme d'un tableau et donc utiliser les balises <code>&lt;table&gt;</code> et <code>&lt;/table&gt;</code>.</li> <li>L'apparence du site sera uniformis\u00e9 (c'est \u00e0 dire que d'une page \u00e0 l'autre on retrouvera les m\u00eames couleurs et la m\u00eame pr\u00e9sentation). Vous devrez pour cela utiliser une feuille de style dans un fichier s\u00e9par\u00e9.</li> </ul> <p>On compl\u00e9tera ce site ult\u00e9rieument. </p>"},{"location":"T04_IHMWeb/T4.2_Interactions/T4.2_Js/","title":"C11 Interaction dans une page web","text":"<p>Jusqu'\u00e0 pr\u00e9sent, la page web envoy\u00e9e par le serveur est :</p> <ol> <li>identique quel que soit le client;</li> <li>statique apr\u00e8s r\u00e9ception sur l'ordinateur du client.</li> </ol> <p> </p>"},{"location":"T04_IHMWeb/T4.2_Interactions/T4.2_Js/#quand-le-client-peut-agir-sur-sa-page-exemple-avec-javascript","title":"Quand le client peut agir sur sa page : exemple avec JavaScript","text":"<p>Le JavaScript va venir r\u00e9gler le probl\u00e8me n\u00b02 : il est possible de fabriquer une page sur laquelle le client va pouvoir agir localement, sans avoir \u00e0 redemander une nouvelle page au serveur.</p> <p>Invent\u00e9 en 1995 par Brendan Eich  pour le navigateur Netscape, le langage JavaScript s'est impos\u00e9 comme la norme aupr\u00e8s de tous les navigateurs pour apporter de l'interactivit\u00e9 aux pages web.</p> <p></p>"},{"location":"T04_IHMWeb/T4.2_Interactions/T4.2_Js/#exemple-1-de-couple-html-javascript","title":"\ud83d\udcce Exemple 1 de couple html / javascript :","text":"<p>Notre fichier <code>index.html</code> fait r\u00e9f\u00e9rence, au sein d'une balise <code>&lt;script&gt;</code>, \u00e0 un fichier externe <code>script.js</code> qui contiendra notre code JavaScript.   </p> <ul> <li> <p>fichier <code>index.html</code> :  HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;un peu d'action&lt;/title&gt;\n    &lt;link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n    &lt;p&gt;\n    &lt;h2&gt;Une page web extr\u00eamement dynamique&lt;/h2&gt;\n    &lt;/p&gt;\n    &lt;div&gt;\n\n        &lt;label&gt;Changez la couleur d'arri\u00e8re-plan:&lt;/label&gt;\n\n        &lt;button type=\"button\" onclick=\"choix('#CD9575');\"&gt;Antique brass&lt;/button&gt;\n\n        &lt;button type=\"button\" onclick=\"choix('#8DB600');\"&gt;Apple green&lt;/button&gt;\n\n        &lt;button type=\"button\" onclick=\"choix('#9966CC');\"&gt;Amethyst&lt;/button&gt; \n    &lt;/div&gt;\n    &lt;div&gt;\n      &lt;p&gt;\n      En JavaScript, le codage de la couleur choisie est :\n      &lt;/p&gt;\n      &lt;p id=\"resultat\"&gt;&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> </li> <li> <p>fichier <code>script.js</code> : JavaScript<pre><code>function choix(color){\ndocument.body.style.background = color;\ndocument.getElementById(\"resultat\").innerHTML=\"La couleur de fond est : \"+color;\n}\n</code></pre></p> </li> <li> <p>fichier <code>style.css</code> : CSS<pre><code>body\n{\nbackground-color: rgb(117, 96, 96);\n}\n</code></pre></p> </li> </ul> <p>Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://pagejs1.nsimeyroneinc.repl.co.</p> <p>Commentaires</p> <ul> <li>Au sein du bouton d\u00e9clar\u00e9 par la balise <code>button</code>, l'attribut  <code>onclick</code> re\u00e7oit le nom d'une fonction d\u00e9clar\u00e9e \u00e0 l'int\u00e9rieur du fichier <code>script.js</code>, ici la fonction <code>choix()</code>.</li> <li>Cette fonction nous permet de modifier \u00e0 la fois l'aspect esth\u00e9tique de la page (changement de la couleur de background) mais aussi le contenu de cette page, en faisant afficher le nom de la couleur.</li> </ul> <p>La puissance du JavaScript permet de r\u00e9aliser aujourd'hui des interfaces utilisateurs tr\u00e8s complexes au sein d'un navigateur, \u00e9quivalentes \u00e0 celles produites par des logiciels externes (pensez \u00e0 Discord, par ex.).</p>"},{"location":"T04_IHMWeb/T4.2_Interactions/T4.2_Js/#exemple-2-de-couple-html-javascript","title":"\ud83d\udcce Exemple 2 de couple html / javascript :","text":"<p>Il est \u00e9galement possible de modifier le style d\u2019une balise, de modifier la classe (CSS) d\u2019une balise, voici quelques exemples :  </p> <p>querySelector()</p> <p>La m\u00e9thode <code>querySelector()</code> s\u00e9lectionne le premier \u00e9l\u00e9ment dans le document correspondant au s\u00e9lecteur - ou groupe de s\u00e9lecteurs - sp\u00e9cifi\u00e9(s), ou null si aucune correspondance n\u2019est trouv\u00e9e.</p> <ul> <li> <p>fichier <code>index.html</code> :  HTML<pre><code>&lt;!doctype html&gt;\n\n&lt;html lang=\"fr\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;Le trio&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\"  href=\"style.css\"&gt;\n  &lt;/head&gt;\n\n&lt;body&gt;\n  &lt;h1&gt;Le trio : HTML, CSS et JavaScript&lt;/h1&gt;\n  &lt;p id=\"monPara\"&gt;\n    Voici une page web qui ne fait pas grand-chose\n  &lt;/p&gt;\n\n    &lt;button onclick=\"foncRouge()\"&gt;Rouge&lt;/button&gt;\n\n    &lt;button onclick=\"foncBlanc()\"&gt;Blanc sur fond bleu&lt;/button&gt;\n\n&lt;/body&gt;\n\n&lt;script src=\"modif.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;\n</code></pre></p> </li> <li> <p>fichier <code>script.js</code> : JavaScript<pre><code>function foncRouge() {\ndocument.querySelector(\"#monPara\").classList.remove(\"blanc\");\ndocument.querySelector(\"#monPara\").classList.add(\"rouge\");\n}\n\nfunction foncBlanc() {\ndocument.querySelector(\"#monPara\").classList.remove(\"rouge\");\ndocument.querySelector(\"#monPara\").classList.add(\"blanc\");\n}\n</code></pre></p> </li> <li> <p>fichier <code>style.css</code> : CSS<pre><code>h1\n{\ntext-align: center;\n}\n.rouge {\ncolor:red;\nfont-size:20px;\n}\n.blanc {\nbackground-color:blue;\ncolor:white;\nfont-size:25px;\n}\n</code></pre></p> </li> </ul> <p>Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://pagejs2.nsimeyroneinc.repl.co.</p> <p>Commentaire : </p> <p>Dans l\u2019exemple ci-dessus, nous avons maintenant 2 boutons :</p> <ul> <li>un clic sur le bouton <code>blanc</code>, permet d\u2019ex\u00e9cuter la fonction <code>foncBlanc()</code>,  </li> <li>un clic sur le bouton <code>rouge</code>, permet d\u2019ex\u00e9cuter la fonction <code>foncRouge()</code>, jusque l\u00e0, rien de vraiment nouveau.  </li> </ul> <p>La fonction JavaScript <code>foncBlanc()</code> permet de modifier la classe CSS de la balise ayant pour id <code>monPara</code>. Dans un premier temps, la ligne</p> <p>JavaScript<pre><code>document.querySelector(\"#monPara\").classList.remove(\"rouge\");\n</code></pre> permet de supprimer l\u2019association entre la balise d\u2019id <code>monPara</code> et la classe CSS <code>rouge</code> (si cette association n\u2019existe pas, cette ligne n\u2019a aucun effet).  Dans un deuxi\u00e8me temps, on associe la classe CSS <code>blanc</code> avec la balise d\u2019id <code>monPara</code> avec la ligne</p> JavaScript<pre><code>document.querySelector(\"#monPara\").classList.add(\"blanc\");\n</code></pre>"},{"location":"T04_IHMWeb/T4.2_Interactions/T4.2_Js/#exemple-3-de-couple-html-javascript","title":"\ud83d\udcce Exemple 3 de couple html / javascript :","text":"<ul> <li> <p>fichier <code>index.html</code> :  HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n    &lt;title&gt;Afficher / Cacher une boite div en javascript&lt;/title&gt;\n\n    &lt;link rel=\"stylesheet\" type=\"text/css\"  href=\"style.css\" /&gt;\n    &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;  Question 1 : &lt;/br&gt;\n    &lt;span class=\"bouton\" id=\"bouton_texte\" onclick=\"afficher_cacher('texte');\"&gt;Afficher la r\u00e9ponse&lt;/span&gt;\n\n    &lt;div id=\"texte\" class=\"texte\"&gt;\n      Texte cach\u00e9\n    &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;script type=\"text/javascript\"&gt;\n//&lt;!--\nafficher_cacher('texte');\n//--&gt;\n&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> </li> <li> <p>fichier <code>script.js</code> : JavaScript<pre><code>function afficher_cacher(id)\n{\nif(document.getElementById(id).style.visibility==\"hidden\")\n{\ndocument.getElementById(id).style.visibility=\"visible\";\ndocument.getElementById('bouton_'+id).innerHTML='Cacher la r\u00e9ponse';\n}\nelse\n{\ndocument.getElementById(id).style.visibility=\"hidden\";\ndocument.getElementById('bouton_'+id).innerHTML='Afficher la r\u00e9ponse';\n}\nreturn true;\n}\n</code></pre></p> </li> <li> <p>fichier <code>style.css</code> : CSS<pre><code>.bouton\n{\ncolor:#00AAff;\nfont-size:18px;\ncursor:pointer;\n}\n.bouton:hover\n{\ntext-decoration:None;\n}\n.texte\n{\nborder:1px solid #333333;\nbackground:#eeeeee;\npadding:10px;\ncolor:#333333;\n}\n.texte:hover\n{\nborder:1px solid #000000;\nbackground:#cccccc;\ncolor:#000000;\n}\n</code></pre></p> </li> </ul> <p>Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://pagejs3.nsimeyroneinc.repl.co.</p>"},{"location":"T04_IHMWeb/T4.2_Interactions/T4.2_Js/#exemple-4-de-couple-html-javascript","title":"\ud83d\udcce Exemple 4 de couple html / javascript :","text":"<ul> <li> <p>fichier <code>index.html</code> :  HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Cours JavaScript&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1,\nuser-scalable=no\"&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"&gt;\n  &lt;/head&gt;\n\n&lt;body&gt;\n  &lt;div&gt;\n    &lt;p&gt; Question 1 : Donner l'\u00e9criture binaire du nombre d\u00e9cimal 29 &lt;/p&gt;\n      &lt;button id='R1'&gt;Afficher la r\u00e9ponse&lt;/button&gt;\n  &lt;/div&gt;\n\n  &lt;div id=\"d1\" style=\"display:None\"&gt;\n    &lt;strong&gt; R\u00e9ponse :&lt;/strong&gt; L'\u00e9criture binaire de 29 est : 11101 &lt;br&gt;\n      &lt;table&gt;\n        &lt;tr&gt;\n          &lt;td&gt;puissance de 2 &lt;/td&gt;\n          &lt;td&gt;64&lt;/td&gt;&lt;td&gt;32&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;D\u00e9composition &lt;/td&gt;\n          &lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;Reste &lt;/td&gt;\n          &lt;td&gt;29&lt;/td&gt;&lt;td&gt;29&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n  &lt;/div&gt;\n\n  &lt;div&gt;\n    &lt;p&gt; Question 2 : Donner l'\u00e9criture binaire du nombre d\u00e9cimal 42 &lt;/p&gt;\n      &lt;button id='R2' &gt;Afficher la r\u00e9ponse&lt;/button&gt;\n  &lt;/div&gt;\n  &lt;div id=\"d2\" style=\"display:None\"&gt;\n    R\u00e9ponse : L'\u00e9criture binaire de 42 est : 101010\n  &lt;/div&gt;\n\n&lt;/body&gt;\n  &lt;script language=\"JavaScript\" src=\"qcm.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;\n</code></pre></p> </li> <li> <p>fichier <code>script.js</code> : JavaScript<pre><code>let d1 = document.getElementById(\"d1\");\nfunction togg1(){\nif(getComputedStyle(d1).display != \"none\"){\nd1.style.display = \"none\";\n}\nelse {\nd1.style.display = \"block\";\n}\n};\n\nR1.onclick = togg1;\nlet d2 = document.getElementById(\"d2\");\n\nfunction togg2(){\nif(getComputedStyle(d2).display != \"none\"){\nd2.style.display = \"none\";\n}\nelse {\nd2.style.display = \"block\";\n}\n};\n\nR2.onclick = togg2;\n</code></pre></p> </li> <li> <p>fichier <code>style.css</code> : CSS<pre><code>#d1{background-color: #EECC4499;}\n#d2{background-color: #44EEAA99;}\ntable{\nborder-collapse: collapse\n}\ntd{\nborder: 1px solid black;\npadding: 10px;\n}\n</code></pre></p> </li> </ul> <p>Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://quiz.nsimeyroneinc.repl.co.</p>"},{"location":"T04_IHMWeb/T4.2_Interactions/T4.2_Js/#exemple-5-de-couple-html-javascript","title":"\ud83d\udcce Exemple 5 de couple html / javascript :","text":"<ul> <li> <p>fichier <code>index.html</code> :  HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Cours JavaScript&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1,\nuser-scalable=no\"&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;form name=\"quiz\"&gt;\n&lt;span&gt;&lt;b&gt;Question 1 : Quelle est la couleur du cheval blanc d'Henri 4&lt;/b&gt;&lt;/span&gt;\n  &lt;br&gt;\n&lt;div style=\"position:absolute;left:300px\"&gt;&lt;br&gt;\n  &lt;textarea name=\"t1\" rows=\"4\" cols=\"20\" &gt;\n  &lt;/textarea&gt;\n&lt;/div&gt;\n&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q1\" value=\"r1\"&gt;Brun&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q1\" value=\"r2\"&gt;Noir&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q1\" value=\"r3\"&gt;Blanc&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q1\" value=\"r4\"&gt;Rouge&lt;br&gt;\n\n&lt;br&gt;\n\n&lt;span&gt;&lt;b&gt;Question 2 : Qui a gagn\u00e9 la coupe du monde 1998 ?&lt;/b&gt;&lt;br&gt;&lt;/span&gt;\n&lt;div style=\"position:absolute;left:300px\"&gt;&lt;br&gt;\n  &lt;textarea name=\"t2\" rows=\"4\" cols=\"20\" &gt;\n  &lt;/textarea&gt;\n&lt;/div&gt;\n&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q2\" value=\"r1\"&gt;Le Br\u00e9sil&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q2\" value=\"r2\"&gt;L'Argentine&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q2\" value=\"r3\"&gt;L'Angleterre&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q2\" value=\"r4\"&gt;La France&lt;br&gt;\n\n&lt;br&gt;\n&lt;span&gt;&lt;b&gt;Question 3 : Qui a remport\u00e9 la m\u00e9daille d'Or de Basket au JO 2021&lt;/b&gt;&lt;br&gt;&lt;/span&gt;\n&lt;div style=\"position:absolute;left:300px\"&gt;&lt;br&gt;\n  &lt;textarea name=\"t3\" rows=\"4\" cols=\"20\" &gt;\n  &lt;/textarea&gt;\n&lt;/div&gt;\n&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q3\" value=\"r1\"&gt;France&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q3\" value=\"r2\"&gt;USA&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q3\" value=\"r3\"&gt;Australie&lt;br&gt;\n  &lt;input type=\"radio\" name=\"q3\" value=\"r4\"&gt;Serbie&lt;br&gt;\n\n&lt;br&gt;\n\n    &lt;input type=\"button\" value=\"Score\" onClick=\"getScore(this.form)\"&gt;\n    &lt;input type=\"reset\" value=\"RAZ\"&gt;&lt;p&gt;\n    Score = &lt;input type=text size=15 name=\"percentage\"&gt;&lt;br&gt;\n    R\u00e9ponses correctes :&lt;br&gt;\n    &lt;textarea name=\"solutions\" wrap=\"virtual\" rows=\"4\" cols=\"40\"&gt;&lt;/textarea&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n &lt;script language=\"JavaScript\" src=\"qcm.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;\n</code></pre></p> </li> <li> <p>fichier <code>script.js</code> : JavaScript<pre><code>var numQues = 3;\nvar numChoi = 4;\n\nvar answers = new Array(3);\nvar answers_true = new Array(3);\nvar answers_false = new Array(3);\n\nanswers[0] = \"r3\";\nanswers_true[0] = \"Bravo\";\nanswers_false[0] = \"Lit l'\u00e9nonc\u00e9 correctement\";\n\nanswers[1] = \"r4\";\nanswers_true[1] = \"Bravo\";\nanswers_false[1] = \"La France bien sur\";\n\nanswers[2] = \"r2\";\nanswers_true[2] = \"Bravo\";\nanswers_false[2] = \"H\u00e9las c'est faux, c'est les USA\";\n\nfunction getScore(form) {\nvar score = 0;\nvar currElt;\nvar currSelection;\n\nfor (i=0; i&lt;numQues; i++) {\ncurrElt = i*(numChoi+1);\nfor (j=0; j&lt;numChoi; j++) {\ncurrSelection = form.elements[currElt + j+1];\nif (currSelection.checked) {\nif (currSelection.value == answers[i]) {\nscore++;\nform.elements[currElt].value=answers_true[i];\nbreak;\n}\nelse {\nform.elements[currElt].value=answers_false[i];\n}\n}\n}\n}\n\nscore = Math.round(score/numQues*100);\nform.percentage.value = score + \"%\";\n\nvar correctAnswers = \"\";\nfor (i=1; i&lt;=numQues; i++) {\ncorrectAnswers += i + \". \" + answers[i-1] + \"\\r\\n\";\n}\nform.solutions.value = correctAnswers;\n\n}\n</code></pre></p> </li> <li> <p>fichier <code>style.css</code> : CSS<pre><code>body{ background-color: #a0b6e7;\n}\n\nspan{\nbackground-color: #e7b4a0;\nborder-width:2px;\nborder-style:outset;\nborder-color:black;\nborder-radius: 10px;\npadding: 5px;\n}\n</code></pre></p> </li> </ul> <p>Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://qcmscore.nsimeyroneinc.repl.co.</p> <p>En savoir plus  - le guide JavaScript de la fondation Mozilla : https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide - le cours d'OpenClassrooms : https://openclassrooms.com/fr/courses/2984401-apprenez-a-coder-avec-javascript</p>"},{"location":"T04_IHMWeb/T4.2_Interactions/T4.2_Js/#exercice","title":"Exercice","text":"<ul> <li>Reprenez votre site et rajoutez du JavaScript pour la rendre dynamique. Faites ce que vous voulez !</li> </ul>"},{"location":"T04_IHMWeb/T4.3_HTTP/T4.3_HTTP/","title":"T4.3 Protocole HTTP","text":""},{"location":"T04_IHMWeb/T4.3_HTTP/T4.3_HTTP/#431-le-protocole-http-des-requetes-et-des-reponses","title":"4.3.1 Le protocole HTTP : des requ\u00eates et des r\u00e9ponses","text":"<p>HTTP (HyperText Transfer Protocol) est le protocole qui r\u00e9git la communication entre :  </p> <ul> <li>le client (la machine de l'utilisateur qui souhaite obtenir une page web). On dit que le client effectue une requ\u00eate.  </li> <li>le serveur (la machine sur laquelle sont stock\u00e9s les fichiers n\u00e9cessaires \u00e0 l'affichage de cette page web). Le serveur va renvoyer une r\u00e9ponse.</li> </ul> <p></p>"},{"location":"T04_IHMWeb/T4.3_HTTP/T4.3_HTTP/#432-deroule-dune-requete","title":"4.3.2 D\u00e9roul\u00e9 d'une requ\u00eate","text":"<p>Prenons pour exemple la requ\u00eate d'un navigateur vers la page : http://lyceevalois.com/nsi/bellepage.html </p> <ul> <li>le navigateur analyse l'url : la demande concerne la page <code>nsi/bellepage.html</code>, stock\u00e9e sur le serveur <code>lyceevalois.com</code>.  </li> <li>une demande est pr\u00e9alablement effectu\u00e9e aupr\u00e8s pour obtenir l'adresse IP du serveur <code>lyceevalois.com</code>. Ici, l'adresse IP sera <code>2001:41d0:1:1b00:213:186:33:4</code> (au format Ipv6, on la retrouvera dans la capture de la fen\u00eatre d'Outils de dev\u00e9loppement).</li> <li>la requ\u00eate est effectu\u00e9e sur le port 80 de l'adresse <code>2001:41d0:1:1b00:213:186:33:4</code>.</li> <li>la r\u00e9ponse est envoy\u00e9e au navigateur, qui en extrait la charge utile et proc\u00e8de \u00e0 l'affichage de la page.</li> </ul>"},{"location":"T04_IHMWeb/T4.3_HTTP/T4.3_HTTP/#433-analyse-dune-requete","title":"4.3.3 Analyse d'une requ\u00eate","text":"<p>Avec un navigateur</p> <p>Ouvrir le lien pr\u00e9c\u00e9dent avec Firefox, puis ouvrir les \u00abOutils de d\u00e9veloppement\u00bb (clic droit sur la page web puis \u00abInspecter\u00bb, ou <code>Ctrl+Maj+I</code>). S\u00e9lectionner l'onglet \u00abR\u00e9seau\u00bb, puis cliquer sur la premi\u00e8re ligne, vous devez obtenir ceci (ou \u00e0 peu pr\u00e8s):</p> <p> </p> <p>Observons \u00e0 partir de l'Inspecteur d'\u00e9l\u00e9ment d'un navigateur (ici Firefox) les informations qui transitent lors de la requ\u00eate et de la r\u00e9ponse.</p> URL et m\u00e9thode GETStructure de la r\u00e9ponseRemarque <p>La requ\u00eate de type GET vers l'url <code>http://lyceevalois.com/nsi/bellepage.html</code> a g\u00e9n\u00e9r\u00e9 un code de r\u00e9ponse 200 OK, ce qui signifie que la requ\u00eate a \u00e9t\u00e9 trait\u00e9e et que la r\u00e9ponse contenant la page a \u00e9t\u00e9 envoy\u00e9e.</p> <p>On peut trouver \u00e0 l'adresse https://developer.mozilla.org/fr/docs/Web/HTTP/Status la totalit\u00e9 des codes de r\u00e9ponse possibles. </p> <p>Citons par exemple : </p> <ul> <li>304 Not Modified : la page n'a pas eu besoin d'\u00eatre renvoy\u00e9e, elle indique au navigateur d'aller la rechercher dans son cache. </li> <li>403 Forbidden : le client n'a pas le droit d'acc\u00e8s \u00e0 la page.</li> <li>404 Not Found : la page demand\u00e9e est introuvable</li> <li>500 Internal Server Error : le serveur a rencontr\u00e9 une erreur qu'il ne sait pas traiter.</li> </ul> <p>En observant la taille totale des donn\u00e9es transf\u00e9r\u00e9es (326 octets), on peut comprendre que la r\u00e9ponse faite par le serveur est constitu\u00e9e :</p> <ul> <li>d'un en-t\u00eate (326 octets) qui contient : \ud83d\udccb Algo<pre><code>HTTP/1.1 200 OK\ndate: Sun, 05 Jun 2022 15:29:46 GMT\ncontent-type: text/html\ncontent-length: 114\nserver: Apache\naccept-ranges: none\nvary: Accept-Encoding\ncontent-encoding: gzip\nx-iplb-request-id: 2A010E0A014961907C271B558D29C44A:CDC4_200141D000011B000213018600330004:0050_629CCBE4_09CC:1CBC3\nx-iplb-instance: 31974\n</code></pre></li> <li>du corps de la r\u00e9ponse (dont on sait d'apr\u00e8s l'en-t\u00eate qu'il p\u00e8se 114 octets). Ce corps de la r\u00e9ponse est la charge utile de la r\u00e9ponse. Elle contient ici le code html de la page (voir onglet \u00abR\u00e9ponse\u00bb: HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Waouh&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\nCeci est vraiment une jolie page web.\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></li> </ul> <p>On peut observer que le navigateur a aussi effectu\u00e9 (de sa propre initiative) une requ\u00eate vers un fichier <code>favicon.ico</code> qui est l'icone de la page web dans les onglets du navigateur ou la barre de favoris. Ce fichier n'a pas \u00e9t\u00e9 trouv\u00e9 sur le serveur d'o\u00f9 la r\u00e9ponse 404.</p> <p>De mani\u00e8re g\u00e9n\u00e9rale, une requ\u00eate vers un site web moins \u00e9l\u00e9mentaire va occasionner une multitude de r\u00e9ponses (essayer avec le site web de votre choix).</p> <p>Avec Python</p> <p>On peut effectuer des requ\u00eates HTTP avec le module <code>requests</code> (entre autres). Par exemple:</p> \ud83d\udc0d Script Python<pre><code>import requests\nr = requests.get('http://lyceevalois.com/nsi/bellepage.html')\n</code></pre> <p>On peut r\u00e9cup\u00e9rer les informations pr\u00e9c\u00e9dentes:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; r\n&lt;Response [200]&gt;\n&gt;&gt;&gt; r.headers\n{'date': 'Sun, 05 Jun 2022 16:26:27 GMT', 'content-type': 'text/html', 'content-length': '114', 'server': 'Apache', 'accept-ranges': 'bytes', 'vary': 'Accept-Encoding', 'content-encoding': 'gzip', 'x-iplb-request-id': '2A010E0A014961907C271B558D29C44A:D110_200141D000011B000213018600330004:0050_629CD934_10A81:D667', 'x-iplb-instance': '31965'}\n&gt;&gt;&gt; r.content\nb'&lt;!DOCTYPE html&gt;\\n&lt;html&gt;\\n&lt;head&gt;\\n&lt;title&gt;Waouh&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\nCeci est vraiment une jolie page web.\\n&lt;/body&gt;\\n&lt;/html&gt;\\n'\n&gt;&gt;&gt; r.text\n'&lt;!DOCTYPE html&gt;\\n&lt;html&gt;\\n&lt;head&gt;\\n&lt;title&gt;Waouh&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\nCeci est vraiment une jolie page web.\\n&lt;/body&gt;\\n&lt;/html&gt;\\n'\n</code></pre>"},{"location":"T04_IHMWeb/T4.4_RequetesFormulaire/T4.4_Get_post/","title":"T4.4 Formulaires, m\u00e9thodes GET et POST","text":""},{"location":"T04_IHMWeb/T4.4_RequetesFormulaire/T4.4_Get_post/#441-pages-web-dynamiques","title":"4.4.1 Pages web dynamiques","text":"<p>Jusqu'\u00e0 pr\u00e9sent, toutes les pages que nous avons \u00e9tudi\u00e9es ou cr\u00e9\u00e9es (avec ou sans Javascript)  sont uniform\u00e9ment envoy\u00e9es par le serveur au client. Aucune \u00abpr\u00e9paration\u00bb de la page en amont n'a lieu sur le serveur, aucun dialogue n'a lieu avec le serveur une fois que la page a \u00e9t\u00e9 livr\u00e9e. \u00c9videmment, si le web \u00e9tait comme ceci, il ne serait qu'une gigantesque biblioth\u00e8que en consultation seule (ce fut le cas pendant longtemps, et ce qui n'\u00e9tait d\u00e9j\u00e0 pas si mal).</p> <p>Les langages serveurs, parmi lesquels PHP (pr\u00e9sent sur environ 80% des serveurs), Python (via le framework Django), Java, Ruby, C#, permettent de rajouter de l'interactivit\u00e9 c\u00f4t\u00e9 serveur.</p> <p>Pages c\u00f4t\u00e9 serveur</p> Page statiquePage dynamique <p>Lors d'une requ\u00eate d'un client vers un serveur, si le client demande la page <code>bellepage.html</code>, une copie exacte du fichier <code>bellepage.html</code> est transmise au client sur sa machine. </p> <p>Une page web peut \u00eatre \u00abfabriqu\u00e9e\u00bb \u00e0 la demande pour le client, \u00e0 l'aide d'un langage comme PHP par exemple.</p> <p> </p> <p>Par exemple, consulter la page http://lyceevalois.com/nsi/form_cg/date.php.</p> <p>Le contenu de cette page est:</p> PHP<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;title&gt;Quel jour sommes-nous&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;p&gt;\n&lt;?php\n    $date = date(\"d-m-Y\");\n    Print(\"Nous sommes le $date\");\n    ?&gt;\n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En consultant le code source, on constate que la balise <code>&lt;?php&gt;</code> a produit du code HTML, \u00e0 la demande (ici une simple consultation de la page) du client.</p>"},{"location":"T04_IHMWeb/T4.4_RequetesFormulaire/T4.4_Get_post/#442-formulaires","title":"4.4.2 Formulaires","text":"<p>Un formulaire HTML est cr\u00e9\u00e9 \u00e0 l'aide de la balise <code>&lt;form&gt;</code> et contient des champs de saisie appel\u00e9s <code>&lt;input&gt;</code> de diff\u00e9rents types (cf. le quiz cr\u00e9\u00e9 en T4.2).</p> <p>Les param\u00e8tres du formulaire peuvent alors \u00eatre transmis via le protocole HTTP par deux m\u00e9thodes: la m\u00e9thode GET ou la m\u00e9thode POST.</p> <p>M\u00e9thode GET</p> <p>Voici un exemple de formulaire, inclus dans une page html ouverte dans le navigateur du client :</p> HTML<pre><code>Le mot de passe est :\n&lt;form action=\"cible.php\" method=\"get\"&gt;\n&lt;p&gt;\n    &lt;input type=\"password\" name=\"pass\" /&gt; \n    &lt;input type=\"submit\" value=\"Valider\" /&gt;\n&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> <p>Description:</p> <ul> <li>le fichier <code>cible.php</code> est le fichier sur le serveur qui recevra les param\u00e8tres contenus dans le formulaire.</li> <li>le param\u00e8tre sera nomm\u00e9 <code>pass</code> et sera de type <code>password</code>, ce qui signifie qu'on n'affichera pas les caract\u00e8res tap\u00e9s par l'utilisateur. On aurait pu aussi avoir un type :<ul> <li><code>text</code> : le texte s'affiche en clair (pour les login par ex) </li> <li><code>radio</code> : pour une s\u00e9lection (d'un seul \u00e9l\u00e9ment)</li> <li><code>checkbox</code> : pour une s\u00e9lection (\u00e9ventuellement multiple)</li> </ul> </li> <li>un bouton comportant le label \u00abValider\u00bb d\u00e9clenchera l'envoi (gr\u00e2ce au type particulier <code>submit</code>) des param\u00e8tres (ici un seul, la variable <code>pass</code>) au serveur.</li> </ul> <p>Exercice  1: m\u00e9thode GET et confidentialit\u00e9</p> \u00c9nonc\u00e9Correction <ol> <li>Aller \u00e0 l'adresse http://lyceevalois.com/nsi/form_cg/test_get.html et tester un mot de passe.</li> <li>Observer attentivement l'url de la page obtenue. Que remarque-t-on ?</li> </ol> <p>Les param\u00e8tres pass\u00e9s au serveur par la m\u00e9thode GET sont transmis dans l'url de la requ\u00eate. Ils sont donc lisibles en clair par n'importe qui.</p> <p></p> <p>\u00c9videmment, c'est une m\u00e9thode catastrophique pour la transmission des mots de passe. Par contre, c'est une m\u00e9thode efficace pour acc\u00e9der directement \u00e0 une page particuli\u00e8re : ainsi l'url https://www.google.fr/search?q=angouleme nous am\u00e8nera directement au r\u00e9sultat de la recherche Google sur le mot-cl\u00e9 \u00abangouleme\u00bb.</p> <p>M\u00e9thode POST</p> <p>Dans le code du formulaire pr\u00e9c\u00e9dent, on modifie l'attribut <code>method</code>, auparavant \u00e9gal \u00e0 <code>\"get\"</code> et le changeant par<code>\"post\"</code>  :</p> HTML<pre><code>Le mot de passe est :\n&lt;form action=\"cible.php\" method=\"get\"&gt;\n&lt;p&gt;\n    &lt;input type=\"password\" name=\"pass\" /&gt; \n    &lt;input type=\"submit\" value=\"Valider\" /&gt;\n&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> <p>Exercice  2: m\u00e9thode POST et confidentialit\u00e9</p> \u00c9nonc\u00e9Correction <ol> <li>Aller \u00e0 l'adresse http://lyceevalois.com/nsi/form_cg/test_post.html et tester un mot de passe.</li> <li>Observer attentivement l'url de la page obtenue. Que remarque-t-on ?</li> <li>Inspecter la page et retrouver le mot de passe que vous avez saisi.</li> </ol> <p>Les param\u00e8tres pass\u00e9s au serveur par la m\u00e9thode POST ne sont pas visibles dans l'url de la requ\u00eate. Ils sont contenus dans le corps de la requ\u00eate, mais non affich\u00e9s sur le navigateur.</p> <p>Ce n'est pas pour autant que la transmision est bien s\u00e9curis\u00e9e par la m\u00e9thode POST ! Si le protocole de transmission est du <code>http</code> et non pas du <code>https</code>, n'importe qui interceptant le trafic peut lire le contenu de la requ\u00eate et y trouver le mot de passe en clair.</p> <p>Le passage en <code>https</code> chiffre le contenu de la requ\u00eate et emp\u00eache donc la simple lecture du mot de passe.</p> <p>En r\u00e9sum\u00e9 : quand utiliser GET ou POST ?</p> <ul> <li> <p>GET : la m\u00e9thode GET doit \u00eatre utilis\u00e9e quand les param\u00e8tres \u00e0 envoyer :</p> <ul> <li>n'ont pas de caract\u00e8re confidentiel. </li> <li>n'ont pas vocation \u00e0 cr\u00e9er des modifications sur le serveur (ceci est plus une bonne pratique qu'une interdiction technique)</li> <li>ne sont pas trop longs. En effet, vu qu'ils seront contenus dans l'url, il peut exister des limites de longueur sp\u00e9cifiques au navigateur. Une taille inf\u00e9rieure \u00e0 2000 caract\u00e8res est conseill\u00e9e.</li> </ul> </li> <li> <p>POST : la m\u00e9thode POST doit \u00eatre utilis\u00e9e quand les param\u00e8tres \u00e0 envoyer :</p> <ul> <li>ont un caract\u00e8re confidentiel (attention, \u00e0 coupler imp\u00e9rativement avec un protocole de chiffrement).</li> <li>peuvent avoir une longueur tr\u00e8s importante (le param\u00e8tre \u00e9tant dans le corps de la requ\u00eate et non plus dans l'url, sa longueur peut \u00eatre arbitraire).</li> <li> <p>ont vocation \u00e0 provoquer des changements sur le serveur. Ainsi, un ordre d'achat sur un site de commerce sera n\u00e9cessairement pass\u00e9 par une m\u00e9thode POST. Les navigateurs pr\u00e9viennent alors le risque de \u00abdouble commande\u00bb lors d'une actualisation malencontreuse de la page par l'utilisateur par la fen\u00eatre :</p> <p></p> <p>Cette fen\u00eatre est caract\u00e9ristique de l'utilisation d'une m\u00e9thode POST.</p> </li> </ul> </li> </ul>"},{"location":"T04_IHMWeb/T4.4_RequetesFormulaire/T4.4_Get_post/#443-avec-python","title":"4.4.3 Avec Python","text":"<p>Au chapitre pr\u00e9c\u00e9dent, on a vu comment effectuer une requ\u00eate par m\u00e9thode GET. L'objectif de cette partie est de trouver le mot de passe demand\u00e9 sur la page pr\u00e9c\u00e9dente par brute force.</p> <p> </p> <p>Le principe est simple:</p> <ul> <li>on effectue une premi\u00e8re requ\u00eate dont on sait que le mot de passe est erron\u00e9 pour r\u00e9cup\u00e9rer le <code>text</code> de la page correspondante \u00e0 un mauvais mot de passe;</li> <li>on recommence en testant tous les mots de passe d'une liste de mots de passe jusqu'\u00e0 ce que le <code>text</code> ne soit pas celui m\u00e9moris\u00e9 \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente.</li> </ul> <p>Pour cela on a donc besoin d'une liste de mots de passe. On pourra utiliser celle-ci qui est un extrait du leak du site Rockyou en 2009 et dont le mot de passe \u00e0 trouver fait partie.</p> <p>Pour lire et charger dans une liste le contenu d'un fichier texte, voir ici.</p>"},{"location":"T05_Architectures/accueil/","title":"Architectures mat\u00e9rielles et syst\u00e8mes d'exploitation","text":"<p>Les circuits \u00e9lectroniques sont au c\u0153ur de toutes les machines informatiques. Les r\u00e9seaux permettent de transmettre l\u2019information entre machines. Les syst\u00e8mes d\u2019exploitation g\u00e8rent et optimisent l\u2019ensemble des fonctions de la machine, de l\u2019ex\u00e9cution des programmes aux entr\u00e9es-sorties et \u00e0 la gestion d\u2019\u00e9nergie.</p> <p> </p>"},{"location":"T05_Architectures/index_archi/","title":"Th\u00e8me 5 : Architectures mat\u00e9rielles et syst\u00e8mes d'exploitation","text":"<p>Les circuits \u00e9lectroniques sont au c\u0153ur de toutes les machines informatiques. Les r\u00e9seaux permettent de transmettre l\u2019information entre machines. Les syst\u00e8mes d\u2019exploitation g\u00e8rent et optimisent l\u2019ensemble des fonctions de la machine, de l\u2019ex\u00e9cution des programmes aux entr\u00e9es-sorties et \u00e0 la gestion d\u2019\u00e9nergie.</p> <ul> <li>\u25a1 Architecture Von Neumann  </li> <li>\ud83d\uddf9 Architecture r\u00e9seau  </li> <li>\u25a1 Protocoles de communication dans un r\u00e9seau  </li> <li>\u25a1 D\u00e9couverte des commandes Linux   </li> </ul> <p> </p>"},{"location":"T05_Architectures/T5.1_VonNeumann/T5.1_VonNeumann/","title":"T5.1 Architecture de Von Neumann","text":"<p>Objectif</p> <p>L'objectif de cette section est de vous faire d\u00e9couvrir (par vous-m\u00eame):</p> <ul> <li>les principaux composants mat\u00e9riels d'un ordinateur ;</li> <li>le principe de l'architecture de Von Neumann qui est le principal mod\u00e8le de construction des ordinateurs;</li> <li>en quoi consiste un syst\u00e8me d'exploitation (souvent abr\u00e9g\u00e9 OS comme Operating System).</li> </ul> <p>Rendu du travail</p> <p>Vous devrez rendre sur Moodle une archive <code>zip</code> contenant les fichiers (<code>html</code>, <code>css</code>, images...) d'un mini site web comportant:</p> <ul> <li>une page d'accueil avec des liens vers chaque partie;</li> <li>une page par composant;</li> <li>une page sur l'architecture de von Neumann;</li> <li>une page sur le r\u00f4le du syst\u00e8me d'exploitation et quelques exemples des OS les plus r\u00e9pandus.</li> </ul> <p> </p> <p>Consignes</p> <p>En travaillant par groupe de 4/5 \u00e9l\u00e8ves:</p> \u00c9tape 1\u00c9tape 2\u00c9tape 3\u00c9tape 4 <p>D\u00e9monter l'ordinateur fourni (attention, il faudra le remonter...) et identifier les composants suivants (prendre des photos):</p> <ul> <li>la carte m\u00e8re</li> <li>la RAM</li> <li>le disque dur</li> <li>le micro-processeur</li> <li>la carte graphique</li> </ul> <p>Remonter les composants...</p> <p>Se r\u00e9partir au sein du groupe les composants et faire des recherches sur le web sur ces composants.</p> <p>Se r\u00e9partir \u00e9galement les autres pages, ainsi que la r\u00e9alisation d'un fichier <code>css</code>.</p> <p>Construire le site web.</p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/","title":"T5.2 OS et commandes UNIX","text":""},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#521-systeme-dexploitation","title":"5.2.1 Syst\u00e8me d'exploitation","text":"<p>Le syst\u00e8me d\u2019exploitation (OS) est le logiciel syst\u00e8me qui g\u00e8re l'ordinateur, en jouant un r\u00f4le d\u2019interm\u00e9diaire entre les programmes, les \u00e9l\u00e9ments mat\u00e9riels de l\u2019ordinateur (notamment la m\u00e9moire) ainsi que les p\u00e9riph\u00e9riques d'entr\u00e9e/sortie. C\u2019est le premier programme ex\u00e9cut\u00e9 au d\u00e9marrage de la machine, et c\u2019est le seul qui reste en permanence en ex\u00e9cution.</p> <p> </p> <p>La partie de l'OS qui g\u00e8re la communication avec les \u00e9l\u00e9ments mat\u00e9riels s'appelle  le noyau (kernel).</p> <p>Outre le noyau, l'OS comporte des applications, une interface graphique, la gestion des fichiers, le terminal...</p> <p>Historiquement, les premiers syst\u00e8mes d\u2019exploitation ne disposaient pas d\u2019interface graphique. D\u2019ailleurs, \u00e0 cette \u00e9poque, la souris n\u2019existait m\u00eame pas. On interagissait donc avec le syst\u00e8me essentiellement par \u00e9change de texte. L\u2019\u00e9cran servait \u00e0 recevoir les infor- mations fournies par le syst\u00e8me sous forme de phrase, d\u2019affichage de valeur ou de tableau textuel. Aujourd\u2019hui, m\u00eame si les interfaces graphiques modernes permettent d\u2019effectuer la plupart des op\u00e9rations, il est important de connaitre quelques-unes de ces lignes de commandes qui se saisissent dans un (\u00e9mulateur de) terminal, qui lance un shell par d\u00e9faut.</p> <p>Vocabulaire</p> TerminalShellCommande <p> </p> <p>L'\u00e9mulateur de terminal (souvent appel\u00e9 terminal tout court) est un programme qui s'ex\u00e9cute dans le gestionnaire de fen\u00eatre. Il sert \u00e0 ex\u00e9cuter des programmes en mode texte, c'est-\u00e0-dire o\u00f9 toute l'interaction avec l'utilisateur se fait avec l'\u00e9cran (pour afficher du texte) et le clavier (pour lire du texte). </p> <p>Par d\u00e9faut le terminal ex\u00e9cute un shell.</p> <p>Il existe de nombreux \u00e9mulateurs de terminaux sous Unix: xterm, rxvt-unicode, LXTerminal, gnome-terminal, konsole, xfce4-terminal...</p> <p>Le shell (aussi appel\u00e9 invite de commande ou interpr\u00e9teur de commandes) est un programme avec une interface en mode texte. Le shell affiche un prompt (repr\u00e9sent\u00e9 par le symbole $) et lit les commandes tap\u00e9es par l'utilisateur. Ces commandes permettent d'effectuer des t\u00e2ches courantes sur les fichiers et r\u00e9pertoires, de lancer d'autres programmes, etc. Le shell offre aussi un langage permettant d'effectuer des t\u00e2che conditionnelles et / ou r\u00e9p\u00e9titive \u00e0 l'aide de structures de controle (conditionnelles, boucles for et while, etc.) Les suites de commandes que l'on souhaite r\u00e9utiliser peuvent \u00eatre sauvegard\u00e9es dans un fichier appel\u00e9 script.</p> <p>Il existe de nombreux shell sous Unix. Les plus utilis\u00e9s dans le monde Linux sont bash et zsh.</p> <p>Une commande est en g\u00e9n\u00e9ral un petit programme externe lanc\u00e9 par le shell. Par exemple, la commande <code>ls</code> permet d'afficher la liste des fichiers contenus dans le r\u00e9pertoire courant. Il est \u00e9galement possible d'ex\u00e9cuter des programmes tr\u00e8s complexes (comme un traitement de texte ou un navigateur internet), mais cela est rarement fait depuis le shell.</p> <p>Principalement, les commandes servent \u00e0 lancer des petits programmes ou \u00e0 travailler sur les fichiers et les r\u00e9pertoires. Dans les syst\u00e8mes de type \"UNIX\" (par exemple GNU/Linux ou macOS), nous avons un syst\u00e8me de fichier en arborescence : </p> <p> </p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#522-commandes","title":"5.2.2 Commandes","text":"<p>Pour d\u00e9couvrir un certain nombre de commandes UNIX, parmi les plus courantes, nous allons jouer \u00e0 un jeu:</p> <p> </p> <p>Travail \u00e0 faire</p> <p>En jouant \u00e0 Terminus: </p> <ul> <li>noter au fur et \u00e0 mesure les commandes d\u00e9couvertes, \u00e0 quoi elles servent et comment on les utilise (tableau conseill\u00e9):</li> </ul> Nom de la commande Description Utilisation <code>ls</code> Lister les \u00e9l\u00e9ments du dossier Saisir <code>ls</code> puis Entr\u00e9e <ul> <li>faire un plan du jeu sous forme d'une arborescence, par exemple:</li> </ul> <p> </p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#523-complements-sur-les-commandes","title":"5.2.3 Compl\u00e9ments sur les commandes","text":"<p>On reprend l'exemple de l'arborescence du dossier <code>/home/jeanmichel/</code> de l'ordinateur de Jean-Michel du DS 6:</p> \ud83d\udccb Algo<pre><code>.\n+-- Travail\n|   +-- reforme\n|   +-- HTML\n|   |   +-- images\n|   |   |   +-- toto.png\n|   |   |   +-- tata.png\n|   |   |   +-- tutu.png\n|   |   +-- styles\n|   |   |   +-- style.css\n|   |   +-- scripts\n|   |   |   +-- script.js\n|   |   +-- index.html\n|   |   +-- page1.html\n|   |   +-- page2.html\n+-- Photos\n|   +-- Ibiza\n|   |   +-- reveillon.png    \n</code></pre> <p>Chemins</p> <p>On a vu la commande <code>cd</code> qui permet de changer de r\u00e9pertoire (dossier). Par exemple, pour aller dans le r\u00e9pertoire <code>images</code> depuis la racine, on peut taper successivement: Bash<pre><code>~$ cd Travail/\n~/Travail$\u00a0cd HTML/\n~/Travail/HTML$ cd images/\n~/Travail/HTML/images$\n</code></pre></p> <p>On peut plus rapidement pr\u00e9ciser le chemin: Bash<pre><code>~$ cd Travail/HTML/images/\n~/Travail/HTML/images$\n</code></pre></p> <p>Pour revenir \u00e0 la racine <code>/home/jeanmichel/</code>, on peut taper successivement 3 fois la commande <code>cd ..</code>, ou bien plus rapidement: Bash<pre><code>~/Travail/HTML/images$ cd ../../../\n~$\n</code></pre></p> <p>Et pour aller du r\u00e9pertoire <code>images</code> au r\u00e9pertoire <code>scripts</code>, on tapera: Bash<pre><code>~/Travail/HTML/images$ cd ../scripts/\n~/Travail/HTML/scripts$\n</code></pre></p> <p>Options et arguments</p> OptionsArguments <p>On peut ajouter aux commandes UNIX une ou plusieurs options, qui s'\u00e9crivent soit:</p> <ul> <li>avec une lettre pr\u00e9c\u00e9d\u00e9e d'un tiret;</li> <li>avec un mot-cl\u00e9 pr\u00e9c\u00e9d\u00e9 de 2 tirets.</li> </ul> Exemple avec <code>ls</code>Exemple avec <code>rm</code> <p>Tester par exemple dans un de vos r\u00e9pertoires les commandes suivantes: Bash<pre><code>$ ls\n$ ls -l\n$ ls -l -h </code></pre></p> <p>Attention, l'usage de <code>rm</code> est dangereux, soyez attentif !</p> <p>La commande <code>rm</code> permet de supprimer d\u00e9finitivement un fichier, il n'y a pas de corbeille dans le shell! Mais pas un r\u00e9pertoire non vide. </p> <p>Pour effacer tous les fichiers d'un r\u00e9pertoire: Bash<pre><code>$ rm *\n</code></pre></p> <p>Et pour supprimer tout le contenu d'un r\u00e9pertoire, y compris les sous-r\u00e9pertoires, on utilise l'option <code>-r</code>: Bash<pre><code>$ rm -r *\n</code></pre></p> <p>On peut parfois pr\u00e9ciser plusieurs arguments \u00e0 une commande pour ne pas r\u00e9p\u00e9ter plusieurs fois son utilisation. Par exemple pour cr\u00e9er deux r\u00e9pertoires <code>images/</code> et <code>data/</code>   en m\u00eame temps dans le r\u00e9pertoire courant: Bash<pre><code>$ mkdir images/ data/\n</code></pre> Et trois fichiers <code>toto.txt</code>,  <code>tata.txt</code> et  <code>tutu.txt</code>: Bash<pre><code>$ touch toto.txt tata.txt tutu.txt\n</code></pre></p> <p>\u00c0 propos de <code>grep</code></p> <p>Comme vu dans l'activit\u00e9 \u00abTerminus\u00bb, la commance <code>grep</code> permet de rechercher une cha\u00eene de caract\u00e9res dans un fichier. La syntaxe g\u00e9n\u00e9rale est: Bash<pre><code>$ grep options \"recherche\" chemin\n</code></pre> Voici quelques options utiles:</p> <ul> <li><code>--ignore-case</code> ou <code>-i</code> : pour ignorer la casse (minuscules/majuscules indiff\u00e9rentes);</li> <li><code>-c</code> : pour afficher seulement le nombre d'occurences de la recherche;</li> <li><code>-l</code> : pour afficher le nom des fichiers contenant la recherche (<code>chemin</code> est alors un r\u00e9pertoire);</li> <li><code>-r</code> : pour rechercher dans tous les fichiers et sous-r\u00e9pertoires de <code>chemin</code>, qui est un r\u00e9pertoire.</li> </ul> <p>Pour rechercher dans plusieurs fichiers (comme dans l'activit\u00e9 Terminus) on peut utiliser <code>*</code> qui remplace n'importe quel mot. Par exemple, pour rechercher <code>'password'</code> dans tous les fichiers <code>txt</code> de l'activit\u00e9, on aurait pu taper: Bash<pre><code>$ grep 'password' *.txt\n</code></pre></p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#524-utilisateurs-et-droits","title":"5.2.4 Utilisateurs et droits","text":"<p>Un syst\u00e8me UNIX est un syst\u00e8me multi-utilisateur. Toute personne physique ou tout programme interagissant avec le syst\u00e8me est un utilisateur (user). Cet utilisateur est authentifi\u00e9 sur le syst\u00e8me par un nom unique et un identifiant unique (UID). Chaque utilisateur poss\u00e8de certains droits lui permettant d'effectuer certaines op\u00e9rations et pas d'autres (avoir acc\u00e8s aux r\u00e9pertoires et fichiers, aux p\u00e9riph\u00e9riques, installer des logiciels...).</p> <p>Pour conna\u00eetre les utilisateurs de votre syst\u00e8me, on consulte le fichier <code>/etc/passwd</code> (faites-le) o\u00f9 on trouve tous les utilisateurs au format:</p> Bash<pre><code>nom:motdepasse:UID:GID:informations:repertoire:shell\n</code></pre> <p>Chaque utilisateur appartient \u00e0 un ou plusieurs groupes, qui servent \u00e0 ressembler plusieurs utilisateurs pour leur attribuer des droits (permissions d'acc\u00e8s) communs aux fichiers ou applications.</p> <p>Pour conna\u00eetre les utilisateurs de votre syst\u00e8me, on consulte le fichier <code>/etc/group</code> (faites-le).</p> <p> </p> <p>Parmi les utilisateurs, il y a un super-utilisateur appel\u00e9 <code>root</code> qui a tous les pouvoirs sur le syst\u00e8me. Son UID est 0. Pour ex\u00e9cuter une commande r\u00e9serv\u00e9e au super-utilisateur, un utilisateur doit utiliser la commande <code>sudo</code> (super user do) qui n\u00e9cessite de conna\u00eetre le mot de passe root qui en g\u00e9n\u00e9ral n'est connu que de l'administrateur du syst\u00e8me.</p> <p>En particulier le super-utilisateur peut modifier les droits (en attribuer ou en retirer) des utilisateurs et des groupes.</p> <p>Les types de droits <code>r-w-x</code></p> <ul> <li>les droits en lecture (symbolis\u00e9s par la lettre <code>r</code>) : il est possible de lire le contenu de ce fichier</li> <li>les droits en \u00e9criture (symbolis\u00e9s par la lettre <code>w</code>) : il est  possible de modifier le contenu de ce fichier</li> <li>les droits en ex\u00e9cution (symbolis\u00e9s par la lettre <code>x</code>) : il est possible d'ex\u00e9cuter le contenu de ce fichier (quand le fichier est du code ex\u00e9cutable)</li> </ul> <p>Les types d'utilisateurs <code>u-g-o</code></p> <p>Tout fichier UNIX:</p> <ul> <li>poss\u00e8de un propri\u00e9taire (par d\u00e9faut l'utilisateur qui l'a cr\u00e9\u00e9) : u comme user;</li> <li>est associ\u00e9 \u00e0 un groupe dont on d\u00e9finit les actions sur ce fichier: g comme group;</li> <li>peut \u00eatre \u00e9ventuellement manipul\u00e9 par tous les autres utilisateurs : o comme others.</li> </ul> <p>Lecture des droits</p> <p>Voici ce que me donne la commande <code>ls</code> avec l'option <code>-l</code> pour obtenir des informations sur le contenu du r\u00e9pertoire <code>/Travail/1NSI/Archi/</code>:</p> <p> </p> <ul> <li>Le premier caract\u00e8re <code>-</code> ou <code>d</code> indique s'il s'agit d'un fichier ou d'un r\u00e9pertoire;</li> <li>les 9 caract\u00e8res suivants repr\u00e9sentent dans l'ordre les droits pour les 3 types d'utilisateurs (par paquets de 3 caract\u00e8res), dans l'ordre ugo. Par exemple pour le premier fichier, le propri\u00e9taire u a les droits <code>rw-</code>, c'est-\u00e0-dire lecture, \u00e9criture, pas d'\u00e9x\u00e9cution (il ne s'agit pas d'un fichier ex\u00e9cutable), les utilisateurs du groupe ont les m\u00eames droits <code>rw-</code> et les autres utilisateurs o ont les droits <code>r--</code>, c'est-\u00e0-dire seulement lecture. Pour les dossiers, tous les utilisateurs ont le droit d'\u00e9x\u00e9cution <code>x</code>, qui consiste \u00e0 explorer le r\u00e9pertoire.</li> <li>ensuite on lit le nombre de liens (notion non \u00e9tudi\u00e9e cette ann\u00e9e);</li> <li>on trouve ensuite le nom du propri\u00e9taire du fichier, le nom du groupe, la taille du fichier en octets, la date et l'heure de la derni\u00e8re modification et enfin le nom du fichier ou r\u00e9pertoire.</li> </ul> <p> </p> <p>Modification des droits</p> <p>Il est important de ne pas perdre de vu que l'utilisateur \"root\" a la possibilit\u00e9 de modifier les droits de tous les utilisateurs.</p> <p>Le propri\u00e9taire d'un fichier peut \u00e9galement modifier les permissions d'un fichier ou d'un r\u00e9pertoire \u00e0 l'aide de la commande <code>chmod</code>. </p> <p>Elle s'utilise ainsi, en pr\u00e9cisant l'utilisateur (a pour tous), l'ajout + ou la suppression - ou la r\u00e9initialisation = de la permission et enfin le type de permission:</p> <p>Bash<pre><code>chmod [u g o a] [+ - =] [r w x] nom_du_fichier\n</code></pre> Par exemple,  Bash<pre><code>chmod g+w toto.txt\n</code></pre> attribuera la permission \"\u00e9criture\" au groupe associ\u00e9 au fichier <code>toto.txt</code>.</p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#525-exercices","title":"5.2.5 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9 partie 1\u00c9nonc\u00e9 partie 2Correction <p>D\u00e9crire (papier/crayon) l'effet de chacune des commandes suivantes en supposant qu'elle sont ex\u00e9cut\u00e9es les unes \u00e0 la suite des autres.</p> <ol> <li><code>cd ~</code></li> <li><code>mkdir T5</code></li> <li><code>mkdir T5/TP_shell</code></li> <li><code>cd T5/TP_shell</code></li> <li><code>touch toto.txt</code></li> <li><code>ls -l</code></li> <li><code>chmod g-rwx,o-rwx toto.txt</code></li> <li><code>ls -l</code></li> <li><code>cd ..</code></li> <li><code>rm -r TP_shell</code></li> </ol> <p>Ouvrir un terminal et effectuer ces commandes. V\u00e9rifier que tout se d\u00e9roule comme d\u00e9crit dans la partie 1.</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On suppose que l'on se trouve dans un r\u00e9pertoire vide <code>TEST/</code> et qu'on ex\u00e9cute les commandes suivantes. Dessiner l'arborescence finale des fichiers et r\u00e9pertoires en utilisant <code>TEST/</code> comme racine de l'arborescence.</p> <ol> <li><code>mkdir series films mangas musique</code></li> <li><code>touch films/sw.txt mangas/HxH.txt</code></li> <li><code>cd series/</code></li> <li><code>mkdir ../musique/rap/ got/ oitnb/</code></li> <li><code>cd ..</code></li> <li><code>cp */*.txt series/got/</code></li> <li><code>rm -r mangas</code></li> </ol> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Consulter la page de manuel d'utilisation de la commande <code>head</code>. Trouver comment l'utiliser pour n'afficher que les 5 premi\u00e8res lignes d'un fichier <code>toto.txt</code>.</p> <p>TP not\u00e9</p> \u00c9nonc\u00e9"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/","title":"C14 Architecture d'un r\u00e9seau","text":"<p>Ce cours a pour but de pr\u00e9senter la constitution classique d'un r\u00e9seau, et les \u00e9quipements associ\u00e9s. La partie relative aux protocoles utilis\u00e9s lors des \u00e9changes entre deux machines est d\u00e9taill\u00e9e dans un cours ult\u00e9rieur sur les protocoles de communication.</p> <p>Notion de r\u00e9seau</p> <ul> <li>En g\u00e9n\u00e9ral, un r\u00e9seau est un ensemble de n\u0153uds reli\u00e9s entre eux par des liens.</li> <li>Un r\u00e9seau informatique est un r\u00e9seau dont les n\u0153uds sont des \u00e9quipements informatiques reli\u00e9s par des liens de diff\u00e9rente nature: c\u00e2bles, fibre optique, liaisons satellites, ondes radio, ...).</li> <li>Une interface est le point de raccordement entre un lien et un n\u0153ud: elle peut \u00eatre mat\u00e9rielle (carte r\u00e9seau) ou logicielle.</li> <li>Un protocole est un ensemble de r\u00e8gles permettant d'\u00e9tablir, de mener et de terminer une communication entre deux \u00e9quipements du r\u00e9seau.</li> </ul> <p>Dans ce cours, nous allons simuler un r\u00e9seau local avec le logiciel Filius install\u00e9 sur les ordinateurs du lyc\u00e9e.</p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#decouverte-de-filius","title":"D\u00e9couverte de Filius","text":"<p>lien de t\u00e9l\u00e9chargement de Filius.</p> <p></p> <p>Il existe deux modes d\u2019utilisation.  </p> <ul> <li>Pour r\u00e9aliser le circuit, on utilise le mode conception en cliquant sur l\u2019ic\u00f4ne  Les \u00e9l\u00e9ments disponibles sont dispos\u00e9s sur le bord vertical gauche de la fen\u00eatre et il suffit de les glisser/d\u00e9poser dans la zone centrale de conception.</li> <li>Pour effectuer une simulation et installer des logiciels sur les \u00e9l\u00e9ments du r\u00e9seau, on utilise le mode simulation en cliquant sur l\u2019ic\u00f4ne .  </li> </ul> <p>Pour visualiser correctement le trajet des donn\u00e9es sur le r\u00e9seau, il faut r\u00e9gler la vitesse sur une petite valeur : 10 % ou 20 %.  </p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#activite-1-connexion-pair-a-pair-de-deux-machines","title":"Activit\u00e9 1 : Connexion pair \u00e0 pair de deux machines","text":"<p>L\u2019objectif de cette partie est de relier en r\u00e9seau deux machines. Une telle connexion est dite pair \u00e0 pair. Cr\u00e9er un nouveau projet Filius et l\u2019enregistrer dans un dossier de son espace personnel sous le mon de TD_Reseau_activite1.fls.</p> <ol> <li>Passer en mode conception et cr\u00e9er un r\u00e9seau de deux machines h\u00f4tes de type portable reli\u00e9es par un c\u00e2ble.</li> <li>Faire un clic droit sur une machine et lui attribuer l\u2019adresse ip 192.168.1.1 comme ci-dessous, en s\u00e9lectionnant l\u2019option Utiliser l\u2019adresse IP comme nom.  Attribuer de m\u00eame l\u2019adresse ip 192.168.1.2 \u00e0 l\u2019autre machine. </li> <li>Adresse MAC     a. Dans Filius, l'adresse MAC est-elle modifiable ? Quel est son format ?     b. Rechercher la signification de cette adresse sur le Web.     c. Quel \u00e9l\u00e9ment d'un ordinateur est identifi\u00e9 de fa\u00e7on unique par son adresse MAC ?  </li> <li>Adresse IP     a. L'adresse IP est-elle modifiable ?     b. Filius affichera en rouge une adresse IP non valide, en testant diff\u00e9rentes valeurs   conjecturer le format d'une adresse IP valide.     c. Sur combien d'octets peut-on coder une adresse IP ?  </li> <li>Passer en mode simulation, faire un clic droit sur la machine 192.168.1.1, s\u00e9lectionner Afficher le bureau et installer l\u2019application ligne de commandes en la faisant glisser vers la zone des applications install\u00e9es \u00e0 gauche comme ci-dessous. </li> <li>Lancer l\u2019application ligne de commandes sur la machine 192.168.1.1 puis ex\u00e9cuter la commande ipconfig. Rep\u00e9rer les divers informations donn\u00e9es.</li> <li>Dans l\u2019application ligne de commandes sur la machine 192.168.1.1 ex\u00e9cuter la commande ping 192.168.1.2 pour tester la connexion vers la machine ping 192.168.1.2. Le cable devrait se colorer en vert si la connexion est correcte et les quatre paquets de donn\u00e9es envoy\u00e9s par ping devraient recevoir un \u00e9cho pong retourn\u00e9 par ping 192.168.1.2.  </li> </ol> Jeretiens <ul> <li><code>ipconfig</code> sous Windows permet de conna\u00eetre son adresse IP locale et son adresse MAC  </li> <li><code>ping</code> qui permet d\u2019envoyer des paquets de donn\u00e9es d\u2019une machine A vers une machine B.   Si la commande est ex\u00e9cut\u00e9e sur la machine A, le <code>ping</code> devra \u00eatre suivi par l\u2019adresse IP de la machine B (par exemple, si l\u2019adresse IP de B est 192.168.1.1, on aura <code>ping 192.168.1.2</code>)  </li> <li>Adresse MAC : Chaque ordinateur sur le r\u00e9seau dispose d'une adresse MAC, qui est une valeur unique attribu\u00e9e \u00e0 sa carte r\u00e9seau (Ethernet, Wifi, 4G, 5G, ...) lors de sa fabrication en usine.         Cette adresse est cod\u00e9e sur 48 bits, pr\u00e9sent\u00e9s sous la forme de 6 octets en hexad\u00e9cimal, ici <code>1F:5E:60:F0:15:23</code>.         Les trois premiers octets correspondent au code du fabricant. Un site comme https://www.macvendorlookup.com/  vous permet de retrouver le fabricant d'une adresse MAC quelconque.</li> <li>Adresse IP: Une machine poss\u00e8de en g\u00e9n\u00e9ral une adresse IP par interface et contrairement \u00e0 l'adresse MAC, elle peut \u00eatre modifi\u00e9e lors du param\u00e9trage du r\u00e9seau.. Nous utiliserons la version IPv4 (sur 4 octets) bien que cette version est peu \u00e0 peu remplac\u00e9e par la version IPv6.</li> <li>L\u2019adresse MAC est n\u00e9cessaire pour la liaison r\u00e9seau entre deux \u00e9quipements tandis que l\u2019adresse IP est n\u00e9cessaire pour le routage sur Internet.</li> </ul>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#activite-2-construction-dun-premier-reseau-local","title":"Activit\u00e9 2 : Construction d'un premier r\u00e9seau local","text":"<p>Reprendre l'activit\u00e9 pr\u00e9c\u00e9dente et l'enregistrer sous le nom TD_Reseau_activite2.fls.</p> <p>Partie 1: Construction d'un r\u00e9seau</p> <ol> <li>Peut-on ajouter un troisi\u00e8me ordinateur et les relier aux  autres avec un cable ? Pourquoi ?  </li> <li>Utiliser un switch pour relier entre eux trois ordinateurs comme ci-dessous. Attention \u00e0 bien adapter les adresses IP. </li> <li>Passer en mode simulation (triangle vert), puis cliquer sur l'ordinateur <code>192.168.0.1</code> et installer le logiciel \"Ligne de commande\".</li> <li>R\u00e9aliser un <code>ping</code> de la machine <code>192.168.0.1</code> vers la machine <code>192.168.0.3</code> en tapant <code>ping 192.168.0.3</code> en ligne de commande.</li> </ol> R\u00e9sultat du ping <p> Cela marche. Les paquets sont bien achemin\u00e9s.</p> <p>R\u00f4le du switch</p> <p>Le r\u00f4le d'un switch est de distribuer un message au bon destinataire, en analysant la trame re\u00e7ue. Lors d'un branchement d'un nouvel ordinateur sur le switch, celui-ci r\u00e9cup\u00e8re son adresse MAC, ce qui lui permet de trier les messages.</p> <p> </p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#activite-3-construction-dun-deuxieme-reseau","title":"Activit\u00e9 3 : Construction d'un deuxi\u00e8me r\u00e9seau","text":"<p>Partie 2: un deuxi\u00e8me r\u00e9seau</p> <ol> <li>Renommer le switch en \"SwitchA\" et cr\u00e9er un deuxi\u00e8me r\u00e9seau de trois machines d'adresses IP <code>192.168.1.1</code>, <code>192.168.1.2</code> et <code>192.168.1.3</code> avec un \"SwitchB\". Comment relier ces deux sous-r\u00e9seaux ? Une r\u00e9ponse pas si b\u00eate : avec un cable entre les deux switchs ! </li> <li>Tester un <code>ping</code> de <code>192.168.0.1</code> vers <code>192.168.1.2</code>.  </li> </ol> R\u00e9sultat du ping <p> Cela ne marche pas. L'ordinateur refuse d'envoyer le ping vers la machine <code>192.168.1.2</code>. (spoil : car elle n'est pas dans son sous-r\u00e9seau) </p> <ol> <li>Temporairement, renommer la machine <code>192.168.1.2</code> en <code>192.168.0.33</code> et retenter le <code>ping</code>. Que se passe-t-il ?  </li> </ol> R\u00e9sultat du ping <p> Cela marche. Les paquets sont bien achemin\u00e9s.</p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#masque-de-sous-reseau","title":"Masque de sous-r\u00e9seau","text":"<p>Lorsqu'une machine A veut envoyer un message \u00e0 une machine B, elle doit d\u00e9terminer si cette machine :</p> <ul> <li>appartient au m\u00eame sous-r\u00e9seau : auquel cas le message est envoy\u00e9 directement via un ou plusieurs switchs.</li> <li>n'appartient pas au m\u00eame sous-r\u00e9seau : auquel cas le message doit d'abord transiter par un routeur (voir plus loin).</li> </ul> <p>C'est le masque de sous-r\u00e9seau (tout simplement \"Masque\" dans Filius, netmask en anglais) qui permet de d\u00e9terminer quelles adresses font partie d'un m\u00eame r\u00e9seau.</p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#explication-basique","title":"Explication basique","text":"<ul> <li>Si le masque est <code>255.255.255.0</code>, toutes les machines partageant les m\u00eames trois premiers nombres de leur adresse IP appartiendront au m\u00eame sous-r\u00e9seau. Comme ceci est le r\u00e9glage par d\u00e9faut de Filius, cela explique pourquoi  <code>192.168.0.33</code> et <code>192.168.0.1</code> sont sur le m\u00eame sous-r\u00e9seau, et pourquoi  <code>192.168.1.2</code> et <code>192.168.0.1</code> ne sont pas sur le m\u00eame sous-r\u00e9seau.</li> </ul> <p>Dans cette configuration, 256 machines peuvent donc appartenir au m\u00eame sous-r\u00e9seau (ce n'est pas tout \u00e0 fait le cas car des adresses finissant par 0 ou par 255 sont r\u00e9serv\u00e9es) donc il y a r\u00e9alit\u00e9 254 adresses disponibles pour les machines.</p> <ul> <li>Si le masque est <code>255.255.0.0</code>, toutes les machines partageant les m\u00eames deux premiers nombres de leur adresse IP appartiendront au m\u00eame sous-r\u00e9seau. Dans cette configuration, 65534 (65536 - 2) machines peuvent \u00eatre dans le m\u00eame sous-r\u00e9seau. (car \\(256^2=65536\\) auquel on soustrait les 2 adresses finissant par 0 et 254)</li> </ul> <p>Exo</p> <ul> <li>Renommons <code>192.168.0.33</code> en <code>192.168.1.2</code> et modifions son masque en <code>255.255.0.0</code>.  </li> <li>Modifions aussi le masque de <code>192.168.0.1</code> en <code>255.255.0.0</code>.  </li> <li>Testons le ping de <code>192.168.0.1</code> vers <code>192.168.1.2</code>.  </li> </ul> R\u00e9sultat du ping <p> Cela marche. Les deux machines appartiennent maintenant au m\u00eame sous-r\u00e9seau.</p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#explication-avancee","title":"Explication avanc\u00e9e","text":"<p>Lorsqu'une machine A veut envoyer un message \u00e0 une machine B, elle doit d\u00e9terminer si cette machine :</p> <ul> <li>appartient au m\u00eame sous-r\u00e9seau : auquel cas le message est envoy\u00e9 directement via un ou plusieurs switchs.  </li> <li>n'appartient pas au m\u00eame sous-r\u00e9seau : auquel cas le message doit d'abord transiter par un routeur (voir Activit\u00e9 3.)</li> </ul> <p>Quelle op\u00e9ration permet de distinguer cette appartenance \u00e0 un m\u00eame sous-r\u00e9seau ?</p> <p>Appelons <code>IP_A</code> et <code>IP_B</code> les adresses IP respectives des machines A et B. Appelons <code>M</code> le masque de sous-r\u00e9seau. Nommons <code>&amp;</code> l'op\u00e9rateur de conjonction entre nombres binaires : </p> <p>Propri\u00e9t\u00e9 : A et B appartiennent au m\u00eame sous-r\u00e9seau \u21d4 <code>IP_A &amp; M = IP_B &amp; M</code></p> <p>Exemple : consid\u00e9rons trois machines A, B, C d'IP respectives <code>192.168.129.10</code>, <code>192.168.135.200</code> et <code>192.168.145.1</code>, configur\u00e9es avec un masque de sous-r\u00e9seau \u00e9gal \u00e0 <code>255.255.248.0</code>.  </p> machine A machine B machine C IP 192.168.129.10 192.168.135.200 192.168.145.1 M 255.255.248.0 255.255.248.0 255.255.248.0 IP &amp; M 192.168.128.0 192.168.128.0 192.168.144.0 <p>rappel des r\u00e8gles de calcul :</p> <ul> <li>pour tout octet <code>x</code>, <code>x &amp; 255 = x</code>  et <code>x &amp; 0 = 0</code>.</li> <li><code>129 &amp; 248</code> s'\u00e9crit en binaire <code>10000001 &amp; 11111000</code> qui vaut <code>10000000</code>, soit <code>128</code> en d\u00e9cimal.</li> </ul> <p>Conclusion : les machines A et B sont sous le m\u00eame sous-r\u00e9seau, mais pas la machine C.</p> <p>Adresse IP et masque de sous-r\u00e9seau</p> <p>Une adresse IP comporte deux parties: </p> <ul> <li>l'adresse du r\u00e9seau : les k premiers bits;</li> <li>l'adresse de l'h\u00f4te : les 32-k derniers bits.</li> </ul> <p>La valeur de k est variable pour chaque r\u00e9seau, elle acompagne donc g\u00e9n\u00e9ralement les adresses et se nomme masque de sous-r\u00e9seau.</p> <p>Un masque de sous-r\u00e9seau est souvent repr\u00e9sent\u00e9 comme une adresse IPv4 par 4 octets, et est constitu\u00e9 d'une suite de k <code>1</code> suivie d'une suite de <code>0</code>.</p> Exemple 1Exemple 2 <ul> <li> <p>Le masque par d\u00e9faut de Filius est <code>255.255.255.0</code>, qui s'\u00e9crit en binaire : <code>11111111.11111111.11111111.00000000</code>.</p> </li> <li> <p>La valeur de k est donc 24. On note donc aussi (notation CIDR) l'adresse IP : <code>192.168.0.1 / 24</code>.</p> </li> <li> <p>Dans cette configuration, 256 machines peuvent donc appartenir au m\u00eame sous-r\u00e9seau (ce n'est pas tout \u00e0 fait le cas car des adresses finissant par 0 ou par 255 sont r\u00e9serv\u00e9es).</p> </li> <li> <p>Deux machines appartiennent au m\u00eame sous-r\u00e9seau si elles partagent les 3 premiers nombres (octets) de leur adresse IP, c'est \u00e0 dire les 24 premiers bits.</p> </li> </ul> <ul> <li> <p>Une autre valeur de masque peut \u00eatre <code>255.255.248.0</code>, qui s'\u00e9crit en binaire : <code>11111111.11111111.11111000.00000000</code>.</p> </li> <li> <p>La valeur de k est donc 21. On note donc aussi (notation CIDR) l'adresse IP : <code>192.168.0.1 / 21</code>.</p> </li> <li> <p>Deux machines appartiennent au m\u00eame sous-r\u00e9seau si elles partagent les 21 premiers bits de leur adresse IP.</p> </li> <li> <p>Combien de machines peuvent appartenir \u00e0 ce m\u00eame sous-r\u00e9seau ?</p> </li> </ul> <p>Appartenance \u00e0 un m\u00eame sous-r\u00e9seau</p> <p>Pour que deux machines appartiennent \u00e0 un m\u00eame sous-r\u00e9seau, il faut donc qu'elles partagent un m\u00eame nombre de bits, donn\u00e9s par le masque de sous-r\u00e9seau.</p> <p>L'op\u00e9ration qui permet de le d\u00e9terminer est le <code>&amp;</code> (et) logique, bit \u00e0 bit.</p> ExempleCorrection <p>Consid\u00e9rons trois machines A, B, C d'IP respectives <code>192.168.129.10</code>, <code>192.168.135.200</code> et <code>192.168.145.1</code>, configur\u00e9es avec un masque de sous-r\u00e9seau \u00e9gal \u00e0 <code>255.255.248.0</code>.  </p> machine A machine B machine C IP 192.168.129.10 192.168.135.200 192.168.145.1 M 255.255.248.0 255.255.248.0 255.255.248.0 IP &amp; M"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#utilisation-et-role-du-routeur","title":"Utilisation et r\u00f4le du routeur","text":"<p>La solution initiale (relier les deux switchs par un cable pour unifier les deux sous-r\u00e9seaux) n'est pas viable \u00e0 l'\u00e9chelle d'un r\u00e9seau plan\u00e9taire.</p> <p>Pour que les machines de deux r\u00e9seaux diff\u00e9rents puissent \u00eatre connect\u00e9es, on va utiliser un dispositif \u00e9quip\u00e9 de deux cartes r\u00e9seaux, situ\u00e9 \u00e0 cheval entre les deux sous-r\u00e9seaux. Cet \u00e9quipement de r\u00e9seau est appel\u00e9 routeur ou passerelle.</p> <p>Routage</p> <p>Les 3 \u00e9tapes du routage :</p> <ul> <li>Lorsque qu'une machine A veut envoyer un message \u00e0 une machine B, elle va tout d'abord v\u00e9rifier si cette machine appartient \u00e0 son r\u00e9seau local. si c'est le cas, le message est envoy\u00e9 par l'interm\u00e9diaire du switch qui relie les deux machines.</li> <li>Si la machine B n'est pas trouv\u00e9e sur le r\u00e9seau local de la machine A, le message va \u00eatre achemin\u00e9 vers le routeur, par l'interm\u00e9diaire de son adresse de passerelle (qui est bien une adresse appartenant au sous-r\u00e9seau de A).</li> <li>De l\u00e0, le routeur va regarder si la machine B appartient au deuxi\u00e8me sous-r\u00e9seau auquel il est connect\u00e9. Si c'est le cas, le message est distribu\u00e9, sinon, le routeur va donner le message \u00e0 un autre routeur auquel il est connect\u00e9 et va le charger de distribuer ce message : c'est le proc\u00e9d\u00e9 (complexe) de routage, qui sera vu en classe de Terminale.</li> </ul> <p>Dans l'exemple suivant, o\u00f9 le masque est <code>255.255.255.0</code>, l'adresse <code>172.16.52.3</code> n'est pas dans le sous-r\u00e9seau de <code>192.168.0.1</code>. Le message va donc transiter par le routeur. </p> <p>Partie 3: Ajout d'un routeur</p> <ol> <li>Ajouter un routeur entre le SwitchA et le SwitchB.</li> <li>Configurer le routeur :<ul> <li>L'interface reli\u00e9e au Switch A doit avoir une adresse du sous-r\u00e9seau A (idem pour le r\u00e9seau B). On donne souvent une adresse finissant par <code>254</code>, qui est en quelque sorte la derni\u00e8re adresse du r\u00e9seau (en effet l'adresse en <code>255</code> est appel\u00e9e adresse de broadcast, utilis\u00e9e pour \u00abpinger\u00bb en une seule fois l'int\u00e9gralit\u00e9 d'un sous-r\u00e9seau).  </li> <li>Dans l'onglet g\u00e9n\u00e9ral, s\u00e9lectionner \u00ab Routage automatique \u00bb.  </li> <li>Ainsi configur\u00e9 notre routeur peut jouer le r\u00f4le de passerelle entre les deux sous-r\u00e9seaux.</li> </ul> </li> <li> <p>Tester un ping entre <code>192.168.0.1</code> et <code>192.168.1.2</code></p> \u00bfQue pasa? <p>Cela ne marche pas. La carte r\u00e9seau refuse d'envoyer les paquets car elle ne sait pas o\u00f9 les envoyer. Il faut donc dire \u00e0 chaque machine qu'une passerelle est maintenant disponible pour pouvoir sortir de son propre sous-r\u00e9seau. Il faut donc aller sur la machine <code>192.168.0.1</code> et lui donner l'adresse de sa passerelle...</p> </li> <li> <p>Une fois les passerelles renseign\u00e9es, effectuer un traceroute entre <code>192.168.0.1</code> et <code>192.168.1.2</code> : on y voit le nombre de sauts n\u00e9cessaires entre les deux machines.</p> </li> </ol> Cas d'un r\u00e9seau domestique <p>Chez vous, la box de votre op\u00e9rateur joue simultan\u00e9ment le r\u00f4le de switch et de routeur :</p> <ul> <li>switch car elle r\u00e9partit la connexion entre les diff\u00e9rents dispositifs (ordinateurs branch\u00e9s en ethernet, smartphone en wifi, tv connect\u00e9e...)</li> <li>routeur car elle fait le lien entre ce sous-r\u00e9seau domestique (les appareils de votre maison) et le r\u00e9seau internet.</li> </ul> <p></p> <p>Essayez chez vous de r\u00e9cup\u00e9rer l'adresse IP locale, le masque de sous-r\u00e9seau ainsi que la passerelle par d\u00e9faut, \u00e0 l'aide d'une commande <code>ipconfig</code> sous Windows.</p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#serveur-dns","title":"Serveur DNS","text":""},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#rajout-dun-serveur-web","title":"Rajout d'un serveur web","text":"<ul> <li> <p>Connectons un ordinateur au SwitchB, sur l'adresse <code>192.168.1.30</code> et installons dessus un Serveur web et d\u00e9marrons-le.  </p> </li> <li> <p>Sur la machine <code>192.168.0.1</code>, rajoutons un Navigateur Web. En tapant dans la barre d'adresse l'adresse IP du Serveur web, la page d'accueil de Filius s'affiche. </p> </li> </ul> <p>Lors d'une utilisation classique d'un navigateur web, c'est une url m\u00e9morisable qui s'affiche, et non une adresse IP : on retient en effet plus facilement <code>https://www.google.com/</code> que <code>http://216.58.213.131</code>, qui renvoient pourtant \u00e0 la m\u00eame adresse.  La machine qui assure ce r\u00f4le d'annuaire entre les serveurs web et leur adresse IP s'appelle un serveur DNS. Pour pouvoir indexer la totalit\u00e9 des sites internet, son r\u00f4le est structur\u00e9 de mani\u00e8re hi\u00e9rarchique. Vous trouverez des d\u00e9tails ici.</p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#rajout-dun-serveur-dns","title":"Rajout d'un serveur DNS","text":"<p>Partie 4: Ajout d'un serveur DNS</p> <ul> <li>Rajoutons un serveur DNS minimal, qui n'aura dans son annuaire d'un seul site. Il faut pour cela raccorder une nouvelle machine (mais une machine d\u00e9j\u00e0 sur le r\u00e9seau aurait tr\u00e8s bien pu jouer ce r\u00f4le), et installer dessus un serveur DNS. </li> <li>Sur ce serveur DNS, associons l'adresse <code>http://www.vivelansi.fr</code>  \u00e0 l'adresse IP <code>192.168.1.30</code>.   </li> <li>De retour sur notre machine <code>192.168.0.1</code>, sp\u00e9cifions maintenant l'adresse du serveur DNS :   </li> <li>Depuis le navigateur web de la machine <code>192.168.0.1</code>, le site <code>http://www.vivelansi.fr</code> est maintenant accessible.   </li> </ul>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#routage-dans-une-interconnexion-de-reseaux","title":"Routage dans une interconnexion de r\u00e9seaux","text":"<p>R\u00e9cup\u00e9rer le fichier exercice_ressources.fls puis l\u2019ouvrir avec Filius.   </p> <p></p> <ol> <li>R\u00e9cup\u00e9rer les adresses IP des machines M14 et M9.  </li> <li>En mode simulation, faire un ping de la machine M14 vers M9 pour v\u00e9rifier la connexion.   Faire un traceroute de la machine M14 vers M9 . Noter le chemin parcouru pour aller de M14 vers M9.  </li> <li>Supprimer le c\u00e2ble r\u00e9seau (clic droit sur le c\u00e2ble) qui relie le routeur F au routeur E (simulation de panne) et refaire un traceroute de M14 et M9. Attendre un peu pour que les tables de routage des routeurs se mettent \u00e0 jour. Que constate-t-on ?</li> </ol>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.1_Architecture/#exercices","title":"Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>On souhaite pouvoir raccorder 1000 machines sur le m\u00eame r\u00e9seau IP. Donner le plus petit masque permettant de d\u00e9finir un tel sous-r\u00e9seau. M\u00eame question avec 3000 machines.</p> <p>Noter \u00e0 chaque fois le masque en notation d\u00e9cimale point\u00e9e, puis CIDR.</p> <p>Exercice  2</p> \u00c9nonc\u00e9IndicationCorrection <p>On consid\u00e8re le masque <code>255.255.252.0</code>. Parmi les adresses suivantes, indiquer lesquelles appartiennent au m\u00eame sous-r\u00e9seau:</p> <ol> <li><code>129.175.127.1</code></li> <li><code>129.175.130.10</code></li> <li><code>129.175.128.17</code></li> <li><code>129.175.131.110</code></li> <li><code>129.175.132.8</code></li> </ol> <p>Penser \u00e0 utiliser la fonction <code>bin</code> de Python pour effectuer les conversions (m\u00eame s'il faut savoir les faire \u00ab\u00e0 la main\u00bb, et v\u00e9rifier vos \u00abet\u00bb logiques avec l'op\u00e9rateur <code>&amp;</code> de Python: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; 127 &amp; 252\n124\n</code></pre></p>"},{"location":"T05_Architectures/T5.4_Protocole/T5.4_Protocole/","title":"T5.4 Protocoles de communication dans un r\u00e9seau","text":""},{"location":"T05_Architectures/T5.4_Protocole/T5.4_Protocole/#541-modele-osi-modele-internet","title":"5.4.1 Mod\u00e8le OSI, mod\u00e8le Internet","text":"<p>Les bits transmis d'un ordinateur \u00e0 un autre contiennent, en plus des donn\u00e9es utiles (le mot \u00abbonjour\u00bb dans un email), une multitude de donn\u00e9es (tout aussi utiles) qui vont aider \u00e0 l'acheminement de ces bits au bon endroit, puis au bon ordinateur, puis au bon logiciel.  Les diff\u00e9rents protocoles qui r\u00e9gissent cette transmission sont regroup\u00e9s dans ce qui est appel\u00e9 un mod\u00e8le.</p> <p>Deux mod\u00e8les et plusieurs protocoles...</p> <p>Deux mod\u00e8les synth\u00e9tisent ces protocoles :</p> <ul> <li>le mod\u00e8le OSI (Open Systems Interconnection, 1984), organis\u00e9 en 7 couches : physique, liaison, r\u00e9seau, transport, session, pr\u00e9sentation,application. C'est un mod\u00e8le th\u00e9orique qui sert de r\u00e9f\u00e9rence pour inspirer d'autres architectures pour l'interconnexion de r\u00e9seaux.</li> <li>le mod\u00e8le Internet (ou mod\u00e8le TCP/IP, 1974), organis\u00e9 en 4 couches : liaison, r\u00e9seau, transport, application.</li> </ul> <p>Ils respectent tous deux les m\u00eames principes:</p> <ul> <li>Chaque couche ne peut communiquer qu\u2019avec une couche adjacente</li> <li>Chaque couche est ind\u00e9pendante:<ul> <li>les informations d\u2019une couche ne peuvent \u00eatre utilis\u00e9es dans une autre;</li> <li>cela permet l\u2019\u00e9volution des communications dans le temps : IPv4 va devenir IPv6 sans qu\u2019on doive tout r\u00e9\u00e9crire.</li> </ul> </li> </ul> <p>Ces deux mod\u00e8les co\u00efncident suivant le sch\u00e9ma ci-dessous. Ce sont des mod\u00e8les d'une certaine rigidit\u00e9. Leur utilisation dans la pratique est parfois plus floue, avec des protocoles \u00e0 cheval sur plusieurs couches. Dans la suite de ce cours, nous \u00e9voquerons principalement le mod\u00e8le Internet (TCP/IP).</p> <p></p> <p>Lors de son \u00e9mission, un message va subir successivement toutes les transformations effectu\u00e9es par chaque couche, depuis sa cr\u00e9ation (couche 7) jusqu'\u00e0 sa transmission physique (couche 1).  </p> <p>Lorsque ce m\u00eame message sera r\u00e9ceptionn\u00e9, les transformations seront effectu\u00e9es dans l'ordre inverse, jusqu'\u00e0 la pr\u00e9sentation du message au destinataire.</p> Couche 4  \u2014 couche applicationCouche 3 \u2014 couche transportCouche 2 \u2014 couche r\u00e9seauCouche 1 \u2014 couche liaison/physique <p>Cette couche regroupe les protocoles n\u00e9cessaires \u00e0 la bonne mise en forme d'un message (au sens large: compression, cryptage, ...) avant sa transmission. </p> <p>Ces protocoles peuvent \u00eatre de nature tr\u00e8s diff\u00e9rente : protocole HTTP pour la transmisson de pages web, protocole FTP pour le transfert de fichiers, protocoles POP ou IMAP pour le courrier \u00e9lectronique...</p> <p> </p> <p>Le protocole majeur de cette couche est le protocole TCP :</p> <ul> <li>il s'assure par SYN-ACK que l'\u00e9metteur et le r\u00e9cepteur sont pr\u00eats \u00e0 \u00e9changer des messages. </li> <li>il d\u00e9coupe en segments num\u00e9rot\u00e9s le message \u00e0 transmettre (c\u00f4t\u00e9 \u00e9metteur) ou bien recompose le message total en remettant les segments dans l'ordre (c\u00f4t\u00e9 r\u00e9cepteur).    </li> </ul> <p>Les \u00e9l\u00e9ments \u00e9chang\u00e9s avec la couche inf\u00e9rieure sont des segments.</p> <p> </p> <p>Ports</p> <p>Une machine peut \u00e9tablir plusieurs connexions TCP en m\u00eame temps. Afin de les distinguer on ajoute une information suppl\u00e9mentaire, le port r\u00e9seau.</p> <p>TCP n\u2019est pas le seul protocole \u00e0 utiliser ces ports.</p> <p>Les ports sont des nombres sur 16 bits, g\u00e9n\u00e9ralement not\u00e9s en d\u00e9cimal, entre 0 et \\(2^{16} = 65536\\)</p> <p>Ils sont g\u00e9n\u00e9ralement ajout\u00e9s \u00e0 la fin de l\u2019adresse IP apr\u00e8s le symbole : (deux points)      <code>192.168.1.2:80</code></p> <p>Chaque fois que vous ouvrez deux onglets dans le navigateur, celui-ci \u00e9tabli une connexion avec une machine diff\u00e9rente et se voit attribuer un port de r\u00e9ception diff\u00e9rent.</p> <p>C'est la couche o\u00f9 chaque segment num\u00e9rot\u00e9 est encapsul\u00e9 dans un paquet qui, suivant le protocole IP, va contenir son adresse source et son adresse de destination. C'est \u00e0 ce niveau que se d\u00e9cide si le message doit rester dans le r\u00e9seau local ou \u00eatre envoy\u00e9 sur un autre r\u00e9seau via la passerelle du routeur. Les \u00e9l\u00e9ments \u00e9chang\u00e9s avec la couche inf\u00e9rieure sont des paquets.</p> <p> </p> <p>C'est l'encapsulation finale du message, pour transmettre des trames \u00e0 travers le r\u00e9seau physique, en bits. Elle d\u00e9pend donc du mat\u00e9riel.</p> <p>On y trouve donc:</p> <ul> <li>la r\u00e9solution d'adresses : suivant le protocole Ethernet, les informations sont transmises d'une carte r\u00e9seau \u00e0 une autre, gr\u00e2ce \u00e0 leur adresse MAC (Media Access Controler).  Il s'agit donc d'associer une adresse physique (MAC) \u00e0 une adresse IP : c'est le r\u00f4le du protocole ARP.</li> <li>des routines d'acc\u00e8s au r\u00e9seau : selon le medium de communication, par signal lumineux (fibre optique), par ondes (wifi), par courant \u00e9lectrique (Ethernet)...</li> </ul> <p> </p> <p>Lors de son parcours, une trame peut \u00eatre partiellement d\u00e9capsul\u00e9e et remonter \u00e0 la couche 3, avant de redescendre et de continuer son chemin. C'est le cas notamment lors du passage dans un routeur. Mais jamais, lors de son acheminement, le contenu r\u00e9el du message n'est ouvert : les paquets transmis sont achemin\u00e9s de mani\u00e8re identique, qu'ils contiennent les \u00e9l\u00e9ments constitutifs d'une vid\u00e9o YouTube ou d'un email \u00e0 votre cousin.  </p> <p>Ce principe fondateur, actuellement menac\u00e9 par certains acteurs politiques et industriels, est connu sous l'expression \u00abla neutralit\u00e9 du net\u00bb. </p> <p> </p>"},{"location":"T05_Architectures/T5.4_Protocole/T5.4_Protocole/#542-tp-observation-avec-filius","title":"5.4.2 TP: Observation avec Filius","text":"<p>Partie 1: avant la communication</p> <ol> <li>T\u00e9l\u00e9charger et ouvrir le fichier ping_switch.fls avec Filius: deux machines sont reli\u00e9s par un switch.</li> <li>Lancer la simulation et cliquer sur le switch pour consulter sa table SAT. Que constate-t-on?</li> <li>Sur la machine <code>192.168.0.10</code>, taper dans le terminal la commande <code>arp -a</code> pour obtenir sa table de correspondance IP \u2b80 MAC. \u00c0 quoi correspond la seule ligne de cette table?</li> </ol> <p>Partie 2: communication</p> <ol> <li>Sur la machine <code>192.168.0.10</code>, lancer un <code>ping</code> vers la machine <code>192.168.0.11</code>, puis contr\u00f4ler la table SAT du switch ainsi que la table de correspondance IP \u2b80 MAC de <code>192.168.0.10</code>.</li> <li>Observer les \u00e9changes de donn\u00e9es (clic droit sur la machine <code>192.168.0.10</code>). Cliquer sur chaque ligne pour en voir le d\u00e9tail.</li> </ol> Analyse des messages Message 1: \u00ab Qui poss\u00e8de l'IP <code>192.168.0.11</code> ? \u00bbMessage 2 : \u00ab Moi ! \u00bbMessage 3 : le ping est envoy\u00e9Message 4 : le pong est retourn\u00e9 <p>Cette premi\u00e8re ligne est une requ\u00eate ARP. ARP est un protocole qui s'interface entre la couche r\u00e9seau (appel\u00e9e Internet sur Filius) et la couche liaison (appel\u00e9e R\u00e9seau sur Filius). Comme indiqu\u00e9 dans le commentaire, elle consiste \u00e0 un appel \u00e0 tout le r\u00e9seau : \"Est-ce que quelqu'un ici poss\u00e8de l'IP <code>192.168.0.11</code> ?</p> <p> </p> <p>Il faut comprendre \u00e0 cette \u00e9tape que l'adresse IP est totalement inutile pour r\u00e9p\u00e9rer un ordinateur dans un sous-r\u00e9seau. Ce sont les adresses MAC qui permettent de se rep\u00e9rer dans un sous-r\u00e9seau. Les adresses IP, elles, permettront \u00e9ventuellement d'acheminer le message jusqu'au bon sous-r\u00e9seau (elles n'int\u00e9ressent donc que les routeurs).</p> <p>La commande <code>arp -a</code> effectu\u00e9e dans un terminal de la machine <code>192.168.0.10</code> nous permet de voir qu'elle ne conna\u00eet encore personne dans son sous-r\u00e9seau. La table de correspondance IP \u2b80 MAC ne contient que l'adresse de broadcast <code>255.255.255.255</code>, qui permet d'envoyer un message \u00e0 tout le r\u00e9seau.  </p> <p> </p> <p>Constatant qu'elle ne sait pas quelle est l'adresse MAC de <code>192.168.0.11</code>, la machine <code>192.168.0.10</code> commence donc par envoyer un message \u00e0 tout le sous-r\u00e9seau, par l'adresse MAC de broadcast <code>FF:FF:FF:FF:FF:FF</code>. Le switch va lui aussi lui aussi relayer ce message \u00e0 tous les \u00e9quipements qui lui sont connect\u00e9s (dans notre cas, un seul ordinateur).</p> <p>La machine <code>192.168.0.11</code> s'est reconnu dans le message de broadcast de la machine <code>192.168.0.10</code>. Elle lui r\u00e9pond pour lui donner son adresse MAC.  </p> <p> </p> <p>\u00c0 partir de ce moment, la machine <code>192.168.0.10</code> sait comment communiquer avec <code>192.168.0.11</code>. Elle l'\u00e9crit dans sa table <code>arp</code>, afin de ne plus avoir \u00e0 \u00e9mettre le message n\u00b01 :  </p> <p> </p> <p>Le switch, qui a vu passer sur ses ports 0 et 1 des messages venant des cartes MAC <code>BC:81:81:42:9C:31</code>  et <code>2A:AB:AC:27:D6:A7</code>, peut mettre \u00e0 jour sa table SAT :  </p> <p> </p> <p>Par la suite, il saura sur quel port rediriger les messages destin\u00e9s \u00e0 ces deux adresses MAC. Un switch est un \u00e9quipement de r\u00e9seau de la couche 2 du mod\u00e8le OSI, il ne sait pas lire les adresses IP : il ne travaille qu'avec les adresses MAC.</p> <p> </p> <p> </p> <p>Partie 3: communication \u00e0 travers un routeur</p> <p>L'objectif est maintenant d'observer les diff\u00e9rentes \u00e9tapes lors d'un ping entre des machines de sous-r\u00e9seaux diff\u00e9rents:</p> <p> </p> <ol> <li>T\u00e9l\u00e9charger et ouvrir le fichier ping_routeur.fls avec Filius.</li> <li>Noter la configuration des machines <code>192.168.0.1 / 24</code> et <code>192.168.1.1 / 24</code> (adresses MAC) et du routeur (adresses IP et MAC sur chaque sous-r\u00e9seau).</li> <li>Effectuer un <code>ping</code> entre les machines indiqu\u00e9es sur le sch\u00e9ma ci-dessus et analyser les messages \u00e9mis/re\u00e7us (sur les deux machines et le routeur).</li> </ol> Analyse des messages <p>Configuration:</p> <ul> <li>la machine <code>192.168.0.1 / 24</code> : adresse MAC <code>F9:E1:D6:0B:29:03</code> </li> <li>la machine <code>192.168.1.1 / 24</code> : adresse MAC <code>D3:79:96:B8:5C:A4</code> </li> </ul> <p>Le routeur est configur\u00e9 ainsi :</p> <ul> <li>interface sur le r\u00e9seau A :<ul> <li>IP : <code>192.168.0.254</code> </li> <li>MAC : <code>77:C2:22:C9:5C:E7</code> </li> </ul> </li> <li>interface sur le r\u00e9seau B :<ul> <li>IP : <code>192.168.1.254</code> </li> <li>MAC : <code>66:E5:4E:7D:0B:B0</code> </li> </ul> </li> </ul> \u00c9tape 0 : le routeur signale sa pr\u00e9sence\u00c9tape 1 : de <code>192.168.0.1</code> vers le routeur\u00c9tape 2 : le routeur d\u00e9capsule la trame <p>Lors de l'observation des messages re\u00e7us ou \u00e9mis par la machine <code>192.168.0.1</code>, on peut \u00eatre intrigu\u00e9 par ce tout premier message re\u00e7u, \u00e9mis par le routeur : </p> <p> </p> <p>On peut y distinguer les 4 couches du mod\u00e8le Internet. Le routeur, par ce message distribu\u00e9 \u00e0 tous les \u00e9l\u00e9ments du sous-r\u00e9seau A (il envoie un message \u00e9quivalent sur son sous-r\u00e9seau B), d\u00e9clare sa pr\u00e9sence, et le fait qu'il poss\u00e8de deux interfaces, une pour chaque r\u00e9seau.  Il se positionne ainsi comme une passerelle : \u00abc'est par moi qu'il faudra passer si vous voulez sortir de votre sous-r\u00e9seau\u00bb.  Dans cette trame envoy\u00e9e figure son adresse MAC, de sorte que tous les membres de son sous-r\u00e9seau pourront donc communiquer avec lui.</p> <p>La machine <code>192.168.0.1 / 24</code> calcule que la machine <code>192.168.1.1 / 24</code> avec laquelle elle veut communiquer n'est pas dans son sous-r\u00e9seau. Elle va donc envoyer son message \u00e0 sa passerelle, qui est l'adresse du routeur dans son sous-r\u00e9seau. </p> <p>Cette premi\u00e8re trame est :</p> <p> </p> <p>Le routeur est un \u00e9quipement de r\u00e9seau de couche 3 (couche r\u00e9seau). Il doit observer le contenu du paquet IP (sans remonter jusqu'au contenu du message) pour savoir, suivant le proc\u00e9d\u00e9 de routage (voir cours de Terminale), o\u00f9 acheminer ce paquet.</p> <p>Dans notre cas, l'adresse IP <code>192.168.1.1</code>de destination lui est accessible : elle fait partie de son sous-r\u00e9seau B.</p> <p>Le routeur va modifier la valeur du TTL (Time To Live), en la d\u00e9cr\u00e9mentant de 1. Si, apr\u00e8s de multiples routages, cette valeur devenait \u00e9gale \u00e0 0, ce paquet serait d\u00e9truit. Ceci a pour but d'\u00e9viter l'encombrement des r\u00e9seaux avec des paquets ne trouvant pas leur destination.</p> NAT : translation d'adresse <p>Dans notre cas, le routeur va laisser intacte l'adresse IP Source. Ce n'est pas toujours le cas. Dans le cas classique de la box qui relie votre domicile \u00e0 internet, le routeur contenu dans celle-ci va remplacer l'adresse locale de votre ordinateur ou smartphone (ex <code>192.168.0.26</code>) par son IP publique (celle apparaissant sur whatsmyip.com, par exemple). Elle effectue ce qu'on appelle une translation d'adresse (NAT).  Pourquoi ? Parce que sinon la r\u00e9ponse du serveur distant que vous interrogez serait envoy\u00e9e sur une adresse locale (votre adresse <code>192.168.0.26</code>), qui est introuvable depuis un r\u00e9seau ext\u00e9rieur. Il faut donc remplacer toutes les adresses locales par l'IP publique de votre box. Pour \u00e9viter que la r\u00e9ponse du serveur web que vous avez interrog\u00e9 ne soit affich\u00e9e sur l'ordinateur de vos parents, le routeur affecte des ports diff\u00e9rents \u00e0 chaque machine de son sous-r\u00e9seau. Ce port est inclus dans le message transmis au serveur, et il l'est aussi dans sa r\u00e9ponse : le routeur peut donc rediriger le trafic vers la bonne machine du sous-r\u00e9seau.</p> <p>Le routeur va r\u00e9-encapsuler le paquet IP modifi\u00e9, et cr\u00e9er une nouvelle trame Ethernet en modifiant :</p> <ul> <li>l'adresse MAC source : il va mettre l'adresse MAC de son interface dans le sous-r\u00e9seau B.</li> <li>l'adresse MAC de destination : il va mettre l'adresse MAC de <code>192.168.1.1</code> (qu'il aura peut-\u00eatre r\u00e9cup\u00e9r\u00e9e au pr\u00e9alable par le protocole ARP)</li> </ul> <p>Cette deuxi\u00e8me trame est donc :</p> <p> </p> <p>On peut observer dans Filius cette trame, en se positionnant sur l'interface <code>192.168.1.254</code> du routeur, ou sur <code>192.168.1.1</code> :</p> <p> </p> <p>En suivant le m\u00eame principe, la machine <code>192.168.1.1</code> pourra envoyer son pong.</p>"},{"location":"T05_Architectures/T5.4_Protocole/T5.4_Protocole/#543-protocole-du-bit-alterne","title":"5.4.3 Protocole du bit altern\u00e9","text":"<p>Ce protocole est un exemple de fiabilisation du transfert de donn\u00e9es.  Simple et l\u00e9ger, il a longtemps \u00e9t\u00e9 utilis\u00e9 mais il peut toutefois \u00eatre facilement mis en d\u00e9faut, ce qui explique qu'il ait \u00e9t\u00e9 remplac\u00e9 par des protocoles plus performants.</p> <p>Contexte</p> <ul> <li>Alice veut envoyer \u00e0 Bob un message M, qu'elle a pr\u00e9d\u00e9coup\u00e9 en sous-messages M0, M1, M2,...</li> <li>Alice envoie ses sous-messages \u00e0 une cadence \u0394t fix\u00e9e (en pratique, les sous-messages partent quand leur acquittement a \u00e9t\u00e9 re\u00e7u ou qu'on a attendu celui-ci trop longtemps : on parle alors de timeout).</li> </ul> 1. Situation id\u00e9ale2. Situation r\u00e9elle3. Solution na\u00efve...4. Mais peu efficace...5. Bob prend le contr\u00f4le <p> </p> <p>Dans cette situation, les sous-messages arrivent tous \u00e0 destination dans le bon ordre. La transmission est correcte.</p> <p>Mais parfois, les choses ne se passent pas toujours aussi bien. Car si on ma\u00eetrise parfaitement le timing de l'envoi des sous-messages d'Alice, on ne sait pas combien de temps vont mettre ces sous-messages pour arriver, ni m\u00eame (attention je vais passer dans un tunnel) s'ils ne vont pas \u00eatre d\u00e9truits en route.</p> <p> </p> <p>Le sous-message M0 est arriv\u00e9 apr\u00e8s le M1, le message M2 n'est jamais arriv\u00e9...</p> <p>Que faire ?</p> <p>\u00c9cartons l'id\u00e9e de num\u00e9roter les sous-messages, afin que Bob puisse remettre dans l'ordre les messages arriv\u00e9s, ou m\u00eame redemander sp\u00e9cifiquement des sous-messages perdus. C'est ce que r\u00e9alise le protocole TCP (couche 3 \u2014 transport), c'est tr\u00e8s efficace, mais cher en ressources. Essayons de trouver une solution plus basique.</p> <p>Pourquoi ne pas demander \u00e0 Bob d'envoyer un signal pour dire \u00e0 Alice qu'il vient bien de recevoir son sous-message ? Nous appelerons ce signal ACK (comme acknowledgement, traduisible par \u00abaccus\u00e9 de r\u00e9ception\u00bb). Ce signal ACK permettra \u00e0 Alice de renvoyer un message qu'elle consid\u00e9rera comme perdu :</p> <p> </p> <p>N'ayant pas re\u00e7u le ACK cons\u00e9cutif \u00e0 son message M1, Alice suppose (avec raison) que ce message n'est pas parvenu jusqu'\u00e0 Bob, et donc renvoie le message M1.</p> <p> </p> <p>Le deuxi\u00e8me ACK de Bob a mis trop de temps pour arriver (ou s'est perdu en route) et donc Alice a suppos\u00e9 que son sous-message M1 n'\u00e9tait pas arriv\u00e9. Elle l'a donc renvoy\u00e9, et Bob se retrouve avec deux fois le sous-message M1. La transmission est incorrecte.  En faisant transiter un message entre Bob et Alice, nous multiplions par 2 la probabilit\u00e9 que des probl\u00e8mes techniques de transmission interviennent. Et pour l'instant rien ne nous permet de les d\u00e9tecter.</p> <p>Bob va maintenant int\u00e9grer une m\u00e9thode de validation du sous-message re\u00e7u. Il pourra d\u00e9cider de le garder ou de l'\u00e9carter. Le but est d'\u00e9viter les doublons.</p> <p>Pour r\u00e9aliser ceci, Alice va rajouter \u00e0 chacun de ses sous-messages un bit de contr\u00f4le, que nous appelerons FLAG (drapeau). Au d\u00e9part, ce FLAG vaut 0.  Quand Bob re\u00e7oit un FLAG, il renvoie un ACK \u00e9gal au FLAG re\u00e7u.</p> <p>Alice va attendre ce ACK contenant le m\u00eame bit que son dernier FLAG envoy\u00e9 :</p> <ul> <li>tant qu'elle ne l'aura pas re\u00e7u, elle continuera \u00e0 envoyer le m\u00eame sous-message, avec le m\u00eame FLAG.</li> <li>d\u00e8s qu'elle l'a re\u00e7u, elle peut envoyer un nouveau sous-message en inversant (\u00abalternant\u00bb) le bit de son dernier FLAG (d'o\u00f9 le nom de ce protocole).</li> </ul> <p>Bob, de son c\u00f4t\u00e9, va contr\u00f4ler la validit\u00e9 de ce qu'il re\u00e7oit : il ne gardera que les sous-messages dont le FLAG est \u00e9gal \u00e0 l'inverse de son dernier ACK. C'est cette m\u00e9thode qui lui permettra d'\u00e9carter les doublons.</p> <p>Observons ce protocole dans plusieurs cas :</p> 5.1 Cas o\u00f9 le sous-message est perdu5.2 Cas o\u00f9 le ACK  est perdu5.3 Cas o\u00f9 un sous-message est en retard <p> </p> <p> </p> <p>Le protocole a bien d\u00e9tect\u00e9 le doublon du sous-message M1.</p> <p> </p> <p>Le protocole a bien d\u00e9tect\u00e9 le doublon du sous-message M1... mais que se passerait-il si notre premier sous-message M1 \u00e9tait encore plus en retard ?</p>"},{"location":"T06_Python/accueil/","title":"Langages et programmation","text":"<p>Histoire de l'informatique</p> <p> </p> <p> </p> <p>John Backus (1924-2007) est l'auteur de l'un des premiers langages de programmation : le Fortran (1954). Il a par la suite propos\u00e9, avec Peter Naur, la notation de Backus Naur qui permet de d\u00e9crire des grammaires formelle pour langages de programmation...</p> <p>Grace Hopper  (1906-1992) est une informaticienne am\u00e9ricaine, connue pour sa contribution \u00e0 la conception et \u00e0 la traduction des premiers langages de programmation, et comme l\u2019une des principales inspiratrices du langage COBOL.</p> <p>Les langages de programmation permettent de d\u00e9crire d'une part les structures des donn\u00e9es qui seront manipul\u00e9es par l'appareil informatique, et d'autre part d'indiquer comment sont effectu\u00e9es les manipulations, selon quels algorithmes. Ils servent de moyens de communication par lesquels le programmeur communique avec l'ordinateur, mais aussi avec d'autres programmeurs...</p> <p></p> Vid\u00e9o <p><p> </p></p>"},{"location":"T06_Python/index_prog/","title":"Th\u00e8me 6 :  Langages et programmation","text":"<p>Histoire de l'informatique</p> <p> </p> <p> </p> <p>Guido van Rossum  n\u00e9 le 31 janvier 1956 \u00e0 Haarlem aux Pays-Bas, est un d\u00e9veloppeur connu pour \u00eatre le cr\u00e9ateur et leader du projet du langage de programmation Python.</p> <p>Grace Hopper  (1906-1992) est une informaticienne am\u00e9ricaine, connue pour sa contribution \u00e0 la conception et \u00e0 la traduction des premiers langages de programmation, et comme l\u2019une des principales inspiratrices du langage COBOL.</p> <p>Les langages de programmation permettent de d\u00e9crire d'une part les structures des donn\u00e9es qui seront manipul\u00e9es par l'appareil informatique, et d'autre part d'indiquer comment sont effectu\u00e9es les manipulations, selon quels algorithmes. Ils servent de moyens de communication par lesquels le programmeur communique avec l'ordinateur, mais aussi avec d'autres programmeurs...</p> <p></p> <ul> <li>\ud83d\uddf9 Variables  </li> <li>\ud83d\uddf9 Boucle For  </li> <li>\ud83d\uddf9 Boucle While  </li> <li>\ud83d\uddf9 Instruction conditionnelle If  </li> <li>\ud83d\uddf9 Fonctions  </li> </ul>"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/","title":"Th\u00e8me 6 - Langages et programmation","text":"01              Cours : Les Variables en Python"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#introduction","title":"Introduction","text":"<p>Le langage Python est un langage de programmation objet interpr\u00e9t\u00e9. Il a \u00e9t\u00e9 d\u00e9velopper par Guido Von Rossum en 1989 \u00e0 l\u2019Universit\u00e9 d\u2019Amsterdam.  </p> <p></p> <ul> <li>Python a \u00e9t\u00e9 cr\u00e9\u00e9 dansl\u2019optique d\u2019\u00eatre le plus simple possible \u00e0 apprendre.  </li> <li>Il s\u2019agit d\u2019un langage dit de \u00ab haut niveau \u00bb.  </li> <li>Python est un langage open source. Libre et gratuit, il est support\u00e9, d\u00e9velopp\u00e9 et utilis\u00e9 par une large communaut\u00e9.  </li> <li>Python est une langage multiplateforme : vous \u00e9rirez le m\u00eame programme que soyez sous Linux, Mac OS X ou Windows et il pourra \u00eatre ex\u00e9cut\u00e9 indiff\u00e9renment sur l\u2019un de ces syst\u00e8mes d\u2019exploitation.  </li> <li>Python est un langage op\u00e9rationnel complet : il ne sert pas qu\u2019\u00e0 apprendre \u00e0 programmer. De nombreuses applications scientifiques complexes sont d\u00e9velopp\u00e9es en Python. A la NASA, au CNRS, chez Google, chez Yahoo, etc ... de nombreux projets sont d\u00e9velopp\u00e9s en Python.  </li> </ul> <p>Avec le langage Python il est possible de faire :  </p> <ul> <li>du calcul scientifique (librairie Numpy)</li> <li>des graphiques ( (librairie Mathplotlib)  </li> <li>du traitement du son  </li> <li>du traitement de l\u2019image (librairie PIL)  </li> <li>des applications avec interface graphique GI (librairies Tkinter, PyQt, wxPython, PyGTK, ... )  </li> <li>des jeux vid\u00e9o en temps r\u00e9el (librairie Pygame)  </li> <li>des applications web (serveur web Zope, framework web Django ; framework JavaScript Pyjama)  </li> <li>interfacer des syst\u00e8mes de gestion de base de donn\u00e9es (librairie MySQLdb...)  </li> <li>des applications r\u00e9seaux (framework Twisted)  </li> </ul>"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#variables-et-affectation","title":"Variables et Affectation","text":"<p>A retenir</p> <p>Dans le langage Python, le symbole <code>=</code> correspondant \u00e0 l'affectation (\u00e9crite \\(\\leftarrow\\) en pseudo-code).  Pour affecter la valeur 2 \u00e0 une variable <code>a</code> on \u00e9crit simplement <code>a = 2</code>.</p> <p>Ainsi, l'algorithme</p> \ud83d\udccb Algo<pre><code>a \u2190 3\nb \u2190 2 * a\n</code></pre> <p>s'\u00e9crit en Python de la fa\u00e7on suivante :</p> \ud83d\udc0d Script Python<pre><code>a = 3\nb = 2 * a\n</code></pre> \ud83d\udccb Algo<pre><code>a = 3\nb = 2 * a\nprint(a)\nprint(b)\n</code></pre> \ud83d\udccb Algo<pre><code>3\n6\n</code></pre> <p>Q.1</p> <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme ci-dessous. Que valent <code>N</code> et <code>P</code> apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ?  </p> \ud83d\udccb Algo<pre><code>N \u2190 2\nP \u2190 3\nN \u2190 P + 1\nP \u2190 N\n</code></pre> <p>Les noms de variables sont des noms que vous choisissez vous-m\u00eame assez librement. Efforcez-vous cependant de bien les choisir :  - aussi explicites que possible, de mani\u00e8re \u00e0 exprimer clairement ce que la variable est cens\u00e9e contenir.  </p> <p>Par exemple, des noms de variables tels que altitude, altit ou alt conviennent mieux que x pour exprimer une altitude.</p> <p>ATTENTION Il existe des noms r\u00e9serv\u00e9s :  </p> and del from None True as elif global nonlocal try assert else if not while break except import or with class False in pass yield continue finally is raise def for lambda return"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#lincrementation-dune-variable","title":"L'incr\u00e9mentation d'une variable","text":"<p>Vocabulaire</p> <p>\u00abIncr\u00e9menter\u00bb une variable signifie l'augmenter. </p> <p>Imaginons une variable appel\u00e9e <code>compteur</code>. Au d\u00e9marrage de notre programme, elle est initialis\u00e9e \u00e0 la valeur 0. \ud83d\udc0d Script Python<pre><code>compteur = 0\n</code></pre></p> <p>Consid\u00e9rons qu'\u00e0 un moment du programme, cette variable doit \u00eatre modifi\u00e9e, par exemple en lui ajoutant 1.</p> <p>En Python, cela s'\u00e9crira :</p> <ul> <li> <p>Syntaxe classique \ud83d\udc0d Script Python<pre><code>compteur = compteur + 1\n</code></pre></p> </li> <li> <p>Syntaxe Pythonesque  \ud83d\udc0d Script Python<pre><code>compteur += 1\n</code></pre></p> </li> </ul> \ud83d\udccb Algo<pre><code>compteur=0\ncompteur+=1\nprint(compteur)\n</code></pre> \ud83d\udccb Algo<pre><code>1\n</code></pre> <p>Q.2</p> <p>Ecrire le code \u00abclassique\u00bb et le code \u00abPythonesque\u00bb pour l'instruction suivante : On initialise une variable <code>capital</code> \u00e0 1000 et on lui enl\u00e8ve 5%.</p>"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#lechange-de-variables","title":"L'\u00e9change de variables","text":"<p>Apr\u00e8s l'incr\u00e9mentation, une autre technique de base reviendra fr\u00e9quemment dans nos codes : l'\u00e9change de variables.</p> <p>Imaginons les variables suivantes :</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 3\n&gt;&gt;&gt; b = 5\n</code></pre> Le but est d'\u00e9changer les valeurs de <code>a</code> et de <code>b</code>.</p> <p>\u25b8 M\u00e9thode na\u00efve</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = b\n&gt;&gt;&gt; b = a\n</code></pre> <p>Que valent <code>a</code> et <code>b</code> maintenant ?</p> <p>Malheureusement : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a\n5\n&gt;&gt;&gt; b\n5\n&gt;\n</code></pre></p> <p>La variable <code>a</code> a \u00e9t\u00e9 \u00e9cras\u00e9e d\u00e8s qu'on lui a donn\u00e9 la valeur de la variable <code>b</code>.</p> <p>Comment la pr\u00e9server ?</p> <p>La situation est similaire au probl\u00e8me suivant : comment \u00e9changer le contenu de ces deux verres ?</p> <p></p> <p>La m\u00e9thode est \u00e9vidente : il nous faut un troisi\u00e8me verre.</p> <p>Nous allons faire de m\u00eame pour nos variables. Nous allons utiliser une variable temporaire (on parle aussi de variable tampon) pour conserver la m\u00e9moire de la valeur de <code>a</code> (par exemple) avant que celle-ci ne se fasse \u00e9craser :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 3\n&gt;&gt;&gt; b = 5\n&gt;&gt;&gt; temp = a\n&gt;&gt;&gt; a = b\n&gt;&gt;&gt; b = temp\n</code></pre> <p>Vous pouvez v\u00e9rifier maintenant que les valeurs de <code>a</code> et de <code>b</code> ont bien \u00e9t\u00e9 \u00e9chang\u00e9es.</p> <p>\ud83d\udccc  Syntaxe classique et syntaxe Pythonesque : </p> <p>L'\u00e9change de deux variables <code>a</code> et de <code>b</code> s'\u00e9crit donc : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; temp = a\n&gt;&gt;&gt; a = b\n&gt;&gt;&gt; b = temp\n</code></pre> Mais il existe aussi une syntaxe particuli\u00e8re \u00e0 Python, bien plus courte :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a, b = b, a\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#types-de-variables","title":"Types de variables","text":"<p>Pour l'instant, les variables que nous avons manipul\u00e9es contiennent toutes des nombres entiers.</p> <p>Sauf les maisons de Poudlard, qui sont des mots cha\u00eenes de caract\u00e8res.</p> <p>Pour diff\u00e9rencier la nature de ce que peut contenir une variable, on parle alors de type de variable.</p> <p>En voici quelques uns, que nous d\u00e9couvrirons au fil de l'ann\u00e9e :</p> <p>Types de base :</p> <p>Voici les types Python les plus fr\u00e9quemment utilis\u00e9s cette ann\u00e9e:</p> Type Python Traduction Exemple <code>int</code> entier <code>42</code> <code>float</code> flottant (d\u00e9cimal) <code>3.1416</code> <code>str</code> cha\u00eene de caract\u00e8res (string) <code>\"NSI\"</code> <code>bool</code> bool\u00e9en (True ou False) True <code>tuple</code> p-uplet <code>(255, 127, 0)</code> <code>list</code> liste <code>[0, 1, 2, 3, 4, 5]</code> <code>dict</code> dictionnaire <code>{'Homer':43, 'Marge':41, 'Bart':12, 'Lisa':10, 'Maggie':4}</code> <code>function</code> fonction <code>print</code> <p>Comment conna\u00eetre le type d'une variable ? Il suffit dans la console d'utiliser la fonction <code>type</code>.</p> \ud83d\udccb Algo<pre><code>a = 1\ntype(a)\n</code></pre> \ud83d\udccb Algo<pre><code>&lt;class 'int'&gt;\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#python-et-le-typage-dynamique","title":"Python et le typage dynamique","text":"<p>Jusqu'\u00e0 pr\u00e9sent, nous ne nous sommes pas occup\u00e9s de pr\u00e9ciser \u00e0 Python le type de notre variable.</p> \ud83d\udc0d Script Python<pre><code>a = 3\n</code></pre> <p>Mais dans certains langages, c'est obligatoire. En C par exemple, il faut \u00e9crire :</p> <p>C<pre><code>int a = 3;\n</code></pre> Cela signifie (pour le langage C) que notre variable <code>a</code> n'aura pas le droit de contenir autre chose qu'un nombre entier.</p> <p>Si on \u00e9crit ensuite C<pre><code>a = \"test\";\n</code></pre></p> <p>Le compilateur C renverra une erreur : on ne peut pas stocker une cha\u00eene de caract\u00e8res dans une variable qu'on a cr\u00e9\u00e9e comme \u00e9tant de type entier.</p> <p>Et en Python ?</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 3\n&gt;&gt;&gt; type(a)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; a = \"test\"\n&gt;&gt;&gt; type(a)\n&lt;class 'str'&gt;\n</code></pre> <p>Python a chang\u00e9 tout seul le type de notre variable, sans intervention. On parle de typage dynamique.</p>"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#bonnes-pratiques-de-nommage","title":"Bonnes pratiques de nommage","text":""},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#ce-qui-est-autorise-et-ce-qui-ne-lest-pas","title":"Ce qui est autoris\u00e9 et ce qui ne l'est pas","text":"<p>Pour nommer correctement une variable, il existe des r\u00e8gles \u00e0 respecter.</p> <p>\"Les r\u00e8gles\"   - le nom de la variable peut contenir les caract\u00e8res suivants :    - des lettres non accentu\u00e9es (attention, minuscule et majuscule sont des caract\u00e8res diff\u00e9rents)    - des chiffres (mais pas comme premier caract\u00e8re)    - le tiret du bas _ (underscore, tiret du 8)</p> <ul> <li>le nom de la variable ne doit pas commencer par un chiffre</li> <li>le nom de la variable ne doit pas contenir d'espace</li> <li>le nom de la variable ne doit pas \u00eatre un mot-cl\u00e9 du langage.</li> </ul> <p>Liste des mots-cl\u00e9s r\u00e9serv\u00e9s par Python</p> <p> andas assert  break class  continue   def    del elif   else   except False  finally for   from   global    if   import in is  lambda None not     or  pass raise   return True try   while with    yield  </p>"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#du-sens-du-sens-du-sens","title":"Du sens, du sens, du sens","text":"<p>Hormis pour les indices (de boucles, de tableaux...) un nom de variable (dans un programme destin\u00e9 \u00e0 \u00eatre lu, par vous ou quelqu'un d'autre) doit imp\u00e9rativement avoir du sens :</p> \ud83d\udc0d Script Python<pre><code># PAS BIEN\nif d == 1:\n    cep += vm\n\n# BIEN\nif date == 1:\n    compte_epargne += versement_mensuel\n</code></pre> <p>R\u00e8gle d'or : On ne donne jamais un nom de variable au hasard, on le choisit pour qu'il soit explicite.</p> <p>Oui mais pour donner du sens, il faut souvent plusieurs mots... La longueur du nom de la variable n'est plus un probl\u00e8me depuis que la grande majorit\u00e9 des IDE proposent la compl\u00e9tion automatique. Mais comment former ces longs mots ?</p>"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#syntaxe-des-noms-a-rallonge","title":"Syntaxe des noms \u00e0 rallonge","text":"<p>Comment accoler des mots - S'il est compos\u00e9, le nom peut \u00eatre de la forme:  - <code>snake_case</code> : les mots sont s\u00e9par\u00e9s par des underscores. Conseill\u00e9 en Python.  - <code>camelCase</code> : les mots sont s\u00e9par\u00e9s par des majuscules mais la 1\u00e8re lettre est minuscule. Conseill\u00e9 en Javascript.  - <code>PascalCase</code> : les mots sont s\u00e9par\u00e9s par des majuscules et la 1\u00e8re lettre est majuscule. Conseill\u00e9 en C.  - <code>kebab-case</code> : les mots sont s\u00e9par\u00e9s par des tirets courts. Conseill\u00e9 en HTML - CSS.   </p> <p>Sans surprise, en Python, nous utiliserons donc le <code>snake_case</code>.</p>"},{"location":"T06_Python/T6.1_Python/Cours01_Les_Variables_en_Python/#exercices","title":"Exercices","text":"<p>Exercice 1 :</p> <p>Pr\u00e9dire la valeur affich\u00e9e apr\u00e8s les s\u00e9quences d'instructions suivantes.</p> <p>1. S\u00e9quence 1 :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 5\n&gt;&gt;&gt; a = a + 1\n&gt;&gt;&gt; b = a\n&gt;&gt;&gt; b = b ** 2 - a\n&gt;&gt;&gt; print(b)\n</code></pre> <p>2. S\u00e9quence 2 :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 5\n&gt;&gt;&gt; b = 6\n&gt;&gt;&gt; a = a - b\n&gt;&gt;&gt; b = b + a\n&gt;&gt;&gt; a = b - a\n&gt;&gt;&gt; print(a, b)\n</code></pre> <p>3. S\u00e9quence 3 :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; from random import randint\n&gt;&gt;&gt; a = randint(1, 100)  #entier al\u00e9atoire entre 1 et 100\n&gt;&gt;&gt; b = randint(1, 100)  #entier al\u00e9atoire entre 1 et 100\n&gt;&gt;&gt; a = a - b\n&gt;&gt;&gt; b = b + a\n&gt;&gt;&gt; a = b - a\n&gt;&gt;&gt; print(a, b)\n</code></pre> <p>Exercice 2 :</p> <p>Le prix d'une mati\u00e8re premi\u00e8re est de 873 euros la tonne au d\u00e9but de l'ann\u00e9e. Ce prix subit des variations saisonni\u00e8res : </p> <ul> <li>au premier trimestre il augmente de 347 euros,  </li> <li>au second trimestre il augmente de 25 %,  </li> <li>au troisi\u00e8me trimestre il subit une baisse de 50 %  </li> <li> <p>et enfin il diminue de 100 euros.  </p> </li> <li> <p>Compl\u00e9ter le code ci-dessous afin qu'il calcule les valeurs successives de la variable <code>prix</code>.  </p> </li> </ul> \ud83d\udc0d Script Python<pre><code>prix = 873       #prix au d\u00e9but de l'ann\u00e9e\nprix = ....      #prix \u00e0 la fin du premier trimestre\nprix = ....      #prix \u00e0 la fin du second trimestre\nprix = ....      #prix \u00e0 la fin du troisi\u00e8me trimestre\nprix = ....      #prix \u00e0 la fin de l'ann\u00e9e\nprint(\"Prix final :\", prix)\n</code></pre> <p>Exercice 3 :</p> <p>La temp\u00e9rature \\(f\\) en degr\u00e9s  Fahrenheit s'obtient \u00e0 partir de la temp\u00e9rature \\(c\\) en degr\u00e9s Celsius par la formule de conversion \\(f=1,8 * c + 32\\). </p> <p>On veut \u00e9crire un programme qui r\u00e9ponde \u00e0 la sp\u00e9cification suivante : convertir une mesure de temp\u00e9rature de l'\u00e9chelle  Celsius vers l'\u00e9chelle Fahrenheit.</p> <p>1. Saisir  le code ci-dessous  :</p> \ud83d\udc0d Script Python<pre><code>f = input(\"Temp\u00e9rature en degr\u00e9s Celsius ? \"\nd = 1,8 * f + 32\nprint(\"La temp\u00e9rature en degr\u00e9s Fahrenheit est de \", d)\n</code></pre> <p>2. Ex\u00e9cuter le code, on doit obtenir un message d'erreur indiquant une erreur de Syntaxe. Un curseur indique dans le code la position o\u00f9 l'interpr\u00e9teur Python s'est interrompu dans la lecture du code. Si le curseur est en d\u00e9but de ligne, il faut souvent chercher l'erreur \u00e0 la fin de la ligne pr\u00e9c\u00e9dente ...</p> <p>Corriger l'erreur de syntaxe.</p> <p>3. Ex\u00e9cuter de nouveau le code, on doit obtenir un message d'erreur indiquant que Python ne peut r\u00e9aliser l'op\u00e9ration demand\u00e9e. On dit que l'interpr\u00e9teur Python a lev\u00e9 une exception.</p> \ud83d\udc0d Script Python<pre><code>TypeError: can only concatenate str (not \"int\") to str\n</code></pre> <p>4. Ins\u00e9rer l'instruction <code>print(type(f))</code> en ligne 2, ex\u00e9cuter de nouveau. Que repr\u00e9sente la valeur affich\u00e9e avant le message d'erreur ?</p> <p>5. Remplacer la premi\u00e8re instruction par <code>float(input(\"Temp\u00e9rature en degr\u00e9s Celsius ? \"))</code> puis ex\u00e9cuter. </p> <p>Quel est l'effet de la fonction <code>float</code> ? Afficher sa documentation dans l'interpr\u00e9teur avec l'instruction <code>help(float)</code>. </p> <p>6. Si on teste le programme pour une temp\u00e9rature de 45 degr\u00e9s Celsisus on doit obtenir l'affichage ci-dessous. </p> <p>Est-ce que la sp\u00e9cification du programme est v\u00e9rifi\u00e9e ? Corriger le programme.</p> \ud83d\udc0d Script Python<pre><code>Temp\u00e9rature en degr\u00e9s Celsius ? 45\n&lt;class 'float'&gt;\nLa temp\u00e9rature en degr\u00e9s Fahrenheit est de  (1, 392.0)\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/","title":"Th\u00e8me 6 - Langages et programmation","text":"02              Cours : Les Fonctions en Python"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#notion-de-fonctions","title":"Notion de fonctions","text":"<p>La notion de fonction est essentielle en programmation, elles servent \u00e0 mieux structurer votre code. Par exemple, elles permettent d\u2019\u00e9viter de r\u00e9p\u00e9ter plusieurs fois des portions de codes identiques. Ainsi, une fonction peut \u00eatre vu comme un \u00abpetit\u00bb programme : - \u00e0 qui on donne des param\u00e8tres en entr\u00e9e,  - puis qui effectue alors un traitement sur ces param\u00e8tres, - qui renvoie enfin un r\u00e9sultat en sortie.  </p> <p>Une fonction qui modifie des variables mais sans renvoyer de r\u00e9sultat est appel\u00e9e une proc\u00e9dure. Le langage Python ne fait pas de diff\u00e9rence dans la syntaxe entre fonction et proc\u00e9dure.</p> <p>A retenir :</p> <p>En Python, une fonction se cr\u00e9e avec le mot-cl\u00e9 <code>def</code>.</p>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#fonctions-sans-parametre-sans-valeur-renvoyee","title":"Fonctions sans param\u00e8tre, sans valeur renvoy\u00e9e","text":"\ud83d\udc0d Script Python<pre><code>def accueil():\n    print(\"Bonjour\")\n    print(\"comment allez-vous ?\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>accueil()\n</code></pre> \ud83d\udc0d Script Python<pre><code>Bonjour\ncomment allez-vous ?\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#fonction-avec-parametres-sans-valeur-renvoyee","title":"Fonction avec param\u00e8tre(s), sans valeur renvoy\u00e9e","text":"\ud83d\udc0d Script Python<pre><code>def double(n):\n    d=2*n\n    print(f'le double de {n} est {d}')\n</code></pre> \ud83d\udc0d Script Python<pre><code>double(4)\nle double de 4 est 8\n</code></pre> <p>Vocabulaire :</p> <ul> <li>La valeur <code>n</code> est appel\u00e9e param\u00e8tre de la fonction <code>double</code>.  </li> <li>On dit qu'on  passe le param\u00e8tre <code>n</code> \u00e0 la fonction <code>double</code>.  </li> <li>Dans l'exemple ci-dessus, on dit qu'on a appel\u00e9 la fonction <code>double</code> avec  l'argument 4.</li> </ul> <p>Remarques :</p> <ul> <li>l\u00e0 encore, notre fonction ne renvoie rien : on peut encore la consid\u00e9rer comme un ensemble d'instructions factoris\u00e9 dans un m\u00eame bloc. \u00c0 la diff\u00e9rence de la fonction sans param\u00e8tre, ces instructions ne sont pas toujours les m\u00eames, gr\u00e2ce \u00e0 l'utilisation du param\u00e8tre demand\u00e9 \u00e0 l'utilisateur.  </li> <li>la fonction bien connue  <code>print()</code> est une fonction \u00e0 param\u00e8tre, qui affiche dans la console le contenu du param\u00e8tre.  </li> </ul>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#fonction-avec-parametres-et-avec-valeur-renvoyee","title":"Fonction avec param\u00e8tre(s) et avec valeur renvoy\u00e9e","text":"<p>On retrouve ici la notion classique de fonction rencontr\u00e9e en math\u00e9matiques : un proc\u00e9d\u00e9 qui prend un nombre et en renvoie un autre. En informatique, l'objet renvoy\u00e9 ne sera pas forc\u00e9ment un nombre (cela pourra \u00eatre aussi une liste, un tableau, une image...). Le renvoi d'une valeur se fait gr\u00e2ce au mot-cl\u00e9 <code>return</code>.</p> <p>Exemple</p> <p>La fonction math\u00e9matique \\(f : x \\longmapsto 2x+3\\) se codera par :</p> <p>\ud83d\udc0d Script Python<pre><code>def f(x):\n    return 2*x+3\n</code></pre> \ud83d\udc0d Script Python<pre><code>f(4)\n11\n</code></pre></p>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#autour-du-return","title":"Autour du <code>return</code>","text":""},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#la-force-du-return","title":"La force du <code>return</code>","text":"<p>Diff\u00e9rence fondamentale entre <code>return</code> et <code>print</code> </p> <p>Le mot-cl\u00e9 <code>return</code> de l'exemple pr\u00e9c\u00e9dent fait que l'expression <code>f(4)</code> est \u00e9gale \u00e0 11. On peut d'ailleurs \u00e9crire en console :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; f(4) + 5\n16\n</code></pre> <p>Imaginons (avant de l'oublier tr\u00e8s vite) le code affreux ci-dessous :  </p> \ud83d\udc0d Script Python<pre><code>def g(x):\n    print(2*x + 3)\n</code></pre> <p>On pourrait avoir l'illusion que la fonction <code>g</code> fait correctement son travail :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; g(4)\n11\n</code></pre> <p>Mais <code>g</code> se contente d'afficher sa valeur calcul\u00e9e, et non pas de la renvoyer. En effet :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; g(4) + 5\n16\nTraceback (most recent call last):\nFile \"&lt;input&gt;\", line 1, in &lt;module&gt;\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\n</code></pre> <p>En r\u00e9sum\u00e9 :</p> <p></p> \ud83d\udc0d Script Python<pre><code>def g(x):\n    print(2*x + 3)\n</code></pre> \ud83d\udc0d Script Python<pre><code>g(4)+5\n</code></pre> \ud83d\udc0d Script Python<pre><code>11\nTraceback (most recent call last):\nFile \"&lt;input&gt;\", line 1, in &lt;module&gt;\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#le-return-est-un-siege-ejectable","title":"Le <code>return</code> est un si\u00e8ge \u00e9jectable","text":"<p>Le mot-cl\u00e9 <code>return</code> provoque une \u00e9jection du code : tout ce qui est situ\u00e9 apr\u00e8s le \u00a0<code>return</code> ne sera pas ex\u00e9cut\u00e9.   </p> <p>Observez la diff\u00e9rence entre les fonctions <code>g</code>  et <code>h</code> .</p> \ud83d\udc0d Script Python<pre><code>def g(x):\n    print(\"ce texte sera bien affich\u00e9\")\n    return 2*x+3\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; g(4)\nce texte sera bien affich\u00e9\n11\n</code></pre> \ud83d\udc0d Script Python<pre><code>def h(x):\n    return 2*x+3\n    print(\"ceci ne sera jamais affich\u00e9\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; h(4)\n11\n</code></pre> \ud83d\udc0d Script Python<pre><code>def g(x):\n    print(\"ce texte sera bien affich\u00e9\")\n    return 2*x+3\n\ndef h(x):\n    return 2*x+3\n    print(\"ceci ne sera jamais affich\u00e9\")\n</code></pre> <p>\ud83d\udc0d Script Python<pre><code>print(g(4))\nprint(h(4))\n</code></pre> \ud83d\udc0d Script Python<pre><code>ce texte sera bien affich\u00e9\n11\n11\n</code></pre></p>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#les-fonctions-sans-return-sont-elles-des-fonctions","title":"Les fonctions sans <code>return</code> sont-elles des fonctions ?","text":"<ul> <li>Pour les puristes, une fonction sans valeur renvoy\u00e9e sera plut\u00f4t appel\u00e9e proc\u00e9dure. Le mot fonction est alors r\u00e9serv\u00e9 aux fonctions qui ont effectivement un <code>return</code>.</li> </ul>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#variables-locales-variables-globales","title":"Variables locales, variables globales","text":""},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#notion-despace-de-noms","title":"Notion d'espace de noms","text":"<p>A retenir :</p> <ul> <li>Les variables d\u00e9finies dans le corps d'une fonction sont appel\u00e9es variables locales </li> <li>Les variables d\u00e9finies dans le corps du programme (sous-entendu : pas \u00e0 l'int\u00e9rieur d'une fonction) sont appel\u00e9es variables globales.  </li> </ul>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#regles-dacces-en-lecture-et-en-modification-dune-variable-suivant-son-espace-dorigine","title":"\ud83d\udcda R\u00e8gles d'acc\u00e8s en lecture et en modification d'une variable suivant son espace d'origine","text":"<p>R\u00e8gles d'acc\u00e8s aux variables locales et globales : </p> <ul> <li>r\u00e8gle 1 : une variable locale (d\u00e9finie au c\u0153ur d'une fonction) est inaccessible hors de cette fonction.   </li> <li>r\u00e8gle 2 : une variable globale (d\u00e9finie \u00e0 l'ext\u00e9rieur d'une fonction) est accessible en lecture \u00e0 l'int\u00e9rieur d'une fonction.  </li> <li>r\u00e8gle 3 : une variable globale (d\u00e9finie \u00e0 l'ext\u00e9rieur d'une fonction) ne peut pas \u00eatre modifi\u00e9e \u00e0 l'int\u00e9rieur d'une fonction.</li> </ul> <p>\u26a0 \u00c0 propos de la r\u00e8gle n\u00b03 (toute la v\u00e9rit\u00e9, rien que la v\u00e9rit\u00e9)</p> <p>Pour certains types de variables (listes, dictionnaires...), la modification d'une variable globale \u00e0 l'int\u00e9rieur du corps d'une fonction est en fait possible (contrairement \u00e0 ce qu'\u00e9nonce la r\u00e8gle 3). Mais cela reste tr\u00e8s fortement d\u00e9conseill\u00e9.</p> <p>Une fonction ne doit modifier que les variables qu'elle cr\u00e9e (ses variables locales) ou bien les variables qu'on lui a donn\u00e9es en param\u00e8tre. </p> <p>Une fonction qui ne respecte pas cette r\u00e8gle pr\u00e9sente des effets de bord : on peut peut-\u00eatre arriver \u00e0 les g\u00e9rer sur un \u00abpetit\u00bb code, mais cela devient illusoire sur un code utilisant de multiples fonctions. </p>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#documenter-une-fonction","title":"Documenter une fonction","text":""},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#help","title":"Help !","text":"<p>Si une fonction peut \u00eatre assimil\u00e9e \u00e0 un outil, il est normal de se demander si cet outil poss\u00e8de un mode d'emploi.</p> <p>Observons les fonctions pr\u00e9-d\u00e9finies par Python, et notamment une des premi\u00e8res que nous avons rencontr\u00e9es : la fonction <code>print()</code>. Son mode d'emploi est accessible gr\u00e2ce \u00e0 la commande <code>help(print)</code>.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; help(print)\nHelp on built-in function print in module builtins:\n\nprint(...)\n    print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\n    Prints the values to a stream, or to sys.stdout by default.\n    Optional keyword arguments:\n    file:  a file-like object (stream); defaults to the current sys.stdout.\n    sep:   string inserted between values, default a space.\n    end:   string appended after the last value, default a newline.\n    flush: whether to forcibly flush the stream\n</code></pre> <p>Pensez \u00e0 utiliser cette fonction <code>help()</code> </p>"},{"location":"T06_Python/T6.1_Python/Cours02_Les_fonctions_en_Python/#creer-le-mode-demploi-de-ses-propres-fonctions-les-docstrings","title":"Cr\u00e9er le mode d'emploi de ses propres fonctions : les docstrings","text":"<p>Il est possible, voire souhaitable (d\u00e8s qu'on cr\u00e9\u00e9 un code comportant plusieurs fonctions, et/ou qui sera amen\u00e9 \u00e0 \u00eatre lu par d'autres personnes), de cr\u00e9er un mode d'emploi pour ses fonctions. On appelle cela \u00e9crire la docstring de la fonction, et c'est tr\u00e8s simple : il suffit de l'encadrer par des triples double-quotes <code>\"\"\"</code>.</p> <p>Exemple \ud83d\udc0d Script Python<pre><code>def double(n):\n\"\"\"\n    Renvoie le de n\"\n    \"\"\"\n    d=2*n\n    return d\n</code></pre></p> <p>On peut donc maintenant demander de l'aide pour cette fonction :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; help(double\nHelp on function double in module __main__:\n\ndouble(n)\nRenvoie le double de n\n</code></pre> \ud83d\udc0d Script Python<pre><code>def double(n):\n\"\"\"\n    Renvoie le de n\"\n    \"\"\"\n    d=2*n\n    return d\n</code></pre> \ud83d\udc0d Script Python<pre><code>help(double)\n</code></pre> \ud83d\udc0d Script Python<pre><code>Help on function double in module __main__:\n\n    double(n)\n        Renvoie le de n\"\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/","title":"Th\u00e8me 6 - Langages et programmation","text":"03              Les Boucles (FOR et WHILE) en Python"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#les-enumerables-ou-iterables","title":"Les \u00e9num\u00e9rables ou it\u00e9rables","text":"<p>En math\u00e9matiques, on dit qu'un ensemble est d\u00e9nombrable lorsqu'on peut associer \u00e0 chaque \u00e9l\u00e9ment de l'ensemble un nombre (traditionnellement 1, 2, 3 ...)</p> <ul> <li>les voitures qui roulent sur l'autoroute sont d\u00e9nombrables.</li> <li>l'eau qui coule d'un robinet n'est pas d\u00e9nombrable.</li> </ul> <p>En informatique, il existe un concept similaire qui va d\u00e9signer les objets que l'on peut \u00e9num\u00e9rer, c'est-\u00e0-dire les d\u00e9composer en une succession ordonn\u00e9e d'\u00e9l\u00e9ments. On les appelle les \u00e9num\u00e9rables ou les it\u00e9rables (Python utilise le mot anglais <code>iterable</code>).</p> <ul> <li>la variable <code>NSI</code> (qui est de type <code>String</code>) est \u00e9num\u00e9rable : on peut la d\u00e9composer en  <code>N</code>,  <code>S</code>, <code>I</code>.</li> <li>la variable <code>[4, 3, 17]</code>  (qui est de type <code>List</code>) est \u00e9num\u00e9rable : on peut la d\u00e9composer en  <code>4</code>,  <code>3</code>, <code>17</code>.</li> <li>la variable <code>5</code>  (qui est de type <code>Int</code>) n'est PAS \u00e9num\u00e9rable : on ne peut pas la d\u00e9composer. </li> </ul>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#iterer-sur-les-iterables-la-boucle-for","title":"\u2712 It\u00e9rer sur les it\u00e9rables : la boucle <code>for</code>","text":""},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#iterer-sur-une-chaine-de-caracteres","title":"It\u00e9rer sur une cha\u00eene de caract\u00e8res","text":"<p>Il existe donc une instruction permettant de faire une (ou plusieurs) action(s) \u00e0 chaque it\u00e9ration sur un \u00e9l\u00e9ment \u00e9num\u00e9rable.</p> <p>Exemple : Le programme suivant : \ud83d\udc0d Script Python<pre><code>for k in 'NSI':\n    print(k)\n</code></pre> va donner ceci : \ud83d\udc0d Script Python<pre><code>N\nS\nI\n</code></pre></p> <p>Analyse gr\u00e2ce \u00e0 PythonTutor \u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>k</code>. </p> \ud83d\udccb Algo<pre><code>from tutor import tutor\nfor k in 'NSI':\n    print(k)\ntutor()\n</code></pre> \ud83d\udccb Algo<pre><code>N\nS\nI\n</code></pre> <p>La variable <code>k</code> prend donc successivement toutes les lettre de la cha\u00eene de caract\u00e8re <code>\"NSI\"</code>. </p> <p>Pour chaque valeur de <code>k</code>, la ou les instruction(s) situ\u00e9es de mani\u00e8re indent\u00e9e sous la ligne du <code>for</code> seront ex\u00e9cut\u00e9es. </p> <p>Ici, il y a simplement un <code>print(k)</code>, donc chaque lettre de <code>\"NSI\"</code> s'affiche l'une apr\u00e8s l'autre.</p> <p>Exercice 1 :</p> <p>Que donne le script suivant ? \ud83d\udc0d Script Python<pre><code>for m in 'NASA':\n    print(\"bonjour\")\n</code></pre></p> <p>Dans cet exercice, la variable de boucle <code>m</code> est muette : elle n'appara\u00eet dans les instructions indent\u00e9es sous le <code>for</code>. </p> <p>La variable <code>m</code> prend successivement les valeurs <code>'N</code>, <code>'A'</code>, <code>'S'</code> et <code>'A'</code>, mais on ne le voit pas.</p> <p>\ud83d\udcda  A retenir :</p> <p>\u26a0 Comment \u00e9viter les erreurs classiques Quand vous \u00e9crivez une boucle <code>for</code>, veillez bien \u00e0 :</p> <ul> <li>finir la ligne du <code>for</code> par les deux points <code>:</code> </li> <li>indenter sous le <code>for</code> les instructions qui doivent \u00eatre r\u00e9p\u00e9t\u00e9es. </li> </ul>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#iterer-sur-une-liste","title":"It\u00e9rer sur une liste","text":"<p>Exemple : Le programme suivant : \ud83d\udc0d Script Python<pre><code>for jour in [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]:\n    print(f\"je vais au lyc\u00e9e le {jour}\")\n</code></pre> va donner ceci : \ud83d\udc0d Script Python<pre><code>je vais au lyc\u00e9e le lundi\nje vais au lyc\u00e9e le mardi\nje vais au lyc\u00e9e le mercredi\nje vais au lyc\u00e9e le jeudi\nje vais au lyc\u00e9e le vendredi\n</code></pre></p> \ud83d\udccb Algo<pre><code>from tutor import tutor\nfor jour in [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]:\n    print(f\"je vais au lyc\u00e9e le {jour}\")\ntutor()\n</code></pre> \ud83d\udccb Algo<pre><code>je vais au lyc\u00e9e le lundi\nje vais au lyc\u00e9e le mardi\nje vais au lyc\u00e9e le mercredi\nje vais au lyc\u00e9e le jeudi\nje vais au lyc\u00e9e le vendredi\n</code></pre> <p>\u26a0 Attention:</p> <p>Tr\u00e8s souvent, l'objet it\u00e9rable que la boucle va parcourir aura \u00e9t\u00e9 au pr\u00e9alable stock\u00e9 dans une variable :</p> <p>Exemple : Le programme pr\u00e9c\u00e9dent est \u00e9quivalent \u00e0 : \ud83d\udc0d Script Python<pre><code>semaine = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]\nfor jour in semaine:\n    print(\"je vais au lyc\u00e9e le\", jour)\n</code></pre></p> <p>Notez l'importance d'avoir choisi des noms de variables explicites : ils aident grandement \u00e0 la lisibilit\u00e9 du code.</p> <p>Trailer : Dans le cours sp\u00e9cifique sur les listes, nous verrons une toute autre mani\u00e8re de parcourir une liste.</p> \ud83d\udccb Algo<pre><code>semaine = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]\nfor jour in semaine:\n    print(\"je vais au lyc\u00e9e le\", jour)\n</code></pre> \ud83d\udccb Algo<pre><code>je vais au lyc\u00e9e le lundi\nje vais au lyc\u00e9e le mardi\nje vais au lyc\u00e9e le mercredi\nje vais au lyc\u00e9e le jeudi\nje vais au lyc\u00e9e le vendredi\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#comment-repeter-n-fois-la-meme-action","title":"\u2712 Comment r\u00e9p\u00e9ter <code>n</code> fois la m\u00eame action ?","text":"<p>Comment r\u00e9p\u00e9ter 10 fois la phrase <code>\"Hasta la vista, baby\"</code> ?</p> <p>\ud83d\udccc Note :</p> <p>L'ensemble <code>range</code> : Le programme suivant : \ud83d\udc0d Script Python<pre><code>for i in range(5):\n    print(\"Hasta la vista, baby\")\n</code></pre></p> <p>va donner ceci :  </p> \ud83d\udc0d Script Python<pre><code>Hasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\n</code></pre> <p>L\u00e0 encore, le <code>i</code> est une variable muette.</p> \ud83d\udccb Algo<pre><code>for i in range(5):\n    print(\"Hasta la vista, baby\")\n</code></pre> \ud83d\udccb Algo<pre><code>Hasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#utilisation-minimale-de-lobjet-range","title":"Utilisation minimale de l'objet <code>range()</code>","text":"<p>Syntaxe minimale de <code>range()</code>  : Le programme suivant : \ud83d\udc0d Script Python<pre><code>for k in range(4):\n    print(k)\n</code></pre> va donner ceci : \ud83d\udc0d Script Python<pre><code>0\n1\n2\n3\n</code></pre></p> <p>Interpr\u00e9tation : faire parcourir \u00e0 une variable <code>k</code> l'ensemble <code>range(n)</code> va faire prendre \u00e0 <code>k</code> les valeurs 0, 1, 2, ..., n-1. </p>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#utilisation-avancee-de-lobjet-range","title":"Utilisation avanc\u00e9e de l'objet <code>range()</code>","text":"<p>Syntaxe compl\u00e8te de <code>range()</code>  : Le programme suivant : \ud83d\udc0d Script Python<pre><code>for k in range(5, 15, 2):\n    print(k)\n</code></pre> va donner ceci : \ud83d\udc0d Script Python<pre><code>5\n7\n9\n11\n13\n</code></pre> Interpr\u00e9tation : faire parcourir \u00e0 <code>k</code> l'ensemble <code>range(start, stop, step)</code> fait :</p> <ul> <li>d\u00e9marrer <code>k</code> \u00e0 la valeur <code>start</code> </li> <li>progresser <code>k</code>  de <code>step</code> en <code>step</code> </li> <li>tant que <code>k</code> est rictement inf\u00e9rieur <code>stop</code> </li> </ul> <p>Remarques :</p> <ul> <li>si le <code>step</code> est omis, il vaut 1 par d\u00e9faut.</li> <li>l'objet <code>range(5)</code> n'est pas \u00abtechniquement\u00bb \u00e9gal \u00e0 la liste <code>[0, 1, 2, 3, 4]</code>, car ce n'est pas un objet de type <code>List</code>:</li> </ul> <p>\ud83d\udcbb   Exercice 1 :</p> <p>Faire afficher les s\u00e9ries de nombres suivantes.</p> <p>On utilisera la syntaxe <code>print(k, end = ' ')</code> ) pour afficher les nombres horizontalement.</p> <p>A. <code>0 1 2 3 4 5</code>  B. <code>10 11 12 13 14 15</code> C. <code>3 6 9 12</code> D. <code>10 9 8 7 6 5 4 3 2 1 0</code> </p>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#une-situation-classique-la-double-boucle","title":"\u2712 Une situation classique : la double boucle","text":"<p>Il est tr\u00e8s souvent utile d'imbriquer une boucle dans une autre, notamment lors du parcours de tous les pixels d'une image. Prenons pour l'instant un exemple num\u00e9rique.</p> <p>\ud83d\udcbb  Exercice 2 :</p> <p>Ecrire un script permettant d'afficher</p> \ud83d\udc0d Script Python<pre><code>1 * 1 = 1\n1 * 2 = 2\n1 * 3 = 3\n2 * 1 = 2\n2 * 2 = 4\n2 * 3 = 6\n3 * 1 = 3\n3 * 2 = 6\n3 * 3 = 9\n4 * 1 = 4\n4 * 2 = 8\n4 * 3 = 12\n</code></pre> <p>\ud83d\udcda A retenir :</p> <ul> <li>La boucle <code>for</code> s'utilise lorsque :  <ul> <li>on veut parcourir un \u00e0 un les \u00e9l\u00e9ments d'un objet it\u00e9rable (une cha\u00eene de caract\u00e8re, une liste...)  </li> <li>on veut r\u00e9p\u00e9ter une action un nombre de fois connu \u00e0 l'avance. On parle de boucle born\u00e9e.  </li> </ul> </li> <li>Les instructions r\u00e9p\u00e9t\u00e9es peuvent - mais ce n'est pas obligatoire - faire appel \u00e0 la variable de boucle, mais il ne faut pas que ces instructions la modifient.  </li> <li>Ne pas oublier les <code>:</code> et l'indentation !  </li> <li><code>range(n)</code> g\u00e9n\u00e8re une s\u00e9quence de <code>n</code> nombres entiers: on s'en servira d\u00e8s qu'on aura besoin de r\u00e9p\u00e9ter <code>n</code> fois des instructions.</li> </ul>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#exercices","title":"Exercices","text":"<p>\ud83d\udcbb  Exercice 3 :</p> <p>Dans l'extrait de code suivant:</p> <ul> <li><code>chaine</code> est une variable initialis\u00e9e avec un <code>str</code> vide : <code>\"\"</code>;  </li> <li>on veut qu'en sortie de programme cette variable contienne la valeur <code>'bravo'</code>.  </li> </ul> <p>L'id\u00e9e est d'ajouter une par une les lettres \u00e0 la variable <code>chaine</code>.</p> <p>Compl\u00e9ter le code.</p> \ud83d\udc0d Script Python<pre><code>chaine = \"\"\nfor ... in ['b', 'r', 'a', 'v', 'o']:\n    ...\n</code></pre> <p>Cette variable <code>chaine</code> est appel\u00e9e un accumulateur.</p> <p>\ud83d\udcbb Exercice 4 :</p> <p>En Python, la fonction <code>ord</code> renvoie le code Unicode d'un caract\u00e8re et la fonction <code>chr</code> le contraire: elle renvoie le caract\u00e8re correspondant \u00e0 un code Unicode.</p> <p>Par exemple: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; ord('a')\n97\n&gt;&gt;&gt; chr(97)\n'a'\n</code></pre></p> <p>Voici une liste contenant les codes Unicode des lettres d'un mot secret... \u00c0 vous d'\u00e9crire un programme o\u00f9 en sortie, la variable <code>mot_secret</code> contiendra la cha\u00eene de caract\u00e8res de ce mot.   </p> \ud83d\udc0d Script Python<pre><code>mystere = [111, 107, 44, 32, 98, 105, 101, 110, 32, 106, 111, 117, 233]\nmot_secret = \"\"\n</code></pre> <p>ok, bien jou\u00e9</p> <p>\ud83d\udcbb Exercice 5 :</p> <p>On souhaite calculer la somme des 1000 premiers nombres entiers naturels, c'est-\u00e0-dire:</p> <p>\\(1+2+3+4+5+ \\dots +999+1000\\)</p> <p>\u00c9crire un programme avec une variable <code>somme</code> accumulateur (comme \u00e0 l'exercice 3) qui contiendra la valeur souhait\u00e9e en fin de programme.</p> <p>\ud83d\udcbb Exercice 6 :</p> <p>Ecrire un programme permettant de calculer </p> <p>\\(1\\times 2 \\times 3 \\times \\dots 99 \\times 100\\).</p> <p>\ud83d\udcbb Exercice 7 :</p> <p>Proposer un code qui \u00e9crit la table de multiplication de 7, de 8 et de 9.</p> <p></p>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#boucle-while","title":"Boucle WHILE","text":""},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#premiers-exemples","title":"\u2712  Premiers exemples","text":"<p>\u00c0 la diff\u00e9rence essentielle des boucles <code>for</code>, dont on peut savoir \u00e0 l'avance combien de fois elles vont \u00eatre ex\u00e9cut\u00e9es, les boucles <code>while</code> sont des boucles dont on ne sort que lorsqu'une condition n'est plus satisfaite. </p> <p>Avec donc le risque de rester infiniment bloqu\u00e9 \u00e0 l'int\u00e9rieur !  </p> \ud83d\udccb Algo<pre><code>a = 0\nwhile a &lt; 3:\n    print(\"ok\")\n    a = a + 1\nprint(\"fini\")\n</code></pre> \ud83d\udccb Algo<pre><code>ok\nok\nok\nfini\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#syntaxe-generale","title":"\u2712 Syntaxe g\u00e9n\u00e9rale","text":"<p>\ud83d\udcda A retenir :</p> <p>\u00c9criture d'une boucle <code>while</code> ```python while condition:     instruction1     instruction2     ...     instructionN ````</p> <p></p>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#la-condition","title":"La condition","text":"<p>La <code>condition</code> est un bool\u00e9en, c'est-\u00e0-dire une expression que Python \u00e9valuera \u00e0 <code>True</code> ou \u00e0 <code>False</code>.</p> <p>Exemple de bool\u00e9ens r\u00e9sultant d'une \u00e9valuation : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; 1 &lt; 3\nTrue\n&gt;&gt;&gt; 5 &gt; 7\nFalse\n&gt;&gt;&gt; a = 10\n&gt;&gt;&gt; a &gt; 8\nTrue\n</code></pre></p>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#les-pieges","title":"\u2712  Les pi\u00e8ges ...","text":""},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#piege-n1-ne-jamais-sortir-de-la-boucle","title":"pi\u00e8ge n\u00b01 : ne JAMAIS SORTIR de la boucle","text":"<p>Exemple : Le programme suivant : \ud83d\udc0d Script Python<pre><code>a = 0\nwhile a &lt; 3:\n    print(\"ok\")\n    a = a + 1\n    a = a * 0\nprint(\"ce texte ne s'\u00e9crira jamais\")\n</code></pre> va \u00e9crire une suite infinie de <code>ok</code> et ne jamais s'arr\u00eater</p>"},{"location":"T06_Python/T6.1_Python/Cours03_Boucle_FOR_et_WHILE_en_Python/#piege-n2-ne-jamais-entrer-dans-la-boucle","title":"pi\u00e8ge n\u00b02 : ne JAMAIS ENTRER dans la boucle","text":"<p>Exemple : Le programme suivant : \ud83d\udc0d Script Python<pre><code>a = 0\nwhile a &gt; 10:\n    print(\"ce texte non plus ne s'\u00e9crira jamais\")\n    a = a + 1\n\nprint(\"fini\") \n</code></pre> va \u00e9crire <code>fini</code> et s'arr\u00eater.</p> \ud83d\udccb Algo<pre><code>a = 0\nwhile a &gt; 10:\n    print(\"ce texte non plus ne s'\u00e9crira jamais\")\n    a = a + 1\n\nprint(\"fini\")\n</code></pre> <p>fini</p> <p>!!! exo \"\ud83d\udcbb Exercice 8 :     Trouver le plus petit nombre entier \\(n\\) tel que \\(2^n\\) soit sup\u00e9rieur \u00e0 1 milliard.</p> \ud83d\udccb Algo<pre><code>```python\nn = 1\nwhile 2**n...:\n    ...\n    print(\"trop petit\")\nprint(\"trouv\u00e9 : \",n)\n```\n</code></pre> <p>La boucle infinie a \u00e9t\u00e9 pr\u00e9sent\u00e9e comme un danger qu'il faut \u00e9viter. </p> <p>Pourtant, dans quelques situations, il est d'usage d'enfermer volontairement l'utilisateur dans une boucle infinie.</p> <p>C'est notamment le cas des codes p5 o\u00f9 la fonction <code>draw()</code> est une boucle infinie dont on ne sort que lorsqu'un \u00e9v\u00e8nement est intercept\u00e9 (par exemple, le clic sur la fermeture de la fen\u00eatre d'affichage). Ou lors de la cr\u00e9ation d'un jeu....</p> <p>Observez et ex\u00e9cutez le code suivant :</p> \ud83d\udc0d Script Python<pre><code>while True :\n    reponse = input(\"tapez sur la lettre S du clavier pour me sortir de cet enfer : \")\n    if reponse == 'S' or reponse == 's':\n        break\n\nprint(\"merci, j'\u00e9tais bloqu\u00e9 dans une boucle infinie\")\n</code></pre> \ud83d\udccb Algo<pre><code>tapez sur la lettre S du clavier pour me sortir de cet enfer : E\ntapez sur la lettre S du clavier pour me sortir de cet enfer : S\nmerci, j'\u00e9tais bloqu\u00e9 dans une boucle infinie\n</code></pre> <ul> <li>le d\u00e9but du code : <code>while True</code> est typique des boucles infinies volontaires. On aurait tout aussi bien pu \u00e9crire <code>while 3 &gt; 2</code> (on rencontre m\u00eame parfois des <code>while 1</code>)</li> <li>vous avez d\u00e9couvert l'expression <code>break</code> qui comme son nom l'indique permet de casser la boucle (cela marche pour <code>while</code> comme pour <code>for</code>) et donc d'en sortir. Son emploi est controvers\u00e9 parmi les puristes de la programmation. Nous dirons juste que c'est une instruction bien pratique.</li> </ul>"},{"location":"T06_Python/T6.1_Python/Cours04_Instructions_conditionnelles_en_Python/","title":"Th\u00e8me 6 - Langages et programmation","text":"04              Instructions conditionnelles en Python"},{"location":"T06_Python/T6.1_Python/Cours04_Instructions_conditionnelles_en_Python/#instruction-conditionnelle-if","title":"Instruction conditionnelle if","text":"<p>L'instruction conditionnelle <code>if</code> permet de soumettre l'ex\u00e9cution d'instructions \u00e0 une condition donn\u00e9e. Cette condition sera une expression bool\u00e9enne, comme pour la boucle <code>while</code>.</p> <p></p> <p>\ud83d\udcda A retenir : Op\u00e9rateurs de comparaison</p> Op\u00e9rateur Signification <code>==</code> est \u00e9gal \u00e0 <code>!=</code> est diff\u00e9rent de <code>&lt;</code> inf\u00e9rieur \u00e0 <code>&gt;</code> sup\u00e9rieur \u00e0 <code>&lt;=</code> inf\u00e9rieur ou \u00e9gal \u00e0 <code>&gt;=</code> sup\u00e9rieur ou \u00e9gal \u00e0 <code>in</code> appartient \u00e0 <code>not in</code> n'appartient pas \u00e0 <p>Par exemple :</p> <p>Si j\u2019ai plus de 10 de moyenne au bac, je suis dipl\u00f4m\u00e9 :</p> \ud83d\udc0d Script Python<pre><code>moyenne = 3\nif moyenne &gt;= 10:               # ne pas oublier les :\n    print(\"je suis diplom\u00e9\")        # attention \u00e0 l'indentation\n\n##  suite du programme\n</code></pre> <p>Lorsqu\u2019on ex\u00e9cute ce code, il ne se passe rien. La condition <code>moyenne &gt;= 10</code> n\u2019est pas respect\u00e9e et la ligne <code>print(\"je suis displom\u00e9\")</code> n\u2019est jamais atteinte.</p> <p>Ajoutons une ligne pour mieux comprendre le d\u00e9roul\u00e9 des instructions :</p> \ud83d\udc0d Script Python<pre><code>moyenne = 3\nif moyenne &gt;= 10:\n    print(\"je suis dipl\u00f4m\u00e9\")\n\nprint(\"le programme arrive ici dans tous les cas\")\n</code></pre> \ud83d\udccb Algo<pre><code>le programme arrive ici dans tous les cas\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours04_Instructions_conditionnelles_en_Python/#instruction-conditionnelle-if-else","title":"Instruction conditionnelle if else","text":"<p>On peut toujours compl\u00e9ter un bloc <code>if</code> \u00e0 l\u2019aide d\u2019un second bloc <code>else</code>, (sinon), qui ne sera ex\u00e9cut\u00e9 que si la condition du <code>if</code> est fausse :</p> \ud83d\udc0d Script Python<pre><code>moyenne = 3\nif moyenne &gt;= 10:\n    print(\"je suis diplom\u00e9\")\nelse:\n    print(\"j'ai rat\u00e9 le diplome\")\n\nprint(\"le programme arrive ici dans tous les cas\")\n</code></pre> \ud83d\udccb Algo<pre><code>j'ai rat\u00e9 le diplome\nle programme arrive ici dans tous les cas\n</code></pre> <p>Cette fois l\u2019ex\u00e9cution du programme conduit \u00e0 deux affichages :</p> <ul> <li>\u201cj\u2019ai rat\u00e9 le diplome\u201d, parce que la condition du <code>if</code> est fausse, Python ex\u00e9cute le <code>else</code></li> <li>le code arrive arrive ici dans tous les cas\u201d parce que ce bloc n\u2019est pas indent\u00e9.</li> </ul> <p>Reprenez cet exemple en changeant la valeur de la moyenne afin d\u2019ex\u00e9cuter le <code>if</code>.</p> \ud83d\udc0d Script Python<pre><code>moyenne = 12\nif moyenne &gt;= 10:\n    print(\"je suis diplom\u00e9\")\nelse:\n    print(\"j'ai rat\u00e9 le diplome\")\n\nprint(\"le programme arrive ici dans tous les cas\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>je suis diplom\u00e9  \nle programme arrive ici dans tous les cas\n</code></pre>"},{"location":"T06_Python/T6.1_Python/Cours04_Instructions_conditionnelles_en_Python/#instruction-conditionnelle-if-elif-else","title":"Instruction conditionnelle if elif else","text":"<p>Entre <code>if</code> et <code>else</code> on peut ins\u00e9rer autant de bloc <code>elif</code> condition: que l\u2019on souhaite.</p> <p>Par exemple :</p> \ud83d\udc0d Script Python<pre><code>moyenne = 9\nif moyenne &gt;= 10:\n    print(\"je suis diplome\")\nelif moyenne &gt;= 8:\n    print(\"je vais \u00e0 l'oral de rattrapage\")\nelse:\n    print(\"j'ai rat\u00e9 le diplome\")\nprint(\"le programme arrive ici dans tous les cas\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>je vais \u00e0 l'oral de rattrapage  \nle programme arrive ici dans tous les cas\n</code></pre> <p>Lorsqu\u2019on ex\u00e9cute ce code avec diff\u00e9rentes valeurs de la moyenne (5, 9, 11 par exemple) on r\u00e9alise qu\u2019un des blocs if, elif, else est ex\u00e9cut\u00e9. Jamais deux.</p>"},{"location":"T06_Python/T6.1_Python/Cours04_Instructions_conditionnelles_en_Python/#exercices","title":"Exercices","text":"\ud83d\udc0d Script Python<pre><code>import _cours04_autotest as a\n</code></pre> <p>\ud83d\udd8d Exercice 1 :</p> <p>1. Que vaut la valeur finale de la variable b ? \ud83d\udc0d Script Python<pre><code>a = 7\nb = 12\nif a &gt; 5:\n    b = b - 4\nif b &gt;= 10:\n    b = b + 1\n</code></pre></p> <p>2. Que vaut la valeur finale de la variable b ? \ud83d\udc0d Script Python<pre><code>a = 7\nb = 12\nif a &gt; 5:\n    b = b - 4\nelif b &gt;= 10:\n    b = b + 1\n</code></pre></p> <p>3. Que vaut la valeur finale de la variable b ? \ud83d\udc0d Script Python<pre><code>a = 7\nb = 12\nif a &gt; 5:\n    b = b - 4\nelse:\n    b = b + 1\n</code></pre></p> <p>4. Que vaut la valeur finale de la variable a ? \ud83d\udc0d Script Python<pre><code>a = 10\nif a &lt; 5:\n    a = 20\nelif a &lt; 100:\n    a = 500\nelse:\n    a = 0\n</code></pre></p> <p>\ud83d\udd8d et \ud83d\udcbb  Exercice 2 :</p> <p>Les codes suivants sont-ils valides (on ne demande pas ce qu\u2019ils font) ? S\u2019ils sont invalides, rectifiez les.</p> <p>Code 1 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a == 5:\na = 2\n</code></pre></p> <p>Code 2 : \ud83d\udc0d Script Python<pre><code>a = 10\nelif a == 5:\n    a = 2\n</code></pre></p> <p>Code 3 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a = 5:\n    a == 2\n</code></pre></p> <p>Code 4 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a == 5:\na = 2\n</code></pre></p> <p>\ud83d\udcbb Exercice 3 :</p> <p>Compl\u00e9tez le programme \u201cmoyenne\u201d afin d\u2019afficher la mention obtenue par le candidat :</p> <ul> <li>Tr\u00e8s bien (&gt;= 16 de moyenne),  </li> <li>Bien (&gt;= 14 de moyenne),  </li> <li>Assez Bien (&gt;= 12 de moyenne),</li> </ul> <p>\ud83d\udcbb Exercice 4 :</p> <p>L\u2019imp\u00f4t sur le revenu de Groland est assez simple \u00e0 calculer :</p> <ul> <li>un particulier qui gagne moins de 20.000\u20ac de revenus par an doit verser 1\u20ac d\u2019imp\u00f4t symbolique,  </li> <li>entre 50.000 et 100.000\u20ac on doit verser 30% aux imp\u00f4ts,  </li> <li>au dela de 100.000\u20ac de revenus, on doit verser 50% en imp\u00f4t.  </li> </ul> <p>Ecrire un script qui demande \u00e0 un utilisateur le montant de ses revenus annuels et affiche le montant des impots qu\u2019il doit verser.</p> <p>je pr\u00e9cise aux plus na\u00effs que Groland n\u2019existe pas.</p> <p>\ud83d\udcbb Exercice 5 :</p> <p>L'\u00e9quivalence entre l'\u00e2ge d'un chien et l'\u00e2ge humain est donn\u00e9 en proc\u00e9dant ainsi : - lorsque le chien a deux ans ou moins, chaque ann\u00e9e compte pour douze ann\u00e9es \u00abhumaines\u00bb - lorsque le chien a plus de deux ans, chaque ann\u00e9e au del\u00e0 des des deux premi\u00e8res compte pour six ann\u00e9es \u00abhumaines\u00bb.</p> <p>Par exemple un chien de cinq ans a un \u00e2ge \u00abhumain\u00bb de \\(2 \\times 12 + 3 \\times 6 = 42\\) ans.</p> <p>Question 1 : Programmer la fonction <code>age_humain</code> qui prend en argument un entier <code>n</code> correspondant \u00e0 l'\u00e2ge d'un chien et renvoie l'\u00e2ge humain correspondant.</p> \ud83d\udc0d Script Python<pre><code>def age_humain(n):\n    ...\n    ...\n    ...\n    return ...  \n</code></pre> <p>Question 2 : En utilisant votre fonction, d\u00e9terminer quel est l'\u00e2ge \u00abhumain\u00bb d'un chien de 7 ans.</p> <p>\ud83d\udcbb Exercice 6 :</p> <p>Meilleur tarif</p> <p>Remarque : En python, une fonction peut renvoyer plusieurs valeurs. Pour cela, apr\u00e8s le mot clef <code>return</code>, mettre les valeurs \u00e0 renvoyer dans des parenth\u00e8ses, s\u00e9par\u00e9es par des virgules. </p> <p>On consid\u00e8re les tarifs propos\u00e9s par deux entreprises de location de v\u00e9hicules pour la location d\u2019un m\u00eame mod\u00e8le automobile :</p> <ul> <li>Entreprise A : 15 \u20ac par jour puis 27 centimes par kilom\u00e8tre parcouru</li> <li>Entreprise B : 26 \u20ac par jour puis 19 centimes par kilom\u00e8tre parcouru</li> </ul> <p>Question 1 : Programmer une fonction <code>meilleur_tarif</code> qui : - prend en arguments :     - un entier <code>km</code> correspondant au nombre de kilom\u00e8tres \u00e0 parcourir,     - un entier <code>nbjours</code> correspondant au nombre de jours de location; - et renvoie :     - l'entreprise qui propose le tarif le plus \u00e9conomique,     - le tarif avec cette entreprise.</p> <p>On pourra consulter le jeu de tests si besoin.</p> <p>Remarque : En cas d'\u00e9galit\u00e9 de tarif entre les deux entreprises, on renverra l'entreprise 'AB' (voir dernier test).</p> \ud83d\udccb Algo<pre><code>def meilleur_tarif(km, nbjours):\n    ...\n    ...\n    ...\n    return ...  \n</code></pre> <p>\ud83d\udcbb Exercice 7 :</p> <p>Casino</p> <p>Remarque 1 : Vous pouvez (et c'est m\u00eame \u00e0 cela que \u00e7a sert) r\u00e9utiliser une fonction dans une autre fonction. Ici il faudra y penser pour la derni\u00e8re fonction \u00e0 programmer.</p> <p>Remarque 2 : pour tirer un nombre entier au hasard entre deux nombres a et b on utilisera la m\u00e9thode <code>randint</code> du module <code>random</code>. Par exemple pour tirer un nombre entier au hasard entre 1 et 6 (tirage d'un d\u00e9) : \ud83d\udc0d Script Python<pre><code>from random import randint\n...\n...\nresultat_du_de = randint(1, 6)\n...\n...\n</code></pre></p> <p>Dans un casino, les machines \u00e0 sous (voir des images ici : page wikip\u00e9dia ) comportent trois roues ou trois cylindres m\u00e9caniques portant chacun les chiffres de 1 \u00e0 9. En faisant tourner ces roues ou cylindres, on peut tirer au hasard un nombre entre 111 et 999 (ne comportant pas de chiffre z\u00e9ro).  </p> <p>Le joueur mise un euro et r\u00e9cup\u00e8re un gain qui d\u00e9pend du r\u00e9sultat : - si les trois chiffres sont \u00e9gaux \u00e0 sept, le joueur r\u00e9cup\u00e8re une somme de 333 euros, - sinon, si les trois chiffres sont \u00e9gaux, le joueur r\u00e9cup\u00e8re une somme de 33 euros, - sinon, si le chiffre des centaines est \u00e9gal au chiffre des unit\u00e9s, le joueur r\u00e9cup\u00e8re une somme de 1 euro, - sinon, si les trois chiffres sont cons\u00e9cutifs dans l'ordre croissant (par exemple 567), le joueur r\u00e9cup\u00e8re une somme de 15 euros, - sinon il ne r\u00e9cup\u00e8re rien.</p> <p>Question 1 : Compl\u00e9ter la fonction <code>gain_tirage</code> qui prend en param\u00e8tre trois chiffres <code>c, d</code> et <code>u</code> correspondant aux chiffres des centaines, des dizaines et des unit\u00e9s et qui renvoie la somme r\u00e9cup\u00e9r\u00e9e correspondant \u00e0 ce tirage.</p> \ud83d\udccb Algo<pre><code>def gain_tirage(c, d, u):\n    ...\n    ...\n    ...\n    ...\n    ...\n    ...\n    return somme\n</code></pre> <p>Question 2 : En utilisant votre fonction, d\u00e9terminer le gain associ\u00e9 au tirage (5, 6, 5).</p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/","title":"6.1.0 Prise en main de Python","text":""},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#preambule","title":"Pr\u00e9ambule","text":""},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#python","title":"Python","text":"<p>Python est un langage de programmation invent\u00e9 en 1991 par Guido Van Rossum.</p> <p>Ce langage est un des langages les plus utilis\u00e9s actuellement (avec le C, le Java, le Javascript ...), notamment dans le monde scientifique.</p> <p>Il est aussi un des langages de d\u00e9veloppement de nombreuses applications (Spotify, Instagram, Netflix), des sites Web, de traitement de donn\u00e9es,  du noyau Linux... Python fait \u00e0 peu pr\u00e8s tout ce qu'on veut. Sauf le caf\u00e9.</p> <p>Il est aussi parfaitement adapt\u00e9 \u00e0 la d\u00e9couverte de la programmation, de par sa clart\u00e9 et sa concision (il a aussi bien s\u00fbr beaucoup de d\u00e9fauts !).</p> <p>C'est pourquoi c'est le langage de programmation utilis\u00e9 au lyc\u00e9e en Math\u00e9matiques, en Physique-Chimie, en SNT et bien s\u00fbr maintenant en NSI.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#ordinateur","title":"Ordinateur","text":"<p>Mis \u00e0 part des calculs (beaucoup et tr\u00e8s rapidement), un ordinateur ne sait pas faire \u00e9norm\u00e9ment de choses... Il sait faire les instructions suivantes: - g\u00e9rer des donn\u00e9es stock\u00e9es dans des variables; - faire des tests (entre les valeurs des variables); - r\u00e9p\u00e9ter des instructions; - encha\u00eener des instructions.</p> <p>Et c'est (\u00e0 peu pr\u00e8s) tout.</p> <p>Citation</p> <p>Un ordinateur, c'est compl\u00e8tement con.</p> <p>Citation</p> <p>Programmer, c'est compliqu\u00e9.</p> <p>Ces deux citations sont de G\u00e9rard Berry, professeur d'Informatique au coll\u00e8ge de France. La premi\u00e8re signifie qu'un ordinateur ne prend pas de d\u00e9cision, et attend des instructions somme toute assez basiques. La seconde signifie que c'est \u00e0 l'\u00eatre humain de traduire sa fa\u00e7on de penser et de r\u00e9soudre en probl\u00e8me en une s\u00e9quence de ces quelques instructions basiques. Et ce n'est pas toujours simple.</p> <p>Bien s\u00fbr, il faut \u00e9galement conna\u00eetre la syntaxe de ces instructions, c'est-\u00e0-dire comment les \u00e9crire correctement pour que l'ordinateur puisse les interpr\u00e9ter sans erreur (car un ordinateur ne sait pas corriger vos erreurs, cf. citation 1).</p> <p>Et n'oubliez pas:</p> <p>Citation</p> <p>99% des probl\u00e8mes en informatique se situent entre le clavier et la chaise.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#utiliser-python","title":"Utiliser Python","text":"<p>Pour pouvoir utiliser un langage de programmation, en particulier Python, on a besoin d'un IDE (environnement de d\u00e9veloppement). Il en existe beaucoup...</p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#en-ligne","title":"En ligne","text":"<p>Rendez-vous sur la page https://console.basthon.fr/ </p> <p></p> <p> \u00c9diteur \u00e0 gauche, console \u00e0 droite </p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#au-lycee-a-la-maison","title":"Au lyc\u00e9e / \u00e0 la maison","text":"<p>Nous utiliserons l'IDE Thonny  au lyc\u00e9e, qui est assez simple et complet. Si vous souhaitez installer Python sur votre PC \u00e0 la maison, je vous conseille de l'installer \u00e9galement.</p> <p></p> <p> \u00c9diteur en haut, console en bas </p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#ici-sur-ce-site","title":"Ici, sur ce site","text":"<p>Dans certaines activit\u00e9s, vous trouverez une console int\u00e9gr\u00e9e. Vous pouvez y entrer des instructions simples:</p> &gt;&gt;&gt;  <p>Ou bien un mini-IDE int\u00e9gr\u00e9:</p> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/","title":"6.1.1 Les variables","text":"<p>\u00c9crire un programme, c'est traiter des donn\u00e9es. Le plus souvent num\u00e9riques en cours de Math\u00e9matiques ou de Physique-Chimie, elles peuvent \u00eatre aussi d'autres types en NSI: cha\u00eene de caract\u00e8res (texte), tableaux (ensemble de valeurs), bool\u00e9ens (vrai/faux), ...</p> <p>Pour stocker, manipuler et modifier ces donn\u00e9es au fil du programme, on cr\u00e9e des variables qui vont permettre de les nommer ces donn\u00e9es et  d'y avoir acc\u00e8s simplement.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#1-affectation","title":"1. Affectation","text":"<p>Admettons qu'on souhaite programmer un jeu de combat de Pok\u00e9mons (ou tout autre personnage). Dans ce programme il faudra prendre en compte de nombreux attributs des Pok\u00e9mons, par exemple les points de vie (PV). Pour chaque Pok\u00e9mon, ces PV sont assez \u00e9videmment amen\u00e9s \u00e0 varier tout au long de l'ex\u00e9cution du programme. Le programmeur ne peut donc pas conna\u00eetre la valeur de ces PV pendant le programme. Il lui faut manipuler une variable, c'est \u00e0 dire un nom associ\u00e9 \u00e0 cette valeur, qui elle est stock\u00e9e en m\u00e9moire.</p> <p>Notion de variable</p> <p>Une variable est une association entre un nom (son identifiant, voir 4.) et une valeur (de n'importe quel type, voir 3.).</p> <p>Associer une valeur \u00e0 une variable (nouvelle ou d\u00e9j\u00e0 cr\u00e9\u00e9) s'appelle une affectation. </p> <p>Par exemple, si mon Pok\u00e9mon a 80 points de vie en d\u00e9but de partie, je peux cr\u00e9er une variable en affectant la valeur 80 au nom <code>pv</code>.</p> <p>En Python, on \u00e9crira:</p> \ud83d\udc0d Script Python<pre><code>pv = 80\n</code></pre> <p>Vocabulaire</p> <ul> <li> <p>Par abus de langage, on confond souvent variable et nom de variable. Ici on parlera de la variable <code>pv</code>.</p> </li> <li> <p>La premi\u00e8re fois qu'on affecte une valeur \u00e0 une variable, on dit qu'on l'initialise.</p> </li> </ul> <p>Attention</p> <ul> <li>Le symbole <code>=</code> n'a rien \u00e0 voir avec le symbole \\(=\\) utilis\u00e9 en math\u00e9matiques. </li> <li>On commence toujours \u00e0 gauche par la variable \u00e0 affecter, cette instruction n'est pas sym\u00e9trique. On obtiendrait une erreur (essayez) avec: \ud83d\udc0d Script Python<pre><code>80 = pv\n</code></pre></li> <li>En effet cette instruction est lue par Python de droite \u00e0 gauche : on met la valeur <code>80</code> dans la variable <code>pv</code>. En langage naturel dans un algorithme, on \u00e9crirait : <code>pv \u2190 80</code>. C'est ainsi qu'il faut se le repr\u00e9senter mentalement.</li> </ul> <p> </p> <p>On peut1 se repr\u00e9senter cette affectation par une m\u00e9taphore, o\u00f9 l'on repr\u00e9sente la m\u00e9moire de l'ordinateur comme une gigantesque commode avec d'innombrables tiroirs.</p> <p>\u00c9tape 1: Lorsqu'on affecte la valeur <code>80</code> \u00e0 la variable <code>pv</code>, l'ordinateur commence par trouver un tiroir vide.</p> <p>\u00c9tape 2: Ensuite il nomme ce tiroir <code>pv</code>, comme s'il lui collait une \u00e9tiquette dessus.</p> <p>\u00c9tape 3: Enfin il d\u00e9pose dans ce tiroir la valeur <code>80</code>.</p> <p>D\u00e9sormais - tant qu'on ne lui aura pas affect\u00e9 une autre valeur - chaque fois qu'on utilisera la variable <code>pv</code> dans notre programme, l'ordinateur utilisera la valeur <code>80</code>.</p> <p>Si on affecte une nouvelle valeur \u00e0 la variable <code>pv</code>, alors l'ancienne dispara\u00eet (on dit qu'elle est \u00e9cras\u00e9e).</p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#2-expressions-et-evaluation","title":"2. Expressions et \u00e9valuation","text":"<p>Regardons l'exemple suivant:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 2\n&gt;&gt;&gt; a = 4\n&gt;&gt;&gt; a\n4\n&gt;&gt;&gt; b = a + 3\n&gt;&gt;&gt; b\n7\n&gt;&gt;&gt; b = c + 1\nTraceback (most recent call last):\n  File \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nNameError: name 'c' is not defined\n&gt;&gt;&gt; \n</code></pre> <p>Analyse ligne par ligne</p> Ligne 1Ligne 2Lignes 3 et 4Ligne 5Ligne 8 <p>On initialise la variable <code>a</code> \u00e0 <code>2</code>.</p> <p>On r\u00e9affecte une nouvelle valeur, <code>4</code>,  \u00e0 la variable <code>a</code>.</p> <p>On demande la valeur associ\u00e9e \u00e0 <code>a</code>. Python r\u00e9pond logiquement <code>4</code>: la valeur <code>2</code> a \u00e9t\u00e9 \u00e9cras\u00e9e.</p> <p>On cr\u00e9e une nouvelle variable <code>b</code> \u00e0 laquelle on affecte <code>a + 3</code>. Ceci est une expression, Python doit au pr\u00e9alable l'\u00e9valuer avant de l'affecter. Dans l'ordre:</p> <ul> <li>Python lit d'abord le membre de droite <code>a + 3</code>.</li> <li>Il r\u00e9cup\u00e8re la valeur stock\u00e9e dans <code>a</code>, c'est-\u00e0-dire <code>4</code>.</li> <li>Il \u00e9value ensuite l'expression, ici il fait une addition : <code>4 + 3</code>.</li> <li>Il affecte \u00e0 <code>b</code> la somme obtenue, c'est-\u00e0-dire <code>7</code>. On le v\u00e9rifie aux lignes 6 et 7.</li> </ul> <p>On r\u00e9affecte \u00e0 <code>b</code> le r\u00e9sultat de l'expression <code>c + 1</code>. Or aucune variable nomm\u00e9e <code>c</code> n'a \u00e9t\u00e9 d\u00e9clar\u00e9e : on obtient une erreur, puisque Python n'a pas de valeur associ\u00e9e \u00e0 <code>c</code>.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#3-types-de-variables","title":"3. Types de variables","text":"<p>Pour l'instant, les variables que nous avons manipul\u00e9es contiennent toutes des nombres entiers.</p> <p>Mais imaginons un programme qui doive manipuler les noms des Pokemons... Ce ne seront plus des nombres, mais des mots cha\u00eenes de caract\u00e8res.</p> <p>Pour diff\u00e9rencier la nature de ce que peut contenir une variable, on parle alors de type de variable.</p> <p>En voici quelques uns, que nous d\u00e9couvrirons au fil de l'ann\u00e9e :</p> <p>Types de base</p> <p>Voici les types Python les plus fr\u00e9quemment utilis\u00e9s cette ann\u00e9e:</p> Type Python Traduction Exemple <code>int</code> entier <code>42</code> <code>float</code> flottant (d\u00e9cimal) <code>3.1416</code> <code>str</code> cha\u00eene de caract\u00e8res (string) <code>\"NSI\"</code> <code>bool</code> bool\u00e9en (True ou False) True <code>tuple</code> p-uplet <code>(255, 127, 0)</code> <code>list</code> liste <code>[0, 1, 2, 3, 4, 5]</code> <code>dict</code> dictionnaire <code>{'Homer':43, 'Marge':41, 'Bart':12, 'Lisa':10, 'Maggie':4}</code> <code>function</code> fonction <code>print</code> <p>Conna\u00eetre le type d'une variable</p> <p>Il suffit dans la console d'utiliser la fonction <code>type</code>.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 1\n&gt;&gt;&gt; type(a)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; \n</code></pre> <p>Essayez avec une variable du type <code>str</code>:</p> <p>&gt;&gt;&gt; </p> En cas d'erreur <p>Une cha\u00eene de caract\u00e8res s'\u00e9crit avec des guillemets. Sans, Python l'interpr\u00e8te comme une variable...</p> <p>Jusqu'\u00e0 pr\u00e9sent, nous ne nous sommes pas occup\u00e9s de pr\u00e9ciser \u00e0 Python le type de notre variable.</p> \ud83d\udc0d Script Python<pre><code>a = 1\n</code></pre> <p>Mais dans certains langages, c'est obligatoire ! En C par exemple, il faut \u00e9crire :</p> <p>C<pre><code>int a = 1;\n</code></pre> Cela signifie (pour le langage C) que notre variable <code>a</code> n'aura pas le droit de contenir autre chose qu'un nombre entier.</p> <p>Si on \u00e9crit ensuite C<pre><code>a = \"test\";\n</code></pre></p> <p>Le compilateur C renverra une erreur : on ne peut pas stocker une cha\u00eene de caract\u00e8res dans une variable qu'on a cr\u00e9\u00e9e comme \u00e9tant de type entier.</p> <p>Et en Python ?</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 1\n&gt;&gt;&gt; type(a)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; a = \"test\"\n&gt;&gt;&gt; type(a)\n&lt;class 'str'&gt;\n</code></pre> <p>Python a chang\u00e9 tout seul le type de notre variable, sans intervention ! On parle de typage dynamique.</p> <p>Source d'erreurs</p> <p>Ce typage dynamique, s'il all\u00e8ge la d\u00e9claration de variables, peut \u00e9galement \u00eatre la cause de bugs...</p> <p>C'est pourquoi il faut toujours avoir en t\u00eate le type des variables qu'on manipule.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#4-regles-de-nommage","title":"4. R\u00e8gles de nommage","text":"<p>Pour nommer correctement une variable, il existe des r\u00e8gles \u00e0 respecter.</p> <p>R\u00e8gles obligatoires</p> <ul> <li> <p>le nom de la variable ne peut contenir que les caract\u00e8res suivants:</p> <ul> <li>des lettres non accentu\u00e9es (attention, minuscule et majuscule sont des caract\u00e8res diff\u00e9rents)</li> <li>des chiffres (mais pas comme premier caract\u00e8re)</li> <li>le tiret du bas _ (underscore, tiret du 8)</li> </ul> </li> <li> <p>le nom de la variable ne doit pas commencer par un chiffre;</p> </li> <li>le nom de la variable ne doit pas contenir d'espace;</li> <li>le nom de la variable ne doit pas \u00eatre un mot cl\u00e9 du langage.</li> </ul> Mots cl\u00e9 de Python <p><p> andas assert  break class  continue   def    del elif   else   except False  finally for   from   global    if   import in is  lambda None not     or  pass raise   return True try   while with    yield  </p></p> <p>Hormis pour les indices (de boucles, de tableaux...) un nom de variable (dans un programme destin\u00e9 \u00e0 \u00eatre lu, par vous ou quelqu'un d'autre) doit imp\u00e9rativement avoir du sens </p> <p>Oui mais pour donner du sens, il faut souvent plusieurs mots... La longueur du nom de la variable n'est plus un probl\u00e8me depuis que la grande majorit\u00e9 des IDE proposent la compl\u00e9tion automatique.  Mais comment former ces longs mots ?</p> <p>Comment accoler des mots</p> <ul> <li>S'il est compos\u00e9, le nom peut \u00eatre de la forme:<ul> <li><code>snake_case</code> : les mots sont s\u00e9par\u00e9s par des underscores. Conseill\u00e9 en Python.</li> <li><code>camelCase</code> : les mots sont s\u00e9par\u00e9s par des majuscules mais la 1\u00e8re lettre est minuscule. Conseill\u00e9 en Javascript.</li> <li><code>PascalCase</code> : les mots sont s\u00e9par\u00e9s par des majuscules et la 1\u00e8re lettre est majuscule. Conseill\u00e9 en C.</li> <li><code>kebab-case</code> : les mots sont s\u00e9par\u00e9s par des tirets courts. Conseill\u00e9 en HTML - CSS. </li> </ul> </li> </ul> <p>Sans surprise, en Python, nous utiliserons donc le <code>snake_case</code>.</p> <p></p> <p>R\u00e8gle d'or</p> <p>On ne donne jamais un nom de variable au hasard, on le choisit pour qu'il soit explicite.</p> <p>C'est-\u00e0-dire que si on doit manipuler une variable qui stocke l'\u00e2ge du capitaine, il faut l'\u00e9crire non pas <code>a</code> mais <code>age_capitaine</code>.</p> \ud83d\udc0d Script Python<pre><code># PAS BIEN\nif d == 1:\n    cep += vm\n\n# BIEN\nif date == 1:\n    compte_epargne += versement_mensuel\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#5-exercices","title":"5. Exercices","text":"<p>T\u00e9l\u00e9chargez le notebook d'exercices : T6.1_Exercices1.ipynb </p> <ol> <li> <p>Mais ce n'est pas tout \u00e0 fait exact. On verra exactement plus tard comment cela se passe. Pour l'instant, cette image mentale suffira.\u00a0\u21a9</p> </li> </ol>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/","title":"6.1.2 La boucle <code>for</code>","text":"<p>Un ordinateur est fait pour effectuer des calculs longs et r\u00e9p\u00e9titifs.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#1-le-principe","title":"1. Le principe","text":"<p>Imaginons - nous sommes en 2074 - une maman (ou un papa) qui souhaite faire manger \u00e0 son enfant les 10 derni\u00e8res cuill\u00e8res de soupe... en programmant son robot domestique pour qu'il annonce ces phrases \u00e0 sa place.</p> <p>On pourrait imaginer un code qui ressemble \u00e0 \u00e7a:</p> \ud83d\udc0d Script Python<pre><code>print(\"Une cuill\u00e8re pour maman\")\nprint(\"Une cuill\u00e8re pour papa\")\nprint(\"Une cuill\u00e8re pour mamie Fran\u00e7oise\")\nprint(\"Une cuill\u00e8re pour papy Jacques\")\nprint(\"Une cuill\u00e8re pour m\u00e9m\u00e9 Paulette\")\nprint(\"Une cuill\u00e8re pour tata Jacqueline\")\nprint(\"Une cuill\u00e8re pour tonton Michel\")\nprint(\"Une cuill\u00e8re pour le cousin Maurice\")\nprint(\"Une cuill\u00e8re pour la cousine Gertrude\")\nprint(\"Une cuill\u00e8re pour M\u00e9dor\")\n</code></pre> <p>C'est tr\u00e8s r\u00e9p\u00e9titif. Et heureusement qu'il n'y a que 10 cuill\u00e8res...</p> <p>D'autant que chaque instruction est quasiment identique, seul le nom du membre de la famille change.</p> <p>En fran\u00e7ais, on serait tent\u00e9 de r\u00e9sumer en </p> <p>\u00abannonce une cuill\u00e8re pour chacun des 10 membres de la famille\u00bb</p> <p>Heureusement, dans tous les langages de programmation, il existe une instruction qui permet de r\u00e9p\u00e9ter une instruction (ou plusieurs instructions) pour chaque \u00e9l\u00e9ment d'un ensemble de valeurs donn\u00e9: la boucle <code>for</code>.</p> <p>Vocabulaire</p> <p>En programmation, on parle de boucle pour toute instruction qui permet de r\u00e9p\u00e9ter des instructions. On utilise plut\u00f4t le verbe it\u00e9rer et on parle d'it\u00e9rations.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#2-les-ensembles-de-valeurs-enumerables-iterables","title":"2. Les ensembles de valeurs \u00e9num\u00e9rables / it\u00e9rables","text":"<p>En math\u00e9matiques, on dit qu'un ensemble est d\u00e9nombrable lorsqu'on peut associer \u00e0 chaque \u00e9l\u00e9ment de l'ensemble un nombre (traditionnellement 1, 2, 3...)</p> <ul> <li>les fraises Tagada d'un paquet sont d\u00e9nombrables.</li> <li>les voitures qui roulent sur l'autoroute sont d\u00e9nombrables.</li> <li>l'eau qui coule d'un robinet n'est pas d\u00e9nombrable.</li> </ul> <p>En informatique, il existe un concept similaire qui va d\u00e9signer les objets que l'on peut \u00e9num\u00e9rer, c'est-\u00e0-dire les d\u00e9composer en une succession ordonn\u00e9e d'\u00e9l\u00e9ments. On les appelle les \u00e9num\u00e9rables ou les it\u00e9rables (Python utilise le mot anglais <code>iterable</code>).</p> <ul> <li>la variable <code>NSI</code> (qui est de type <code>string</code>) est \u00e9num\u00e9rable : on peut la d\u00e9composer en  <code>N</code>,  <code>S</code>, <code>I</code>.</li> <li>la variable <code>[4, 3, 17]</code>  (qui est de type <code>list</code>1) est \u00e9num\u00e9rable : on peut la d\u00e9composer en  <code>4</code>,  <code>3</code>, <code>17</code>.</li> <li>la variable <code>5</code>  (qui est de type <code>int</code>) n'est PAS \u00e9num\u00e9rable : on ne peut pas la d\u00e9composer. </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#3-la-syntaxe","title":"3. La syntaxe","text":"<p>La boucle <code>for</code></p> <p>Pour mettre en place cette boucle, on a besoin d'identifier:</p> <ul> <li>les instructions \u00e0 r\u00e9p\u00e9ter;</li> <li>pour quelles valeurs diff\u00e9rentes on doit les r\u00e9p\u00e9ter: on a donc besoin d'une variable et d'un iterable que cette variable va parcourir;</li> <li>identifier dans les instructions ce qui d\u00e9pend de cette variable de boucle.</li> </ul> <p>Syntaxe g\u00e9n\u00e9rale:</p> <p>\ud83d\udc0d Script Python<pre><code>for var in iterable:\n    *instructions \u00e0 r\u00e9p\u00e9ter*\n</code></pre> o\u00f9 <code>var</code> est un nom de variable (non pr\u00e9c\u00e9demment d\u00e9clar\u00e9e dans le programme), <code>iterable</code> un objet ... it\u00e9rable.</p> <p>On dit que <code>var</code> parcourt l'ensemble <code>iterable</code>.</p> <p>Exemples essentiels \u00e0 tester</p> avec une cha\u00eene de caract\u00e8resavec une listesans appel \u00e0 la variable de boucleavec un <code>range</code> \ud83d\udc0d Script Python<pre><code>for l in \"INRIA\":\n    print(l)\n</code></pre> \u00c9tude du code <p>\u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>k</code>.</p> <p> </p> \ud83d\udc0d Script Python<pre><code>for a in [1, 2, 3, 4]:\n    b = 2 * a\n    print(\"le double de\", a, \"est\", b)\n</code></pre> \u00c9tude du code <p>\u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>a</code>. </p> <p> </p> \ud83d\udc0d Script Python<pre><code>for a in [1, 2, 3, 4, 5, 6]:\n    print(\"miaou\")\n</code></pre> \u00c9tude du code <p>\u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>a</code>.   </p> \ud83d\udc0d Script Python<pre><code>for k in range(10):\n    print(\"We're up all night to get lucky\")\n</code></pre> \u00c9tude du code <p>\u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>k</code>. </p> <p> </p> <p>Syntaxe</p> <p>Il faut absolument un caract\u00e8re <code>:</code> \u00e0 la fin de la ligne du <code>for</code> !</p> <p>Indentation</p> <p>C'est le d\u00e9calage par rapport \u00e0 la marge - qu'on appelle indentation - qui d\u00e9termine quelles sont les instructions \u00e0 r\u00e9p\u00e9ter !</p> <p>Exemples : attention \u00e0 l'indentation</p> <p>Tester les diff\u00e9rents codes suivants dans votre IDE ou dans la console ci-dessous:</p> Code 1Code 2Code 3 \ud83d\udc0d Script Python<pre><code>for k in [\"toto\", \"tata\", \"tutu\"]:\nprint(\"Bonjour\", end=\" \")\nprint(k)\n</code></pre> \ud83d\udc0d Script Python<pre><code>for k in [\"toto\", \"tata\", \"tutu\"]:\n    print(\"Bonjour\", end=\" \")\n    print(k)\n</code></pre> \ud83d\udc0d Script Python<pre><code>for k in [\"toto\", \"tata\", \"tutu\"]:\n    print(\"Bonjour\", end=\" \")\nprint(k)\n</code></pre> <p>Exercice 0</p> <p>Compl\u00e9ter le code suivant pour satisfaire le parent de 2074 qui veur faire manger de la soupe \u00e0 son enfant.</p> \ud83d\udc0d Script Python<pre><code>liste_noms = [\"maman\", \"papa\", \"mamie Fran\u00e7oise\", \"papy Jacques\", \"m\u00e9m\u00e9 Paulette\", \"tata Jacqueline\", \"tonton Michel\", \"le cousin Maurice\", \"la cousine Gertrude\", \"M\u00e9dor\"]\n\nfor\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#4-a-propos-du-range","title":"4. \u00c0 propos du <code>range</code>","text":"<p>Il arrive tr\u00e8s fr\u00e9quemment que la variable soit tout simplement un entier, qui doit parcourir un ensemble de nombres entiers cons\u00e9cutifs.</p> <p>Par exemple, imaginons que votre professur.e d'EPS, \u00e0 court d'id\u00e9es d'activit\u00e9s \u00e0 cause des conditions sanitaires, d\u00e9cide de vous faire faire 20 tours de stade et vous demande d'annoncer \u00e0 chaque passagesur la ligne de d\u00e9part \u00e0 quel tour vous en \u00eates...</p> <p>Vous allez donc annoncer successivement \u00abTour 1!\u00bb, \u00abTour 2!\u00bb, \u00abTour 3!\u00bb, etc. jusqu'\u00e0 \u00abTour 20!\u00bb.</p> <p>Pour repr\u00e9senter cette situation, on peut donc imaginer un code ressemblant \u00e0: \ud83d\udc0d Script Python<pre><code>for k in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ,17 ,18 ,19 ,20]:\n    print(\"Tour\",k)\n</code></pre> Mais la liste est tr\u00e8s p\u00e9nible \u00e0 \u00e9crire.</p> <p>Heureusement, comme vous avez d\u00fb le comprendre dans le dernier exemple du 3., l'objet de type <code>range</code> permet de g\u00e9n\u00e9rer ce genre d'ensemble de nombres entiers cons\u00e9cutifs.</p> <p>G\u00e9n\u00e9rer une plage de nombres entiers</p> <p>L'objet <code>range(start, stop, step)</code>:</p> <ul> <li> <p>il renvoie une s\u00e9quence de nombres entiers en partant de <code>start</code> (inclus) jusqu'\u00e0 <code>stop</code> (exclus), en incr\u00e9mentant de <code>step</code>;</p> </li> <li> <p><code>start</code> est facultatif et vaut 0 par d\u00e9faut;</p> </li> <li> <p><code>step</code> est facultatif et vaut 1 par d\u00e9faut. Mais si on veut pr\u00e9ciser <code>step</code>, alors il faut donner aussi <code>start</code>, m\u00eame si sa valeur est 0.</p> </li> </ul> Attention <p>Un objet <code>range</code> n'est pas de type <code>list</code>. Mais on peut le convertir en liste avec la fonction <code>list</code>.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; range(10)\nrange(0, 10)\n&gt;&gt;&gt; list(range(10))\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n&gt;&gt;&gt; \n</code></pre> Question \u00c9nonc\u00e9IndicationSolution <p>Comment g\u00e9n\u00e9rer les nombres entiers de 1 \u00e0 20 (comme dans l'exemple des tours de terrain) avec un <code>range</code>?</p> <p>&gt;&gt;&gt; </p> <p>Il ne faut pas commencer \u00e0 0... et le <code>stop</code> n'est pas inclus dans la s\u00e9quence !</p> <p>Il faut utiliser <code>range(1, 21)</code> .</p>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#5-la-double-boucle-imbriquee","title":"5. La double boucle imbriqu\u00e9e","text":"<p>Il est tr\u00e8s souvent utile d'imbriquer une boucle dans une autre, notamment lors du parcours de tous les pixels d'une image (voir les exercices graphiques sous Processing).</p> <p>Prenons pour l'instant un exemple num\u00e9rique : Comment \u00e9crire tous les produits de deux nombres compris entre 1 et 10?</p> <p>Il faut pour cela que le premier facteur parcourre <code>range(1, 11)</code> mais \u00e9galement le deuxi\u00e8me facteur!</p> <p>On obtient donc le code suivant:</p> \ud83d\udc0d Script Python<pre><code>for x in range(1, 11):\n    for y in range(1, 11):\n        print(x * y)\n</code></pre> <p> </p> <p>\u00c0 vous d'essayer</p> \u00c9nonc\u00e9Solution <p>Comment obtenir l'affichage suivant?</p> \ud83d\udc0d Script Python<pre><code>Papa dit : \u00ab et une cuill\u00e8re pour Riri ! \u00bb\nPapa dit : \u00ab et une cuill\u00e8re pour Fifi ! \u00bb\nPapa dit : \u00ab et une cuill\u00e8re pour Loulou ! \u00bb\nMaman dit : \u00ab et une cuill\u00e8re pour Riri ! \u00bb\nMaman dit : \u00ab et une cuill\u00e8re pour Fifi ! \u00bb\nMaman dit : \u00ab et une cuill\u00e8re pour Loulou ! \u00bb\nMamie dit : \u00ab et une cuill\u00e8re pour Riri ! \u00bb\nMamie dit : \u00ab et une cuill\u00e8re pour Fifi ! \u00bb\nMamie dit : \u00ab et une cuill\u00e8re pour Loulou ! \u00bb\n</code></pre> \ud83d\udc0d Script Python<pre><code>for parent in [\"Papa\", \"Maman\", \"Mamie\"]:\n    for enfant in [\"Riri\", \"Fifi\", \"Loulou\"]:\n        print(parent, \"dit : \u00ab et une cuill\u00e8re pour \", enfant, \"! \u00bb)\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#6-pour-conclure","title":"6. Pour conclure","text":"<p>\u00c0 retenir</p> <ul> <li>La boucle <code>for</code> s'utilise lorsqu'on conna\u00eet \u00e0 l'avance le nombre de r\u00e9p\u00e9titions \u00e0 effectuer: soit un nombre entier, soit un ensemble de valeurs contenus dans un iterable. On parle de boucle born\u00e9e.</li> <li> <p>Les instructions r\u00e9p\u00e9t\u00e9es peuvent - mais ce n'est pas obligatoire - faire appel \u00e0 la variable de boucle, mais il ne faut pas que ces instructions la modifient.</p> </li> <li> <p>Ne pas oublier les <code>:</code> et l'indentation !</p> </li> <li><code>range(n)</code> g\u00e9n\u00e8re une s\u00e9quence de <code>n</code> nombres entiers: on s'en servira d\u00e8s qu'on aura besoin de r\u00e9p\u00e9ter <code>n</code> fois des instructions.</li> </ul>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#7-exercices","title":"7. Exercices","text":""},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#serie-1-la-base","title":"S\u00e9rie 1: la base","text":"<p>T\u00e9l\u00e9chargez le notebook d'exercices : T6.1_Exercices2.ipynb </p> <p>Quelques corrections</p> Exercice 4Exercice 6Exercice 8 \ud83d\udc0d Script Python<pre><code>mystere = [111, 107, 44, 32, 98, 105, 101, 110, 32, 106, 111, 117, 233]\nmot_secret = \"\"\nfor code in mystere:\n    mot_secret = mot_secret + chr(code)\n\nprint(mot_secret)\n</code></pre> <p>\u00c0 la ligne 3, on peut aussi \u00e9crire <code>somme += k</code>.</p> \ud83d\udc0d Script Python<pre><code>somme = 0\nfor k in range(1, 1001):\n    somme = somme + k\n\nprint(somme)\n</code></pre> <p>La ligne 4 est \u00e9quivalente \u00e0 <code>somme = somme + n</code>.</p> <p>La fonction <code>len</code> donne le nombre d'\u00e9l\u00e9ments d'un iterable.</p> \ud83d\udc0d Script Python<pre><code>nombres = [15, 8, 12, 19, 10, 17]\nsomme = 0\nfor n in nombres:\n    somme += n\nmoyenne = somme / len(nombres)\n\nprint(moyenne)\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#serie-2-a-rendre","title":"S\u00e9rie 2: \u00e0 rendre","text":"<p>\u00c0 faire sur Capytale : 30de-55310 </p> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Proposer un code qui \u00e9crit la table de multiplication de 7.</p> <p>La sortie doit ressembler \u00e0: \ud83d\udc0d Script Python<pre><code>7*1 = 7\n7*2 = 14\n\n...\n\n7*10 = 70\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>for k in range(1, 11):\n    print(\"7*\", k, \"=\", 7*k)\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9IndicationCorrection <p>Sur un jeu d'\u00e9checs, les cases sont rep\u00e9r\u00e9es par une lettre (de A jusqu'\u00e0 H) et par un chiffre (de 1 jusqu'\u00e0 8).</p> <p>Les cases sont donc A1, A2, A3, ..., H7, H8.</p> <p>Proposer un code qui \u00e9crit toutes les cases possibles.</p> <p>Pour convertir un entier en cha\u00eene  de caract\u00e8res, on utilise la fonction <code>str</code>: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; k = 3\n&gt;&gt;&gt; k\n3\n&gt;&gt;&gt; str(k)\n'3'\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>for l in \"ABCDEFGH\":\n    for k in range(1, 9):\n        print(l + str(k))\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#serie-3-avec-processing","title":"S\u00e9rie 3: avec Processing","text":"<p>Consulter d'abord la page sur Processing.</p> <p>Dans tous les exercices, votre code doit contenir au moins une boucle <code>for</code>.</p> Exercice  1 \u00c9nonc\u00e9Solution <p>L'objectif est d'obtenir un d\u00e9grad\u00e9 de gris:</p> <p> </p> <p>Pour rappel, un niveau de gris est un couleur RGB dont les trois composantes (entre 0 et 255) rouge, verte et bleue sont identiques.</p> <p>On prendra un canevas de 256x100 pixels.</p> <p>On trace 256 lignes, chacune ayant un niveau de gris allant de 0 \u00e0 255 et l'abscisse des extr\u00e9mit\u00e9s varie \u00e9galement de 0 \u00e0 255. Donc on n'a besoin que d'une variable de boucle...</p> \ud83d\udc0d Script Python<pre><code>size(256, 256)\nfor k in range(256):\n    stroke(k, k, k)\n    line((k, 0), (k, 99))\n</code></pre> Exercice  2 \u00c9nonc\u00e9Solution <p>L'objectif est d'obtenir dix lignes al\u00e9atoires, de couleur al\u00e9atoire et d'\u00e9paisseur 10, sur un canevas de 300x300 pixels.</p> <p>La fonction <code>random(a, b)</code> permet d'obtenir un entier pseudo-al\u00e9atoire entre <code>a</code> et <code>b</code>.</p> <p> </p> \ud83d\udc0d Script Python<pre><code>size(300, 300)\nbackground(0, 0, 0)\nfor k in range(10):\n    point_A = (random(0, 300), random(0, 300))\n    point_B = (random(0, 300), random(0, 300))\n    r = random(0, 255)\n    g = random(0, 255)\n    b = random(0, 255)\n    stroke(r, g, b)\n    stroke_weight(10)\n    line(point_A, point_B)\n</code></pre> Exercice  3 \u00c9nonc\u00e9Solution <p>\u00c9crire un programme qui trace un quadrillage (espacement de 20 pixels) sur un canevas de 300x300 pixels.</p> \ud83d\udc0d Script Python<pre><code>for k in range(300//20):\n    line((20*k, 0), (20*k, 300))\n    line((0, 20*k), (300, 20*k))\n</code></pre> Exercice  4 \u00c9nonc\u00e9Solution <p>\u00c9crire un programme qui dessine une ligne de 20 carr\u00e9s de taille 50x50, dont la couleur sera al\u00e9atoire.</p> <p> </p> \ud83d\udc0d Script Python<pre><code>size(1000, 50)\nfor k in range(20):\n    r = random(0, 255)\n    g = random(0, 255)\n    b = random(0, 255)\n    fill(r, g, b)\n    rect((50*k, 0), 50, 50)\n</code></pre> Exercice  5 \u00c9nonc\u00e9Solution <p>Animer le programme de l'exercice pr\u00e9c\u00e9dent en d\u00e9finissant les fonctions <code>setup</code> et <code>draw</code>.</p> <p>Vous pouvez ralentir l'animation en untilisant la fonction <code>frameRate</code> dans la fonction <code>setup</code>.</p> <p>Par exemple, pour 15 images par seconde: \ud83d\udc0d Script Python<pre><code>def setup():\n    frameRate(15)\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>def setup():\n    size(1000, 50)\n    frameRate(15)\n\ndef draw():\n    for k in range(20):\n        r = random(0, 255)\n        g = random(0, 255)\n        b = random(0, 255)\n        fill(r, g, b)\n        rect((50*k, 0), 50, 50)\n</code></pre> Exercice  6 \u00c9nonc\u00e9Solution <p>Reprendre l'exercice 4, mais cette fois avec un carr\u00e9 de carr\u00e9s... (penser \u00e0 r\u00e9duire la taille de moiti\u00e9).</p> <p> </p> \ud83d\udc0d Script Python<pre><code>size(500, 500)\nwidth = 25\nfor x in range(20):\n    for y in range(20):\n        r = random(0, 255)\n        g = random(0, 255)\n        b = random(0, 255)\n        fill(r, g, b)\n        rect((width*x, width*y), width, width)\n</code></pre> Exercice  7 \u00c9nonc\u00e9IndicationsSolution <p>Reproduire la figure suivante sur un canevas de 256x256 pixels.</p> <p> </p> <ul> <li>la composante bleue est toujours 0;</li> <li>faire varier les composantes rouge et verte;</li> <li>pas d'animation</li> </ul> \ud83d\udc0d Script Python<pre><code>size(256, 256)\nfor x in range(256):\n    for y in range(256):\n        stroke(x, y, 0)\n        point(x, y)\n</code></pre> <p>Exercice  8</p> \u00c9nonc\u00e9Solution <p>\u00c9crire un programme qui affiche al\u00e9atoirement 100 disques, de diam\u00e8tre compris entre 10 et 50 et de couleur de remplissage al\u00e9atoire.</p> <p>Attention, les disques ne devront pas \u00eatre \u00abcoup\u00e9s\u00bb sur les bords de l'\u00e9cran.</p> <p> </p> \ud83d\udc0d Script Python<pre><code>size(300, 300)\nbackground(0)\nfor _ in range(100):\n    fill(random(0, 255), random(0, 255), random(0, 255))\n    rayon = random(5, 25)\n    ellipse(random(rayon, 300 - rayon), random(rayon, 300 - rayon), 2*rayon, 2*rayon)\n</code></pre> <ol> <li> <p>un objet de type <code>list</code> est un type construit que nous \u00e9tudierons au th\u00e8me 2, qui s'\u00e9crit entre crochets, ses \u00e9l\u00e9ments \u00e9tant s\u00e9par\u00e9s par une virgule (comme dans cet exemple). On peut donc parcourir ses \u00e9l\u00e9ments.\u00a0\u21a9</p> </li> </ol>"},{"location":"T06_Python/T6.1_Python/T6.1_3_While/","title":"6.1.3 La boucle <code>while</code>","text":"<p>La boucle <code>for</code> s'utilise lorsqu'on conna\u00eet \u00e0 l'avance le nombre de r\u00e9p\u00e9titions \u00e0 effectuer: soit un nombre entier, soit un ensemble de valeurs contenus dans un iterable dont le nombre de valeurs est fixe. On parle de boucle born\u00e9e.</p> <p>Mais il arrive fr\u00e9quemment qu'on doive r\u00e9p\u00e9ter des instructions un certain nombre de fois, qui n'est pas connu \u00e0 l'avance. On a donc besoin d'une boucle non born\u00e9e, <code>while</code> en Python,  qui s'\u00e9x\u00e9cutera tant qu'une condition est r\u00e9alis\u00e9e et qui stoppera d\u00e8s que cette condition ne le sera plus.</p> <p>Si jamais cela arrive...</p> <p> </p>"},{"location":"T06_Python/T6.1_Python/T6.1_3_While/#1-un-premier-exemple","title":"1. Un premier exemple","text":"<p>Combien de fois doit-on plier une feuille de papier pour que son \u00e9paisseur d\u00e9passe la hauteur de la Tour Eiffel (324 m)?</p> <p>Sous r\u00e9serve que cela soit techniquement possible, on va donc partir d'une feuille de papier classique, d'une \u00e9paisseur de 0,1 mm, puis on va plier, plier, plier... sachant que l'\u00e9paisseur va doubler \u00e0 chaque pliage.</p> <p>Il est donc n\u00e9cessaire d'utiliser une boucle pour r\u00e9p\u00e9ter ces pliages (c'est-\u00e0-dire les calculs successifs de l'\u00e9paisseur de papier). R\u00e9peter, d'accord, mais combien de fois? Justement, on ne le sait pas, puisque c'est la question !!!</p> <p>En revanche, on sait qu'on doit s'arr\u00eater de plier d\u00e8s que l'\u00e9paisseur de papier sera sup\u00e9rieure \u00e0 324 m. Autrement dit, on doit rep\u00e9ter tant que l'\u00e9paisseur est inf\u00e9rieure \u00e0 324 m.</p> <p>On obtient donc le code:</p> \ud83d\udc0d Script Python<pre><code>epaisseur = 0.0001\nnombre_pliages = 0\n\nwhile epaisseur &lt; 324:\n    epaisseur = 2 * epaisseur\n    nombre_pliages += 1\n\nprint(\"Il faut\", nombre_pliages, \"pliages.\")\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_3_While/#2-la-syntaxe","title":"2. La syntaxe","text":"<p>La boucle <code>while</code></p> <p>Syntaxe g\u00e9n\u00e9rale: \ud83d\udc0d Script Python<pre><code>while expression:\n    *instructions \u00e0 r\u00e9p\u00e9ter*\n</code></pre></p> <p>Remarques:</p> <ul> <li><code>expression</code> doit renvoyer une valeur bool\u00e9enne : une \u00e9galit\u00e9, comparaison, appartenance, etc. ;</li> <li><code>while</code> rep\u00e8te le bloc d'instructions \u00e0 r\u00e9p\u00e9ter tant que cette expression est \u00e9gale \u00e0 <code>True</code> ;</li> <li>il faut terminer la ligne commen\u00e7ant par <code>while</code> par <code>:</code> ;</li> <li>le bloc d'instructions \u00e0 r\u00e9p\u00e9ter (le corps de la boucle) doit \u00eatre indent\u00e9. </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6.1_3_While/#3-les-dangers-de-la-boucle-while","title":"3. Les dangers de la boucle <code>while</code>","text":""},{"location":"T06_Python/T6.1_Python/T6.1_3_While/#31-ne-jamais-entrer-dans-la-boucle","title":"3.1 Ne JAMAIS ENTRER dans la boucle","text":"<p>No Entrance</p> <p>Le programme suivant ne va pas faire grand chose... \u00e0 part afficher <code>fini!</code>. Voyez-vous pourquoi? \ud83d\udc0d Script Python<pre><code>toto = 0\nwhile toto &gt;= 1:\n    toto = toto + 1\n    print(\"ce texte ne s'\u00e9crira jamais\")\nprint(\"fini!\")\n</code></pre></p>"},{"location":"T06_Python/T6.1_Python/T6.1_3_While/#32-ne-jamais-sortir-de-la-boucle","title":"3.2 Ne JAMAIS SORTIR de la boucle","text":"<p>Je vous rassure tout de suite, aucun programmeur professionnel n'est pass\u00e9 \u00e0 c\u00f4t\u00e9 de ce pi\u00e8ge...</p> <p>No Exit</p> <p>Que va faire le programme suivant?</p> \ud83d\udc0d Script Python<pre><code>toto = 1\nwhile toto &lt; 10:\n    toto = 2\n    print(\"ok\")\nprint(\"fini!\")\n</code></pre> <p>\u00c9viter une boucle infinie</p> <p>Il faut toujours s'assurer que le corps de la boucle contienne une instruction qui fera en sorte qu'\u00e0 un moment donn\u00e9 l'expression bool\u00e9enne prendra la valeur <code>False</code>.</p> <p> </p>"},{"location":"T06_Python/T6.1_Python/T6.1_3_While/#4-exercices","title":"4. Exercices","text":"<p>Exercice  1 : pyd\u00e9fi</p> \u00c9nonc\u00e9Correction <p>SW IV : On passe en vitesse lumi\u00e8re : https://pydefis.callicode.fr/defis/VitesseLumiere/txt </p> <p>Comment compter le nombre de passages dans la boucle?</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Trouver le plus petit nombre entier \\(n\\) tel que \\(2^n\\) soit sup\u00e9rieur \u00e0 1 milliard.</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Demander \u00e0 l'utilisateur de taper la lettre S (puis sur la touche Entr\u00e9e). Recommencer tant qu'il n'a pas ob\u00e9i.</p> <p>On utilisera la fonction <code>input</code> pour r\u00e9cup\u00e9rer une saisie clavier (voir ici).</p> <p>Exercice  4 : pyd\u00e9fi</p> \u00c9nonc\u00e9Correction <p>L'algorithme du professeur Guique : https://pydefis.callicode.fr/defis/Algorithme/txt </p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re le code ci-dessous: \ud83d\udc0d Script Python<pre><code>for k in range(5):\n    print(\"Scooby-doo\")\n</code></pre></p> <p>R\u00e9-\u00e9crire ce code en utilisant une boucle <code>while</code>.</p> <p> </p>"},{"location":"T06_Python/T6.1_Python/T6.1_4_If/","title":"6.1.4 L'instruction conditionnelle <code>if</code>","text":"<p>L'instruction conditionnelle <code>if</code> permet de soumettre l'ex\u00e9cution d'instructions \u00e0 une condition donn\u00e9e. Cette condition sera une expression bool\u00e9enne, comme pour la boucle <code>while</code>.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_4_If/#1-premiers-exemples","title":"1. Premiers exemples","text":"<p>Testez les codes suivants (plusieurs fois en variant les valeurs) dans un IDE:</p> <p><code>if</code></p> \ud83d\udc0d Script Python<pre><code>n = int(input(\"Donne moi un nombre: \"))\nif n == 42:\n    print(\"C'est le sens de la vie\")\n</code></pre> <p><code>if else</code></p> \ud83d\udc0d Script Python<pre><code>n = int(input(\"Donne moi un nombre: \"))\nif n == 42:\n    print(\"C'est le sens de la vie\")\nelse:\n    print(\"Ce n'est pas le sens de la vie\")\n</code></pre> <p>imbriquer les <code>if</code></p> \ud83d\udc0d Script Python<pre><code>moyenne = 13\n\nif moyenne &lt; 8:\n    print(\"rat\u00e9\")\nelse:\n    if moyenne &lt; 10:\n        print(\"rep\u00eachage\")\n    else:\n        if moyenne &lt; 12:\n            print(\"admis\")\n        else:\n            if moyenne &lt; 14:\n                print(\"mention AB\")\n            else:\n                if moyenne &lt; 16:\n                    print(\"mention B\")\n                else:\n                    print(\"mention TB\")\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_4_If/#2-la-syntaxe","title":"2. La syntaxe","text":"<p>L'instruction <code>if</code></p> <p>Syntaxe g\u00e9n\u00e9rale: \ud83d\udc0d Script Python<pre><code>if expression:\n    *instructions \u00e0 effectuer si expression est vraie*\nelse:\n    *instructions \u00e0 effectuer sinon, c'est-\u00e0-dire si expression est fausse*\n</code></pre></p> <p>Remarques:</p> <ul> <li><code>expression</code> doit renvoyer une valeur bool\u00e9enne : une \u00e9galit\u00e9, comparaison, appartenance, etc. ;</li> <li>il faut terminer la ligne commen\u00e7ant par <code>if</code> et <code>else</code> par <code>:</code> ;</li> <li>les instructions \u00e0 effectuer selon l'\u00e9valuation d'<code>expression</code> doivent \u00eatre indent\u00e9es;</li> <li>le <code>else</code> est facultatif (comme au premier exemple);</li> <li>en cas d'emploi du <code>else</code>, aucune expression n'est attendue.</li> </ul>"},{"location":"T06_Python/T6.1_Python/T6.1_4_If/#3-elif-et-les-cas-multiples","title":"3. <code>elif</code> et les cas multiples","text":"<p>Dans les situations o\u00f9 l'on veut effectuer des instrucitons diff\u00e9rentes selon les diff\u00e9rentes valeurs prises par une variable, comme dans le troisi\u00e8me exemple, on peut imbriquer les instructions <code>if</code> ... <code>else</code>.</p> <p>Mais cela est vite long et peu lisible, et les diff\u00e9rents niveaux d'indentation sont parfois pi\u00e9geux.</p> <p>Il existe alors une instruction qui contracte <code>else</code> et <code>if</code> : <code>elif</code> (sinon si).</p> <p>Le code du troisi\u00e8me exemple devient alors:</p> \ud83d\udc0d Script Python<pre><code>if moyenne &lt; 8:\n    print(\"rat\u00e9\")\nelif moyenne &lt; 10:\n    print(\"rep\u00eachage\")\nelif moyenne &lt; 12:\n    print(\"admis\")\nelif moyenne &lt; 14:\n    print(\"mention AB\")\nelif moyenne &lt; 16:\n    print(\"mention B\")\nelse:\n    print(\"mention TB\")\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_4_If/#4-exercices","title":"4. Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un programme qui demande deux nombres et qui affiche le plus grand des deux.</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On calcule l'IMC (Indice de Masse Corporelle) par la formule \\(I = M / T^2\\) o\u00f9 M est la masse (en kg) d'une personne et T sa taille (en m). Selon la classification de l'OMS, une personne est en \u00e9tat de maigreur si son IMC est inf\u00e9rieur \u00e0 18 et en surpoids si son IMC est sup\u00e9rieur \u00e0 25. </p> <ol> <li>\u00c9crire un programme qui demande la masse et la taille d'une personne, calcule son IMC et annonce si la personne est en \u00e9tat de maigreur.</li> <li>Modifier ensuite le programme pour qu'il annonce si la personne est en \u00e9tat de maigreur, en surpoids ou bien si son IMC est normal.</li> </ol> <p>Exercice  4</p> \u00c9nonc\u00e9Correction 1Correction 2 <p>Une ann\u00e9e est d\u00e9clar\u00e9e bissextile (et compte donc 366 jours au lieu de 365) dans l'un des deux cas :</p> <ul> <li>elle est divisible par 4 mais n'est pas divisible par 100 ;</li> <li>elle est divisible par 400.</li> </ul> <p>\u00c9crire un code qui d\u00e9termine si une ann\u00e9e est bissextile ou non.</p> <p>Exercice  5</p> \u00c9nonc\u00e9IndicationsCorrection <p>Compter le nombre de voyelles de la phrase <code>'cet exercice est prodigieusement ennuyeux'</code>.</p> <p>\u00c0 l'aide de la fonction <code>len</code> qui renvoie la longueur d'un iterable, donner ensuite le nombre de consonnes.</p> <ul> <li>Utiliser une chaine de caract\u00e8res contenant toutes les voyelles et tester l'appartenance de chaque lettre \u00e0 cette chaine;</li> <li>utiliser une variable compteur.</li> </ul> <p>Exercice  6</p> \u00c9nonc\u00e9Correction 1Correction 2 <p>Le jeu du FizzBuzz : il s'agit de compter \u00e0 partir de 1 en rempla\u00e7ant certains nombres par Fizz, Buzz ou Fizzbuzz :</p> <ul> <li>si le nombre est divisible par 3, on ne le dit pas et on le remplace par Fizz.</li> <li>si le nombre est divisible par 5, on ne le dit pas et on le remplace par Buzz.</li> <li>si le nombre est divisible par 3 et par 5, on ne le dit pas et on le remplace par FizzBuzz.</li> <li>dans tous les autres cas, on donne le nombre.</li> </ul> <p>Ainsi on doit obtenir : 1, 2, Fizz, 4, Buzz, Fizz, 7, 8, etc.</p> <p>\u00c9crire un code qui joue au FizzBuzz jusqu'\u00e0 50.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/","title":"6.1.5 Les fonctions","text":"<p>La notion de fonction est essentielle en programmation. Ces fonctions sont des blocs d'instructions auquels on donne un nom, et qui ont une t\u00e2che bien pr\u00e9cise. L'utilisation de fonctions permet de construire des programmes plus simples \u00e0 \u00e9crire, \u00e0 lire, \u00e0 v\u00e9rifier et \u00e0 modifier, en d\u00e9coupant le programme en sous-programmes. Autre avantage, on peut utiliser ces fonctions \u00e0 plusieurs endroits du programme et \u00e9viter une certaine lourdeur.</p> <p>Nous avons d\u00e9j\u00e0 rencontr\u00e9 des fonctions depuis le d\u00e9but de l'ann\u00e9e: par exemple <code>print</code>, <code>bin</code>, <code>len</code>. </p> <p>En Python, on peut d\u00e9finir une fonction avec le mot-cl\u00e9 <code>def</code>.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#1-schema-general-dune-fonction","title":"1. Sch\u00e9ma g\u00e9n\u00e9ral d'une fonction","text":"<p>En r\u00e8gle g\u00e9n\u00e9rale, une fonction s'applique \u00e0 un ou plusieurs param\u00e8tres, et renvoie (au moins) une valeur. </p> <p>Exemple</p> <p>La fonction  <code>bin</code> prend un nombre entier (type <code>int</code>) comme param\u00e8tre et renvoie son \u00e9criture binaire.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; bin(42)\n'0b101010'\n</code></pre> <p>D\u00e9finir une fonction - syntaxe g\u00e9n\u00e9rale</p> <p>Pour d\u00e9finir une fonction, on utilise le mot-cl\u00e9 <code>def</code> suivi du nom de la fonction, avec le(s) param\u00e8tre(s) entre parenth\u00e8ses. Le bloc d'instructions constituant le corps de la fonction doit \u00eatre indent\u00e9.</p> <p>On renvoie une valeur avec le mot-cl\u00e9 <code>return</code>.</p> \ud83d\udc0d Script Python<pre><code>def ma_fonction(parametre):\n    *instructions*\n    return valeur_renvoyee\n</code></pre> <p>Reprenons par exemple un programme \u00e9crit en exercice sur la boucle <code>for</code> qui calcule la somme des entiers naturels jusqu'\u00e0 1000:</p> \ud83d\udc0d Script Python<pre><code>s = 0\nfor k in range(1, 1001):\n    s = s + k\nprint(s)\n</code></pre> <p>Transformons-le en une fonction. L'objectif est de pouvoir utiliser cette fonction quand on en aura besoin, et \u00e9ventuellement pour calculer la somme des entiers jusqu'\u00e0 n'importe quelle valeur, pas n\u00e9cessairement 1000. Cette valeur va \u00eatre le param\u00e8tre de la fonction. Et on ne veut plus afficher la somme, mais que cette somme soit renvoy\u00e9e par la fonction (pour l'affecter \u00e0 une variable, ou bien pour affichage).</p> \ud83d\udc0d Script Python<pre><code>def somme(n):\n    s = 0\n    for k in range(1, n+1):\n        s = s + k\n    return s\n</code></pre> <p>Ex\u00e9cutez ce code dans votre IDE. Que se passe-t-il? </p> <p>Lorsque l'interpr\u00e9teur Python parcourt cette fonction, rien ne s'affiche : la fonction est maintenant pr\u00eate \u00e0 \u00eatre appel\u00e9e, mais n'est pas ex\u00e9cut\u00e9e tant que l'utilisateur ne le demande pas explicitement.</p> <p>Ce sera le cas pour toutes les fonctions : elles doivent \u00eatre appel\u00e9es pour s'ex\u00e9cuter.</p> <p>Dans la console, faites un appel \u00e0 la fonction:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; somme(42)\n903\n</code></pre> <p>Vocabulaire</p> <p>Dans cet exemple:</p> <ul> <li>la variable <code>n</code> est le param\u00e8tre de la fonction <code>somme</code>;</li> <li>on a appel\u00e9 la fonction <code>somme</code> en lui passant l'argument <code>42</code>;</li> <li>l'appel \u00e0 cette fonction a renvoy\u00e9 la valeur <code>903</code>.</li> </ul> <p>\u00ab\u00c9jection\u00bb du code avec <code>return</code></p> <p>L'emploi du mot-cl\u00e9 <code>return</code> provoque une \u00e9jection du code: tout ce qui suit l'instruction commen\u00e7ant par <code>return</code> ne sera pas ex\u00e9cut\u00e9.</p> <p>Obervez la fonction suivante en l'appelant en lui passant plusieurs arguments successivement.</p> \ud83d\udc0d Script Python<pre><code>def choix_cornelien(n):\n    if n%2 == 0:\n        print(\"ce texte est affich\u00e9 car\", n, \"est pair\")\n        return \"bon choix\"\n    else:\n        return \"mauvais choix\"\n    print(\"ce texte ne sera jamais affich\u00e9\")\n\nchoix = choix_cornelien(12)\nprint(choix)\n</code></pre> <p>Fonction \u00e0 plusieurs param\u00e8tres</p> <p>Fr\u00e9quemment, il arrive qu'on ait besoin d'\u00e9crire une fonction avec plusieurs param\u00e8tres: on les \u00e9crit s\u00e9par\u00e9s par des virgules lors de la d\u00e9claration de la fonction.</p> <p>Exemple:</p> \ud83d\udc0d Script Python<pre><code>def repete_lettres(chaine, nombre):\n    sortie = \"\"\n    for c in chaine:\n        sortie += nombre * c\n    return sortie\n</code></pre> <p>Il faut alors respecter l'ordre des param\u00e8tres lors de l'appel de la fonction:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; repete_lettres(\"NSI\", 3)\n'NNNSSSIII'\n&gt;&gt;&gt; repete_lettres(3, \"NSI\")\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nFile \"\", line 3, in repete_lettres\n    for c in chaine:\nTypeError: 'int' object is not iterable\n&gt;&gt;&gt; \n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#2-cas-particuliers","title":"2. Cas Particuliers","text":""},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#21-fonction-sans-valeur-renvoyee","title":"2.1 Fonction sans valeur renvoy\u00e9e","text":"<p>Il n'est pas obligatoire qu'une fonction renvoie une valeur. Dans ce cas, on parle plut\u00f4t d'une proc\u00e9dure.</p> <p>Par exemple, la fonction bien connue <code>print</code> va afficher en console les arguments qu'on lui a pass\u00e9s, mais elle ne renvoie pas de valeur (ou plut\u00f4t une valeur particuli\u00e8re : <code>None</code>).</p> <p>Si on tente d'affecter \u00e0 une variable le r\u00e9sultat d'un <code>print</code> : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = print(\"hello world\")\n  hello world\n&gt;&gt;&gt; a\n&gt;&gt;&gt; \n</code></pre> Et vous pouvez v\u00e9rifier que dans l'inspecteur de variables, <code>a</code> contient <code>None</code>.</p> <p>Un autre exemple de fonction \u00e0 param\u00e8tre, mais qui ne renvoie rien:</p> \ud83d\udc0d Script Python<pre><code>def chat_penible(n):\n    for k in range(n):\n        print(\"meoww\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; chat_penible(3)\n  meoww\n  meoww\n  meoww\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#22-fonction-sans-parametre","title":"2.2 Fonction sans param\u00e8tre","text":"<p>Il n'est pas obligatoire non plus qu'une fonction ait de param\u00e8tre(s).</p> <p>La fonction suivante simule le tirage d'un d\u00e9 truqu\u00e9, avec la face 6 ayant une probabilit\u00e9 d'apparition de 0,5 et toutes les autres faces une probabilit\u00e9 de 0,1. \ud83d\udc0d Script Python<pre><code>from random import randint\n\ndef tirage_de_truque():\n    tirage = randint(1, 10)\n    if tirage &gt;= 6:\n        return 6\n    else:\n        return tirage\n</code></pre></p> <p>Parenth\u00e8ses</p> <p>Dans ce cas, les parenth\u00e8ses vides sont cependant indispensables, lors de la d\u00e9claration de la fonction comme dans son appel.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; tirage_de_truque\n&lt;function tirage_de_truque at 0x7fe2ccd761f0&gt;\n&gt;&gt;&gt; tirage_de_truque()\n6\n&gt;&gt;&gt; \n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#3-variables-et-fonctions","title":"3. Variables et fonctions","text":"<p>Variables locales</p> <p>Attention, les param\u00e8tres d'une fonction, ainsi que les variables d\u00e9clar\u00e9es \u00e0 l'int\u00e9rieur du corps de la fonction n'existent que dans le corps de cette fonction.</p> <p>Il n'est pas possible d'y faire r\u00e9f\u00e9rence depuis une autre instruction, et ce m\u00eame si la fonction a \u00e9t\u00e9 appel\u00e9e.</p> \ud83d\udc0d Script Python<pre><code>def aire_rectangle(longueur, largeur):\n    aire = longueur * largeur\n    return aire\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; aire_rectangle(6, 3)\n18\n&gt;&gt;&gt; longueur\nNameError: name 'longueur' is not defined\n&gt;&gt;&gt; aire\nNameError: name 'aire' is not defined\n</code></pre> <p>Variables globales</p> <p>M\u00eame si c'est possible, il est fortement recommand\u00e9 de ne pas utiliser dans le corps d'une fonction des variables d\u00e9finies \u00e0 l'ext\u00e9rieur de cette fonction. En effet, si plusieurs fonctions agissent sur ces variables, le programme peut aboutir \u00e0 des valeurs ou des comportements non pr\u00e9vus. On parle alors d'effet de bord.</p> <p>Plut\u00f4t donc qu'utiliser des variables globales...</p> <p> </p> <p>On pr\u00e9f\u00e8rera utiliser davantage de param\u00e8tres, et on passera ces variables en arguments lors de l'appel de la fonction.</p> Pas bienBien \ud83d\udc0d Script Python<pre><code>a = 5\ndef fonction_idiote(n):\n    s = n + a\n    return s\n\nfonction_idiote(1)\n</code></pre> \ud83d\udc0d Script Python<pre><code>a = 5\ndef fonction_idiote(n, m):\n    s = n + m\n    return s\n\nfonction_idiote(1, a)\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#3-exercices","title":"3. Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>maximum</code> qui prend deux nombres en param\u00e8tres et qui renvoie le plus grand des deux.</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction ex 4Correction ex 5 <p>Transformez les programmes de la section 6.1.4 (if) en fonctions.</p> <ul> <li>Exercice 4 : la fonction prend un entier (l'ann\u00e9e) en param\u00e8tre et renvoie <code>True</code> ou <code>False</code> selon que l'ann\u00e9e est bissextile ou non.</li> <li>Exercice 5 : la fonction prend une chaine de caract\u00e8res en param\u00e8tre et renvoie le nombre de voyelles.</li> </ul> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>leet_speak</code> qui prend en param\u00e8tre une chaine de caract\u00e8res (en minuscules) et qui renvoie sa traduction en \u00abLeet Speak\u00bb.</p> <p>C'est-\u00e0-dire la m\u00eame cha\u00eene de caract\u00e8res en ayant remplac\u00e9:</p> <ul> <li>les <code>a</code> par des <code>4</code>;</li> <li>les <code>e</code> par des <code>3</code>;</li> <li>les <code>s</code> par des <code>5</code>;</li> <li>les <code>i</code> par des <code>1</code>;</li> <li>les <code>o</code> par des <code>0</code>.</li> </ul> <p>Par exemple, votre fonction doit produire le r\u00e9sultat suivant: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; leat_speak('leet speak')\n l33t 5p34k\n</code></pre></p>"},{"location":"T06_Python/T6.1_Python/T6_1_0_Introduction/","title":"C0 Introduction","text":""},{"location":"T06_Python/T6.1_Python/T6_1_0_Introduction/#preambule","title":"Pr\u00e9ambule","text":""},{"location":"T06_Python/T6.1_Python/T6_1_0_Introduction/#python","title":"Python","text":"<p>Python est un langage de programmation invent\u00e9 en 1991 par Guido Van Rossum.</p> <p></p> <p>Ce langage est un des langages les plus utilis\u00e9s actuellement (avec le C, le Java, le Javascript ...), notamment dans le monde scientifique.</p> <p>Il est aussi un des langages de d\u00e9veloppement de nombreuses applications (Spotify, Instagram, Netflix), des sites Web, de traitement de donn\u00e9es,  du noyau Linux... Python fait \u00e0 peu pr\u00e8s tout ce qu'on veut. Sauf le caf\u00e9.</p> <p>Il est aussi parfaitement adapt\u00e9 \u00e0 la d\u00e9couverte de la programmation, de par sa clart\u00e9 et sa concision (il a aussi bien s\u00fbr beaucoup de d\u00e9fauts !).</p> <p>C'est pourquoi c'est le langage de programmation utilis\u00e9 au lyc\u00e9e en Math\u00e9matiques, en Physique-Chimie, en SNT et bien s\u00fbr maintenant en NSI.</p> <p>Avec le langage Python il est possible de faire :  </p> <ul> <li>du calcul scientifique (librairie Numpy)</li> <li>des graphiques ( (librairie Mathplotlib)  </li> <li>du traitement du son  </li> <li>du traitement de l\u2019image (librairie PIL)  </li> <li>des applications avec interface graphique GI (librairies Tkinter, PyQt, wxPython, PyGTK, ... )  </li> <li>des jeux vid\u00e9o en temps r\u00e9el (librairie Pygame)  </li> <li>des applications web (serveur web Zope, framework web Django ; framework JavaScript Pyjama)  </li> <li>interfacer des syst\u00e8mes de gestion de base de donn\u00e9es (librairie MySQLdb...)  </li> <li>des applications r\u00e9seaux (framework Twisted)  </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6_1_0_Introduction/#utiliser-python","title":"Utiliser Python","text":"<p>Pour pouvoir utiliser un langage de programmation, en particulier Python, on a besoin d'un IDE (environnement de d\u00e9veloppement). Il en existe beaucoup...</p>"},{"location":"T06_Python/T6.1_Python/T6_1_0_Introduction/#en-ligne","title":"En ligne","text":"<p>Rendez-vous sur la page https://console.basthon.fr/ </p> <p></p> <p> \u00c9diteur \u00e0 gauche, console \u00e0 droite </p>"},{"location":"T06_Python/T6.1_Python/T6_1_0_Introduction/#au-lycee-a-la-maison","title":"Au lyc\u00e9e / \u00e0 la maison","text":"<p>Nous utiliserons Capytale, int\u00e9gr\u00e9 \u00e0 l'ENT et bas\u00e9 sur basthon.</p> <p>Nous utiliserons, \u00e0 l'occasion l'IDE Spyder au lyc\u00e9e ou l'IDE Thonny qui est assez simple et complet. Si vous souhaitez installer Python sur votre PC \u00e0 la maison, je vous conseille de l'installer.</p> <p></p> <p> \u00c9diteur en haut, console en bas </p>"},{"location":"T06_Python/T6.1_Python/T6_1_0_Introduction/#ici-sur-ce-site","title":"Ici, sur ce site","text":"<p>Dans certaines activit\u00e9s, vous trouverez une console int\u00e9gr\u00e9e. Vous pouvez y entrer des instructions simples:</p> &gt;&gt;&gt;  <p>Ou bien un mini-IDE int\u00e9gr\u00e9:</p> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/","title":"C1 Les variables en Python","text":""},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#variables-et-affectation","title":"Variables et Affectation","text":"<p>A retenir</p> <p>Dans le langage Python, le symbole <code>=</code> correspondant \u00e0 l'affectation (\u00e9crite \\(\\leftarrow\\) en pseudo-code).  Pour affecter la valeur 2 \u00e0 une variable <code>a</code> on \u00e9crit simplement <code>a = 2</code>.</p> <p>Ainsi, l'algorithme</p> \ud83d\udccb Algo<pre><code>a \u2190 3\nb \u2190 2 * a\n</code></pre> <p>s'\u00e9crit en Python de la fa\u00e7on suivante :</p> \ud83d\udc0d Script Python<pre><code>a = 3\nb = 2 * a\n</code></pre> \ud83d\udccb Algo<pre><code>a = 3\nb = 2 * a\nprint(a)\nprint(b)\n</code></pre> \ud83d\udccb Algo<pre><code>3\n6\n</code></pre> <p>Exercice  4</p> <p>\u00c9crivez le programme Python correspondant \u00e0 l'algorithme ci-dessous. Que valent <code>N</code> et <code>P</code> apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ?  </p> \ud83d\udccb Algo<pre><code>N \u2190 2\nP \u2190 3\nN \u2190 P + 1\nP \u2190 N\n</code></pre> <p>Les noms de variables sont des noms que vous choisissez vous-m\u00eame assez librement. Efforcez-vous cependant de bien les choisir :  - aussi explicites que possible, de mani\u00e8re \u00e0 exprimer clairement ce que la variable est cens\u00e9e contenir.  </p> <p>Par exemple, des noms de variables tels que altitude, altit ou alt conviennent mieux que x pour exprimer une altitude.</p> <p>ATTENTION Il existe des noms r\u00e9serv\u00e9s :  </p> and del from None True as elif global nonlocal try assert else if not while break except import or with class False in pass yield continue finally is raise def for lambda return"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#lincrementation-dune-variable","title":"L'incr\u00e9mentation d'une variable","text":"<p>Vocabulaire</p> <p>\u00abIncr\u00e9menter\u00bb une variable signifie l'augmenter. </p> <p>Imaginons une variable appel\u00e9e <code>compteur</code>. Au d\u00e9marrage de notre programme, elle est initialis\u00e9e \u00e0 la valeur 0. \ud83d\udc0d Script Python<pre><code>compteur = 0\n</code></pre></p> <p>Consid\u00e9rons qu'\u00e0 un moment du programme, cette variable doit \u00eatre modifi\u00e9e, par exemple en lui ajoutant 1.</p> <p>Ne perdez pas de vue que le signe = est une affectation, et non une \u00e9galit\u00e9.</p> <p>En Python, cela s'\u00e9crira :</p> <ul> <li> <p>Syntaxe classique \ud83d\udc0d Script Python<pre><code>compteur = compteur + 1\n</code></pre></p> </li> <li> <p>Syntaxe Pythonesque  \ud83d\udc0d Script Python<pre><code>compteur += 1\n</code></pre></p> </li> </ul> \ud83d\udccb Algo<pre><code>compteur=0\ncompteur+=1\nprint(compteur)\n</code></pre> \ud83d\udccb Algo<pre><code>1\n</code></pre> <p>Exercice  5</p> <p>Ecrire le code \u00abclassique\u00bb et le code \u00abPythonesque\u00bb pour l'instruction suivante : On initialise une variable <code>capital</code> \u00e0 1000 et on lui enl\u00e8ve 5%.</p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#derouler-un-code-premier-algorithme","title":"Derouler un code : Premier algorithme","text":"<p>Consid\u00e9rons ce code :</p> \ud83d\udc0d Script Python<pre><code>a = 1\nb = 3\nc = a + b\n</code></pre> <p>On peut d\u00e9crire le d\u00e9roulement du code en faisant un tableau. + A gauche on indique le num\u00e9ro de la ligne. + A droite, tout les changements d'\u00e9tat de la m\u00e9moire (c'est \u00e0 dire la ou les variables modifi\u00e9e(s) \u00e0 cette ligne, avec leur nouvelle valeur).</p> n\u00b0 ligne \u00e9tat 1 a = 1 2 b = 3 3 c = 4 <p>Exercice  6</p> <p>Ecrire le d\u00e9roul\u00e9 du code, puis donnez la valeur de \\(x\\) \u00e0 la fin du code.</p> \ud83d\udc0d Script Python<pre><code>x = 2\nx = 3 - x\ny = 5 * x\nx = y / 2\n</code></pre> Correction n\u00b0 ligne \u00e9tat 1 x = 2 2 x = 1 3 y = 5 4 x = 2.5 <p>A la fin \\(x\\) vaut \\(2.5\\)</p> <p>Exercice  7</p> <p>Ecrire le d\u00e9roul\u00e9 du code, puis donnez la valeur de \\(nom\\) \u00e0 la fin du code.</p> \ud83d\udc0d Script Python<pre><code>nom = \"C\u00e9padur\"\nprenom = \"Alban\"\nnom = prenom + \" \" + nom\nnom = nom +\".\"\n</code></pre> Correction n\u00b0 ligne \u00e9tat 1 nom = \"C\u00e9padur\" 2 prenom = \"Jean\" 3 nom = \"Alban C\u00e9padur\" 4 nom = \"Alban  C\u00e9padur,\" <p>A la fin \\(nom\\) vaut  \"Alban C\u00e9padur,\"</p> <p>Exercice  8</p> <p>Ecrire le d\u00e9roul\u00e9 du code et donnez les valeurs de \\(x\\) et de \\(y\\) \u00e0 la fin du code.</p> \ud83d\udc0d Script Python<pre><code>nb_de_tour = 0\nnb_de_tour = nb_de_tour + 1\nnb_de_tour = nb_de_tour + 2\nnb_de_tour = nb_de_tour + 3\n</code></pre> Correction n\u00b0 ligne \u00e9tat 1 nb_de_tour = 0 2 nb_de_tour = 1 3 nb_de_tour = 3 4 nb_de_tour = 6 <p>A la fin nb_de_tour vaut \\(6\\)</p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#lechange-de-variables","title":"L'\u00e9change de variables","text":"<p>Apr\u00e8s l'incr\u00e9mentation, une autre technique de base reviendra fr\u00e9quemment dans nos codes : l'\u00e9change de variables.</p> <p>Exercice  9</p> <p>Ecrire le d\u00e9roul\u00e9 du code et donnez les valeurs de \\(x\\) et de \\(y\\) \u00e0 la fin du code.</p> \ud83d\udc0d Script Python<pre><code>x = 2\ny = 3\nx = y\ny = x\n</code></pre> Correction n\u00b0 ligne \u00e9tat 1 x = 2 2 y = 3 3 x = 3 4 y = 3 <p>A la fin \\(x\\) vaut \\(3\\) et  \\(y\\) vaut \\(3\\)</p> <p>Dans l'exemple pr\u00e9c\u00e9dent, la variable <code>x</code> a \u00e9t\u00e9 \u00e9cras\u00e9e d\u00e8s qu'on lui a donn\u00e9 la valeur de la variable <code>y</code>, on n'a donc pas proc\u00e9d\u00e9 \u00e0 une \u00e9change de valeur.</p> <p>Pour proc\u00e9der \u00e0 un \u00e9change de valeur comment faire ?</p> <p>La situation est similaire au probl\u00e8me suivant : comment \u00e9changer le contenu de ces deux verres ?</p> <p></p> <p>La m\u00e9thode est \u00e9vidente : il nous faut un troisi\u00e8me verre.</p> <p>Nous allons faire de m\u00eame pour nos variables. Nous allons utiliser une variable temporaire (on parle aussi de variable tampon) pour conserver la m\u00e9moire de la valeur de <code>x</code> (par exemple) avant que celle-ci ne se fasse \u00e9craser :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; x = 2\n&gt;&gt;&gt; y = 3\n&gt;&gt;&gt; temp = x\n&gt;&gt;&gt; x = y\n&gt;&gt;&gt; y = temp\n</code></pre> <p>Vous pouvez v\u00e9rifier maintenant que les valeurs de <code>x</code> et de <code>y</code> ont bien \u00e9t\u00e9 \u00e9chang\u00e9es.</p> <p>\ud83d\udccc  Syntaxe classique et syntaxe Pythonesque : </p> <p>L'\u00e9change de deux variables <code>x</code> et de <code>y</code> s'\u00e9crit donc : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; temp = x\n&gt;&gt;&gt; a = y\n&gt;&gt;&gt; y = temp\n</code></pre> Mais il existe aussi une syntaxe particuli\u00e8re \u00e0 Python, bien plus courte :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; x, y = y, x\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#types-de-variables","title":"Types de variables","text":"<p>Pour ce d\u00e9but d'ann\u00e9e, il faut avoir \u00e0 l'esprit qu'il existe 4 types de base :</p> <p>Types de base :</p> <p>Voici les types Python les plus fr\u00e9quemment utilis\u00e9s cette ann\u00e9e:</p> Type Python Traduction Exemple <code>int</code> entier <code>42</code> <code>float</code> flottant (d\u00e9cimal) <code>3.1416</code> <code>str</code> cha\u00eene de caract\u00e8res (string) <code>\"NSI\"</code> <code>bool</code> bool\u00e9en (True ou False) True <code>tuple</code> p-uplet <code>(255, 127, 0)</code> <code>list</code> liste <code>[0, 1, 2, 3, 4, 5]</code> <code>dict</code> dictionnaire <code>{'Homer':43, 'Marge':41, 'Bart':12, 'Lisa':10, 'Maggie':4}</code> <code>function</code> fonction <code>print</code> <p>int est l'abr\u00e9viation de interger qui ignifie entier en anglais</p> <p>float est l'abbr\u00e9viation de floating point qui se traduit en fran\u00e7ais par nombre \u00e0 virgule flottante. Nous aurons l'occasion plus tard de reparler de ce nom \u00e9trange, pour le moment consid\u00e9rez qu'il s'agit de nombres d\u00e9cimaux.</p> <p>str est l'abr\u00e9viation de string, et d\u00e9signe les chaine de caract\u00e8res (character strings).</p> <p>bool est l'abr\u00e9viation de boolean, soit bool\u00e9en en fran\u00e7ais. C'est un type moins intuitif mais tr\u00e8s important en informatique. Une variable bool\u00e9enne ne peut avoir que 2 valeurs : True ou False (Vrai ou Faux)</p> <p>Comment conna\u00eetre le type d'une variable ? Il suffit dans la console d'utiliser la fonction <code>type</code>.</p> \ud83d\udccb Algo<pre><code>a = 1\ntype(a)\n</code></pre> \ud83d\udccb Algo<pre><code>&lt;class 'int'&gt;\n</code></pre> \ud83d\udc0d Script Python<pre><code>un_entier = 1\nprint(\"le type de la variable un_entier est :\", type(un_entier))\n\nmot = \"Albert\"\nprint(\"le type de la variable mot est :\", type(mot))\n\nun_float = 1.0\nprint(\"le type de la variable un_float est :\", type(un_float))\n\nbool = True\nprint(\"le type de la variable bool est :\", type(bool))\n</code></pre> \ud83d\udccb Algo<pre><code>le type de la variable un_entier est : &lt;class 'int'&gt;\nle type de la variable mot est : &lt;class 'str'&gt;\nle type de la variable un_float est : &lt;class 'float'&gt;\nle type de la variable bool est : &lt;class 'bool'&gt;\n</code></pre> <p>Vous vous posez peut-\u00eatre la question de savoir si 1 et 1.0 sont identiques ? </p> <p>En v\u00e9rit\u00e9 ils ne le sont pas, puisqu'ils n'ont pas le m\u00eame type. Cela veux dire qu'il ne sont pas repr\u00e9sent\u00e9s de la m\u00eame fa\u00e7on dans votre ordinateur. N\u00e9anmoins, ils ont bien la m\u00eame valeur.</p> <p>Illustrons cela en utilisant le test d'\u00e9galit\u00e9 : == et le test d'identit\u00e9 : is.</p> <ul> <li>Le premier, a == b est True (vrai) si a et b on la m\u00eame valeur. </li> <li>Le second, a is b est True si a et b sont identiques.</li> </ul> <p>\ud83d\udc0d Script Python<pre><code>a = 1\nb = 1.0\nprint( \"a est \u00e9gal \u00e0 b ? -&gt; \", a == b)\n\nprint( \"a est identique \u00e0 b ? -&gt; \", a is b)\n</code></pre>     a est \u00e9gal \u00e0 b ? -&gt;  True     a est identique \u00e0 b ? -&gt;  False</p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#python-et-le-typage-dynamique","title":"Python et le typage dynamique","text":"<p>Jusqu'\u00e0 pr\u00e9sent, nous ne nous sommes pas occup\u00e9s de pr\u00e9ciser \u00e0 Python le type de notre variable.</p> \ud83d\udc0d Script Python<pre><code>a = 3\n</code></pre> <p>Mais dans certains langages, c'est obligatoire. En C par exemple, il faut \u00e9crire :</p> <p>C<pre><code>int a = 3;\n</code></pre> Cela signifie (pour le langage C) que notre variable <code>a</code> n'aura pas le droit de contenir autre chose qu'un nombre entier.</p> <p>Si on \u00e9crit ensuite C<pre><code>a = \"test\";\n</code></pre></p> <p>Le compilateur C renverra une erreur : on ne peut pas stocker une cha\u00eene de caract\u00e8res dans une variable qu'on a cr\u00e9\u00e9e comme \u00e9tant de type entier.</p> <p>Et en Python ?</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 3\n&gt;&gt;&gt; type(a)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; a = \"test\"\n&gt;&gt;&gt; type(a)\n&lt;class 'str'&gt;\n</code></pre> <p>Python a chang\u00e9 tout seul le type de notre variable, sans intervention. On parle de typage dynamique.</p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#bonnes-pratiques-de-nommage","title":"Bonnes pratiques de nommage","text":""},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#ce-qui-est-autorise-et-ce-qui-ne-lest-pas","title":"Ce qui est autoris\u00e9 et ce qui ne l'est pas","text":"<p>Pour nommer correctement une variable, il existe des r\u00e8gles \u00e0 respecter.</p> <p>\"Les r\u00e8gles\"   - le nom de la variable peut contenir les caract\u00e8res suivants :    - des lettres non accentu\u00e9es (attention, minuscule et majuscule sont des caract\u00e8res diff\u00e9rents)    - des chiffres (mais pas comme premier caract\u00e8re)    - le tiret du bas _ (underscore, tiret du 8)</p> <ul> <li>le nom de la variable ne doit pas commencer par un chiffre</li> <li>le nom de la variable ne doit pas contenir d'espace</li> <li>le nom de la variable ne doit pas \u00eatre un mot-cl\u00e9 du langage.</li> </ul> <p>Liste des mots-cl\u00e9s r\u00e9serv\u00e9s par Python</p> <p> andas assert  break class  continue   def    del elif   else   except False  finally for   from   global    if   import in is  lambda None not     or  pass raise   return True try   while with    yield  </p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#du-sens-du-sens-du-sens","title":"Du sens, du sens, du sens","text":"<p>Hormis pour les indices (de boucles, de tableaux...) un nom de variable (dans un programme destin\u00e9 \u00e0 \u00eatre lu, par vous ou quelqu'un d'autre) doit imp\u00e9rativement avoir du sens :</p> \ud83d\udc0d Script Python<pre><code># PAS BIEN\nif d == 1:\n    cep += vm\n\n# BIEN\nif date == 1:\n    compte_epargne += versement_mensuel\n</code></pre> <p>R\u00e8gle d'or : On ne donne jamais un nom de variable au hasard, on le choisit pour qu'il soit explicite.</p> <p>Oui mais pour donner du sens, il faut souvent plusieurs mots... La longueur du nom de la variable n'est plus un probl\u00e8me depuis que la grande majorit\u00e9 des IDE proposent la compl\u00e9tion automatique. Mais comment former ces longs mots ?</p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#syntaxe-des-noms-a-rallonge","title":"Syntaxe des noms \u00e0 rallonge","text":"<p>Comment accoler des mots - S'il est compos\u00e9, le nom peut \u00eatre de la forme:  - <code>snake_case</code> : les mots sont s\u00e9par\u00e9s par des underscores. Conseill\u00e9 en Python.  - <code>camelCase</code> : les mots sont s\u00e9par\u00e9s par des majuscules mais la 1\u00e8re lettre est minuscule. Conseill\u00e9 en Javascript.  - <code>PascalCase</code> : les mots sont s\u00e9par\u00e9s par des majuscules et la 1\u00e8re lettre est majuscule. Conseill\u00e9 en C.  - <code>kebab-case</code> : les mots sont s\u00e9par\u00e9s par des tirets courts. Conseill\u00e9 en HTML - CSS.   </p> <p>Sans surprise, en Python, nous utiliserons donc le <code>snake_case</code>.</p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#exercices","title":"Exercices","text":"<p>Exercice  10</p> <p>Pr\u00e9dire la valeur affich\u00e9e apr\u00e8s les s\u00e9quences d'instructions suivantes.</p> <p>1. S\u00e9quence 1 :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 5\n&gt;&gt;&gt; a = a + 1\n&gt;&gt;&gt; b = a\n&gt;&gt;&gt; b = b ** 2 - a\n&gt;&gt;&gt; print(b)\n</code></pre> <p>2. S\u00e9quence 2 :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = 5\n&gt;&gt;&gt; b = 6\n&gt;&gt;&gt; a = a - b\n&gt;&gt;&gt; b = b + a\n&gt;&gt;&gt; a = b - a\n&gt;&gt;&gt; print(a, b)\n</code></pre> <p>3. S\u00e9quence 3 :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; from random import randint\n&gt;&gt;&gt; a = randint(1, 100)  #entier al\u00e9atoire entre 1 et 100\n&gt;&gt;&gt; b = randint(1, 100)  #entier al\u00e9atoire entre 1 et 100\n&gt;&gt;&gt; a = a - b\n&gt;&gt;&gt; b = b + a\n&gt;&gt;&gt; a = b - a\n&gt;&gt;&gt; print(a, b)\n</code></pre> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p> <p>Exercice  11</p> <p>Le prix d'une mati\u00e8re premi\u00e8re est de 873 euros la tonne au d\u00e9but de l'ann\u00e9e. Ce prix subit des variations saisonni\u00e8res : </p> <ul> <li>au premier trimestre il augmente de 347 euros,  </li> <li>au second trimestre il augmente de 25 %,  </li> <li>au troisi\u00e8me trimestre il subit une baisse de 50 %  </li> <li> <p>et enfin il diminue de 100 euros.  </p> </li> <li> <p>Compl\u00e9ter le code ci-dessous afin qu'il calcule les valeurs successives de la variable <code>prix</code>.  </p> </li> </ul> \ud83d\udc0d Script Python<pre><code>prix = 873       #prix au d\u00e9but de l'ann\u00e9e\nprix = ....      #prix \u00e0 la fin du premier trimestre\nprix = ....      #prix \u00e0 la fin du second trimestre\nprix = ....      #prix \u00e0 la fin du troisi\u00e8me trimestre\nprix = ....      #prix \u00e0 la fin de l'ann\u00e9e\nprint(\"Prix final :\", prix)\n</code></pre> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#entrees-sorties","title":"Entr\u00e9es / Sorties","text":"<p>Un programme effectue des calculs. En g\u00e9n\u00e9ral, il traite des informations, et nous renvoie le r\u00e9sultat du traitement.</p> <p>Les informations trait\u00e9es doivent donc \u00eatre fournies en entr\u00e9e. Les r\u00e9sultat renvoy\u00e9s en sortie.</p> <p>Dans ce qui pr\u00e9c\u00e8de, les codes que nous avons \u00e9crit affiche un r\u00e9sultat dans la console. Mais ils n'avaient rien en entr\u00e9e. Si on ex\u00e9cute plusieurs fois ces programmes, ils feront \u00e0 chaque fois exactement la m\u00eame chose, puisqu'aucune donn\u00e9e ne change \u00e0 chaque ex\u00e9cution.</p> <p>La grande majorit\u00e9 des programmes ne fonctionnent pas ainsi. En g\u00e9n\u00e9ral, un programme lit des informations, les traite, et renvoie le r\u00e9sultat. </p> <p>Les informations lues peuvent \u00eatre saisies au clavier, lues dans un fichier, provenir d'un apparareil photo ou scanner, enregistr\u00e9es via un dispositif audio etc....</p> <p>De m\u00eame, le r\u00e9sultat peut \u00eatre un simple affichage \u00e0 l'\u00e9cran (texte ou image), ou sur une imprimante, dans un fichier, un son etc...</p> <p>Les codes pr\u00e9c\u00e9dents de ce document affichent un r\u00e9sultat (avec la fonction <code>print()</code> qui affiche dans la console). <code>print()</code> peut afficher n'importe quelle variable (int, float, str ou bool) ou texte.</p> <p>Pour entrer une information, on peut utiliser la fonction <code>input()</code>. </p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#entrer-des-donnees-de-type-texte","title":"Entrer des donn\u00e9es de type texte","text":"\ud83d\udc0d Script Python<pre><code>print(\"-------- entr\u00e9es -------\")\nvotre_nom = input(\"quel est votre nom ? \")\nvotre_prenom = input(\"quel est votre pr\u00e9nom ? \")\nprint(\"-------- sorties -------\")\nprint(\"Bonjour \", votre_prenom, votre_nom,\",\")\nprint()\nprint(\"Bienvenue \u00e0 Pythonworld !\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>-------- entr\u00e9es -------\nquel est votre nom ? Mika\nquel est votre pr\u00e9nom ? mm\n-------- sorties -------\nBonjour  mm Mika ,\n\nBienvenue \u00e0 Pythonworld !\n</code></pre> <p>La fonction <code>input(message)</code> :</p> <p>affiche le message, attend que l'on entre une information, que l'on termine en appuyant sur la touche Entr\u00e9e, et renvoie cette information. L'instruction :</p> <p>\ud83d\udc0d Script Python<pre><code>ma_var = intput(\"un message :\")\n</code></pre> permet donc d'affecter la donn\u00e9e entr\u00e9e \u00e0 la variable <code>ma_var</code></p>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#entrer-des-donnees-numeriques","title":"Entrer des donn\u00e9es num\u00e9riques","text":"<p>La m\u00e9thode est la m\u00eame, a ceci pr\u00e8s : la fonction <code>input()</code> nous permet de demander d'entrer une valeur et d'affecter la valeur entr\u00e9e \u00e0 une variable. Mais la valeur entr\u00e9e est toujours de type str.</p> <p>Voyez ce code, et comprenez l'erreur g\u00e9n\u00e9r\u00e9e \u00e0 l'ex\u00e9cution :</p> \ud83d\udc0d Script Python<pre><code>age = input(\"Entre ton age : \")\nprint(\"Tu as \", age, \"ans.\")\nage_2050 = age + (2050 - 2022)\nprint(\"En 2050 tu auras : \", age_2050, \"ans.\")\n</code></pre> \ud83d\udccb Algo<pre><code>Entre ton age : 22\nTu as  22 ans.\nTraceback (most recent call last):\nFile \"&lt;input&gt;\", line 3, in &lt;module&gt;\nTypeError: can only concatenate str (not \"int\") to str\n</code></pre> <p>\ud83c\udf35 Vous obtenez :</p> <p>\u00a0\u00a0\u00a0File \"&lt;input&gt;\", line 3, in &lt;module&gt; TypeError: can only concatenate str (not \"int\") to str</p> <p>ce qui en fran\u00e7ais donne : </p> \ud83d\udccb Algo<pre><code>on ne peut concat\u00e9ner que des str (pas des int) \u00e0 des str.\n</code></pre> <p>\ud83e\udd14 Pourtant <code>age + (2050 - 2022)</code> semblait bien \u00eatre une addition de deux entiers non ?</p> <p>En fait non, car <code>age</code> est de type str.</p> <p>\ud83d\udca1 Si vous voulez que age soit un entier, il faut convertir le r\u00e9sultat de <code>input()</code>. Voici le code pr\u00e9c\u00e9dent, corrig\u00e9 pour que l'entr\u00e9e soit convertie en entier :</p> \ud83d\udc0d Script Python<pre><code>age = int( input(\"Entre ton age : \") )\nprint(\"Tu as \", age, \"ans.\")\nage_2050 = age + (2050 - 2022)\nprint(\"En 2050 tu auras : \", age_2050, \"ans.\")\n</code></pre> \ud83d\udccb Algo<pre><code>Entre ton age : 22\nTu as  22 ans.\nEn 2050 tu auras :  50 ans.\n</code></pre> <p>Dans l'exemple ci-dessous que nous avons \u00e9tudi\u00e9 o\u00f9 <code>age</code> \u00e9tait de type <code>str</code>:  \ud83d\udc0d Script Python<pre><code>age = input(\"Entre ton age : \")\nprint(\"Tu as \", age, \"ans.\")\nage_2050 = age + (2050 - 2022)\n</code></pre></p> <p>le code g\u00e9n\u00e8rait une erreur. </p> <p>\ud83c\udf35 Mais ce ne sera pas forc\u00e9ment le cas.... </p> <p>Ou du moins, il y aura surement une erreur, mais le code ne va pas forc\u00e9ment s'arr\u00eater, il affichera des choses  \u00e9tranges....</p> <p>Regardez ce code, comprenez le probl\u00e8me, puis corrigez le code :</p> \ud83d\udc0d Script Python<pre><code>age = input(\"Entre ton age : \")\nprint(\"Tu as \", age, \"ans.\")\nage_duclos = age * 2 \nprint(\"Monsieur Duclos a deux fois ton age. Il a\", age_duclos, \"ans.\")\n</code></pre> \ud83d\udccb Algo<pre><code>Entre ton age : 22\nTu as  22 ans.\nMonsieur Duclos a deux fois ton age. Il a 2222 ans.\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_1_Les_Variables_en_Python/#que-sest-il-passe","title":"Que s'est-il pass\u00e9 ?","text":"<p>Si <code>age</code>  est de type chaine de caract\u00e8res, il est possible de faire <code>2 * age</code>. Cela revient en fait \u00e0 faire <code>age + age</code>. On dit qu'on a fait une concat\u00e9nation des chaines de caract\u00e8res. Cela revient tout simplement \u00e0 les juxtaposer.  </p> <p>Exercice  12</p> <p>La temp\u00e9rature \\(f\\) en degr\u00e9s  Fahrenheit s'obtient \u00e0 partir de la temp\u00e9rature \\(c\\) en degr\u00e9s Celsius par la formule de conversion \\(f=1,8 * c + 32\\). </p> <p>Ecrire un programme qui r\u00e9ponde \u00e0 la sp\u00e9cification suivante : convertir une mesure de temp\u00e9rature de l'\u00e9chelle  Celsius vers l'\u00e9chelle Fahrenheit.</p> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/","title":"C2 Les fonction en Python","text":""},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#notion-de-fonctions","title":"Notion de fonctions","text":"<p>La notion de fonction est essentielle en programmation, elles servent \u00e0 mieux structurer votre code. Par exemple, elles permettent d\u2019\u00e9viter de r\u00e9p\u00e9ter plusieurs fois des portions de codes identiques. Ainsi, une fonction peut \u00eatre vu comme un \u00abpetit\u00bb programme : - \u00e0 qui on donne des param\u00e8tres en entr\u00e9e,  - puis qui effectue alors un traitement sur ces param\u00e8tres, - qui renvoie enfin un r\u00e9sultat en sortie.  </p> <p>Une fonction qui modifie des variables mais sans renvoyer de r\u00e9sultat est appel\u00e9e une proc\u00e9dure. Le langage Python ne fait pas de diff\u00e9rence dans la syntaxe entre fonction et proc\u00e9dure.</p> <p>A retenir :</p> <p>En Python, une fonction se cr\u00e9e avec le mot-cl\u00e9 <code>def</code>.</p>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#fonctions-sans-parametre-sans-valeur-renvoyee","title":"Fonctions sans param\u00e8tre, sans valeur renvoy\u00e9e","text":"\ud83d\udc0d Script Python<pre><code>def accueil():\n    print(\"Bonjour\")\n    print(\"comment allez-vous ?\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>accueil()\n</code></pre> \ud83d\udc0d Script Python<pre><code>Bonjour\ncomment allez-vous ?\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#fonction-avec-parametres-sans-valeur-renvoyee","title":"Fonction avec param\u00e8tre(s), sans valeur renvoy\u00e9e","text":"\ud83d\udc0d Script Python<pre><code>def double(n):\n    d=2*n\n    print(f'le double de {n} est {d}')\n</code></pre> \ud83d\udc0d Script Python<pre><code>double(4)\nle double de 4 est 8\n</code></pre> <p>Vocabulaire :</p> <ul> <li>La valeur <code>n</code> est appel\u00e9e param\u00e8tre de la fonction <code>double</code>.  </li> <li>On dit qu'on  passe le param\u00e8tre <code>n</code> \u00e0 la fonction <code>double</code>.  </li> <li>Dans l'exemple ci-dessus, on dit qu'on a appel\u00e9 la fonction <code>double</code> avec  l'argument 4.</li> </ul> <p>Remarques :</p> <ul> <li>l\u00e0 encore, notre fonction ne renvoie rien : on peut encore la consid\u00e9rer comme un ensemble d'instructions factoris\u00e9 dans un m\u00eame bloc. \u00c0 la diff\u00e9rence de la fonction sans param\u00e8tre, ces instructions ne sont pas toujours les m\u00eames, gr\u00e2ce \u00e0 l'utilisation du param\u00e8tre demand\u00e9 \u00e0 l'utilisateur.  </li> <li>la fonction bien connue  <code>print()</code> est une fonction \u00e0 param\u00e8tre, qui affiche dans la console le contenu du param\u00e8tre.  </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#fonction-avec-parametres-et-avec-valeur-renvoyee","title":"Fonction avec param\u00e8tre(s) et avec valeur renvoy\u00e9e","text":"<p>On retrouve ici la notion classique de fonction rencontr\u00e9e en math\u00e9matiques : un proc\u00e9d\u00e9 qui prend un nombre et en renvoie un autre. En informatique, l'objet renvoy\u00e9 ne sera pas forc\u00e9ment un nombre (cela pourra \u00eatre aussi une liste, un tableau, une image...). Le renvoi d'une valeur se fait gr\u00e2ce au mot-cl\u00e9 <code>return</code>.</p> <p>Exemple</p> <p>La fonction math\u00e9matique \\(f : x \\longmapsto 2x+3\\) se codera par :</p> <p>\ud83d\udc0d Script Python<pre><code>def f(x):\n    return 2*x+3\n</code></pre> \ud83d\udc0d Script Python<pre><code>f(4)\n11\n</code></pre></p>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#autour-du-return","title":"Autour du <code>return</code>","text":""},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#la-force-du-return","title":"La force du <code>return</code>","text":"<p>Diff\u00e9rence fondamentale entre <code>return</code> et <code>print</code> </p> <p>Le mot-cl\u00e9 <code>return</code> de l'exemple pr\u00e9c\u00e9dent fait que l'expression <code>f(4)</code> est \u00e9gale \u00e0 11. On peut d'ailleurs \u00e9crire en console :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; f(4) + 5\n16\n</code></pre> <p>Imaginons (avant de l'oublier tr\u00e8s vite) le code affreux ci-dessous :  </p> \ud83d\udc0d Script Python<pre><code>def g(x):\n    print(2*x + 3)\n</code></pre> <p>On pourrait avoir l'illusion que la fonction <code>g</code> fait correctement son travail :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; g(4)\n11\n</code></pre> <p>Mais <code>g</code> se contente d'afficher sa valeur calcul\u00e9e, et non pas de la renvoyer. En effet :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; g(4) + 5\n16\nTraceback (most recent call last):\nFile \"&lt;input&gt;\", line 1, in &lt;module&gt;\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\n</code></pre> <p>En r\u00e9sum\u00e9 :</p> <p></p> \ud83d\udc0d Script Python<pre><code>def g(x):\n    print(2*x + 3)\n</code></pre> \ud83d\udc0d Script Python<pre><code>g(4)+5\n</code></pre> \ud83d\udc0d Script Python<pre><code>11\nTraceback (most recent call last):\nFile \"&lt;input&gt;\", line 1, in &lt;module&gt;\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#le-return-est-un-siege-ejectable","title":"Le <code>return</code> est un si\u00e8ge \u00e9jectable","text":"<p>Le mot-cl\u00e9 <code>return</code> provoque une \u00e9jection du code : tout ce qui est situ\u00e9 apr\u00e8s le \u00a0<code>return</code> ne sera pas ex\u00e9cut\u00e9.   </p> <p>Observez la diff\u00e9rence entre les fonctions <code>g</code>  et <code>h</code> .</p> \ud83d\udc0d Script Python<pre><code>def g(x):\n    print(\"ce texte sera bien affich\u00e9\")\n    return 2*x+3\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; g(4)\nce texte sera bien affich\u00e9\n11\n</code></pre> \ud83d\udc0d Script Python<pre><code>def h(x):\n    return 2*x+3\n    print(\"ceci ne sera jamais affich\u00e9\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; h(4)\n11\n</code></pre> \ud83d\udc0d Script Python<pre><code>def g(x):\n    print(\"ce texte sera bien affich\u00e9\")\n    return 2*x+3\n\ndef h(x):\n    return 2*x+3\n    print(\"ceci ne sera jamais affich\u00e9\")\n</code></pre> <p>\ud83d\udc0d Script Python<pre><code>print(g(4))\nprint(h(4))\n</code></pre> \ud83d\udc0d Script Python<pre><code>ce texte sera bien affich\u00e9\n11\n11\n</code></pre></p>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#les-fonctions-sans-return-sont-elles-des-fonctions","title":"Les fonctions sans <code>return</code> sont-elles des fonctions ?","text":"<ul> <li>Pour les puristes, une fonction sans valeur renvoy\u00e9e sera plut\u00f4t appel\u00e9e proc\u00e9dure. Le mot fonction est alors r\u00e9serv\u00e9 aux fonctions qui ont effectivement un <code>return</code>.</li> </ul>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#variables-locales-variables-globales","title":"Variables locales, variables globales","text":""},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#notion-despace-de-noms","title":"Notion d'espace de noms","text":"<p>A retenir :</p> <ul> <li>Les variables d\u00e9finies dans le corps d'une fonction sont appel\u00e9es variables locales </li> <li>Les variables d\u00e9finies dans le corps du programme (sous-entendu : pas \u00e0 l'int\u00e9rieur d'une fonction) sont appel\u00e9es variables globales.  </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#regles-dacces-en-lecture-et-en-modification-dune-variable-suivant-son-espace-dorigine","title":"\ud83d\udcda R\u00e8gles d'acc\u00e8s en lecture et en modification d'une variable suivant son espace d'origine","text":"<p>R\u00e8gles d'acc\u00e8s aux variables locales et globales : </p> <ul> <li>r\u00e8gle 1 : une variable locale (d\u00e9finie au c\u0153ur d'une fonction) est inaccessible hors de cette fonction.   </li> <li>r\u00e8gle 2 : une variable globale (d\u00e9finie \u00e0 l'ext\u00e9rieur d'une fonction) est accessible en lecture \u00e0 l'int\u00e9rieur d'une fonction.  </li> <li>r\u00e8gle 3 : une variable globale (d\u00e9finie \u00e0 l'ext\u00e9rieur d'une fonction) ne peut pas \u00eatre modifi\u00e9e \u00e0 l'int\u00e9rieur d'une fonction.</li> </ul> <p>\u26a0 \u00c0 propos de la r\u00e8gle n\u00b03 (toute la v\u00e9rit\u00e9, rien que la v\u00e9rit\u00e9)</p> <p>Pour certains types de variables (listes, dictionnaires...), la modification d'une variable globale \u00e0 l'int\u00e9rieur du corps d'une fonction est en fait possible (contrairement \u00e0 ce qu'\u00e9nonce la r\u00e8gle 3). Mais cela reste tr\u00e8s fortement d\u00e9conseill\u00e9.</p> <p>Une fonction ne doit modifier que les variables qu'elle cr\u00e9e (ses variables locales) ou bien les variables qu'on lui a donn\u00e9es en param\u00e8tre. </p> <p>Une fonction qui ne respecte pas cette r\u00e8gle pr\u00e9sente des effets de bord : on peut peut-\u00eatre arriver \u00e0 les g\u00e9rer sur un \u00abpetit\u00bb code, mais cela devient illusoire sur un code utilisant de multiples fonctions. </p>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#documenter-une-fonction","title":"Documenter une fonction","text":""},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#help","title":"Help !","text":"<p>Si une fonction peut \u00eatre assimil\u00e9e \u00e0 un outil, il est normal de se demander si cet outil poss\u00e8de un mode d'emploi.</p> <p>Observons les fonctions pr\u00e9-d\u00e9finies par Python, et notamment une des premi\u00e8res que nous avons rencontr\u00e9es : la fonction <code>print()</code>. Son mode d'emploi est accessible gr\u00e2ce \u00e0 la commande <code>help(print)</code>.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; help(print)\nHelp on built-in function print in module builtins:\n\nprint(...)\n    print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\n    Prints the values to a stream, or to sys.stdout by default.\n    Optional keyword arguments:\n    file:  a file-like object (stream); defaults to the current sys.stdout.\n    sep:   string inserted between values, default a space.\n    end:   string appended after the last value, default a newline.\n    flush: whether to forcibly flush the stream\n</code></pre> <p>Pensez \u00e0 utiliser cette fonction <code>help()</code> </p>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#creer-le-mode-demploi-de-ses-propres-fonctions-les-docstrings","title":"Cr\u00e9er le mode d'emploi de ses propres fonctions : les docstrings","text":"<p>Il est possible, voire souhaitable (d\u00e8s qu'on cr\u00e9\u00e9 un code comportant plusieurs fonctions, et/ou qui sera amen\u00e9 \u00e0 \u00eatre lu par d'autres personnes), de cr\u00e9er un mode d'emploi pour ses fonctions. On appelle cela \u00e9crire la docstring de la fonction, et c'est tr\u00e8s simple : il suffit de l'encadrer par des triples double-quotes <code>\"\"\"</code>.</p> <p>Exemple \ud83d\udc0d Script Python<pre><code>def double(n):\n\"\"\"\n    Renvoie le de n\"\n    \"\"\"\n    d=2*n\n    return d\n</code></pre></p> <p>On peut donc maintenant demander de l'aide pour cette fonction :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; help(double\nHelp on function double in module __main__:\n\ndouble(n)\nRenvoie le double de n\n</code></pre> \ud83d\udc0d Script Python<pre><code>def double(n):\n\"\"\"\n    Renvoie le de n\"\n    \"\"\"\n    d=2*n\n    return d\n</code></pre> \ud83d\udc0d Script Python<pre><code>help(double)\n</code></pre> \ud83d\udc0d Script Python<pre><code>Help on function double in module __main__:\n\n    double(n)\n        Renvoie le de n\"\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_2_Les_fonctions_en_Python/#exercices","title":"Exercices","text":"<p>Exercice  13</p> <p>Calcul aire \u00c9crire une fonction qui prends en entr\u00e9e la longueur et la largeur d'un rectangle et qui renvoie son aire.</p> \ud83d\udc0d Script Python<pre><code>def caclule_aire(longueur, largeur):\n    ...\n</code></pre> <p>Exercice  14</p> <p>conversion_duree </p> <p>\u00c9crire une fonction qui convertit un nombre de secondes en heures/minutes/secondes.  </p> \ud83d\udc0d Script Python<pre><code>def convertit(secondes):\n    ...\n    return (heures, minutes, secondes)\n</code></pre> <p>On peut utiliser le fait que si <code>a</code> et <code>b</code> sont deux variables contenant des entiers, alors \ud83d\udc0d Script Python<pre><code>a // b\n</code></pre> est la partie enti\u00e8re de la division de <code>a</code> par <code>b</code> et </p> <p>Exemple :</p> \ud83d\udc0d Script Python<pre><code>a=19\nb=5\na // b\n3\n</code></pre> <p>\ud83d\udc0d Script Python<pre><code>a % b\n</code></pre> est reste de la division de <code>a</code> par <code>b</code>.</p> <p>\ud83d\udc0d Script Python<pre><code>a % b\n4\n</code></pre> En effet \\(19 = 3 \\times 5 + 4\\)</p> <p>Exercice  15</p> <p>Prix</p> <p>Le droit d'entr\u00e9e journalier dans un parc d\u2019attraction est </p> <ul> <li>37\u20ac pour un adulte</li> <li>28\u20ac pour un enfant. </li> </ul> <p>Ecrire une fonction <code>prix(nbre_adultes, nbre_enfants)</code> renvoyant le prix \u00e0 payer pour le parc d'attraction.</p> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p>"},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/","title":"C3 Les Boucles FOR","text":""},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/#les-enumerables-ou-iterables","title":"Les \u00e9num\u00e9rables ou it\u00e9rables","text":"<p>En math\u00e9matiques, on dit qu'un ensemble est d\u00e9nombrable lorsqu'on peut associer \u00e0 chaque \u00e9l\u00e9ment de l'ensemble un nombre (traditionnellement 1, 2, 3 ...)</p> <ul> <li>les voitures qui roulent sur l'autoroute sont d\u00e9nombrables.</li> <li>l'eau qui coule d'un robinet n'est pas d\u00e9nombrable.</li> </ul> <p>En informatique, il existe un concept similaire qui va d\u00e9signer les objets que l'on peut \u00e9num\u00e9rer, c'est-\u00e0-dire les d\u00e9composer en une succession ordonn\u00e9e d'\u00e9l\u00e9ments. On les appelle les \u00e9num\u00e9rables ou les it\u00e9rables (Python utilise le mot anglais <code>iterable</code>).</p> <ul> <li>la variable <code>NSI</code> (qui est de type <code>String</code>) est \u00e9num\u00e9rable : on peut la d\u00e9composer en  <code>N</code>,  <code>S</code>, <code>I</code>.</li> <li>la variable <code>[4, 3, 17]</code>  (qui est de type <code>List</code>) est \u00e9num\u00e9rable : on peut la d\u00e9composer en  <code>4</code>,  <code>3</code>, <code>17</code>.</li> <li>la variable <code>5</code>  (qui est de type <code>Int</code>) n'est PAS \u00e9num\u00e9rable : on ne peut pas la d\u00e9composer. </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/#iterer-sur-les-iterables-la-boucle-for","title":"It\u00e9rer sur les it\u00e9rables : la boucle <code>for</code>","text":""},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/#iterer-sur-une-chaine-de-caracteres","title":"\u2712 It\u00e9rer sur une cha\u00eene de caract\u00e8res","text":"<p>Il existe donc une instruction permettant de faire une (ou plusieurs) action(s) \u00e0 chaque it\u00e9ration sur un \u00e9l\u00e9ment \u00e9num\u00e9rable.</p> <p>Exemple : Le programme suivant : \ud83d\udc0d Script Python<pre><code>for k in 'NSI':\n    print(k)\n</code></pre> va donner ceci : \ud83d\udc0d Script Python<pre><code>N\nS\nI\n</code></pre></p> <p>Analyse gr\u00e2ce \u00e0 PythonTutor \u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>k</code>. </p> \ud83d\udccb Algo<pre><code>from tutor import tutor\nfor k in 'NSI':\n    print(k)\ntutor()\n</code></pre> \ud83d\udccb Algo<pre><code>N\nS\nI\n</code></pre> <p>La variable <code>k</code> prend donc successivement toutes les lettre de la cha\u00eene de caract\u00e8re <code>\"NSI\"</code>. </p> <p>Pour chaque valeur de <code>k</code>, la ou les instruction(s) situ\u00e9es de mani\u00e8re indent\u00e9e sous la ligne du <code>for</code> seront ex\u00e9cut\u00e9es. </p> <p>Ici, il y a simplement un <code>print(k)</code>, donc chaque lettre de <code>\"NSI\"</code> s'affiche l'une apr\u00e8s l'autre.</p> <p>Exercice 1 :</p> <p>Que donne le script suivant ? \ud83d\udc0d Script Python<pre><code>for m in 'NASA':\n    print(\"bonjour\")\n</code></pre></p> <p>Dans cet exercice, la variable de boucle <code>m</code> est muette : elle n'appara\u00eet dans les instructions indent\u00e9es sous le <code>for</code>. </p> <p>La variable <code>m</code> prend successivement les valeurs <code>'N</code>, <code>'A'</code>, <code>'S'</code> et <code>'A'</code>, mais on ne le voit pas.</p> <p>\ud83d\udcda  A retenir :</p> <p>\u26a0 Comment \u00e9viter les erreurs classiques Quand vous \u00e9crivez une boucle <code>for</code>, veillez bien \u00e0 :</p> <ul> <li>finir la ligne du <code>for</code> par les deux points <code>:</code> </li> <li>indenter sous le <code>for</code> les instructions qui doivent \u00eatre r\u00e9p\u00e9t\u00e9es. </li> </ul> \ud83d\udc0d Script Python<pre><code>for ........ :\n    instructions \u00e0 r\u00e9p\u00e9ter\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/#iterer-sur-une-liste","title":"\u2712 It\u00e9rer sur une liste","text":"<p>Exemple : Le programme suivant : \ud83d\udc0d Script Python<pre><code>for jour in [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]:\n    print(f\"je vais au lyc\u00e9e le {jour}\")\n</code></pre> va donner ceci : \ud83d\udc0d Script Python<pre><code>je vais au lyc\u00e9e le lundi\nje vais au lyc\u00e9e le mardi\nje vais au lyc\u00e9e le mercredi\nje vais au lyc\u00e9e le jeudi\nje vais au lyc\u00e9e le vendredi\n</code></pre></p> \ud83d\udccb Algo<pre><code>from tutor import tutor\nfor jour in [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]:\n    print(f\"je vais au lyc\u00e9e le {jour}\")\ntutor()\n</code></pre> \ud83d\udccb Algo<pre><code>je vais au lyc\u00e9e le lundi\nje vais au lyc\u00e9e le mardi\nje vais au lyc\u00e9e le mercredi\nje vais au lyc\u00e9e le jeudi\nje vais au lyc\u00e9e le vendredi\n</code></pre> <p>\u26a0 Attention:</p> <p>Tr\u00e8s souvent, l'objet it\u00e9rable que la boucle va parcourir aura \u00e9t\u00e9 au pr\u00e9alable stock\u00e9 dans une variable :</p> <p>Exemple : Le programme pr\u00e9c\u00e9dent est \u00e9quivalent \u00e0 : \ud83d\udc0d Script Python<pre><code>semaine = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]\nfor jour in semaine:\n    print(\"je vais au lyc\u00e9e le\", jour)\n</code></pre></p> <p>Notez l'importance d'avoir choisi des noms de variables explicites : ils aident grandement \u00e0 la lisibilit\u00e9 du code.</p> <p>Trailer : Dans le cours sp\u00e9cifique sur les listes, nous verrons une toute autre mani\u00e8re de parcourir une liste.</p> \ud83d\udccb Algo<pre><code>semaine = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]\nfor jour in semaine:\n    print(\"je vais au lyc\u00e9e le\", jour)\n</code></pre> \ud83d\udccb Algo<pre><code>je vais au lyc\u00e9e le lundi\nje vais au lyc\u00e9e le mardi\nje vais au lyc\u00e9e le mercredi\nje vais au lyc\u00e9e le jeudi\nje vais au lyc\u00e9e le vendredi\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/#comment-repeter-n-fois-la-meme-action","title":"\u2712 Comment r\u00e9p\u00e9ter <code>n</code> fois la m\u00eame action ?","text":"<p>Comment r\u00e9p\u00e9ter 10 fois la phrase <code>\"Hasta la vista, baby\"</code> ?</p> <p>\ud83d\udccc Note : range</p> <p>Le programme suivant : \ud83d\udc0d Script Python<pre><code>for i in range(5):\n    print(\"Hasta la vista, baby\")\n</code></pre></p> <p>va donner ceci :  </p> \ud83d\udc0d Script Python<pre><code>Hasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\n</code></pre> <p>L\u00e0 encore, le <code>i</code> est une variable muette.</p> \ud83d\udccb Algo<pre><code>for i in range(5):\n    print(\"Hasta la vista, baby\")\n</code></pre> \ud83d\udccb Algo<pre><code>Hasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\nHasta la vista, baby\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/#utilisation-minimale-de-lobjet-range","title":"Utilisation minimale de l'objet <code>range()</code>","text":"<p>Syntaxe minimale de <code>range()</code>  : Le programme suivant : \ud83d\udc0d Script Python<pre><code>for k in range(4):\n    print(k)\n</code></pre> va donner ceci : \ud83d\udc0d Script Python<pre><code>0\n1\n2\n3\n</code></pre></p> <p>\ud83d\udcda  A retenir :</p> <p>Faire parcourir \u00e0 une variable <code>k</code> l'ensemble <code>range(n)</code> va faire prendre \u00e0 <code>k</code> les valeurs 0, 1, 2, ..., n-1. </p>"},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/#utilisation-avancee-de-lobjet-range","title":"Utilisation avanc\u00e9e de l'objet <code>range()</code>","text":"<p>Syntaxe compl\u00e8te de <code>range()</code>  : Le programme suivant : \ud83d\udc0d Script Python<pre><code>for k in range(5, 15, 2):\n    print(k)\n</code></pre> va donner ceci : \ud83d\udc0d Script Python<pre><code>5\n7\n9\n11\n13\n</code></pre></p> <p>\ud83d\udcda  A retenir :</p> <p>faire parcourir \u00e0 <code>k</code> l'ensemble <code>range(start, stop, step)</code> fait :</p> <ul> <li>d\u00e9marrer <code>k</code> \u00e0 la valeur <code>start</code> </li> <li>progresser <code>k</code>  de <code>step</code> en <code>step</code> </li> <li>tant que <code>k</code> est rictement inf\u00e9rieur <code>stop</code> </li> </ul> <p>Remarques :</p> <ul> <li>si le <code>step</code> est omis, il vaut 1 par d\u00e9faut.</li> <li>l'objet <code>range(5)</code> n'est pas \u00abtechniquement\u00bb \u00e9gal \u00e0 la liste <code>[0, 1, 2, 3, 4]</code>, car ce n'est pas un objet de type <code>List</code>:</li> </ul> <p>\ud83d\udcbb   Exercice 1 :</p> <p>Faire afficher les s\u00e9ries de nombres suivantes.</p> <p>On utilisera la syntaxe <code>print(k, end = ' ')</code> ) pour afficher les nombres horizontalement.</p> <p>A. <code>0 1 2 3 4 5</code>  B. <code>10 11 12 13 14 15</code> C. <code>3 6 9 12</code> D. <code>10 9 8 7 6 5 4 3 2 1 0</code> </p>"},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/#une-situation-classique-la-double-boucle","title":"\u2712 Une situation classique : la double boucle","text":"<p>Il est tr\u00e8s souvent utile d'imbriquer une boucle dans une autre, notamment lors du parcours de tous les pixels d'une image. Prenons pour l'instant un exemple num\u00e9rique.</p> <p>\ud83d\udcbb  Exercice 2 :</p> <p>Ecrire un script permettant d'afficher</p> \ud83d\udc0d Script Python<pre><code>1 * 1 = 1\n1 * 2 = 2\n1 * 3 = 3\n2 * 1 = 2\n2 * 2 = 4\n2 * 3 = 6\n3 * 1 = 3\n3 * 2 = 6\n3 * 3 = 9\n4 * 1 = 4\n4 * 2 = 8\n4 * 3 = 12\n</code></pre> <p>\ud83d\udcda A retenir :</p> <ul> <li>La boucle <code>for</code> s'utilise lorsque :  <ul> <li>on veut parcourir un \u00e0 un les \u00e9l\u00e9ments d'un objet it\u00e9rable (une cha\u00eene de caract\u00e8re, une liste...)  </li> <li>on veut r\u00e9p\u00e9ter une action un nombre de fois connu \u00e0 l'avance. On parle de boucle born\u00e9e.  </li> </ul> </li> <li>Les instructions r\u00e9p\u00e9t\u00e9es peuvent - mais ce n'est pas obligatoire - faire appel \u00e0 la variable de boucle, mais il ne faut pas que ces instructions la modifient.  </li> <li>Ne pas oublier les <code>:</code> et l'indentation !  </li> <li><code>range(n)</code> g\u00e9n\u00e8re une s\u00e9quence de <code>n</code> nombres entiers: on s'en servira d\u00e8s qu'on aura besoin de r\u00e9p\u00e9ter <code>n</code> fois des instructions.</li> </ul>"},{"location":"T06_Python/T6.1_Python/T6_1_3_Boucle_FOR_en_Python/#exercices","title":"Exercices","text":"<p>\ud83d\udcbb  Exercice 3 :</p> <p>Dans l'extrait de code suivant:</p> <ul> <li><code>chaine</code> est une variable initialis\u00e9e avec un <code>str</code> vide : <code>\"\"</code>;  </li> <li>on veut qu'en sortie de programme cette variable contienne la valeur <code>'bravo'</code>.  </li> </ul> <p>L'id\u00e9e est d'ajouter une par une les lettres \u00e0 la variable <code>chaine</code>.</p> <p>Compl\u00e9ter le code.</p> \ud83d\udc0d Script Python<pre><code>chaine = \"\"\nfor ... in ['b', 'r', 'a', 'v', 'o']:\n    ...\n</code></pre> <p>Cette variable <code>chaine</code> est appel\u00e9e un accumulateur.</p> <p>\ud83d\udcbb Exercice 4 :</p> <p>En Python, la fonction <code>ord</code> renvoie le code Unicode d'un caract\u00e8re et la fonction <code>chr</code> le contraire: elle renvoie le caract\u00e8re correspondant \u00e0 un code Unicode.</p> <p>Par exemple: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; ord('a')\n97\n&gt;&gt;&gt; chr(97)\n'a'\n</code></pre></p> <p>Voici une liste contenant les codes Unicode des lettres d'un mot secret... \u00c0 vous d'\u00e9crire un programme o\u00f9 en sortie, la variable <code>mot_secret</code> contiendra la cha\u00eene de caract\u00e8res de ce mot.   </p> \ud83d\udc0d Script Python<pre><code>mystere = [111, 107, 44, 32, 98, 105, 101, 110, 32, 106, 111, 117, 233]\nmot_secret = \"\"\n</code></pre> <p>ok, bien jou\u00e9</p> <p>\ud83d\udcbb Exercice 5 :</p> <p>On souhaite calculer la somme des 1000 premiers nombres entiers naturels, c'est-\u00e0-dire:</p> <p>\\(1+2+3+4+5+ \\dots +999+1000\\)</p> <p>\u00c9crire un programme avec une variable <code>somme</code> accumulateur (comme \u00e0 l'exercice 3) qui contiendra la valeur souhait\u00e9e en fin de programme.</p> <p>\ud83d\udcbb Exercice 6 :</p> <p>Ecrire un programme permettant de calculer </p> <p>\\(1\\times 2 \\times 3 \\times \\dots 99 \\times 100\\).</p> <p>\ud83d\udcbb Exercice 7 :</p> <p>Proposer un code qui \u00e9crit la table de multiplication de 7, de 8 et de 9.</p>"},{"location":"T06_Python/T6.1_Python/T6_1_4_Instructions_conditionnelles_en_Python/","title":"Th\u00e8me 6 - Langages et programmation","text":"04              Instructions conditionnelles en Python"},{"location":"T06_Python/T6.1_Python/T6_1_4_Instructions_conditionnelles_en_Python/#instruction-conditionnelle-if","title":"Instruction conditionnelle if","text":"<p>L'instruction conditionnelle <code>if</code> permet de soumettre l'ex\u00e9cution d'instructions \u00e0 une condition donn\u00e9e. Cette condition sera une expression bool\u00e9enne, comme pour la boucle <code>while</code>.</p> <p></p> <p>\ud83d\udcda A retenir : Op\u00e9rateurs de comparaison</p> Op\u00e9rateur Signification <code>==</code> est \u00e9gal \u00e0 <code>!=</code> est diff\u00e9rent de <code>&lt;</code> inf\u00e9rieur \u00e0 <code>&gt;</code> sup\u00e9rieur \u00e0 <code>&lt;=</code> inf\u00e9rieur ou \u00e9gal \u00e0 <code>&gt;=</code> sup\u00e9rieur ou \u00e9gal \u00e0 <code>in</code> appartient \u00e0 <code>not in</code> n'appartient pas \u00e0 <p>Par exemple :</p> <p>Si j\u2019ai plus de 10 de moyenne au bac, je suis dipl\u00f4m\u00e9 :</p> \ud83d\udc0d Script Python<pre><code>moyenne = 3\nif moyenne &gt;= 10:               # ne pas oublier les :\n    print(\"je suis diplom\u00e9\")        # attention \u00e0 l'indentation\n\n##  suite du programme\n</code></pre> <p>Lorsqu\u2019on ex\u00e9cute ce code, il ne se passe rien. La condition <code>moyenne &gt;= 10</code> n\u2019est pas respect\u00e9e et la ligne <code>print(\"je suis displom\u00e9\")</code> n\u2019est jamais atteinte.</p> <p>Ajoutons une ligne pour mieux comprendre le d\u00e9roul\u00e9 des instructions :</p> \ud83d\udc0d Script Python<pre><code>moyenne = 3\nif moyenne &gt;= 10:\n    print(\"je suis dipl\u00f4m\u00e9\")\n\nprint(\"le programme arrive ici dans tous les cas\")\n</code></pre> \ud83d\udccb Algo<pre><code>le programme arrive ici dans tous les cas\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_4_Instructions_conditionnelles_en_Python/#instruction-conditionnelle-if-else","title":"Instruction conditionnelle if else","text":"<p>On peut toujours compl\u00e9ter un bloc <code>if</code> \u00e0 l\u2019aide d\u2019un second bloc <code>else</code>, (sinon), qui ne sera ex\u00e9cut\u00e9 que si la condition du <code>if</code> est fausse :</p> \ud83d\udc0d Script Python<pre><code>moyenne = 3\nif moyenne &gt;= 10:\n    print(\"je suis diplom\u00e9\")\nelse:\n    print(\"j'ai rat\u00e9 le diplome\")\n\nprint(\"le programme arrive ici dans tous les cas\")\n</code></pre> \ud83d\udccb Algo<pre><code>j'ai rat\u00e9 le diplome\nle programme arrive ici dans tous les cas\n</code></pre> <p>Cette fois l\u2019ex\u00e9cution du programme conduit \u00e0 deux affichages :</p> <ul> <li>\u201cj\u2019ai rat\u00e9 le diplome\u201d, parce que la condition du <code>if</code> est fausse, Python ex\u00e9cute le <code>else</code></li> <li>le code arrive arrive ici dans tous les cas\u201d parce que ce bloc n\u2019est pas indent\u00e9.</li> </ul> <p>Reprenez cet exemple en changeant la valeur de la moyenne afin d\u2019ex\u00e9cuter le <code>if</code>.</p> \ud83d\udc0d Script Python<pre><code>moyenne = 12\nif moyenne &gt;= 10:\n    print(\"je suis diplom\u00e9\")\nelse:\n    print(\"j'ai rat\u00e9 le diplome\")\n\nprint(\"le programme arrive ici dans tous les cas\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>je suis diplom\u00e9  \nle programme arrive ici dans tous les cas\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_4_Instructions_conditionnelles_en_Python/#instruction-conditionnelle-if-elif-else","title":"Instruction conditionnelle if elif else","text":"<p>Entre <code>if</code> et <code>else</code> on peut ins\u00e9rer autant de bloc <code>elif</code> condition: que l\u2019on souhaite.</p> <p>Par exemple :</p> \ud83d\udc0d Script Python<pre><code>moyenne = 9\nif moyenne &gt;= 10:\n    print(\"je suis diplome\")\nelif moyenne &gt;= 8:\n    print(\"je vais \u00e0 l'oral de rattrapage\")\nelse:\n    print(\"j'ai rat\u00e9 le diplome\")\nprint(\"le programme arrive ici dans tous les cas\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>je vais \u00e0 l'oral de rattrapage  \nle programme arrive ici dans tous les cas\n</code></pre> <p>Lorsqu\u2019on ex\u00e9cute ce code avec diff\u00e9rentes valeurs de la moyenne (5, 9, 11 par exemple) on r\u00e9alise qu\u2019un des blocs if, elif, else est ex\u00e9cut\u00e9. Jamais deux.</p>"},{"location":"T06_Python/T6.1_Python/T6_1_4_Instructions_conditionnelles_en_Python/#exercices","title":"Exercices","text":"\ud83d\udc0d Script Python<pre><code>import _cours04_autotest as a\n</code></pre> <p>\ud83d\udd8d Exercice 1 :</p> <p>1. Que vaut la valeur finale de la variable b ? \ud83d\udc0d Script Python<pre><code>a = 7\nb = 12\nif a &gt; 5:\n    b = b - 4\nif b &gt;= 10:\n    b = b + 1\n</code></pre></p> <p>2. Que vaut la valeur finale de la variable b ? \ud83d\udc0d Script Python<pre><code>a = 7\nb = 12\nif a &gt; 5:\n    b = b - 4\nelif b &gt;= 10:\n    b = b + 1\n</code></pre></p> <p>3. Que vaut la valeur finale de la variable b ? \ud83d\udc0d Script Python<pre><code>a = 7\nb = 12\nif a &gt; 5:\n    b = b - 4\nelse:\n    b = b + 1\n</code></pre></p> <p>4. Que vaut la valeur finale de la variable a ? \ud83d\udc0d Script Python<pre><code>a = 10\nif a &lt; 5:\n    a = 20\nelif a &lt; 100:\n    a = 500\nelse:\n    a = 0\n</code></pre></p> <p>\ud83d\udd8d et \ud83d\udcbb  Exercice 2 :</p> <p>Les codes suivants sont-ils valides (on ne demande pas ce qu\u2019ils font) ? S\u2019ils sont invalides, rectifiez les.</p> <p>Code 1 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a == 5:\na = 2\n</code></pre></p> <p>Code 2 : \ud83d\udc0d Script Python<pre><code>a = 10\nelif a == 5:\n    a = 2\n</code></pre></p> <p>Code 3 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a = 5:\n    a == 2\n</code></pre></p> <p>Code 4 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a == 5:\na = 2\n</code></pre></p> <p>\ud83d\udcbb Exercice 3 :</p> <p>Compl\u00e9tez le programme \u201cmoyenne\u201d afin d\u2019afficher la mention obtenue par le candidat :</p> <ul> <li>Tr\u00e8s bien (&gt;= 16 de moyenne),  </li> <li>Bien (&gt;= 14 de moyenne),  </li> <li>Assez Bien (&gt;= 12 de moyenne),</li> </ul> <p>\ud83d\udcbb Exercice 4 :</p> <p>L\u2019imp\u00f4t sur le revenu de Groland est assez simple \u00e0 calculer :</p> <ul> <li>un particulier qui gagne moins de 20.000\u20ac de revenus par an doit verser 1\u20ac d\u2019imp\u00f4t symbolique,  </li> <li>entre 50.000 et 100.000\u20ac on doit verser 30% aux imp\u00f4ts,  </li> <li>au dela de 100.000\u20ac de revenus, on doit verser 50% en imp\u00f4t.  </li> </ul> <p>Ecrire un script qui demande \u00e0 un utilisateur le montant de ses revenus annuels et affiche le montant des impots qu\u2019il doit verser.</p> <p>je pr\u00e9cise aux plus na\u00effs que Groland n\u2019existe pas.</p> <p>\ud83d\udcbb Exercice 5 :</p> <p>L'\u00e9quivalence entre l'\u00e2ge d'un chien et l'\u00e2ge humain est donn\u00e9 en proc\u00e9dant ainsi : - lorsque le chien a deux ans ou moins, chaque ann\u00e9e compte pour douze ann\u00e9es \u00abhumaines\u00bb - lorsque le chien a plus de deux ans, chaque ann\u00e9e au del\u00e0 des des deux premi\u00e8res compte pour six ann\u00e9es \u00abhumaines\u00bb.</p> <p>Par exemple un chien de cinq ans a un \u00e2ge \u00abhumain\u00bb de \\(2 \\times 12 + 3 \\times 6 = 42\\) ans.</p> <p>Question 1 : Programmer la fonction <code>age_humain</code> qui prend en argument un entier <code>n</code> correspondant \u00e0 l'\u00e2ge d'un chien et renvoie l'\u00e2ge humain correspondant.</p> \ud83d\udc0d Script Python<pre><code>def age_humain(n):\n    ...\n    ...\n    ...\n    return ...  \n</code></pre> <p>Question 2 : En utilisant votre fonction, d\u00e9terminer quel est l'\u00e2ge \u00abhumain\u00bb d'un chien de 7 ans.</p> <p>\ud83d\udcbb Exercice 6 :</p> <p>Meilleur tarif</p> <p>Remarque : En python, une fonction peut renvoyer plusieurs valeurs. Pour cela, apr\u00e8s le mot clef <code>return</code>, mettre les valeurs \u00e0 renvoyer dans des parenth\u00e8ses, s\u00e9par\u00e9es par des virgules. </p> <p>On consid\u00e8re les tarifs propos\u00e9s par deux entreprises de location de v\u00e9hicules pour la location d\u2019un m\u00eame mod\u00e8le automobile :</p> <ul> <li>Entreprise A : 15 \u20ac par jour puis 27 centimes par kilom\u00e8tre parcouru</li> <li>Entreprise B : 26 \u20ac par jour puis 19 centimes par kilom\u00e8tre parcouru</li> </ul> <p>Question 1 : Programmer une fonction <code>meilleur_tarif</code> qui : - prend en arguments :     - un entier <code>km</code> correspondant au nombre de kilom\u00e8tres \u00e0 parcourir,     - un entier <code>nbjours</code> correspondant au nombre de jours de location; - et renvoie :     - l'entreprise qui propose le tarif le plus \u00e9conomique,     - le tarif avec cette entreprise.</p> <p>On pourra consulter le jeu de tests si besoin.</p> <p>Remarque : En cas d'\u00e9galit\u00e9 de tarif entre les deux entreprises, on renverra l'entreprise 'AB' (voir dernier test).</p> \ud83d\udccb Algo<pre><code>def meilleur_tarif(km, nbjours):\n    ...\n    ...\n    ...\n    return ...  \n</code></pre> <p>\ud83d\udcbb Exercice 7 :</p> <p>Casino</p> <p>Remarque 1 : Vous pouvez (et c'est m\u00eame \u00e0 cela que \u00e7a sert) r\u00e9utiliser une fonction dans une autre fonction. Ici il faudra y penser pour la derni\u00e8re fonction \u00e0 programmer.</p> <p>Remarque 2 : pour tirer un nombre entier au hasard entre deux nombres a et b on utilisera la m\u00e9thode <code>randint</code> du module <code>random</code>. Par exemple pour tirer un nombre entier au hasard entre 1 et 6 (tirage d'un d\u00e9) : \ud83d\udc0d Script Python<pre><code>from random import randint\n...\n...\nresultat_du_de = randint(1, 6)\n...\n...\n</code></pre></p> <p>Dans un casino, les machines \u00e0 sous (voir des images ici : page wikip\u00e9dia ) comportent trois roues ou trois cylindres m\u00e9caniques portant chacun les chiffres de 1 \u00e0 9. En faisant tourner ces roues ou cylindres, on peut tirer au hasard un nombre entre 111 et 999 (ne comportant pas de chiffre z\u00e9ro).  </p> <p>Le joueur mise un euro et r\u00e9cup\u00e8re un gain qui d\u00e9pend du r\u00e9sultat : - si les trois chiffres sont \u00e9gaux \u00e0 sept, le joueur r\u00e9cup\u00e8re une somme de 333 euros, - sinon, si les trois chiffres sont \u00e9gaux, le joueur r\u00e9cup\u00e8re une somme de 33 euros, - sinon, si le chiffre des centaines est \u00e9gal au chiffre des unit\u00e9s, le joueur r\u00e9cup\u00e8re une somme de 1 euro, - sinon, si les trois chiffres sont cons\u00e9cutifs dans l'ordre croissant (par exemple 567), le joueur r\u00e9cup\u00e8re une somme de 15 euros, - sinon il ne r\u00e9cup\u00e8re rien.</p> <p>Question 1 : Compl\u00e9ter la fonction <code>gain_tirage</code> qui prend en param\u00e8tre trois chiffres <code>c, d</code> et <code>u</code> correspondant aux chiffres des centaines, des dizaines et des unit\u00e9s et qui renvoie la somme r\u00e9cup\u00e9r\u00e9e correspondant \u00e0 ce tirage.</p> \ud83d\udccb Algo<pre><code>def gain_tirage(c, d, u):\n    ...\n    ...\n    ...\n    ...\n    ...\n    ...\n    return somme\n</code></pre> <p>Question 2 : En utilisant votre fonction, d\u00e9terminer le gain associ\u00e9 au tirage (5, 6, 5).</p>"},{"location":"T06_Python/T6.1_Python/T6_1_4_WHILE/","title":"C7 Les boucles WHILE","text":""},{"location":"T06_Python/T6.1_Python/T6_1_4_WHILE/#boucle-while","title":"Boucle WHILE","text":""},{"location":"T06_Python/T6.1_Python/T6_1_4_WHILE/#premiers-exemples","title":"\u2712  Premiers exemples","text":"<p>\u00c0 la diff\u00e9rence essentielle des boucles <code>for</code>, dont on peut savoir \u00e0 l'avance combien de fois elles vont \u00eatre ex\u00e9cut\u00e9es, les boucles <code>while</code> sont des boucles dont on ne sort que lorsqu'une condition n'est plus satisfaite. </p> <p>Avec donc le risque de rester infiniment bloqu\u00e9 \u00e0 l'int\u00e9rieur !  </p> \ud83d\udc0d Script Python<pre><code>a = 0\nwhile a &lt; 3:\n    print(\"ok\")\n    a = a + 1\nprint(\"fini\")\n\nok\nok\nok\nfini\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_4_WHILE/#syntaxe-generale","title":"\u2712 Syntaxe g\u00e9n\u00e9rale","text":"<p>A retenir : \u00c9criture d'une boucle while</p> \ud83d\udc0d Script Python<pre><code>while condition:\n    instruction1\n    instruction2\n    ...\n    instructionN\n</code></pre> <p></p>"},{"location":"T06_Python/T6.1_Python/T6_1_4_WHILE/#la-condition","title":"La condition","text":"<p>La <code>condition</code> est un bool\u00e9en, c'est-\u00e0-dire une expression que Python \u00e9valuera \u00e0 <code>True</code> ou \u00e0 <code>False</code>.</p> <p>Exemple de bool\u00e9ens r\u00e9sultant d'une \u00e9valuation :  </p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; 1 &lt; 3\nTrue\n&gt;&gt;&gt; 5 &gt; 7\nFalse\n&gt;&gt;&gt; a = 10\n&gt;&gt;&gt; a &gt; 8\nTrue\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_4_WHILE/#les-pieges","title":"\u2712  Les pi\u00e8ges ...","text":""},{"location":"T06_Python/T6.1_Python/T6_1_4_WHILE/#piege-n1-ne-jamais-sortir-de-la-boucle","title":"pi\u00e8ge n\u00b01 : ne JAMAIS SORTIR de la boucle","text":"<p>Exemple :</p> <p>Le programme suivant :  </p> <p>\ud83d\udc0d Script Python<pre><code>a = 0\nwhile a &lt; 3:\n    print(\"ok\")\n    a = a + 1\n    a = a * 0\nprint(\"ce texte ne s'\u00e9crira jamais\")\n</code></pre> va \u00e9crire une suite infinie de <code>ok</code> et ne jamais s'arr\u00eater</p>"},{"location":"T06_Python/T6.1_Python/T6_1_4_WHILE/#piege-n2-ne-jamais-entrer-dans-la-boucle","title":"pi\u00e8ge n\u00b02 : ne JAMAIS ENTRER dans la boucle","text":"<p>Exemple :</p> <p>Le programme suivant :</p> <p>\ud83d\udc0d Script Python<pre><code>a = 0\nwhile a &gt; 10:\n    print(\"ce texte non plus ne s'\u00e9crira jamais\")\n    a = a + 1\n\nprint(\"fini\") \n</code></pre> va \u00e9crire <code>fini</code> et s'arr\u00eater.</p> \ud83d\udc0d Script Python<pre><code>a = 0\nwhile a &gt; 10:\n    print(\"ce texte non plus ne s'\u00e9crira jamais\")\n    a = a + 1\n\nprint(\"fini\")\n</code></pre> <p>fini</p> <p>La boucle infinie a \u00e9t\u00e9 pr\u00e9sent\u00e9e comme un danger qu'il faut \u00e9viter. </p> <p>Pourtant, dans quelques situations, il est d'usage d'enfermer volontairement l'utilisateur dans une boucle infinie.</p> <p>C'est notamment le cas des codes p5 o\u00f9 la fonction <code>draw()</code> est une boucle infinie dont on ne sort que lorsqu'un \u00e9v\u00e8nement est intercept\u00e9 (par exemple, le clic sur la fermeture de la fen\u00eatre d'affichage). Ou lors de la cr\u00e9ation d'un jeu....</p> <p>Observez et ex\u00e9cutez le code suivant :</p> \ud83d\udc0d Script Python<pre><code>while True :\n    reponse = input(\"tapez sur la lettre S du clavier pour me sortir de cet enfer : \")\n    if reponse == 'S' or reponse == 's':\n        break\n\nprint(\"merci, j'\u00e9tais bloqu\u00e9 dans une boucle infinie\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>tapez sur la lettre S du clavier pour me sortir de cet enfer : E\ntapez sur la lettre S du clavier pour me sortir de cet enfer : S\nmerci, j'\u00e9tais bloqu\u00e9 dans une boucle infinie\n</code></pre> <ul> <li>le d\u00e9but du code : <code>while True</code> est typique des boucles infinies volontaires. On aurait tout aussi bien pu \u00e9crire <code>while 3 &gt; 2</code> (on rencontre m\u00eame parfois des <code>while 1</code>)  </li> <li>vous avez d\u00e9couvert l'expression <code>break</code> qui comme son nom l'indique permet de casser la boucle (cela marche pour <code>while</code> comme pour <code>for</code>) et donc d'en sortir. Son emploi est controvers\u00e9 parmi les puristes de la programmation. Nous dirons juste que c'est une instruction bien pratique.  </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6_1_4_WHILE/#exercices","title":"EXERCICES","text":"<p>Exercice  1</p> Enonc\u00e9Indication : prog. \u00e0 trouCorrection <p>Trouver le plus petit nombre entier \\(n\\) tel que \\(2^n\\) soit sup\u00e9rieur \u00e0 1 milliard.</p> \ud83d\udc0d Script Python<pre><code>n = 1\nwhile ...:\n    print(\"trop petit\")\n    n...\nprint(\"trouv\u00e9 : \",n)\n</code></pre> \ud83d\udc0d Script Python<pre><code>n = 1\nwhile 2**n&lt;1000000000:\n    print(\"trop petit\")\n    n+=1\nprint(\"trouv\u00e9 : \",n)\n</code></pre> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p> <p>Exercice  2</p> Enonc\u00e9Correction <p>R\u00e9\u00e9crire le programme suivant en utilisant une boucle <code>while</code> :  </p> \ud83d\udc0d Script Python<pre><code>somme = 0\nfor i in range(10):\n    somme = somme + i\nprint(somme)\n</code></pre> \ud83d\udc0d Script Python<pre><code>somme=0\nn=0\nwhile n&lt;10:\n    somme+=n\n    n+=1\nprint(somme)\n</code></pre> <p>45</p> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p> <p>Exercice  3 : D\u00e9passement d'un seuil  (Utile en sp\u00e9cialit\u00e9 Math\u00e9matiques)</p> Exemple <p>La boucle <code>while</code> est souvent utilis\u00e9e pour d\u00e9terminer le rang \u00e0 partir duquel un certain seuil sera d\u00e9pass\u00e9 ou atteint. Voci un premier exemple : On dispose d'un capital de 1 000 \u20ac, et chaque ann\u00e9e, on per\u00e7oit 5% d'int\u00e9r\u00eats et on ajoute 500 \u20ac sur le compte. Au bout de combien d'ann\u00e9e la valeur du compte d\u00e9passera-t-elle les 10 000\u20ac ? Ex\u00e9cuter le progtramme suivant et observer pas \u00e0 pas les valeurs des variables. </p> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p> \ud83d\udc0d Script Python<pre><code>def nombreAnnees(capital):              # je cr\u00e9e un fonction nombreAnnees associ\u00e9 au param\u00e9tre d'entr\u00e9e capital\n    annee = 0                           # je cr\u00e9e une variable ann\u00e9e que j'initialise \u00e0 0\n    while capital&lt;=10000:               # Je c\u00e9e une boucle qui sera ex\u00e9cut\u00e9e tant que capital est inf\u00e9rieur ou \u00e9gal \u00e0 10 000\n        capital = capital * 1.05 + 500         # J'augmente la valeur de capital\n        print(\"Capital : \", capital)\n        annee += 1                      # J'incr\u00e9ment de 1 la variable annee\n        print('Ann\u00e9e : ', annee)\n    return annee                        # la fonction retourne la valeur de la variable ann\u00e9e\n\nnombreAnnees(1000)    # J'ex\u00e9cute la fonction nombreAnnees avec 1000 comme param\u00e8tre (correspondant au capital de d\u00e9part)\n</code></pre> <p>Exercice  4 : D\u00e9passement d'un seuil  (Utile en sp\u00e9cialit\u00e9 Math\u00e9matiques)</p> A vousCorrection <p>La population d'un village de 1000 habitants diminue chaque ann\u00e9e de 1%. Ecrire un fonction qui calcule le nombre d'ann\u00e9es au bout duquel la population de ce village aura diminu\u00e9 de moiti\u00e9.</p> <p>\ud83d\udc0d Script Python<pre><code>def baisse_pop(pop_village):\n    annee=0\n    pop_finale=pop_village/2\n    while pop_village&gt;pop_finale:\n        pop_village*=0.99\n        annee+=1\n    return annee\n\n\npop_village=1000\nbaisse_pop(pop_village)\n</code></pre> 69</p> <p>Exercice  5</p> Enonc\u00e9Solution 1Solution 2 <p>\u00c9crire un programme qui invite l'utilisateur \u00e0 saisir son mot de passe puis affiche le message \"Bienvenue\" quand il saisit le bon. Le mot de passe est \"PIZZA\".</p> \ud83d\udc0d Script Python<pre><code>while True:\n    msg=input(\"Entrer votre mot de passe : \")\n    if msg=='PIZZA':\n        break\nprint(\"Bienvenue\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>msg=\"\"\nwhile msg != 'PIZZA':\n    msg=input(\"Entrer votre mot de passe : \")\nprint(\"Bienvenue\")\n</code></pre> <p>Exercice  6 : Jeu de d\u00e9</p> Enonc\u00e9Correction <p>Compl\u00e9ter le programme suivant permettant d'afficher le nombre de lancers de d\u00e9 effectu\u00e9 par le joueur pour obtenir un 6 (Remplacer les ... pour r\u00e9pondre aux commentaires associ\u00e9s).</p> \ud83d\udc0d Script Python<pre><code>from random import*   # Appel de la biblioth\u00e8que random pour pouvoir utiliser la fonction al\u00e9atoire randin()\n\nx=randint(1,6)     # Simule le lanc\u00e9 du joueur : affecte \u00e0 la variable x un nombre entier al\u00e9atoire compris entre 1 et 6\nn=1                # On affecte \u00e0 la variable n le nombre de lancers effectu\u00e9s : ici 1 pour le 1er lancer\n...\nwhile ... :        # Compl\u00e9ter la condition de la boucle permettant de r\u00e9pondre au sujet de l'exercice  \n    x=...            # Simuler un nouveau lancer de d\u00e9\n    ...              # Afficher le score du d\u00e9\n    n ...            # Comptabiliser le nombre de lancers effectu\u00e9s depuis le d\u00e9but du jeu\nprint(\" le joueur a \u00e9ffectu\u00e9\", n, \"lancers pour obtenir un 6\")  # Afficher le nombre de lancers pour obtenir un 6\n</code></pre> \ud83d\udc0d Script Python<pre><code>from random import*   # Appel de la biblioth\u00e8que random pour pouvoir utiliser la fonction al\u00e9atoire randin()\n\nx=randint(1,6)     # Simule le lanc\u00e9 du joueur : affecte \u00e0 la variable x un nombre entier al\u00e9atoire compris entre 1 et 6\nn=1                # On affecte \u00e0 la variable n le nombre de lancers effectu\u00e9s : ici 1 pour le 1er lancer\nprint(x)\nwhile x!=6 :        # Compl\u00e9ter la condition de la boucle permettant de r\u00e9pondre au sujet de l'exercice  \n    x=randint(1,6)            # Simuler un nouveau lancer de d\u00e9\n    print(x)            # Afficher le score du d\u00e9\n    n+=1            # Comptabiliser le nombre de lancers effectu\u00e9s depuis le d\u00e9but du jeu\nprint(\" le joueur a \u00e9ffectu\u00e9\", n, \"lancers pour obtenir un 6\")  # Afficher le nombre de lancers pour obtenir un 6\n</code></pre> <p>Exercice  7 : L'\u00e9chiquier de Sissa </p> HistoireEnonc\u00e9 L'\u00e9chiquier de Sissa :Correction <p>histoire</p> <p>La l\u00e9gende se situe 3 000 ans av. J.C.</p> <p>Le roi Belkib (Indes) promit une r\u00e9compense fabuleuse \u00e0 qui lui proposerait une distraction qui le satisferait. Lorsque le sage Sissa, fils du Brahmine Dahir, lui pr\u00e9senta le jeu d'\u00e9checs, le souverain, demanda \u00e0 Sissa ce que celui-ci souhaitait en \u00e9change de ce cadeau extraordinaire.</p> <p>Sissa demanda au prince de d\u00e9poser un grain de riz sur la premi\u00e8re case, deux sur la deuxi\u00e8me, quatre sur la troisi\u00e8me, et ainsi de suite pour remplir l'\u00e9chiquier en doublant la quantit\u00e9 de grain \u00e0 chaque case.  Le prince accorda imm\u00e9diatement cette r\u00e9compense sans se douter de ce qui allait suivre.</p> <p>Son conseiller lui expliqua qu'il venait de pr\u00e9cipiter le royaume dans la ruine car les r\u00e9coltes de l'ann\u00e9e ne suffiraient pas \u00e0 payer Sissa.</p> <p>En savoir plus : histoire</p> <p>On place un grain de bl\u00e9 sur la  1\u00e8re  case d'un \u00e9chiquier, deux grains sur la  2\u00e8me  case, quatre sur la  3\u00e8me  et ainsi de suite en doublant la quantit\u00e9 de grains \u00e0 chaque case.  Compl\u00e9ter le programme ci-dessous permettant de d\u00e9terminer le nombre minimum de cases \u00e0 remplir afin que le nombre total de grains de bl\u00e9 sur l'\u00e9chiquier d\u00e9passe une quantit\u00e9 Q saisie en entr\u00e9e.</p> \ud83d\udc0d Script Python<pre><code>def sissa(Q):    # je cr\u00e9e un fonction sissa avec comme param\u00e8tre d'entr\u00e9e le nombre de grains souhait\u00e9 Q\n    S = 0 # Je cr\u00e9e une variable S initilis\u00e9e \u00e0 0 permettant de totaliser le nombre de grains de riz\n    nb = 0 # Je cr\u00e9e une variable nb initilis\u00e9e \u00e0 0 permettant de connaitre le nombre de case n\u00e9cessaire\n    while S&lt;Q:    # J'indique la condition de la boucle permettantde r\u00e9pondre \u00e0 l'exercice\n        ...    # J'actualise le nombre de case\n        S=...     # J'actualise le nombre de grains pr\u00e9sents sur l'\u00e9chiquier\n        print('case n\u00b0', nb,S)\n\n    return(nb)    # La fonction renvoie le nombre de cases n\u00e9cessaire nb\n\nsissa(8)    # J'appele la fonction sissa avec la valeur 8. Le programme doit me renvoyer le nombre 4 (= nb de cases n\u00e9cessaires) \n</code></pre> \ud83d\udc0d Script Python<pre><code>def sissa(Q):    # je cr\u00e9e un fonction sissa avec comme param\u00e8tre d'entr\u00e9e le nombre de grains souhait\u00e9 Q\n    S = 0 # Je cr\u00e9e une variable S initilis\u00e9e \u00e0 0 permettant de totaliser le nombre de grains de riz\n    nb = 0 # Je cr\u00e9e une variable nb initilis\u00e9e \u00e0 0 permettant de connaitre le nombre de case n\u00e9cessaire\n    while S&lt;Q:    # J'indique la condition de la boucle permettantde r\u00e9pondre \u00e0 l'exercice\n        nb+=1    # J'actualise le nombre de case\n        S=S+2**(nb-1)     # J'actualise le nombre de grains pr\u00e9sents sur l'\u00e9chiquier\n        print('case n\u00b0', nb,S)\n\n    return(nb)    # La fonction renvoie le nombre de cases n\u00e9cessaire nb\n\nsissa(8)    # J'appele la fonction sissa avec la valeur 8. Le programme doit me renvoyer le nombre 4 (= nb de cases n\u00e9cessaires) \n</code></pre> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p>"},{"location":"T06_Python/T6.1_Python/T6_1_5_Instructions_conditionnelles/","title":"C8 Les instructions conditionnelles","text":""},{"location":"T06_Python/T6.1_Python/T6_1_5_Instructions_conditionnelles/#linstruction-conditionnelle-if","title":"L'instruction conditionnelle IF","text":"<p>L'instruction conditionnelle <code>if</code> permet de soumettre l'ex\u00e9cution d'instructions \u00e0 une condition donn\u00e9e. Cette condition sera une expression bool\u00e9enne, comme pour la boucle <code>while</code>.</p>"},{"location":"T06_Python/T6.1_Python/T6_1_5_Instructions_conditionnelles/#premiers-exemples","title":"Premiers exemples","text":"<p>Testez les codes suivants (plusieurs fois en variant les valeurs)  en changeant la valeur affect\u00e9e \u00e0 la variable <code>age</code> et observer les modifications de comportement du programme</p> <p>\u2712 L'exemple minimal ci-dessous ne contient que le mot-cl\u00e9 <code>if</code>.</p> \ud83d\udc0d Script Python<pre><code>age = int(input(\"Donnes ton age : \"))\nif age &gt;= 18:\n    print(\"Tu as le droit de vote\")\n</code></pre> <p>\u2712 La structure qu'on rencontrera le plus souvent est n\u00e9anmoins la structure <code>if ... else</code></p> \ud83d\udc0d Script Python<pre><code>age = int(input(\"Donnes ton age : \"))\nif age &gt;= 18:\n    print(\"Tu as le droit de vote\")\nelse:\n    print(\"D\u00e9sol\u00e9, il faudra attendre\", 18 - age, \"ans avant de pouvoir voter\")\n</code></pre> <p>\u2712 Imbriquer les <code>if</code></p> \ud83d\udc0d Script Python<pre><code>moyenne = 13\n\nif moyenne &lt; 8:\n    print(\"rat\u00e9\")\nelse:\n    if moyenne &lt; 10:\n        print(\"rep\u00eachage\")\n    else:\n        if moyenne &lt; 12:\n            print(\"admis\")\n        else:\n            if moyenne &lt; 14:\n                print(\"mention AB\")\n            else:\n                if moyenne &lt; 16:\n                    print(\"mention B\")\n                else:\n                    print(\"mention TB\")\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_5_Instructions_conditionnelles/#syntaxe-generale","title":"Syntaxe g\u00e9n\u00e9rale","text":"<p>\u00c9criture d'une instruction conditionnelle <code>if ... else</code></p> \ud83d\udccb Algo<pre><code>if expression:\n    *instructions \u00e0 effectuer si expression est vraie*\nelse:\n    *instructions \u00e0 effectuer sinon, c'est-\u00e0-dire si expression est fausse*\n</code></pre> <p>Remarques :</p> <ul> <li><code>expression</code> doit renvoyer une valeur bool\u00e9enne : une \u00e9galit\u00e9, comparaison, appartenance, etc. ;  </li> <li>il faut terminer la ligne commen\u00e7ant par <code>if</code> et <code>else</code> par <code>:</code> ;  </li> <li>les instructions \u00e0 effectuer selon l'\u00e9valuation d'<code>expression</code> doivent \u00eatre indent\u00e9es;  </li> <li>le <code>else</code> est facultatif (comme au premier exemple);  </li> <li>en cas d'emploi du <code>else</code>, aucune expression n'est attendue.  </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6_1_5_Instructions_conditionnelles/#elif-et-les-cas-multiples","title":"<code>elif</code> et les cas multiples","text":"<p>Das les situations o\u00f9 l'on veut effectuer des instructions diff\u00e9rentes selon les diff\u00e9rentes valeurs prises par une variable, comme dans le troisi\u00e8me exemple, on peut imbriquer les instructions <code>if</code> ... <code>else</code>.</p> <p>Mais cela est vite long et peu lisible, et les diff\u00e9rents niveaux d'indentation sont parfois pi\u00e9geux.</p> <p>Il existe alors une instruction qui contracte <code>else</code> et <code>if</code> : <code>elif</code> (sinon si).</p> \ud83d\udc0d Script Python<pre><code>moyenne= 14\n\nif moyenne &lt; 8:\n    print(\"rat\u00e9\")\nelif moyenne &lt; 10:\n    print(\"rep\u00eachage\")\nelif moyenne &lt; 12:\n    print(\"admis\")\nelif moyenne &lt; 14:\n    print(\"mention AB\")\nelif moyenne &lt; 16:\n    print(\"mention B\")\nelse:\n    print(\"mention TB\")\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_5_Instructions_conditionnelles/#les-operateurs-de-comparaison","title":"Les Op\u00e9rateurs de comparaison","text":"Op\u00e9rateur Signification <code>==</code> est \u00e9gal \u00e0 <code>!=</code> est diff\u00e9rent de <code>&lt;</code> inf\u00e9rieur \u00e0 <code>&gt;</code> sup\u00e9rieur \u00e0 <code>&lt;=</code> inf\u00e9rieur ou \u00e9gal \u00e0 <code>&gt;=</code> sup\u00e9rieur ou \u00e9gal \u00e0 <code>in</code> appartient \u00e0 <code>not in</code> n'appartient pas \u00e0 \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;a=2\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;a==3\nFalse\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;a==2\nTrue\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;a!=1\nTrue\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;a&gt;2\nFalse\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;a&lt;=2\nTrue\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;'e' in 'abracadabra'\nFalse\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;'a' in 'abracadabra'\nTrue\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;'A' not in 'abracadabra'\nTrue\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;'a' not in 'abracadabra'\nFalse\n</code></pre> <p>Comme nous le verrons dans le cours sur les bool\u00e9ens, ces conditions peuvent \u00eatre combin\u00e9es avec (par exemple) les mots-cl\u00e9s <code>and</code> ou <code>or</code> :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;b=20\n&gt;&gt;&gt;b&gt;15 and b&lt;30\nTrue\n</code></pre> \ud83d\udc0d Script Python<pre><code>b&gt;2000 or b&lt;30\nTrue\n</code></pre> <p>FICHE n\u00b08 : instructions conditionnelles</p> <p>if ... :</p> <p>Lorsque l'on veux ex\u00e9cuter un bloc d'instruction seulement si une condition est v\u00e9rifi\u00e9 :</p> \ud83d\udc0d Script Python<pre><code>if condition :\n    bloc indent\u00e9 : instructions ex\u00e9cut\u00e9es seulement si la condition est v\u00e9rifi\u00e9e\nsuite du programme (non indent\u00e9)\n</code></pre> <p>if ... else ... :</p> <p>Lorsque l'on veux ex\u00e9cuter un bloc d'instruction si une condition est v\u00e9rifi\u00e9, et un autre sinon :</p> \ud83d\udc0d Script Python<pre><code>if condition :\n    bloc indent\u00e9 : instructions ex\u00e9cut\u00e9es seulement si la condition est True\nelse :\n    bloc indent\u00e9 : instructions ex\u00e9cut\u00e9es si la condition est False\n\nsuite du programme (non indent\u00e9)\n</code></pre> <p>if ... elif ... else ... :</p> <p>Lorsque l'on veux ex\u00e9cuter un bloc d'instruction diff\u00e9rent selon plusieurs cas possibles :</p> \ud83d\udc0d Script Python<pre><code>if condition_1 :\n    bloc indent\u00e9 : instructions ex\u00e9cut\u00e9es seulement si la condition_1 est True. \n    Les autres condition ne seront pas test\u00e9es.\nelif condition_2 :\n    bloc indent\u00e9 : instructions ex\u00e9cut\u00e9es seulement si la condition_2 est True, \n    et que la condition_1 est False\nelif condition_3 :\n    bloc indent\u00e9 : instructions ex\u00e9cut\u00e9es seulement si la condition_3 est True, \n    et que  toutes les conditions pr\u00e9c\u00e9dentes sont  False\nelse :\n    bloc indent\u00e9 : instructions ex\u00e9cut\u00e9es si toutes les conditions sont False\n\nsuite du programme (non indent\u00e9)\n</code></pre> <p></p>"},{"location":"T06_Python/T6.1_Python/T6_1_5_Instructions_conditionnelles/#exercices","title":"EXERCICES","text":"<p>Exercice  1</p> Q1Q2.Q3.Q4. <p>Que vaut la valeur finale de la variable b ? \ud83d\udc0d Script Python<pre><code>    a = 7\n    b = 12\n    if a &gt; 5:\n        b = b - 4\n    if b &gt;= 10:\n        b = b + 1\n</code></pre></p> <p>Que vaut la valeur finale de la variable b ? \ud83d\udc0d Script Python<pre><code>a = 7\nb = 12\nif a &gt; 5:\n    b = b - 4\nelif b &gt;= 10:\n    b = b + 1\n</code></pre></p> <p>Que vaut la valeur finale de la variable b ? \ud83d\udc0d Script Python<pre><code>a = 7\nb = 12\nif a &gt; 5:\n    b = b - 4\nelse:\n    b = b + 1\n</code></pre></p> <p>Que vaut la valeur finale de la variable a ? \ud83d\udc0d Script Python<pre><code>a = 10\nif a &lt; 5:\n    a = 20\nelif a &lt; 100:\n    a = 500\nelse:\n    a = 0\n</code></pre></p> <p>Exercice  2</p> <p>Les codes suivants sont-ils valides (on ne demande pas ce qu\u2019ils font) ? S\u2019ils sont invalides, rectifiez les.</p> Code 1 :Code 2 :Code 3 :Code 4 :Correction \ud83d\udc0d Script Python<pre><code>a = 10\nif a == 5:\na = 2\n</code></pre> \ud83d\udc0d Script Python<pre><code>a = 10\nelif a == 5:\n    a = 2\n</code></pre> \ud83d\udc0d Script Python<pre><code>a = 10\nif a = 5:\n    a == 2\n</code></pre> \ud83d\udc0d Script Python<pre><code>a = 10\nif a == 5:\n    a = 2\nelse a==10:\n    a=5\n</code></pre> <p>Code 1 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a == 5:\n    a = 2   # indentation \u00e0 mettre\n</code></pre></p> <p>Code 2 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a == 5:  #elif ne peut venir qu'apr\u00e9s un if\n    a = 2\n</code></pre></p> <p>Code 3 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a = 5:\n    a == 2\n</code></pre></p> <p>Code 4 : \ud83d\udc0d Script Python<pre><code>a = 10\nif a == 5:\n    a = 2\nelse:      # il n'a pas de condition apr\u00e9s un else.\n    a=5\n</code></pre></p> <p>Exercice  3</p> <p>\u00c9crire un programme qui demande deux nombres et qui affiche le plus grand des deux.</p> Solution \ud83d\udc0d Script Python<pre><code>def maximum(a,b):\n    if a&gt;b:\n        return a\n    else:\n        return b\n</code></pre> <p>Exercice  4</p> <p>L\u2019imp\u00f4t sur le revenu de Groland est assez simple \u00e0 calculer :</p> <ul> <li>un particulier qui gagne moins de 20.000\u20ac (strictement) de revenus par an doit verser 1\u20ac d\u2019imp\u00f4t symbolique,  </li> <li>entre 20.000 et 50.000 (strictement) on doit verser 15% d'imp\u00f4ts,  </li> <li>entre 50.000 et 100.000\u20ac (strictement) on doit verser 30% aux imp\u00f4ts,    </li> <li>au dela de 100.000\u20ac de revenus, on doit verser 50% en imp\u00f4t.   </li> </ul> <p>Ecrire une fonction <code>montant(revenue)</code> qui a comme param\u00e8tre le montant des revenus annuels d'un  utilisateur et affiche le montant des impots qu\u2019il doit verser.</p> <p>je pr\u00e9cise aux plus na\u00effs que Groland n\u2019existe pas.</p> Solution \ud83d\udc0d Script Python<pre><code>def montant(revenue):\n    if revenue &lt;20000:\n        return 1\n    elif revenue&lt;50000:\n        return revenue*0.15\n    elif revenue &lt;100000:\n        return revenue*0.3\n    else:\n        return revenue*0.5\n</code></pre> <p>Exercice  5</p> <p>On calcule l'IMC (Indice de Masse Corporelle) par la formule \\(I = \\dfrac{M}{T^2}\\) o\u00f9 M est la masse (en kg) d'une personne et T sa taille (en m).  </p> <p>Voil\u00e0 comment comprendre le calcul de votre IMC (la classification de l'OMS) :</p> <ul> <li>Moins de 18.5 (strictement): Maigreur - Poids insuffisant et pouvant occasionner certains risques pour la sant\u00e9.  </li> <li>Entre 18.5 et 25 (strictement) : Id\u00e9al - Poids sant\u00e9 qui n'augmente pas les risques pour la sant\u00e9.  </li> <li>Entre 25 et 30 (strictement) : Surpoids - Exc\u00e8s de poids pouvant occasionner certains risques pour la sant\u00e9.  </li> <li> <p>Plus de 30 : Ob\u00e9sit\u00e9 - risque accru de d\u00e9velopper certaines maladies.  </p> </li> <li> <p>\u00c9crire un programme qui demande la masse et la taille d'une personne, calcule son IMC et annonce dans quel cas se trouve la personne.  </p> </li> <li>A transformer sous forme de fonction <code>IMC(poids,taille)</code> qui renvoie l'IMC et dans quelle cat\u00e9gorie l'on se trouve sous la forme (imc,'categorie')</li> </ul> Solution \ud83d\udc0d Script Python<pre><code>def IMC(poids,taille):\n    imc=poids/(taille**2)\n    if imc&lt;18.5:\n        return imc,\"Maigreur\"\n    elif 18.5&lt;=imc&lt;25:\n        return imc,\"Id\u00e9al\"\n    elif 25&lt;=imc&lt;30:\n        return imc,\"Surpoids\"\n    else:\n        return imc,\"Ob\u00e9sit\u00e9\"\n</code></pre> <p>Exercice  6</p> <p>L'\u00e9quivalence entre l'\u00e2ge d'un chien et l'\u00e2ge humain est donn\u00e9 en proc\u00e9dant ainsi :  </p> <ul> <li>lorsque le chien a deux ans ou moins, chaque ann\u00e9e compte pour douze ann\u00e9es \u00abhumaines\u00bb</li> <li>lorsque le chien a plus de deux ans, chaque ann\u00e9e au del\u00e0 des des deux premi\u00e8res compte pour six ann\u00e9es \u00abhumaines\u00bb.</li> </ul> <p>Par exemple un chien de cinq ans a un \u00e2ge \u00abhumain\u00bb de \\(2 \\times 12 + 3 \\times 6 = 42\\) ans.</p> <p>Question 1 : Programmer la fonction <code>age_humain</code> qui prend en argument un entier <code>n</code> correspondant \u00e0 l'\u00e2ge d'un chien et renvoie l'\u00e2ge humain correspondant. Question 2 : En utilisant votre fonction, d\u00e9terminer quel est l'\u00e2ge \u00abhumain\u00bb d'un chien de 7 ans.</p> Solution \ud83d\udc0d Script Python<pre><code>def age_humain(n):\n    if n &lt;= 2 :\n        age = n*12\n    else :\n        age = 2*12 + (n-2)*6\n    return age  \n\nage_humain(7)\n</code></pre> <p>Exercice  7</p> <p>Programmer la fonction <code>trier</code> qui prend en param\u00e8tres trois nombres <code>a, b</code> et <code>c</code> et  - si besoin - intervertit leurs valeurs afin de les renvoyer tri\u00e9es dans l'ordre croissant.</p> Solution \ud83d\udc0d Script Python<pre><code>def trier(a,b,c):\n    #on intervertit si besoin a et b pour avoir a &lt;= b\n    if b &lt; a :\n        a, b = b, a\n    #on intervertit si besoin b et c pour que c contienne d\u00e9sormais la plus grande des trois valeurs\n    if c &lt; b :\n        b, c = c, b\n    #b ayant peut-\u00eatre \u00e9t\u00e9 remplac\u00e9 par c, on intervertit \u00e0 nouveau si besoin a et b\n    if b &lt; a :\n        a, b = b, a        \n    return (a, b, c) #les valeurs de a, b, c ont si besoin \u00e9t\u00e9 \u00e9chang\u00e9es entre elles de sorte que a &lt;= b &lt;= c\n</code></pre> <p>Exercice  8 : Maximun triplet</p> <p>Programmer la fonction <code>maximum</code> qui prend en param\u00e8tres trois nombres <code>a, b</code> et <code>c</code> et renvoie la valeur du plus grand d'entre eux.</p> Solution \ud83d\udc0d Script Python<pre><code>def maximum_triplet(a,b,c):\n    #premier test pour que maxi soit le maximum de a et b\n    if a &lt;= b :\n         maxi = b\n    else :\n         maxi = a\n\n    #si c est plus grand que maxi, c'est finalement c la plus grande valeur\n    if maxi &lt; c :\n        maxi = c\n    return maxi\n</code></pre> <p>Exercice  9 bool\u00e9ens et conditionnelles - casino</p> <p>Remarque 1 : Vous pouvez (et c'est m\u00eame \u00e0 cela que \u00e7a sert) r\u00e9utiliser une fonction dans une autre fonction. Ici il faudra y penser pour la derni\u00e8re fonction \u00e0 programmer.</p> <p>Dans un casino, les machines \u00e0 sous (voir des images ici : page wikip\u00e9dia ) comportent trois roues ou trois cylindres m\u00e9caniques portant chacun les chiffres de 1 \u00e0 9. En faisant tourner ces roues ou cylindres, on peut tirer au hasard un nombre entre 111 et 999 (ne comportant pas de chiffre z\u00e9ro).  </p> <p>Le joueur mise un euro et r\u00e9cup\u00e8re un gain qui d\u00e9pend du r\u00e9sultat :  </p> <ul> <li>si les trois chiffres sont \u00e9gaux \u00e0 sept, le joueur r\u00e9cup\u00e8re une somme de 333 euros,  </li> <li>sinon, si les trois chiffres sont \u00e9gaux, le joueur r\u00e9cup\u00e8re une somme de 33 euros,  </li> <li>sinon, si le chiffre des centaines est \u00e9gal au chiffre des unit\u00e9s, le joueur r\u00e9cup\u00e8re une somme de 1 euro,  </li> <li>sinon, si les trois chiffres sont cons\u00e9cutifs dans l'ordre croissant (par exemple 567), le joueur r\u00e9cup\u00e8re une somme de 15 euros,  </li> <li>sinon il ne r\u00e9cup\u00e8re rien.  </li> </ul> <p>Question 1 : Compl\u00e9ter la fonction <code>gain_tirage</code> qui prend en param\u00e8tre trois chiffres <code>c, d</code> et <code>u</code> correspondant aux chiffres des centaines, des dizaines et des unit\u00e9s et qui renvoie la somme r\u00e9cup\u00e9r\u00e9e correspondant \u00e0 ce tirage.</p> <p>Question 2 : En utilisant la fonction <code>gain_tirage</code> ci-dessus, compl\u00e9ter la fonction <code>machine_a_sous</code> ci-dessous afin qu'elle renvoie trois chiffres tir\u00e9s au hasard ainsi que la somme r\u00e9cup\u00e9r\u00e9e correspondante.</p> Solution Q1 \ud83d\udc0d Script Python<pre><code>def gain_tirage(c, d, u):\n    if c == 7 and d == 7 and u == 7:\n        somme = 333\n    elif c == d and d == u:\n        somme = 33\n    elif c == u:\n        somme = 1\n    elif d == c+1 and u == d+1:\n        somme = 15\n    else:\n        somme = 0\n    return somme\n</code></pre> Solution Q2 \ud83d\udc0d Script Python<pre><code>from random import randint      #on importe la m\u00e9thode randint depuis le module random\n\ndef machine_a_sous():\n    c = randint(1, 9)\n    d = randint(1, 9)\n    u = randint(1, 9)\n    somme = gain_tirage(c, d, u)\n    return (c, d, u, somme)\n</code></pre> <p>Exercice  10 : meilleur tarif</p> <p>Remarque : En python, une fonction peut renvoyer plusieurs valeurs. Pour cela, apr\u00e8s le mot clef <code>return</code>, mettre les valeurs \u00e0 renvoyer dans des parenth\u00e8ses, s\u00e9par\u00e9es par des virgules. </p> <p>On consid\u00e8re les tarifs propos\u00e9s par deux entreprises de location de v\u00e9hicules pour la location d\u2019un m\u00eame mod\u00e8le automobile :</p> <ul> <li>Entreprise A : 15 \u20ac par jour puis 27 centimes par kilom\u00e8tre parcouru  </li> <li>Entreprise B : 26 \u20ac par jour puis 19 centimes par kilom\u00e8tre parcouru  </li> </ul> Question 1 :Question 2 : <p>Programmer une fonction <code>meilleur_tarif</code> qui :  </p> <ul> <li>prend en arguments :  <ul> <li>un entier <code>km</code> correspondant au nombre de kilom\u00e8tres \u00e0 parcourir,  </li> <li>un entier <code>nbjours</code> correspondant au nombre de jours de location;  </li> </ul> </li> <li>et renvoie :  <ul> <li>l'entreprise qui propose le tarif le plus \u00e9conomique,  </li> <li>le tarif avec cette entreprise.</li> </ul> </li> </ul> <p>Remarque : En cas d'\u00e9galit\u00e9 de tarif entre les deux entreprises, on renverra l'entreprise 'AB' (voir dernier test).</p> <p>En utilisant votre fonction, d\u00e9terminer quel est le meilleur tarif pour parcourir 1250 kilom\u00e8tres pendant 7 jours.</p> Solution \ud83d\udc0d Script Python<pre><code>def meilleur_tarif(km, nbjours):\n    tarif_a = 15*nbjours + 0.27*km\n    tarif_b = 26*nbjours + 0.19*km\n    if tarif_a &lt; tarif_b :\n        return ('A', tarif_a)                 \n    elif tarif_a == tarif_b :\n        return ('AB', tarif_a)\n    else :\n        return ('B', tarif_b)\n</code></pre> \ud83d\udc0d Script Python<pre><code>meilleur_tarif(1250, 7)\n\n('B', 419.5)\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6_1_6_Exercices_Bilan_Bases/","title":"C9 Exercices Bilan Python","text":"<p>Exercice  1 freinage ok</p> <p>Remarque 1 : Vous pouvez (et c'est m\u00eame \u00e0 cela que \u00e7a sert) r\u00e9utiliser une fonction dans une autre fonction. Ici il faudra y penser pour la fonction \u00e0 programmer.</p> <p>Une voiture roule sur route s\u00e8che lorsqu'un obstacle apparait sur la route devant le v\u00e9hicule, imposant au conducteur de freiner pour s'arr\u00eater. </p> <p>Entre le moment o\u00f9 l'obstacle est apparu et le moment o\u00f9 la voiture s'arr\u00eate une certaine distance \\(d_{arret}\\) a \u00e9t\u00e9 parcourue (appel\u00e9e distance totale d'arr\u00eat).  Cette distance \\(d_{arret}\\) d\u00e9pend de la vitesse initiale du v\u00e9hicule : plus le v\u00e9hicule roule vite et plus la distance \\(d_{arret}\\) est grande. Plus pr\u00e9cis\u00e9ment la distance totale d'arr\u00eat est renvoy\u00e9e par la fonction suivante <code>distance_totale_arret</code> o\u00f9 : - <code>v</code> est donn\u00e9e en kilom\u00e8tres par heure, - la valeur renvoy\u00e9e correspond \u00e0 la distance totale d'arr\u00eat \\(d_{arret}\\) en m\u00e8tres.</p> \ud83d\udc0d Script Python<pre><code>def distance_totale_arret(v):\n    assert v &gt;= 0\n    d = 0.3*v + 0.005*v**2\n    return d\n</code></pre> <p>Par exemple l'appel de fonction ci-dessous nous indique qu'\u00e0 une vitesse de 120 km par heure sur route s\u00e8che, la distance totale d'arr\u00eat est de 108 m\u00e8tres.</p> <p>\ud83d\udccb Algo<pre><code>distance_totale_arret(120)\n</code></pre> 108.0</p> Question 1 SolutionQuestion 2 : Jeu de testQuestion 3 : <p>Compl\u00e9ter la fonction <code>freinage_ok</code> qui prend en param\u00e8tres deux nombres :  </p> <ul> <li>une vitesse <code>v</code> correspondant \u00e0 la vitesse du v\u00e9hicule sur route s\u00e8che au moment o\u00f9 apparait l'obstacle,  </li> <li>un entier <code>distance_obstacle</code> d\u00e9signant la distance \u00e0 laquelle est apparu l'obstacle.  </li> </ul> <p>Cette fonction doit renvoyer <code>True</code> si le v\u00e9hicule a le temps de s'arr\u00eater avant l'obstacle et doit renvoyer <code>False</code> si le v\u00e9hicule n'a pas le temps de s'arr\u00eater avant l'obstacle.</p> \ud83d\udc0d Script Python<pre><code>def freinage_ok(v, distance_obstacle):\n    d = 0.3*v + 0.005*v**2\n    if d &lt; distance_obstacle: \n        return True\n    else:\n        return False\n\nfreinage_ok(135,140)\n</code></pre> <p>True</p> <p>V\u00e9rifier que votre fonction satisfait le jeu de tests suivant. </p> \ud83d\udc0d Script Python<pre><code>assert freinage_ok(20, 250)\nassert not freinage_ok(190, 40)\nassert not freinage_ok(20, 5)\nassert freinage_ok(30, 48)\nassert freinage_ok(40, 30)\nassert not freinage_ok(60, 30)\nassert freinage_ok(80, 60)\n</code></pre> <p>Un v\u00e9hicule roule \u00e0 70 kilom\u00e8tres par heure sur une route s\u00e8che. En utilisant votre fonction, d\u00e9terminer si le v\u00e9hicule a le temps de s'arr\u00eater lorsqu'un obstacle apparait \u00e0 46 m\u00e8tres.</p> <p>\ud83d\udc0d Script Python<pre><code>freinage_ok(70,46)\n</code></pre> True</p> <p>Exercice  2 r\u00e9ussir l'examen</p> <p>Dans tout ce qui suit les notes sont sur 20 points.</p> <p>Voici un exemple de calcul de moyenne avec des coefficients :  </p> <ul> <li>DS : 13 coefficient 2  </li> <li>Evaluation : 18 coefficient 1  </li> <li>TP : 16 coefficient 0.5 La moyenne est obtenue en faisant <code>(2*13 + 1*18 + 0.5*16)/(2+1+0.5)</code></li> </ul> <p>Un examen  comporte 6 \u00e9preuves :  </p> <ul> <li>Fran\u00e7ais coefficient 4, </li> <li>Anglais coefficient 3, </li> <li>Philosophie coefficient 1,  </li> <li>Math\u00e9matiques coefficient 4,  </li> <li>Physique coefficient 2,  </li> <li>Informatique coefficient 6.</li> </ul> <p>Un\u00b7e \u00e9tudiant\u00b7e peut \u00eatre admis\u00b7e de deux fa\u00e7ons :  </p> <ul> <li>si sa moyenne litt\u00e9raire est sup\u00e9rieure ou \u00e9gale \u00e0 11 et sa moyenne scientifique est sup\u00e9rieure ou \u00e9gale \u00e0 11,  </li> <li>ou bien si sa moyenne scientifique est sup\u00e9rieure ou \u00e9gale \u00e0 16.  </li> </ul> Question 1SolutionQuestion 2 : Jeu de testQuestion 3 :Solution <p>Programmer la fonction <code>reussir_examen</code> qui prend les six notes des \u00e9preuves comme param\u00e8tres (<code>fra, ang, phi, mat, phy</code> et <code>inf</code>) et qui renvoie <code>True</code> ou <code>False</code> selon que l'\u00e9tudiant\u00b7e est admis\u00b7e ou pas.</p> <p>\ud83d\udc0d Script Python<pre><code>def reussir_examen(fra, ang, phi, mat, phy, inf):\n    moyenne_litt = (4*fra + 3*ang + 1*phi)/(4+3+1)\n    moyenne_sci = (4*mat + 2*phy + 6*inf)/(4+2+6)\n        if moyenne_litt&gt;=11 and moyenne_sci&gt;=11:\n            return True\n        elif moyenne_sci&gt;=16:\n            return True\n        else:\n            return False\n\nreussir_examen(17,12,9,19,2,11)\n</code></pre> True</p> <p>Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous :</p> \ud83d\udc0d Script Python<pre><code>assert reussir_examen(10, 13, 11, 15, 6, 12)\nassert not reussir_examen(8, 13, 11, 15, 6, 12)\nassert not reussir_examen(10, 13, 11, 11, 6, 12)\nassert reussir_examen(6, 3, 11, 15, 16, 20)\n</code></pre> <p>En utilisant votre fonction d\u00e9terminer si un\u00b7e \u00e9tudiant\u00b7e ayant eu les notes suivantes (dans l'ordre des mati\u00e8res ci-dessus) : 8, 11, 14, 13, 9, 11 est admis\u00b7e ou pas.</p> \ud83d\udc0d Script Python<pre><code>reussir_examen(8,11,14,13,9,11)\nFalse\n</code></pre> <p>Exercice  3 ballon ficelle</p> <p>Dans une f\u00eate foraine un jeu de hasard consiste pour le joueur \u00e0 r\u00e9ussir \u00e0 crever un ballon parmi de nombreux ballons qui sont accroch\u00e9s au plafond du stand gr\u00e2ce \u00e0 des ficelles mesurant entre 30 centim\u00e8tres et 99 centim\u00e8tres.  </p> <p>Une fois crev\u00e9, le forain r\u00e9cup\u00e8re la ficelle du ballon et l'enroule autour d'une bobine de p\u00e9rim\u00e8tre 10 centim\u00e8tres fix\u00e9e sur le comptoir du stand.  </p> <p>En fonction de la longueur, il arrive \u00e0 faire un certain nombre de tours avec la ficelle. Par exemple avec une ficelle de 68 centim\u00e8tres, il arrive \u00e0 faire 6 tours de ficelle plus un morceau de 8 centim\u00e8tres qui d\u00e9passe.  </p> <ul> <li>Le joueur gagne 20 points si le nombre de tours de ficelle est \u00e9gal au nombre de centim\u00e8tres de ficelle qui d\u00e9passent,  </li> <li>sinon il gagne 10 points si le nombre de centim\u00e8tres de ficelle qui d\u00e9passent est sup\u00e9rieur ou \u00e9gal \u00e0 7,  </li> <li>sinon il gagne 5 points si le nombre de tours de ficelle est pair,  </li> <li>sinon il ne gagne aucun point.  </li> </ul> <p>En faisant plusieurs lancers, le joueur cumule des points avec lesquels il peut s'offrir un lot.</p> Question 1Solution 1 Solution 2Question 2 : Jeu de testQuestion 3Solution <p>Compl\u00e9ter la fonction <code>score</code> ci-dessous qui prend en argument un nombre entier <code>l</code> correspondant \u00e0 la longueur de la ficelle et qui renvoie le nombre de points <code>nb_points</code> gagn\u00e9s par le joueur.</p> \ud83d\udc0d Script Python<pre><code>def score(lg):\n    nb_tours = lg // 10\n    longueur_qui_depasse = lg % 10\n    if nb_tours == longueur_qui_depasse:   \n        nbpoints= 20\n    elif longueur_qui_depasse&gt;=7:\n        nbpoints= 10\n    elif nb_tours % 2 == 0:\n        nbpoints= 5\n    else:\n        nbpoints=0\n    return nbpoints\n</code></pre> \ud83d\udc0d Script Python<pre><code>def score(lg):\n    nb_tours = lg // 10\n    longueur_qui_depasse = lg % 10\n    nb_points = 0\n    if nb_tours == longueur_qui_depasse:   \n        return 20\n    elif longueur_qui_depasse&gt;=7:\n        return 10\n    elif nb_tours % 2 == 0:\n        return 5\n    else:\n        return nb_points\n</code></pre> <p>V\u00e9rifier que votre fonction satisfait le jeu de tests suivant :</p> \ud83d\udc0d Script Python<pre><code>assert score(55) == 20\nassert score(33) == 20\nassert score(57) == 10\nassert score(49) == 10\nassert score(88) == 20\nassert score(43) == 5\nassert score(85) == 5\nassert score(56) == 0\nassert score(34) == 0\n</code></pre> <p>En utilisant votre fonction, d\u00e9terminer le nombre de points lorsque la ficelle mesure 64 centim\u00e8tres.</p> \ud83d\udc0d Script Python<pre><code>score(64)\n5\n</code></pre> <p>Exercice  4 annee bissextile</p> Question 1SolutionQuestion 2 : Jeu de testQuestion 3SolutionQuestion 4SolutionQuestion 5Solution <p>D'apr\u00e8s Wikip\u00e9dia :   </p> <p>\u00abDepuis l'ajustement du calendrier gr\u00e9gorien, l'ann\u00e9e n\u2019est bissextile (comportant 366 jours) que dans l\u2019un des deux cas suivants :</p> <ul> <li>si l'ann\u00e9e est divisible par 4 et non divisible par 100 ; </li> <li>si l'ann\u00e9e est divisible par 400 (\u00ab divisible \u00bb signifie que la division donne un nombre entier, sans reste). </li> <li>Sinon, l'ann\u00e9e n'est pas bissextile : elle a la dur\u00e9e habituelle de 365 jours (elle est dite ann\u00e9e commune). </li> </ul> <p>Ainsi, 2021 n'est pas bissextile. L'an 2008 \u00e9tait bissextil suivant la premi\u00e8re r\u00e8gle (divisible par 4 et non divisible par 100). L'an 1900 n'\u00e9tait pas bissextil car divisible par 4, mais aussi par 100 (premi\u00e8re r\u00e8gle non respect\u00e9e) et non divisible par 400 (seconde r\u00e8gle non respect\u00e9e). L'an 2000 \u00e9tait bissextil car divisible par 400.\u00bb</p> <p>Programmer la fonction <code>annee_bissextile</code> qui prend en param\u00e8tre un nombre entier correspondant \u00e0 une ann\u00e9e <code>a</code> et renvoie <code>True</code> si l'ann\u00e9e correspondant est bissextile (et <code>False</code> sinon).  </p> \ud83d\udc0d Script Python<pre><code>def annee_bissextile(a):\n    if a % 4 == 0 and a % 100 != 0:\n        return True\n    elif a % 400 ==0:\n        return True\n    else:\n        return False\n</code></pre> <p>Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous :</p> \ud83d\udc0d Script Python<pre><code>assert annee_bissextile(2008)\nassert not annee_bissextile(1900)\nassert not annee_bissextile(2021)\nassert annee_bissextile(2028)\nassert annee_bissextile(2400)\nassert not annee_bissextile(2100)\n</code></pre> <p>En utilisant votre fonction d\u00e9terminer si 1792 est une ann\u00e9e bissextile.</p> \ud83d\udc0d Script Python<pre><code>annee_bissextile(1792)\nTrue\n</code></pre> <p>rogrammer ci-dessous la fonction <code>nb_jours</code> qui prend en argument une ann\u00e9e <code>a &gt;= 1583</code> et renvoie le nombre de jours de cette ann\u00e9e (<code>365</code> ou <code>366</code>).  </p> <p>Cette fonction <code>nb_jours</code> r\u00e9utilisera la fonction <code>annee_bissextile</code>.</p> \ud83d\udc0d Script Python<pre><code>def nb_jours(a):\n    assert a &gt;= 1583\n    nb_jours = 0\n    for i in range(a):\n        if annee_bissextile(a) == True:\n            nb_jours = 366\n        else:\n            nb_jours = 365\n    return nb_jours\n</code></pre> <p>En utilisant votre fonction d\u00e9terminer combien de jours comportait l'ann\u00e9e 1594 et combien de jours comportait l'ann\u00e9e 1748.</p> \ud83d\udc0d Script Python<pre><code>print(nb_jours(1594))\nprint(nb_jours(1748))\n365\n366\n</code></pre> <p>Exercice  5 nombre de bits</p> <p>On sait que sur <code>k</code> bits on peut coder <code>2**k</code> mots diff\u00e9rents.  Par exemple sur <code>k = 10</code> bits on peut coder <code>2**10 = 1024</code> mots diff\u00e9rents.  </p> <p>Un exemple classique est le codage ASCII sur <code>k = 7</code> bits qui permet de repr\u00e9senter <code>n = 2**7 = 128</code> \u00abobjets\u00bb (\u00e0 savoir des caract\u00e8res alphab\u00e9tiques et num\u00e9riques plus quelques autres symboles ou codes sp\u00e9ciaux).</p> <p>Mais si l'on souhaite coder <code>n</code> \u00e9l\u00e9ments diff\u00e9rents, peut-on d\u00e9terminer le nombre <code>k</code> de bits n\u00e9cessaires ?  Par exemple si l'on souhaite coder <code>n = 3 789 147</code> caract\u00e8res, combien de bits sont n\u00e9cessaires ?</p> Question 1SolutionQuestion 2 : Jeu de test <p>Compl\u00e9ter la fonction <code>nombre_de_bits</code> ci-dessous qui prend en param\u00e8tre un nombre <code>n &gt;= 2</code> d'\u00e9l\u00e9ments \u00e0 coder et renvoie le nombre <code>k</code> de bits n\u00e9cessaires pour y parvenir.</p> <p>Pour cela on teste diff\u00e9rentes valeurs de <code>2**k</code> (en augmentant <code>k</code> de un en un) jusqu'\u00e0 d\u00e9passer la valeur <code>n</code> fournie.</p> \ud83d\udc0d Script Python<pre><code>def nombre_de_bits(n):\n    k = 0\n    while 2**k &lt; n:\n        k += 1\n    return k\n\nnombre_de_bits(1025)\n11\n</code></pre> <p>Tester votre fonction en utilisant le jeu de tests ci-dessous.</p> \ud83d\udc0d Script Python<pre><code>from math import log, ceil, floor\n\nfor n in  [2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 1024, 1025, 2**57 - 1, 2**57]:\n    assert nombre_de_bits(n) == (n-1).bit_length()\n</code></pre> <p>Exercice  6 Millionnaire</p> <p>Depuis ses huit ans, Super-avare \u00e9conomise des klipoks (monnaie locale).</p> <p>Le jour de ses huit ans il avait <code>8**3 = 512</code> klipoks dans sa tirelire. Le jour de ses neuf ans il avait <code>512 + 9**3 = 1241</code> klipoks dans sa tirelire. Le jour de ses dix ans il avait <code>1241 + 10**3 = 2241</code> klipoks dans sa tirelire. Le jour de ses onze ans il avait <code>2241 + 11**3 = 3572</code> klipoks dans sa tirelire.  </p> Question 1SolutionQuestion 2: Jeu de testQuestion 3Solution <p>Compl\u00e9ter la fonction <code>calculer_tirelire</code> qui prend en param\u00e8tre un entier <code>n</code> sup\u00e9rieur ou \u00e9gal \u00e0 8 et renvoie le nombre entier correspondant au nombre de klipocks que Super-avare a dans sa tirelire le jour de son n-i\u00e8me anniversaire.  </p> <p>Remarque : on est ici en pr\u00e9sence d'un algorithme d'accumulation (l'accumulateur est <code>tirelire</code>).</p> \ud83d\udc0d Script Python<pre><code>def calculer_tirelire(n):\n    somme = 0\n    for age in range(8, n+1):\n        somme += age**3         \n    return somme\n\ncalculer_tirelire(45)\n1070441\n</code></pre> <p>Tester votre fonction en utilisant le jeu de tests ci-dessous.</p> \ud83d\udc0d Script Python<pre><code>assert calculer_tirelire(8)  == 512\nassert calculer_tirelire(9)  == 1241\nassert calculer_tirelire(10)  == 2241\nassert calculer_tirelire(11)  == 3572\nassert calculer_tirelire(18) == 28457\nassert calculer_tirelire(75) == 8121716\n</code></pre> <p>Compl\u00e9ter la fonction <code>age_millionnaire</code> afin qu'elle renvoie l'\u00e2ge \u00e0 partir duquel Super-avare devient millionnaire (ici on ne cherchera pas \u00e0 r\u00e9utiliser la fonction <code>calculer_tirelire</code>).</p> \ud83d\udc0d Script Python<pre><code>def age_millionnaire():\n    tirelire = 0\n    age = 0\n    while tirelire &lt; 1000000 :\n        tirelire += age**3\n        age += 1\n    return age-1\n\nage_millionnaire()\n45\n</code></pre> <p>Exercice  7 Kangourou</p> <p>Un kangourou se d\u00e9place en ligne droite en faisant des bonds dont la longueur est al\u00e9atoire. On mod\u00e9lise la longueur d'un bond en utilisant la fonction <code>randint(2, 13)</code> du module <code>random</code> qui renvoie un nombre entier al\u00e9atoire compris entre 2 et 13.</p> Question 1SolutionQuestion 2SolutionQuestion 3SolutionQuestion 4Solution <p>Compl\u00e9ter la fonction <code>distance_totale(n)</code> ci-dessous qui prend en param\u00e8tres un nombre <code>n</code> de sauts et renvoie la distance totale parcourue par le kangourou lors de <code>n</code> sauts al\u00e9atoires.</p> <p>Remarque : on est ici en pr\u00e9sence d'un algorithme d'accumulation (l'accumulateur est <code>total</code>).</p> \ud83d\udc0d Script Python<pre><code>from random import randint\n\ndef distance_totale(n):\n    total = 0\n    for _ in range(n):\n        longueur_saut = randint(2, 13)\n        total += longueur_saut\n    return total\n</code></pre> <p>Effectuer plusieurs appels \u00e0 cette fonction pour voir quelle distance parcourt approximativement le kangourou en faisant 10 sauts :</p> \ud83d\udc0d Script Python<pre><code>moyenne = 0\nfor i in range(10000):\n    distance = distance_totale(10)\n    moyenne += distance\nmoyenne = moyenne / 10000\nprint(moyenne)\n75.0162\n</code></pre> <p>On souhaite d\u00e9sormais savoir combien de sauts al\u00e9atoires va faire le kangourou pour parcourir 100 m\u00e8tres. Compl\u00e9ter la fonction <code>nb_sauts_100_metres</code> ci-dessous afin qu'elle renvoie le nombre de sauts n\u00e9cessaires pour que le kangourou fasse 100 m\u00e8tres (le r\u00e9sultat renvoy\u00e9 sera al\u00e9atoire et d\u00e9pendra des appels de fonction).</p> \ud83d\udc0d Script Python<pre><code>from random import randint\n\ndef nb_sauts_100_metres():\n    total = 0\n    nb_sauts = 0\n    while total &lt; 100 :\n        longueur_saut = randint(2, 13)\n        total += longueur_saut\n        nb_sauts += 1\n    return nb_sauts\n\nnb_sauts_100_metres()\n\n12\n</code></pre> <p>Effectuer des appels de fonctions pour v\u00e9rifier si les r\u00e9sultats fournis sont vraisemblables :</p> \ud83d\udc0d Script Python<pre><code>for _ in range(50):\n    print(nb_sauts_100_metres())\n</code></pre>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/","title":"6.1.\u221e Le module p5","text":""},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#1-cest-quoi-le-module-p5","title":"1. C'est quoi, le module p5 ?","text":"<p>En Python, un module est un fichier constitu\u00e9 de code Python, qui contient en g\u00e9n\u00e9ral des fonctions d\u00e9di\u00e9es \u00e0 traiter un th\u00e8me bien pr\u00e9cis. Il en existe \u00e9norm\u00e9ment, ce qui participe \u00e0 la popularit\u00e9 de ce langage.</p> <p>Par exemple, vous avez certainement utilis\u00e9 en seconde1 les modules <code>math</code> (qui contient en autres les fonctions math\u00e9matiques usuelles) et <code>random</code> (qui contient des fonctions de g\u00e9n\u00e9ration de nombres pseudo-al\u00e9atoires). Nous utiliserons bien d'autres modules au cours de l'ann\u00e9e, pour traiter des images, des donn\u00e9es csv, faire des requ\u00eates web, etc.</p> <p>Nous \u00e9tudierons ces modules dans un chapitre \u00e0 part un peu plus tard dans l'ann\u00e9e.</p> <p>Le module p5 de Python est un portage du langage Processing, qui est un outil de cr\u00e9ation multim\u00e9dia utilisant le code informatique. Simple de prise en main, il a \u00e9t\u00e9 cr\u00e9\u00e9 par des artistes pour des artistes.</p> <p>Nous l'utiliserons pour ajouter du graphisme \u00e0 nos cr\u00e9ations...</p> <p>Squelette de programme avec p5 (obligatoire!)</p> \ud83d\udc0d Script Python<pre><code>from p5 import *\n\ndef setup():\n    # corps de la fonction \u00e0 compl\u00e9ter \n\n\ndef draw():\n    # corps de la fonction \u00e0 compl\u00e9ter \n\nrun()\n</code></pre> Ligne 1la fonction <code>setup</code>la fonction <code>draw</code>la fonction <code>run</code> <p>On importe le module, c'est-\u00e0-dire qu'on charge en m\u00e9moire tout le contenu du fichier.</p> <p>Elle contient le param\u00e9trage initial du programme (taille de la fen\u00eatre, couleur de fond, etc).</p> <p>Le contenu de cette fonction est continuellement ex\u00e9cut\u00e9, \u00e0 raison de 60 images par seconde par d\u00e9faut. Sauf si la fonction <code>no_loop</code> est appel\u00e9e dans <code>setup</code>.</p> <p>Elle lance la fen\u00eatre d'ex\u00e9cution du programme.</p>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#2-les-bases","title":"2. Les bases","text":""},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#21-repere","title":"2.1 Rep\u00e8re","text":"<p>\u00c0 l'ex\u00e9cution de la fonction <code>run</code>, une fen\u00eatre s'affiche avec une zone de dessin qu'on appelle g\u00e9n\u00e9ralement canevas (canvas in english). Sa taille se d\u00e9finit \u00e0 l'aide de la fonction <code>size</code> \u00e0 l'int\u00e9rieur de la fonction <code>setup</code>. Par exemple, pour cr\u00e9er une zone de dessin de 300 pixels sur 200 pixels, on utilisera:</p> \ud83d\udc0d Script Python<pre><code>size(300, 200)\n</code></pre> <p>Chaque pixel de cette zone est rep\u00e9r\u00e9e par des coordonn\u00e9es dans le rep\u00e8re suivant, dont l'origine se situe en haut \u00e0 gauche et l'axe des ordonn\u00e9es est orient\u00e9 vers le bas.</p> <p> </p>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#22-traces","title":"2.2 Trac\u00e9s","text":"<p>Trac\u00e9s de base</p> <ul> <li><code>point</code> : permet de dessiner un point (pixel). En param\u00e8tre, les coordonn\u00e9es du point.</li> <li><code>line</code>: permet de tracer une ligne entre deux points. En param\u00e8tres, les coordonn\u00e9es des deux points.</li> <li><code>rect</code>: permet de tracer un rectangle. En param\u00e8tres, les coordonn\u00e9es du sommet haut-gauche, puis la largeur et la hauteur du rectangle.</li> <li><code>ellipse</code>: permet de tracer une ellipse. En param\u00e8tres, les coordonn\u00e9es du centre, puis la largeur et la hauteur (mettre la m\u00eame valeur pour un cercle).</li> </ul> Exemples <p>Copier-coller le code suivant et faire varier les param\u00e8tres pour bien les comprendre.</p> \ud83d\udc0d Script Python<pre><code>from p5 import *\n\ndef setup():\n    size(200, 200)\n    no_loop()\n\ndef draw():\n    rect((90, 50), 20, 100)\n    ellipse((100, 70), 60, 60)\n    ellipse((81, 70), 16, 32)\n    point(81, 70)\n    ellipse((119, 70), 16, 32)\n    point(119, 70)\n    line((90, 150), (80, 160))\n    line((110, 150), (120, 160))\nrun()\n</code></pre>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#23-couleurs","title":"2.3 Couleurs","text":"<p>Pinceau</p> <ul> <li><code>background</code>: permet de d\u00e9finir la couleur du fond de la zone de dessin. En param\u00e8tres, les trois composantes RGB de la couleur.</li> <li><code>stroke</code>: permet de d\u00e9finir la couleur du pinceau (noir par d\u00e9faut) pour le contour de la forme. En param\u00e8tres, les trois composantes RGB de la couleur.</li> <li><code>no_stroke()</code>: permet de dessiner une forme sans coutour (pas de param\u00e8tre).</li> <li><code>stroke_weight</code>: permet de d\u00e9finir la largeur du pinceau. En param\u00e8tre, le nombre de pixels.</li> <li><code>fill</code>: permet de d\u00e9finir la couleur de remplissage de la forme. En param\u00e8tres, les trois composantes RGB de la couleur.</li> </ul> Exemples <p>Copier-coller le code suivant et faire varier les param\u00e8tres pour bien les comprendre.</p> \ud83d\udc0d Script Python<pre><code>from p5 import *\n\ndef setup():\n    size(200, 200)\n    no_loop()\n\ndef draw():\n    background(12, 12, 12)\n    fill(255, 0, 0)\n    rect((90, 50), 20, 100)\n    no_stroke()\n    fill(244, 164, 96)\n    ellipse((100, 70), 60, 60)\n    stroke(1)\n    fill(255, 255, 255)\n    ellipse((81, 70), 16, 32)\n    point(81, 70)\n    ellipse((119, 70), 16, 32)\n    stroke_weight(5)\n    point(119, 70)\n    stroke_weight(2)\n    line((90, 150), (80, 160))\n    line((110, 150), (120, 160))\nrun()\n</code></pre>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#3-exercice","title":"3. Exercice","text":"<p>Exercice  1</p> <p>Dans un canevas de 300 x 200 pixels, dessiner successivement les drapeaux fran\u00e7ais, japonais puis tch\u00e8que.</p> <p>Consulter la documentation pour des triangles ou polygones.</p> <ol> <li> <p>bon ok, \u00e7a d\u00e9pend de quel prof vous avez eu l'an dernier...\u00a0\u21a9</p> </li> </ol>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/","title":"T6.2 Utilisation de biblioth\u00e8ques","text":"<p>L'utilisation de fonctions (ou de proc\u00e9dures) permet dans l'\u00e9criture d'un programme de ne pas r\u00e9p\u00e9ter les m\u00eames portions de code, et de d\u00e9couper un programme en sous-programmes.</p> <p>Il arrive aussi fr\u00e9quemment que ces fonctions puissent \u00eatre utilis\u00e9es dans d'autres programmes : il est alors n\u00e9cessaire de les stocker ailleurs que dans le programme lui-m\u00eame.</p> <p>Ces fonctions sont souvent regroup\u00e9es par th\u00e8me dans des fichiers <code>.py</code> appel\u00e9s biblioth\u00e8ques (library in english) ou modules.</p> <p>Les objectifs de cette r\u00e9partition des fonctions en modules - on parle de conception modulaire - sont multiples:</p> <ul> <li>rendre un programme plus lisible;</li> <li>r\u00e9partir la programmation au sein d'une \u00e9quipe;</li> <li>faciliter les tests.</li> </ul> <p>Les modules peuvent donc \u00eatre vus comme des \u00abbo\u00eetes \u00e0 outils\u00bb dont on va se servir uniquement lorsqu'on en a besoin. Il en existe un tr\u00e8s grand nombre en Python, ce qui fait une des forces de ce langage.</p> <p> </p>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#621-importer-un-module","title":"6.2.1 Importer un module","text":"<p>L'interpr\u00e9teur Python propose quelques fonctions et types natifs qui sont toujours disponibles.</p> <p>L'installation de Python sur un ordinateur comporte \u00e9galement une biblioth\u00e8que standard qui contient les modules les plus utilis\u00e9s. </p> <p>Exemples</p> <p>Quelques exemples de modules tr\u00e8s fr\u00e9quemment utilis\u00e9s:</p> <ul> <li><code>math</code>: toutes les fonctions et constantes math\u00e9matiques;</li> <li><code>random</code>: fonctions permettant de g\u00e9n\u00e9rer des nombres pseudo-al\u00e9atoires;</li> <li><code>time</code>: fonctions qui donnent acc\u00e8s au... temps;</li> <li><code>os</code>: permet de manipuler les chemins d'acc\u00e8s aux dossiers et fichiers.</li> </ul> <p>Mais attention, ces modules ne sont pas disponibles dans un programme tant qu'on ne les a pas import\u00e9s, c'est-\u00e0-dire charg\u00e9s en m\u00e9moire de l'interpr\u00e9teur Python.</p> <p>Import de modules</p> <p>Pour importer un module, on utilise le mot-cl\u00e9 <code>import</code>. On importe les modules en d\u00e9but de programme.</p> <p>Par exemple, pour pouvoir utiliser le module <code>random</code> (et tout ce qu'il contient):</p> \ud83d\udc0d Script Python<pre><code>import random\n</code></pre>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#622-consulter-la-documentation-dun-module","title":"6.2.2 Consulter la documentation d'un module","text":"<p>Il suffit pour cela d'utiliser  (en console) la fonction <code>help</code> en passant le nom du module en argument. Par exemple, pour consulter la documentation du module <code>random</code> (faites-le !):</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; help(random)\n</code></pre> <p>On y trouve beaucoup de choses... en particulier ce qui nous int\u00e9resse pour l'instant: les fonctions disponibles.</p> <p>Par exemple, on y trouve la fonction <code>randint</code> que vous avez certainement utilis\u00e9e en classe de seconde. Ou pas.</p> \ud83d\udccb Algo<pre><code>randint(a, b) method of random.Random instance\n    Return random integer in range [a, b], including both end points.\n</code></pre>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#623-utilisation-dune-fonction-dun-module","title":"6.2.3 Utilisation d'une fonction d'un module","text":"<p>Notation pr\u00e9fix\u00e9e</p> <p>Une fois le module import\u00e9, on peut acc\u00e9der aux fonctions (ou autres contenus) en pr\u00e9fixant les noms par celui du module. </p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import random\n&gt;&gt;&gt; random.randint(1, 6)\n4\n</code></pre> L'oubli du pr\u00e9fixe-nom du module provoquera une erreur de type <code>NameError</code>: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import random\n&gt;&gt;&gt; randint(1, 6)\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nNameError: name 'randint' is not defined\n</code></pre></p> <p>Si vous trouvez \u00e7a p\u00e9nible de devoir \u00e9crire \u00e0 chaque fois le nom du module en pr\u00e9fixe, il y a cependant un avantage criant : dans un programme cons\u00e9quent, on sera amen\u00e9s \u00e0 importer plusieurs modules, dont on ne peut conna\u00eetre toutes les fonctions... et il y en a peut-\u00eatre qui portent le m\u00eame nom... Il faut donc savoir dans quel module utiliser la bonne fonction!</p> <p>Documentation d'une fonction</p> <p>Comme vous l'avez remarqu\u00e9, on peut vite se perdre dans la documentation d'un module. Si on conna\u00eet le nom d'une fonction dont on veut la documentation (pour se rappeler par exemple de ses param\u00e8tres, du type de valeur renvoy\u00e9e), on peut utiliser la fonction <code>help</code> uniquement sur la fonction elle-m\u00eame:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; help(random.choice)\nHelp on method choice in module random:\n\nchoice(seq) method of random.Random instance\n    Choose a random element from a non-empty sequence.\n\n&gt;&gt;&gt; random.choice([\"C-3PO\", \"R2D2\", \"BB-8\", \"K-2SO\"])\n'BB-8'\n</code></pre>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#624-autres-imports","title":"6.2.4 Autres imports","text":"<p>Import sans pr\u00e9fixe</p> <p>On peut \u00e9galement importer uniquement une fonction d'un module si on sait qu'on n'aura besoin que de cette fonction. Pour les raisons \u00e9voqu\u00e9es plus haut, on \u00e9vitera le plus possible cette utilisation.</p> <p>La syntaxe est la suivante, et elle permet de ne plus pr\u00e9fixer le nom de la fonction:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; from random import randint\n&gt;&gt;&gt; randint(1, 6)\n2\n</code></pre> <p>Alias</p> <p>Un moyen de ne pas rendre l'utilisation de noms de fonctions trop verbeux (par exemple le module de trac\u00e9 de courbes <code>matplotlib.pyplot</code>), on peut renommer le module pour lui donner un nom plus court (alias) \u00e0 l'aide du mot-cl\u00e9 <code>as</code>.</p> Exemple 1Exemple 2 \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import random as rd\n&gt;&gt;&gt; rd.randint(1, 6)\n6\n</code></pre> \ud83d\udc0d Script Python<pre><code>import matplotlib.pyplot as plt\n\nabscisses = [0, 1, 2, 5, 8, 10, 15]\nordonnees = [0, 1, 4, 25, 64, 100, 225]\n\nplt.plot(abscisses, ordonnees, \"-o\") \nplt.show()\n</code></pre> <p>Ce programme donne le graphique:</p> <p> </p>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#625-exercices","title":"6.2.5 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>En console:</p> <ol> <li>calculer la racine carr\u00e9e de 25, puis de 2;</li> <li>calculer \\(\\pi^2\\).</li> </ol> <p>La fonction racine carr\u00e9e (square root in english) se trouve dans le module <code>math</code>. La chercher dans ce module, qu'il faudra importer. Regarder \u00e0 la fin de la documentation les constantes...</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Lien Capytale : 84c6-132796 </p> <p>Exercice  3</p> <p>L'objectif de cet exercice est de mesurer le temps d'ex\u00e9cution d'un programme. On va pour cela utiliser le module <code>time</code>.</p> Partie 1Partie 2Correction <p>En console:</p> <ol> <li>Importer le module <code>time</code>.</li> <li>Consulter la documentation de ce module. Rep\u00e9rer dans la description les deux fa\u00e7ons de repr\u00e9senter le temps. Nous utiliserons la premi\u00e8re.</li> <li>Noter la date correspondante \u00e0 \"the Epoch\".</li> <li> <p>Trouver1 dans les fonctions celle qui permet de r\u00e9cup\u00e9rer le temps courant en secondes depuis the Epoch. </p> </li> <li> <p>Maintenant qu'on dispose d'une telle fonction, qui renvoie donc le temps courant au moment o\u00f9 on l'appelle dans le programme, comment l'utiliser pour mesurer le temps d'ex\u00e9cution d'un programme?</p> </li> </ol> <p>On va maintenant utiliser la fonction <code>time.time</code> pour mesurer le temps d'ex\u00e9cution du programme (tr\u00e8s inutile) suivant:</p> <p>\ud83d\udc0d Script Python<pre><code>for k in range(1000000):\n    pass\n</code></pre> Dans un \u00e9diteur:</p> <ol> <li>Importer le module <code>time</code>.</li> <li>Copier-coller le code ci-dessus.</li> <li>Affecter \u00e0 une variable <code>t0</code> le temps courant avant la boucle <code>for</code>.</li> <li>Affecter \u00e0 une variable <code>t1</code> le temps courant apr\u00e8s la boucle <code>for</code>.</li> <li>Ajouter une instruction pour afficher le temps d'ex\u00e9cution du programme.</li> </ol> <p>Pour indication, j'obtiens un temps de l'ordre de 0.3 secondes sur Basthon/Capytale et de 0.03 secondes sur ma machine personnelle.</p> <ol> <li> <p>Indice en bas de votre \u00e9cran: c'est l'ant\u00e9p\u00e9nulti\u00e8me.\u00a0\u21a9</p> </li> </ol>"},{"location":"T06_Python/T6.3_Tests/T6.3_Tests/","title":"T6.3 Tester une fonction","text":"<p>Normalement, la premi\u00e8re chose qu'on fait apr\u00e8s avoir \u00e9crit une fonction, c'est la tester. Pour cela, on passe des arguments \u00e0 la fonction pour lesquels on conna\u00eet le r\u00e9sultat attendu.</p> <p>Par exemple, reprenons la fonction <code>maximum</code> \u00e9crite au chapitre 6.1.5:</p> <p>\ud83d\udc0d Script Python<pre><code>def maximum(n1, n2):\n    if n1 &gt; n2:\n        return n1\n    else:\n        return n2\n</code></pre> Ensuite, en console, on la teste en passant des arguments simples:</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; maximum(2, 5)\n5\n&gt;&gt;&gt; maximum(10, 3)\n10\n</code></pre> Dans la vraie vie des programmeurs, c'est le contraire. On \u00e9crit d'abord les tests. Puis la fonction. Et enfin on effectue les tests.</p>"},{"location":"T06_Python/T6.3_Tests/T6.3_Tests/#631-assert","title":"6.3.1 Assert","text":"<p>Ces tests reposent sur le mot-cl\u00e9 <code>assert</code>, qui va lever une erreur lorsqu'il est suivi d'une expression \u00e9valu\u00e9e \u00e0 <code>False</code>:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; assert 2 == 3\nTraceback (most recent call last):\n  File \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nAssertionError\n&gt;&gt;&gt; assert 2 &lt;= 3\n&gt;&gt;&gt;\n</code></pre> <p>Avant d'\u00e9crire cette fonction <code>maximum</code>, on \u00e9crirait alors: \ud83d\udc0d Script Python<pre><code>assert maximum(2, 5) == 2\nassert maximum(10, 3) == 10\nassert maximum(4, 4) == 4\n</code></pre></p> <p>Ce jeu de tests peut se regouper dans une fonction pour v\u00e9rifier qu'elle a bien le comportement d\u00e9sir\u00e9.</p> \ud83d\udc0d Script Python<pre><code>def test_maximum():\n    assert maximum(2, 5) == 2\n    assert maximum(10, 3) == 10\n    assert maximum(4, 4) == 4\n    print(\"tests ok\") # cette ligne ne s'\u00e9xecutera que si aucune erreur n'est lev\u00e9e par assert\n</code></pre> <p>Un autre exemple</p> <p>Toujours au chapitre 6.1.5, je vous ai demand\u00e9 d'\u00e9crire une fonction <code>est_bissextile</code> permettant de d\u00e9terminer si une ann\u00e9e est bissextile ou non (en renvoyant un bool\u00e9en).</p> <p>Comme on sait (?) que 2000 \u00e9tait bissextile, que 2020 \u00e9galement, mais ni 1900 ni 2021 ne le sont, on aurait pu commencer par \u00e9crire notre fonction de jeu de tests ainsi:</p> \ud83d\udc0d Script Python<pre><code>def test_est_bissextile():\n    assert est_bissextile(2000) == True\n    assert est_bissextile(2020) == True\n    assert est_bissextile(1900) == False\n    assert est_bissextile(2021) == False\n    print(\"tests ok\")\n</code></pre> <p>Jeu de tests couvrant ?</p> <p>Il faut v\u00e9rifier que les tests couvrent toutes les situations possibles, mais ce n'est pas toujours facile !</p> <p> </p>"},{"location":"T06_Python/T6.3_Tests/T6.3_Tests/#632-exercices","title":"6.3.2 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un jeu de tests pour la fonction <code>compte_voyelles</code> de l'exercice 2 du chapitre 6.1.5.</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <ol> <li>\u00c9crire un jeu de tests pour une fonction <code>fizzbuzz</code> qui prend un entier en param\u00e8tre et renvoie ... vous savez quoi (cf. ex 6 de 6.1.4).</li> <li>\u00c9crire la fonction <code>fizzbuzz</code> et la tester.</li> </ol>"},{"location":"T06_Python/T6.4_Specification/T6.4_Specification/","title":"T6.4 Sp\u00e9cification","text":"<p>Commen\u00e7ons par une devinette: que fait la fonction suivante:</p> \ud83d\udc0d Script Python<pre><code>def doublon(l, c):\n    n = 0\n    for e in c:\n        if e == l:\n            n += 1\n    return n &gt; 1\n</code></pre> <p> </p> Mieux? \ud83d\udc0d Script Python<pre><code>def verifie_doublon(l: str, c: str) -&gt; bool:\n'''\n    V\u00e9rifie si la cha\u00eene c contient au moins deux occurences\n    de la cha\u00eene l\n    '''\n    nb_occurences = 0\n    for element in c:\n        if element == l:\n            nb_occurences += 1\n    return nb_occurences &gt; 1\n</code></pre>"},{"location":"T06_Python/T6.4_Specification/T6.4_Specification/#641-specifier-et-documenter","title":"6.4.1 Sp\u00e9cifier et documenter","text":"<p>Sp\u00e9cification</p> <p>De mani\u00e8re g\u00e9n\u00e9rale la sp\u00e9cification est un ensemble de d\u2019exigences \u00e0 satisfaire par un produit ou un service.</p> <p>En programmation, sp\u00e9cifier un programme/une fonction revient \u00e0 d\u00e9crire explicitement ce qu\u2019il/elle doit faire et dans quelles conditions.</p> <p>Pour cela:</p> <ul> <li>on d\u00e9crit ce que fait la fonction dans une documentation appel\u00e9e docstring, plac\u00e9e au d\u00e9but du corps de la fonction, \u00e9crite sur plusieurs lignes entre triple quotes;</li> <li>on utilise des noms de variables explicites (voir T6.1.1);</li> <li>on pr\u00e9cise le type de(s) param\u00e8tre(s), et \u00e9ventuellement les conditions d'utilisations d ela fonction: on parle de pr\u00e9conditions;</li> <li>on pr\u00e9cise le type de la valeur renvoy\u00e9e par la fonction: on parle de postconditions;</li> <li>ces types apparaissent dans la docstring ou en annotations de types (depuis Python 3.5) comme dans l'exemple ci-dessus;</li> <li>on int\u00e8gre \u00e9ventuellement des exemples d'utilisation qui peuvent servir de tests.</li> </ul> <p>La docstring est alors disponible en utilisant la fonction <code>help</code>:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; help(verifie_doublon)\nHelp on function verifie_doublon in module __main__:\n\nverifie_doublon(l: str, c: str) -&gt; bool\n    V\u00e9rifie si la cha\u00eene c contient au moins deux occurences\n    de la cha\u00eene l\n\n&gt;&gt;&gt; \n</code></pre> <p>Int\u00e9r\u00eat</p> <ul> <li>programmer : documenter avant d\u2019\u00e9crire le code donne un objectif clair;</li> <li>relire : les programmes complexes sont difficiles \u00e0 comprendre. La documentation simplifie cette \u00e9tape;</li> <li>collaborer : travailler \u00e0 plusieurs demande de l\u2019organisation et une documentation claire est indispensable.</li> </ul> <p>PEP8 &amp; Zen</p> <p>Pour une meilleure lecture du code et une meilleure communication entre les diff\u00e9rents collaborateurs d'un projet, il est donc n\u00e9cessaire de prendre de bonnes habitudes de programmation et de respecter des conventions d'\u00e9criture:</p> <ul> <li>La PEP8  (Python Enhancement Proposal 8) regroupe les bons usages</li> <li>Le Zen Python :</li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import this\n</code></pre>"},{"location":"T06_Python/T6.4_Specification/T6.4_Specification/#642-exemples","title":"6.4.2 Exemples","text":"<p>Exemple sans tests</p> <p>La fonction <code>maximum</code> vue aux chapitres pr\u00e9c\u00e9dentes:</p> <p>\ud83d\udc0d Script Python<pre><code>def maximum(n1, n2):\n    if n1 &gt; n2:\n        return n1\n    else:\n        return n2\n</code></pre> devient:</p> \ud83d\udc0d Script Python<pre><code>def maximum(n1: int, n2: int) -&gt; int:\n'''\n    Renvoie l'entier maximum entre n1 et n2\n    n1 et n2 : deux entiers\n    '''\n    if n1 &gt; n2:\n        return n1\n    else:\n        return n2\n</code></pre> <p>Exemple avec tests</p> <p>Voici la fonction <code>bissextile</code> sp\u00e9cifi\u00e9e et document\u00e9e. On peut y ajouter des exemples/tests.</p> \ud83d\udc0d Script Python<pre><code>def is_leap(year: int) -&gt; bool:\n'''\n    Renvoie True si l'entier year correspond \u00e0 une ann\u00e9e bissextile\n    et False sinon.\n    &gt;&gt;&gt; is_leap(2021)\n    False\n    &gt;&gt;&gt; is_leap(2020)\n    True\n    &gt;&gt;&gt; is_leap(2000)\n    True\n    &gt;&gt;&gt; is_leap(1900)\n    False\n    '''\n    if year%4 == 0 and year%100 != 0:\n        return True\n    elif year%400 == 0:\n        return True\n    else:\n        return False\n</code></pre> <p>On peut ensuite lancer les tests \u00e0 l'aide du module <code>doctest</code>:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; import doctest\n&gt;&gt;&gt; doctest.testmod()\nTestResults(failed=0, attempted=4)\n&gt;&gt;&gt;\n</code></pre> <p>Testez cette fonction comme ci-dessus, puis en passant en argument <code>verbose=True</code> \u00e0 la fonction <code>testmod</code>.</p>"},{"location":"T06_Python/T6.4_Specification/T6.4_Specification/#643-exercices","title":"6.4.3 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Documenter les fonctions <code>compte_voyelles</code> et <code>fizzbuzz</code> des chapitres pr\u00e9c\u00e9dents.</p>"},{"location":"T07_Algorithmes/accueil/","title":"Algorithmique","text":"<p>Histoire de l'informatique</p> <p> </p> <p></p> <p>Al Hwarizmi (~780-850) est un math\u00e9maticien persan membre de la Maison de la sagesse de Bagdad. Ses travaux d'alg\u00e8bre sur les m\u00e9thodes de r\u00e9solution des \u00e9quations ont donn\u00e9, par d\u00e9formation de son nom latinis\u00e9, au mot algorithme.</p> <p>Alan Turing  (1912-1954) est une math\u00e9maticien britannique, connu pour avoir d\u00e9crypt\u00e9 la machine Enigma pendant la deuxi\u00e8me guerre mondiale. Ses travaux sur les liens entre algorithme et raisonnement math\u00e9matique l'ont conduit \u00e0 imaginer un proc\u00e9d\u00e9 de calcul universel, la machine de Turing, \u00e0 l'origine de la conception des ordinateurs.</p> <p>Tout comme les plus grands chefs con\u00e7oivent leurs recettes \u00e0 partir de recettes de base classiques, on retrouve dans les algorithmes les plus complexes des r\u00e9solutions de probl\u00e8mes simples et r\u00e9currents: parcourir une liste, trier...</p> <p> </p>"},{"location":"T07_Algorithmes/index_algo/","title":"Th\u00e8me 7 : Algorithmique","text":"<p>Histoire de l'informatique</p> <p> </p> <p></p> <p>Al Hwarizmi (~780-850) est un math\u00e9maticien persan membre de la Maison de la sagesse de Bagdad. Ses travaux d'alg\u00e8bre sur les m\u00e9thodes de r\u00e9solution des \u00e9quations ont donn\u00e9, par d\u00e9formation de son nom latinis\u00e9, au mot algorithme.</p> <p>Alan Turing  (1912-1954) est un math\u00e9maticien britannique, connu pour avoir d\u00e9crypt\u00e9 la machine Enigma pendant la deuxi\u00e8me guerre mondiale. Ses travaux sur les liens entre algorithme et raisonnement math\u00e9matique l'ont conduit \u00e0 imaginer un proc\u00e9d\u00e9 de calcul universel, la machine de Turing, \u00e0 l'origine de la conception des ordinateurs.</p> <p>Tout comme les plus grands chefs con\u00e7oivent leurs recettes \u00e0 partir de recettes de base classiques, on retrouve dans les algorithmes les plus complexes des r\u00e9solutions de probl\u00e8mes simples et r\u00e9currents: parcourir une liste, trier...</p> <ul> <li>\ud83d\uddf9 Extremums et moyennes.  </li> <li>\u25a1 Tri par insertion - Tri par s\u00e9lection.  </li> <li>\u25a1 Dichotomie.  </li> <li>\ud83d\uddf9 Algorithmes gloutons.  </li> <li>\u25a1 Algorithme KNN.  </li> </ul> <p> </p>"},{"location":"T07_Algorithmes/T7.1_Tableaux/T7_1_Les_tableaux_final/","title":"T7 1 Les tableaux final","text":"Th\u00e8me 2 - Types Construits                           06              Les types construits : Les Tableaux   I. Notion de tableau, indices  <p>En informatique (comme ailleurs...), un tableau permet de stocker de fa\u00e7on structur\u00e9e plusieurs valeurs, en g\u00e9n\u00e9ral de m\u00eame type.</p> <p>Remarque : m\u00eame si Python l'autorise, il n'y a pas beaucoup de situations o\u00f9 on va cr\u00e9er un tableau avec des valeurs de types diff\u00e9rents.</p> <p>Voici comment on se repr\u00e9sente traditionnellement un tableau de 6 entiers, avec des cases (ou cellules):</p> <p></p> <p>Bien entendu, il faut stocker ce tableau dans un variable et lui donner un nom. Appelons-le <code>t</code>. Ce tableau est ordonn\u00e9, le premier \u00e9l\u00e9ment est 4, le deuxi\u00e8me est 2, et le dernier est 12.</p> <p>On rep\u00e8re chaque \u00e9l\u00e9ment du tableau par sa position, le num\u00e9ro de la case, qu'on appelle indice.</p> <p></p> <p>G\u00e9n\u00e9ralement, on utilise la notation <code>t[i]</code> pour d\u00e9signer l'\u00e9lement d'indice <code>i</code> du tableau <code>t</code>. Par exemple, dans notre exemple, <code>t[3]</code> contient la valeur 42.</p> <p>Enfin la taille ou longueur d'un tableau est le nombre d'\u00e9l\u00e9ments qu'il contient. Ici le tableau <code>t</code> a une taille \u00e9gale \u00e0 6.</p> <p></p>   II. Les tableaux en Python <p>ATTENTION : Dans la suite nous allons employer le terme \u00abtableau\u00bb. Pour parler de ces \u00abtableaux\u00bb les concepteurs de Python ont choisi d'utiliser le terme de \u00ablist\u00bb (\u00abliste\u00bb en fran\u00e7ais). Pour \u00e9viter toute confusion, notamment par rapport \u00e0 des notions qui seront abord\u00e9es en terminale, le choix a \u00e9t\u00e9 fait d'employer \u00abtableau\u00bb \u00e0 la place de \u00abliste\u00bb (dans la documentation vous rencontrerez le terme \u00ablist\u00bb, cela ne devra pas vous pertuber)</p> <p>Les tableaux sont des s\u00e9quences, ils sont modifiables (on parle d'objets \u00abmutables\u00bb).</p> <p>En Python, on impl\u00e9mente le type abstrait de tableau par le type <code>list</code>. On d\u00e9finit un tableau avec des crochets et on s\u00e9pare ses \u00e9l\u00e9ments par des virgules. Par abus de langage on parle de liste plut\u00f4t que de tableau</p> <p></p>   II.1 \u2712 D\u00e9claration d'une liste ou d'un tableau <p>Exemple :</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"] \nprint(famille)\n</code></pre> \ud83d\udccb Algo<pre><code>['Bart', 'Lisa', 'Maggie']\n</code></pre> <p>Remarques :</p> <ul> <li> <p>M\u00eame si cela n'a ici un grand int\u00e9r\u00eat, les \u00e9l\u00e9ments d'une liste peuvent donc \u00eatre de types diff\u00e9rents : ici, tous les \u00e9l\u00e9ments de ma liste sont des cha\u00eenes de caract\u00e8res (<code>str</code>), mais la liste <code>[\"Bart\", 5, \"Lisa\", \"Maggie\"]</code> est aussi une liste valide.</p> </li> <li> <p>Une liste vide se d\u00e9clarera avec <code>[]</code>.</p> </li> </ul> \ud83d\udc0d Script Python<pre><code>copies_corrigees = []\n</code></pre> <p>Nous verrons plus tard qu'il est fr\u00e9quent dans les exercices de partir d'une liste vide et d'ajouter progressivement des \u00e9l\u00e9ments.</p> <p>Nous avons vus en d\u00e9but d'ann\u00e9e, les 4 types de bases : int, float, str et bool</p> <p>Il existe d'autres types de variables. Nous allons en voir 2 aujourd'hui :</p> <ul> <li>les listes</li> <li>les tuples </li> </ul> <p>D\u00e9finition : listes en python</p>    Une liste est un ensemble de valeurs, regroup\u00e9es en un seul objet.  ### Exemples :  \ud83d\udc0d Script Python<pre><code>lst1 = [2, 1, 7, 0] # lst est une liste de nombres entiers\nlst2 = [2.1, 1.1, 7.5, 0.36] # lst est une liste de float\nlst3 = [\"albert\", \"paul\", \"jacques\"] # lst est une liste de str\n\n# mais une liste peut contenir des \u00e9l\u00e9ments de types diff\u00e9rents :\nlst4 = [\"1G4\",\"NSI\", 22, 13.7, True] # cette liste contient des \u00e9l\u00e9ments de diff\u00e9rents types. \n</code></pre> <p></p>   II.2 \u2712 Acc\u00e9s aux \u00e9l\u00e8ments d'une liste <p>On acc\u00e8de \u00e0 un \u00e9l\u00e9ment d'une liste en mettant entre crochets l'indice de l'\u00e9l\u00e9ment (qui commence \u00e0 z\u00e9ro).</p> \ud83d\udc0d Script Python<pre><code>famille[0]\n</code></pre> \ud83d\udccb Algo<pre><code>'Bart'\n</code></pre> \ud83d\udc0d Script Python<pre><code>famille[2]\n</code></pre> \ud83d\udccb Algo<pre><code>'Maggie'\n</code></pre> \ud83d\udc0d Script Python<pre><code>famille[3]\n</code></pre> \ud83d\udccb Algo<pre><code>Traceback (most recent call last):\n  File \"&lt;input&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n</code></pre> <p>Remarques :</p> <ul> <li> <p>Un indice qui d\u00e9passe la valeur \u00a0<code>longueur de la liste -1</code> provoquera donc une erreur <code>list index out of range</code>. C'est une erreur tr\u00e8s fr\u00e9quente lorsqu'on manipule des listes.</p> </li> <li> <p>Il est par contre possible d'utiliser des indices n\u00e9gatifs. On utilise par exemple tr\u00e8s souvent l'indice -1 pour acc\u00e9der au dernier \u00e9l\u00e9ment de la liste, sans avoir \u00e0 conna\u00eetre la longueur de celle-ci :</p> </li> </ul> \ud83d\udc0d Script Python<pre><code>famille[-1]\n</code></pre> \ud83d\udccb Algo<pre><code>'Maggie'\n</code></pre> <p>2. Comment trouver un ami dans la liste ? - utiliser les indices</p> <p></p> <p>Dans une liste, les \u00e9l\u00e9ments sont indic\u00e9s. (c'est \u00e0 dire, num\u00e9rot\u00e9s)</p> <p></p> <p>D\u00e9finitions : Indices des \u00e9l\u00e9ments d'une liste</p>   Les \u00e9l\u00e9ments d'une listes sont num\u00e9rot\u00e9s, on dit **indic\u00e9s**.  + Le premier \u00e9l\u00e9ment a li'ndice 0 + Le second \u00e9l\u00e9ment a li'ndice 1 + Le troisi\u00e8me \u00e9l\u00e9ment a li'ndice 2  etc...  #### remarque tr\u00e8s importante :  **L'indice du dernier \u00e9l\u00e9ment** est \u00e9gal \u00e0 **len(lst) - 1**  Par exemple si la liste \u00e0 4 \u00e9l\u00e9ment, ils ont les indices $0$, $1$, $2$ et $3$, la longueur de la liste est $4$  ### notations :  Souvent, quand nous travaillerons avec des listes, nous les repr\u00e9senterons avec des cases pour les \u00e9l\u00e9ments, et les indices report\u00e9s (au dessus ou en dessous) :  ![tableau_indice.png](attachment:tableau_indice.png)       Les indices permettent d'acc\u00e9der \u00e0 la valeur des \u00e9l\u00e9ments :   \ud83d\udc0d Script Python<pre><code>lst[0] est le premier \u00e9l\u00e9ment de la liste\nlst[1] est le second \u00e9l\u00e9ment de la liste\nlst[2] est le troisi\u00e8me \u00e9l\u00e9ment de la liste\nect\n\nLe dernier \u00e9l\u00e9ment d une liste de longueur 6 \u00e0 l indice 5\n</code></pre> <p></p>   II.3 \u2712 Longueur d'une liste <p>La longueur d'une liste sera donn\u00e9e par la fonction <code>len()</code>, qui renvoie donc un nombre entier positif ou nul.</p> \ud83d\udc0d Script Python<pre><code>len(famille)\n</code></pre> \ud83d\udccb Algo<pre><code>3\n</code></pre> <ul> <li>Le dernier \u00e9l\u00e9ment d'une liste <code>maliste</code> (non vide) sera donc toujours l'\u00e9l\u00e9ment d'indice <code>len(maliste)-1</code>.</li> </ul> \ud83d\udc0d Script Python<pre><code>famille[len(famille) - 1]\n</code></pre> \ud83d\udccb Algo<pre><code>'Maggie'\n</code></pre> \ud83d\udc0d Script Python<pre><code>famille[len(famille)]\n</code></pre> \ud83d\udccb Algo<pre><code>Traceback (most recent call last):\n  File \"&lt;input&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n</code></pre> <p></p>   II.4 \u2712 Parcours des \u00e9l\u00e9ments d'une liste <p>Il existe principalement deux m\u00e9thodes pour parcourir une liste: par ses \u00e9l\u00e9ments ou par les indices. Mais dans les deux cas on utilise une boucle <code>for</code>.</p> <p>M\u00e9thode 1 : Parcours \u00abpar \u00e9l\u00e9ments\u00bb   </p> <p>C'est la m\u00e9thode la plus naturelle, celle d\u00e9j\u00e0 vue lors de la pr\u00e9sentation de la boucle <code>for</code>. Nous allons simplement it\u00e9rer sur les \u00e9l\u00e9ments de la liste. On l'a d\u00e9j\u00e0 rencontr\u00e9 sur la boucle <code>for</code>:</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n\nfor membre in famille:\n    print(membre)\n</code></pre> \ud83d\udccb Algo<pre><code>Bart\nLisa\nMaggie\n</code></pre> <p>Remarque :</p> <ul> <li>Penser \u00e0 donner un nom signifiant \u00e0 la variable qui parcourt la liste. Il aurait par exemple \u00e9t\u00e9 tr\u00e8s maladroit d'\u00e9crire </li> </ul> \ud83d\udc0d Script Python<pre><code>for k in famille:\n    print(k)\n</code></pre> \ud83d\udccb Algo<pre><code>Bart\nLisa\nMaggie\n</code></pre> <p>En effet le nom de variable <code>k</code> est habituellement utilis\u00e9 pour les nombres (les indices, les compteurs...).</p> <p>\ud83d\udcbb Exercice 1.</p> <p>Apr\u00e8s un r\u00e9f\u00e9rendum, la liste <code>urne</code> contient uniquement des <code>'oui'</code> ou des <code>'non'</code>. D\u00e9terminer le pourcentage de <code>oui</code> de ce r\u00e9f\u00e9rendum.</p> \ud83d\udc0d Script Python<pre><code>urne = ['oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'non', 'non', 'non', 'oui', 'oui', 'non', 'oui', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'non', 'non', 'oui', 'oui', 'oui', 'non', 'oui', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'non', 'oui', 'non', 'non', 'non', 'non', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'non', 'non', 'oui', 'oui', 'oui', 'oui', 'oui', 'oui', 'non', 'oui']\n</code></pre> <p>Avantages et inconv\u00e9nients du Parcours par \u00e9l\u00e9ment </p> \ud83d\udc0d Script Python<pre><code>    for membre in famille:\n        print(membre)\n</code></pre> <p>Les avantages :</p> <ul> <li>la simplicit\u00e9 : un code plus facile \u00e0 \u00e9crire, avec un nom de variable explicite.</li> <li>la s\u00e9curit\u00e9  : pas de risque d'<code>index out of range</code> !</li> </ul> <p>Les inconv\u00e9nients :</p> <ul> <li>m\u00e9thode rudimentaire : lorsqu'on est \u00abpositionn\u00e9\u00bb sur un \u00e9l\u00e9ment, il n'est pas possible d'acc\u00e9der au pr\u00e9c\u00e9dent ou au suivant. (et c'est parfois utile).</li> <li>on n'acc\u00e9de pas \u00e0 la position (indice) de l'\u00e9l\u00e9ment.</li> <li>on ne peut pas modifier l'\u00e9l\u00e9ment sur lequel on est positionn\u00e9 :</li> </ul> \ud83d\udc0d Script Python<pre><code>lst = [1, 2, 3]\nfor nb in lst:\n    nb = nb * 2 # (1)\n\nlst \n</code></pre> \ud83d\udccb Algo<pre><code>[1, 2, 3]\n</code></pre> <ol> <li>On veut multiplier par 2 chaque \u00e9l\u00e9ment de la liste</li> <li>La liste <code>lst</code> n'a pas chang\u00e9...</li> </ol> <p>M\u00e9thode 2 :  Parcours \u00abpar indice\u00bb </p> <p>Chaque \u00e9l\u00e9ment \u00e9tant accessible par son indice (de <code>0</code> \u00e0   <code>len(liste) - 1</code> ), il suffit de faire parcourir \u00e0 une variable <code>i</code> l'ensemble des entiers de <code>0</code> \u00e0   <code>len(liste) - 1</code>, par l'instruction <code>range(len(liste))</code> :</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n\nfor i in range(len(famille)):\n    print(famille[i])\n</code></pre> \ud83d\udccb Algo<pre><code>Bart\nLisa\nMaggie\n</code></pre> <p>Bonne habitude \u00e0 prendre : nommer sa variable d'indice <code>i</code>, <code>j</code>, <code>k</code> ou <code>indice</code> mais pas autre chose !  </p> <p>Avantages et inconv\u00e9nients du Parcours par indice </p> \ud83d\udc0d Script Python<pre><code>    for i in range(len(famille)):\n        print(famille[i])\n</code></pre> <p>Les avantages  :</p> <ul> <li>le contr\u00f4le : en parcourant par indice, on peut s'arr\u00eater o\u00f9 on veut, on peut acc\u00e9der au suivant/pr\u00e9c\u00e9dent...</li> <li>pour les tableaux \u00e0 deux dimensions, on retrouve la d\u00e9signation classique d'un \u00e9l\u00e9ment par num\u00e9ro de ligne / num\u00e9ro de colonne.</li> </ul> <p>Les inconv\u00e9nients :</p> <ul> <li>la complexit\u00e9 : il faut conna\u00eetre le nombre d'\u00e9l\u00e9ments de la liste (ou le r\u00e9cup\u00e9rer par la fonction <code>len()</code> )</li> <li>le risque d'erreur : encore et toujours le <code>index out of range</code>...</li> </ul> <p> FICHE : les listes </p> d\u00e9finition   Une liste est un ensemble de valeurs, regroup\u00e9es en un seul objet.  #### exemples :  \ud83d\udc0d Script Python<pre><code>lst1 = [2, 1, 7, 0] # lst est une liste de nombres entiers\nlst2 = [2.1, 1.1, 7.5, 0.36] # lst est une liste de float\nlst3 = [\"albert\", \"paul\", \"jacques\"] # lst est une liste de str\n\n# mais une liste peut contenir des \u00e9l\u00e9ments de types diff\u00e9rents :\nlst4 = [\"1G4\",\"NSI\", 22, 13.7, True] # cette liste contient des \u00e9l\u00e9ments de diff\u00e9rents types. \n</code></pre>  #### type : une liste \u00e0 le type list indices   Les \u00e9l\u00e9ments d'une listes sont num\u00e9rot\u00e9s, on dit **indic\u00e9s**.  + Le premier \u00e9l\u00e9ment a l'indice 0 + Le second \u00e9l\u00e9ment a li'ndice 1 + Le troisi\u00e8me \u00e9l\u00e9ment a li'ndice 2  etc...  #### remarque tr\u00e8s importante :  **L'indice du dernier \u00e9l\u00e9ment** est \u00e9gal \u00e0 **len(lst) - 1**   modifier l'\u00e9l\u00e9ment d'indice **i**   Il suffit d'affecter une valeur \u00e0 l'\u00e9lement d'indice **i** \ud83d\udc0d Script Python<pre><code>lst = [\"a\", \"b\", \"c\"]\nlst[1] = \"e\" # maintenant lst vaut : [\"a\", \"e\", \"c\"]\n</code></pre> longueur   La fonction **len()** renvoie la longueur d'une liste :  \ud83d\udc0d Script Python<pre><code>lst = [1, 2, 3]\nnombre_elements = len(lst) # nombre d'\u00e9l\u00e9ment prendra la valeur 3\n</code></pre> Parcours par indice  #### ce code est \u00e0 connaitre SANS AUCUNE HESITATION  \ud83d\udc0d Script Python<pre><code>    for i in range(len(lst)) :\n        print( lst[i] )\n</code></pre>  #### on peut aussi modifier tout les \u00e9l\u00e9ments gr\u00e2ce \u00e0 un parcours :  \ud83d\udc0d Script Python<pre><code>    lst = [1, 2, 3]\n    for i in range(len(lst)) :\n        lst[i] = 2 * lst[i] # maintenant lst vaut : [2, 4, 6]\n</code></pre> Parcours par valeur  #### ce code est \u00e0 connaitre SANS AUCUNE HESITATION  \ud83d\udc0d Script Python<pre><code>    for elt in lst :\n        print(elt)\n</code></pre>  #### exemple :  \ud83d\udc0d Script Python<pre><code>    lst = [1, 2, 3]\n    for elt in lst :\n        print(3*elt)\n</code></pre> \ud83d\udc0d Script Python<pre><code>    3\n    6\n    9\n</code></pre> <p></p> <p>\ud83d\udcbb Exercice 2.</p> <p>On donne la liste : \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 1, 5, 9]\n</code></pre></p> <p>En utilisant un parcours par indice :</p> <ol> <li>Afficher les \u00e9l\u00e9ments de cette liste.  </li> <li>Afficher les \u00e9l\u00e9ments de cette liste dans l'ordre inverse (en commen\u00e7ant par 9)</li> </ol> \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 1, 5, 9]\n</code></pre> <p>\ud83d\udcbb Exercice 3.</p> <p>Trouvez le nombre qui est exactement \u00e0 la m\u00eame place dans la liste <code>list1</code> et dans la liste <code>list2</code>, sachant que :</p> <ul> <li>les deux listes ont la m\u00eame taille  </li> <li>vous n'avez droit qu'\u00e0 une seule boucle <code>for</code>. </li> </ul> \ud83d\udc0d Script Python<pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\n\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n</code></pre> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p>\ud83d\udcbb Exercice 4.</p> <p>Dans la liste </p> \ud83d\udc0d Script Python<pre><code>lst = [2428970, 1518306, 4971405, 1690994, 7918102, 4030834, 8830131, 7514856, 7903128, 6307569, 6624056, 5260490, 6447835, 4598783, 9108626, 5045240, 4128269, 4460134, 2497873, 5076659, 8104003, 7604887, 7451976, 4136924, 5691945, 8726293, 7855592, 3562473, 8849129, 6488474, 5303587, 2606124, 5484044, 4559758, 7592232, 2211406, 9974334, 7988936, 7582946, 7668748, 1799997, 3837917, 3196209, 7064342, 2543765, 1182013, 7253381, 1153735, 1037391, 4375946, 4445821, 5965587, 6001887, 4162629, 5235783, 8716582, 4901175, 5445422, 1120005, 8332321, 7075046, 2194175, 5557300, 2887907, 5103214, 2520744, 5104399, 2065665, 3035703, 7890213, 1758301, 3407982, 1355453, 4896338, 7979392, 9671602, 9690721, 7423779, 7423780, 3080825, 6785783, 3836837, 7310931, 1857470, 3492507, 2823231, 1492310, 1911148, 9620515, 5564910, 7009452, 7464745, 9608747, 7267383, 6939140, 6556578, 3592267, 8135497, 4881660, 5346884, 6859150]\n</code></pre> <p>se cachent deux nombres cons\u00e9cutifs. Pouvez-vous les trouver ?</p> \ud83d\udc0d Script Python<pre><code>lst = [2428970, 1518306, 4971405, 1690994, 7918102, 4030834, 8830131, 7514856, 7903128, 6307569, 6624056, 5260490, 6447835, 4598783, 9108626, 5045240, 4128269, 4460134, 2497873, 5076659, 8104003, 7604887, 7451976, 4136924, 5691945, 8726293, 7855592, 3562473, 8849129, 6488474, 5303587, 2606124, 5484044, 4559758, 7592232, 2211406, 9974334, 7988936, 7582946, 7668748, 1799997, 3837917, 3196209, 7064342, 2543765, 1182013, 7253381, 1153735, 1037391, 4375946, 4445821, 5965587, 6001887, 4162629, 5235783, 8716582, 4901175, 5445422, 1120005, 8332321, 7075046, 2194175, 5557300, 2887907, 5103214, 2520744, 5104399, 2065665, 3035703, 7890213, 1758301, 3407982, 1355453, 4896338, 7979392, 9671602, 9690721, 7423779, 7423780, 3080825, 6785783, 3836837, 7310931, 1857470, 3492507, 2823231, 1492310, 1911148, 9620515, 5564910, 7009452, 7464745, 9608747, 7267383, 6939140, 6556578, 3592267, 8135497, 4881660, 5346884, 6859150]\n</code></pre> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p></p>   II.5 \u2712 Modification d'une liste <p>En Python, les objets de type <code>list</code> sont modifiables (on emploie le mot mutable). Et c'est souvent une bonne chose, car des listes peuvent \u00e9voluer apr\u00e8s leur cr\u00e9ation. </p> <p>Modification d'un \u00e9l\u00e9ment existant</p> <p>On modifie un \u00e9l\u00e9ment du tableau par simple affectation, en \u00e9crasant sa valeur avec la nouvelle.</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfamille[0] = \"Bartholomew\" # oui, c'est son vrai nom\nfamille\n</code></pre> \ud83d\udccb Algo<pre><code>['Bartholomew', 'Lisa', 'Maggie']\n</code></pre> <p>Ajout d'un \u00e9lement \u00e0 la fin d'une liste : la m\u00e9thode append()</p> <p>On modifie un \u00e9l\u00e9ment du tableau par simple affectation, en \u00e9crasant sa valeur avec la nouvelle.</p> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfamille.append(\"Milhouse\")\nfamille  \n</code></pre> \ud83d\udccb Algo<pre><code>['Bart', 'Lisa', 'Maggie', 'Milhouse']\n</code></pre> <p>Remarques :</p> <ul> <li>La m\u00e9thode <code>append()</code> rajoute donc un \u00e9l\u00e9ment \u00e0 la fin de la liste.  </li> <li>Dans beaucoup d'exercices, on part d'une liste vide <code>[]</code> que l'on remplit peu \u00e0 peu avec des <code>append()</code>.  </li> <li>(HP) Il est possible d'ins\u00e9rer un \u00e9l\u00e9ment \u00e0 la position <code>i</code> avec la m\u00e9thode <code>insert</code> :</li> </ul> \ud83d\udc0d Script Python<pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\"]\nfamille.insert(1, \"Nelson\") # on ins\u00e8re \u00e0 la position 1\nfamille\n</code></pre> \ud83d\udccb Algo<pre><code>['Bart', 'Nelson', 'Lisa', 'Maggie']\n</code></pre> <p>\ud83d\udcbb Exercice 5.</p> <p>Construire une liste contenant tous les nombres inf\u00e9rieurs \u00e0 100 qui sont divisibles par 7.</p> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p>Suppression d'un \u00e9l\u00e9ment d'une liste par la m\u00e9thode remove() </p> \ud83d\udc0d Script Python<pre><code>famille = ['Bart', 'Nelson', 'Lisa', 'Maggie']\nfamille.remove(\"Nelson\")\nfamille\n</code></pre> \ud83d\udccb Algo<pre><code>['Bart', 'Lisa', 'Maggie']\n</code></pre> <p>Remarques :</p> <ul> <li>Attention, <code>remove</code> n'enl\u00e8ve que la premi\u00e8re occurrence de l'\u00e9l\u00e9ment d\u00e9sign\u00e9. S'il y en a d'autres apr\u00e8s, elles resteront dans la liste :</li> </ul> \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 5, 1, 9, 4]\nlst.remove(4)\nlst\n</code></pre> \ud83d\udccb Algo<pre><code>[3, 1, 5, 1, 9, 4]\n</code></pre> <ul> <li>Si l'\u00e9l\u00e9ment \u00e0 supprimer n'est pas trouv\u00e9, un message d'erreur est renvoy\u00e9 :</li> </ul> \ud83d\udc0d Script Python<pre><code>lst = [3, 1, 4, 5, 1, 9]\nlst.remove(2)\n</code></pre> \ud83d\udccb Algo<pre><code>Traceback (most recent call last):\n  File \"&lt;input&gt;\", line 2, in &lt;module&gt;\nValueError: list.remove(x): x not in list\n</code></pre> <p></p>   II.6 \u2712 Exercices <p>\ud83d\udcbb Exercice 6.</p> <p>On consid\u00e8re la liste </p> \ud83d\udc0d Script Python<pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> <p>Construire la liste <code>temp_pos</code> qui ne contient que les \u00e9l\u00e9ments positifs de <code>temp</code>.</p> \ud83d\udc0d Script Python<pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p>\ud83d\udcbb Exercice 7. BNS - EP</p> <p>Programmer la fonction <code>recherche(tab: list, n: int) -&gt; int</code>, prenant en param\u00e8tre un tableau non vide <code>tab</code> (type <code>list</code>) d'entiers et un entier <code>n</code>, et qui renvoie l'indice de la derni\u00e8re occurrence de l'\u00e9l\u00e9ment cherch\u00e9. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau.</p> <p>Exemples :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; recherche([5, 3],1)\n2\n&gt;&gt;&gt; recherche([2,4],2)\n0\n&gt;&gt;&gt; recherche([2,3,5,2,4],2)\n3\n</code></pre> \ud83d\udc0d Script Python<pre><code>\n</code></pre> <p>\ud83d\udcbb Exercice 8.</p> <p>On consid\u00e8re la liste <code>lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]</code>. Seuls les nombres entre 60 et 90 ont une signification : ce sont des codes ASCII (r\u00e9cup\u00e9rables par la fonction <code>chr</code> ).  Cr\u00e9er une liste <code>sol</code> qui contient les lettres correspondants aux nombres ayant une signification.</p> \ud83d\udc0d Script Python<pre><code>lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]\n</code></pre>"},{"location":"T07_Algorithmes/T7.1_Tableaux/T7_1_Parcours_sequentiel_d_un_tableau/","title":"C12 Les tableaux en Python","text":"<p>Calcul de moyenne \u00e0 partir d'un tableau</p> <p>Ecrire une fonction qui prend en param\u00e8tre un tableau d'entiers non vide et qui renvoie la moyenne de ces entiers. La fonction est sp\u00e9cifi\u00e9e ci-apr\u00e8s et doit passer les assertions fournies.</p> \ud83d\udc0d Script Python<pre><code>def moyenne(tab):\n'''\n    moyenne(list) -&gt; float\n    Entr\u00e9e : un tableau non vide d'entiers\n    Sortie : nombre de type float\n    Correspondant \u00e0 la moyenne des valeurs pr\u00e9sentes dans le tableau\n    '''\n    pass\n</code></pre> \ud83d\udc0d Script Python<pre><code>#Jeu de tests\nassert moyenne([1]) == 1\nassert moyenne([1,2,3,4,5,6,7]) == 4\nassert moyenne([1,2]) == 1.5\n</code></pre> <p>Recherche du maximum dans un tableau</p> <p>Ecrire une fonction <code>RechercheMax(tab)</code> qui prend en param\u00e8tre un tableau d'entiers non vide et qui renvoie le maximum de ces entiers, pour un tableau vide elle doit renvoyer <code>None</code>. La fonction est sp\u00e9cifi\u00e9e ci-apr\u00e8s et doit passer les assertions fournies.</p> \ud83d\udc0d Script Python<pre><code>def RechercheMax(tab):\n'''\n    RechercheMax(list) -&gt; float\n    Entr\u00e9e : un tableau non vide d'entiers\n    Sortie : nombre de type float\n    Correspondant au maximum des valeurs pr\u00e9sentes dans le tableau\n    '''\n    pass\n</code></pre> \ud83d\udc0d Script Python<pre><code>assert RechercheMax([1]) == 1\nassert RechercheMax([1,2,3,4,5,6,7]) == 7\nassert RechercheMax([1,2]) == 3\nassert RechercheMax([-1,2,3,14,5,6,-7]) == 14\nassert RechercheMax([]) == None\n</code></pre> <p>Bonus sur une liste de notes</p> <p>On dispose d'un tableau de notes comprises entre 0 et 20 et on souhaite augmenter les notes selon la m\u00e9thode suivante :  </p> <ul> <li>un bonus de 1,5 points pour les notes strictement inf\u00e9rieures \u00e0 8</li> <li>un bonus de 1 point pour les notes comprises entre 8 et 12 (strictement) </li> <li>un demi-point \u00e0 partir de 12.  </li> </ul> <p>Compl\u00e9ter la fonction <code>bonus</code> ci-dessous qui prend en param\u00e8tre <code>tab</code> un tableau de notes et renvoie un nouveau tableau <code>nv_tab</code> dont les \u00e9l\u00e9ments sont les notes augment\u00e9es de 2 points (sans toutefois d\u00e9passer 20).</p> \ud83d\udc0d Script Python<pre><code>def bonus(tab):\n    pass\n</code></pre> <p>Maximun avec son indice</p> <p>\u00c9crire une fonction <code>maxi</code> qui prend en param\u00e8tre une liste tab de nombres entiers et renvoie un couple donnant le plus grand \u00e9l\u00e9ment de cette liste, ainsi que l\u2019indice de la premi\u00e8re apparition de ce maximum dans la liste. Exemple : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; maxi([1,5,6,9,1,2,3,7,9,8])\n(9,3)\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>def maxi(tab):\n    pass\n</code></pre> <p>Rechcerche maximum et minimum</p> <p>\u00c9crire une fonction <code>RechercheMinMax</code> qui prend en param\u00e8tre un tableau de nombres non tri\u00e9s tab, et qui renvoie la plus petite et la plus grande valeur du tableau sous la forme d\u2019un tableau \u00e0 deux valeurs \u2018min\u2019 et \u2018max\u2019. Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python.</p> <p>Exemples : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; tableau = [0, 1, 4, 2, -2, 9, 3, 1, 7, 1]\n&gt;&gt;&gt; resultat = rechercheMinMax(tableau)\n&gt;&gt;&gt; resultat\n[-2,9]\n\n&gt;&gt;&gt; tableau = []\n&gt;&gt;&gt; resultat = rechercheMinMax(tableau)\n&gt;&gt;&gt; resultat\n[None,None]\n</code></pre></p> \ud83d\udc0d Script Python<pre><code>def rechercheMinMax(tab):\n    pass\n</code></pre> <p>\u00c9cr\u00eatage des valeurs d'un tableau</p> <p>L'\u00e9cr\u00eatage d'un signal consiste \u00e0 limiter l'amplitude du signal entre deux valeurs <code>x_min</code> et <code>x_max</code>. On peut \u00e9galement appliquer cela aux valeurs d'un tableau. Voici par exemple un tableau <code>valeurs</code> que l'on a \u00e9cr\u00eat\u00e9 entre \\(-150\\) et \\(150\\) pour donner le tableau <code>valeurs_ecretees</code> :</p> \ud83d\udc0d Script Python<pre><code>valeurs          = [34, 56, 89, 134, 152, 250, 87, -34, -187, -310]\nvaleurs_ecretees = [34, 56, 89, 134, 150, 150, 87, -34, -150, -150]\n</code></pre> <p>Compl\u00e9ter la fonction <code>ecrete</code> ci-dessous qui prend en param\u00e8tre un tableau de <code>valeurs</code> ainsi que <code>x_min</code> et <code>x_max</code> avec <code>x_min &lt;= x_max</code> et renvoie un tableau des valeurs \u00e9cr\u00eat\u00e9es entre <code>x_min</code> et <code>x_max</code>.</p> <p>Exemple</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; valeurs = [34, 56, 89, 134, 152, 250, 87, -34, -187, -310]\n&gt;&gt;&gt; ecrete(valeurs, -150, 150)\n[34, 56, 89, 134, 150, 150, 87, -34, -150, -150]\n</code></pre> \ud83d\udc0d Script Python<pre><code>def ecrete(tab,x_min,x_max):\n    pass\n</code></pre> <p>Remplacer une valeur</p> <p>\u00c9crire la fonction <code>remplacer</code> prenant en argument :</p> <ul> <li>une liste d'entiers <code>valeurs</code></li> <li>un entier <code>valeur_cible</code></li> <li>un entier <code>nouvelle_valeur</code></li> </ul> <p>et renvoyant une nouvelle liste contenant les m\u00eames valeurs que <code>valeurs</code>, dans le m\u00eame ordre, sauf <code>valeur_cible</code> qui a \u00e9t\u00e9 remplac\u00e9 par <code>nouvelle_valeur</code>. </p> <p>La liste pass\u00e9e en param\u00e8tre ne doit pas \u00eatre modifi\u00e9e.</p> <p>Exemples</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; valeurs = [3, 8, 7]\n&gt;&gt;&gt; remplacer(valeurs, 3, 0)\n[0, 8, 7]\n&gt;&gt;&gt; valeurs\n[3, 8, 7]\n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; valeurs = [3, 8, 3, 5]\n&gt;&gt;&gt; remplacer(valeurs, 3, 0)\n[0, 8, 0, 5]\n&gt;&gt;&gt; liste\n[3, 8, 3, 5]\n</code></pre> \ud83d\udc0d Script Python<pre><code>def remplacer(tab,valeur_cible,nouvelle_valeur):\n    pass\n</code></pre> <p>Plus longue p\u00e9riode de gel\u00e9es</p> <p>Un m\u00e9t\u00e9orologue a relev\u00e9 les temp\u00e9ratures au lever du jour dans sa rue. Il souhaite d\u00e9terminer la dur\u00e9e de la plus longue p\u00e9riode de gel\u00e9es cons\u00e9cutives durant ces relev\u00e9s.</p> <p>Vous devez \u00e9crire une fonction <code>gelees(temperatures)</code> qui renvoie la longueur de la plus longue s\u00e9quence de nombres n\u00e9gatifs ou nuls cons\u00e9cutifs dans la liste.</p> <p>Les temp\u00e9ratures sont donn\u00e9es sous forme d'une liste de nombres :</p> \ud83d\udc0d Script Python<pre><code>temperatures = [2, -3, -2, 0, 1, -1]\n</code></pre> <p>Si la liste est vide, la fonction renverra la valeur <code>0</code>.</p> <p>On rappelle que l'eau g\u00e8le \u00e0 partir de 0\u00b0C inclus.</p> <p>Exemples</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; gelees([2, -3, -2, 0, 1, -1])\n3\n&gt;&gt;&gt; gelees([3, 2, 2])\n0\n&gt;&gt;&gt; gelees([])\n0\n</code></pre> \ud83d\udc0d Script Python<pre><code>def gelees(temperatures):\n    pass\n</code></pre> <p>D\u00e9fi tir\u00e9 de c0d1ngUP 2015</p> <p>Consulter l'\u00e9nonc\u00e9 du pyd\u00e9fi Le lion de N\u00e9m\u00e9e.</p> <p>Ce d\u00e9fi est tir\u00e9 de c0d1ngUP 2015</p> <p>Histoire Le premier travail qu'Eurysth\u00e9e demanda \u00e0 Hercule fut de lui ramener la peau du lion de N\u00e9m\u00e9e. Le terrible animal vivait dans la for\u00eat d'Argolide et terrorisait les habitants de la r\u00e9gion. Hercule traversa donc la for\u00eat d'Argolide \u00e0 la recherche du lion. L\u00e0, il vit que des petits panneaux avaient \u00e9t\u00e9 fix\u00e9s sur certains arbres. Sur chaque panneau, le nom d'une divinit\u00e9 \u00e9tait inscrit. Hercule nota tous les noms qu'il rencontra. Approchant de l'antre du lion, il vit, grav\u00e9 dans la pierre :   </p> <ul> <li>La lettre \"A\" vaut 1,  </li> <li>la lettre \"B\" vaut 2,  </li> <li>...  </li> <li>jusqu'\u00e0 la lettre \"Z\" qui vaut 26.  </li> </ul> <p>Ainsi, le mot : \"BABA\" vaut 6 (=2+1+2+1). Cherche la valeur de chaque mot, classe-les de la plus petite valeur \u00e0 la plus grande, et prononce les mots dans cet ordre : le lion se rendra \u00e0 toi. Hercule consid\u00e9ra sa liste de divinit\u00e9s :  </p> <p>ARTEMIS ASCLEPIOS ATHENA ATLAS CHARON CHIRON CRONOS DEMETER EOS ERIS EROS GAIA HADES HECATE HEPHAISTOS HERA HERMES HESTIA HYGIE LETO MAIA METIS MNEMOSYNE NYX OCEANOS OURANOS PAN PERSEPHONE POSEIDON RHADAMANTHE SELENE THEMIS THETIS TRITON ZEUS Voyons : ARTEMIS vaut 85, donc il faut la placer avant ASCLEPIOS qui vaut 99... </p> <p>D\u00e9fi Pouvez-vous aider Hercule, en lui indiquant dans quel ordre il doit citer les divinit\u00e9s ? Donnez simplement la liste des valeurs associ\u00e9es aux dieux). On verra ult\u00e9rieuement pour r\u00e9soudre le probl\u00e8me pos\u00e9.</p> <ol> <li> <p>\u00c9crire une fonction prenant en param\u00e8tre une lettre et qui renvoie sa \u00abvaleur\u00bb. Pour rappel: \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; ord('A')\n65\n</code></pre></p> </li> <li> <p>\u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res et qui renvoie sa \u00abvaleur\u00bb. Vous devez cr\u00e9er une liste la fonction de la question .  </p> </li> <li> <p>Cr\u00e9er la liste des valeurs des divinit\u00e9s.  </p> </li> </ol> <p>Pour la fonction <code>split</code> utilis\u00e9e ci-dessous, voir sur cette page.</p> \ud83d\udc0d Script Python<pre><code>divinites = 'ARTEMIS ASCLEPIOS ATHENA ATLAS CHARON CHIRON CRONOS DEMETER EOS ERIS EROS GAIA HADES HECATE HEPHAISTOS HERA HERMES HESTIA HYGIE LETO MAIA METIS MNEMOSYNE NYX OCEANOS OURANOS PAN PERSEPHONE POSEIDON RHADAMANTHE SELENE THEMIS THETIS TRITON ZEUS'.split()\n</code></pre> \ud83d\udc0d Script Python<pre><code>def valeur(lettre):\n    pass\n</code></pre> \ud83d\udc0d Script Python<pre><code>def valeur_mot(mot):\n    pass\n</code></pre> \ud83d\udc0d Script Python<pre><code>def liste_valeur_mot(message):\n    pass\n</code></pre> <p>D\u00e9fi tir\u00e9 de c0d1ng 2015</p> <p>Histoire Les Hesp\u00e9rides, filles d'Atlas, habitaient un merveilleux jardin dont les pommiers donnaient des pommes en or. Pour son 11e travail, Eurysth\u00e9e demanda \u00e0 Hercule de ramener ces pommes.  Une fois atteint le jardin merveilleux, l'oracle N\u00e9r\u00e9e apprit \u00e0 Hercule qu'il pourrait repartir avec une partie des pommes... \u00e0 condition qu'il montre ses facult\u00e9s en calcul mental. N\u00e9r\u00e9e lui tint ce propos : J'ai empil\u00e9 les pommes d'or pour toi, sous la forme d'une pyramide. L'\u00e9tage le plus haut ne contient qu'une pomme. L'\u00e9tage juste en dessous forme un carr\u00e9 2x2 (contenant 4 pommes), l'\u00e9tage juste en dessous forme un carr\u00e9 3x3 (contenant 9 pommes). La pyramide que tu vois contient 50 \u00e9tages. L'\u00e9tage de base contient donc 2 500 pommes... Je suis d'accord pour te laisser partir avec les pommes contenues dans certains \u00e9tages. Pr\u00e9cis\u00e9ment, si un \u00e9tage contient un nombre de pommes multiple de 3, tu peux l'emporter. Si tu m'annonces combien de pommes tu emporteras au total, je te laisserai partir avec les pommes...</p> <p></p> <p>Pour relever ce d\u00e9fi, vous devez aider Hercule en lui indiquant le nombre de pommes qu'il pourra emporter. Par exemple, si la pyramide n'avait compt\u00e9 que 6 \u00e9tages comme indiqu\u00e9 sur la figure suivante, chaque \u00e9tage aurait \u00e9t\u00e9 compos\u00e9 de : 1, 4, 9, 16, 25 et 36 pommes. Hercule aurait pu emporter les 9 pommes de l'\u00e9tage 3 (car 9 est un multiple de 3) et les 36 pommes de l'\u00e9tage 6 (car 36 est un multiple de 3). Au total il aurait donc emport\u00e9 45 pommes. Mais combien peut-il en emporter pour une pyramide de 50 \u00e9tages ?</p> <p>R\u00e9pondre au pyd\u00e9fi Le jardin des Hesp\u00e9rides.</p> \ud83d\udc0d Script Python<pre><code>def defi2(nbetages):\n    pass\n</code></pre>"},{"location":"T07_Algorithmes/T7.1_Tri_selection/T7.1_Tri_selection/","title":"T7.1 Tri par s\u00e9lection","text":""},{"location":"T07_Algorithmes/T7.1_Tri_selection/T7.1_Tri_selection/#711-pourquoi-etudier-des-algorithmes-de-tri","title":"7.1.1 Pourquoi \u00e9tudier des algorithmes de tri ?","text":"<p>Autant ne pas le cacher, ces algorithmes sont d\u00e9j\u00e0 impl\u00e9ment\u00e9s (quelque soit le langage) dans des fonctions tr\u00e8s performantes.  </p> <p>En Python, on utilise la fonction <code>sort()</code>:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; tab = [4, 8, 1, 2, 6]\n&gt;&gt;&gt; tab.sort()\n&gt;&gt;&gt; tab\n[1, 2, 4, 6, 8]\n</code></pre> <p></p> <p>Le meilleur de nos futurs algorithmes de tri sera moins efficace que celui de cette fonction <code>sort()</code>... Malgr\u00e9 cela, il est essentiel de se confronter \u00e0 l'\u00e9laboration manuelle d'un algorithme de tri: </p> <ul> <li>besoin pratique de trier;</li> <li>tri comme sous-programmes;</li> <li>utilisation de toutes les techniques informatiques.</li> </ul> <p>Le tri par s\u00e9lection est le premier des deux algorithmes de tri que nous allons \u00e9tudier (nous \u00e9tudierons aussi le tri par insertion). Ces deux algorithmes ont pour particularit\u00e9 de :</p> <ul> <li>ne pas n\u00e9cessiter la cr\u00e9ation d'une nouvelle liste. Ils modifient la liste \u00e0 trier sur place.</li> <li>ne pas faire intervenir de fonctions complexes.</li> </ul>"},{"location":"T07_Algorithmes/T7.1_Tri_selection/T7.1_Tri_selection/#712-principe-du-tri","title":"7.1.2 Principe du tri","text":"<p>On cherche \u00e0 trier un tableau de \\(n\\) valeurs diff\u00e9rentes, en g\u00e9n\u00e9ral les entiers de \\(0\\) \u00e0 \\(n-1\\).</p> <ul> <li>En partant de l'indice 0, on cherche l'indice du plus petit \u00e9l\u00e9ment en parcourant le tableau;</li> <li>on l'\u00e9change avec l'\u00e9l\u00e9ment d'indice 0;</li> <li>On recommence en partant de l'indice 1, puis 2, etc. jusqu'\u00e0 ce que le tableau soit tri\u00e9.</li> </ul> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>On veut \u00e9crire une fonction <code>tri_selection</code> qui prend en param\u00e8tre une liste et qui trie cette liste par l'algorithme du tri par s\u00e9lection.</p> <ol> <li>\u00c9crire un jeu de tests pour cette fonction.</li> <li>Compl\u00e9ter puis tester la fonction ci-dessous. </li> </ol> \ud83d\udc0d Script Python<pre><code>def tri_selection(tab: list) -&gt; None:\n    n = \n    for i in range(0, n-1):\n        indice_min = \n        for j in range( , ):\n            if tab[j] &lt; tab[indice_min]:\n\n        #il reste \u00e0 \u00e9changer les valeurs d'indice i et indice_min\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On va s'int\u00e9resser au temps d'\u00e9x\u00e9cution de ce tri, et plus particuli\u00e8rement au lien entre la taille de la liste donn\u00e9e en entr\u00e9e et ce temps d'\u00e9x\u00e9cution.</p> <p>On d\u00e9finit donc :</p> <ul> <li>une fonction <code>pire_cas</code> qui renvoie une liste de taille <code>n</code> tri\u00e9e dans l'ordre d\u00e9croissant;</li> <li>une fonction <code>chrono</code> qui prend en param\u00e8tre un entier <code>n</code> et qui renvoie le temps d'\u00e9x\u00e9cution de la fonction <code>tri_selection</code> pour la liste construite \u00e0 partir de la fonction <code>pire_cas</code>.</li> </ul> <p></p> <ol> <li>Compl\u00e9ter les fonctions dont les extraits sont fournis ci-dessous.</li> <li>Construire une liste (en compr\u00e9hension si possible) des temps obtenus pour les valeurs de <code>n</code> suivantes : 10, 100, 1000, 10000.</li> <li>Quel semble \u00eatre le lien entre <code>n</code> et le temps d'\u00e9x\u00e9cution?</li> </ol> \ud83d\udc0d Script Python<pre><code>import time\n\ndef pire_cas(n):\n    return list(range( , , ))\n\ndef chrono(n):\n    t0 = time.time()\n    tri_selection()\n    t1 = time.time()\n    return \n\ntailles = [10, 100, 1000, 10000]\ntemps = []\n</code></pre> <ol> <li>On va visualiser tout \u00e7a...</li> </ol> \ud83d\udc0d Script Python<pre><code>import matplotlib.pyplot as plt\n\nplt.plot(tailles, temps)\nplt.show()\n</code></pre>"},{"location":"T07_Algorithmes/T7.2_Tri_insertion/T7.2_Tri_insertion/","title":"T7.2 Tri par insertion","text":"<p>Apr\u00e8s le tri par s\u00e9lection, nous allons \u00e9tudier un deuxi\u00e8me algorithme de tri: le tri par insertion. C'est le \u00abtri du joueur de cartes\u00bb.</p> <p>Il consiste \u00e0 choisir un \u00e9l\u00e9ment et de l'ins\u00e9rer \u00e0 la bonne position en faisant \u00abremonter\u00bb les \u00e9l\u00e9ments plus grands que lui.</p> <p> </p> <p>Quelques remarques:</p> <ul> <li>on commence \u00e0 l'indice 1;</li> <li>pour chaque indice de travail <code>i</code>, on appelle cl\u00e9 l'\u00e9l\u00e9ment de la liste d'indice <code>i</code>;</li> <li>on examine ensuite les \u00e9l\u00e9ments \u00e0 gauche, c'est-\u00e0-dire les \u00e9lements d'indice <code>j &lt; i</code>;</li> <li>tant que l'\u00e9l\u00e9ment d'indice <code>j</code> est sup\u00e9rieur \u00e0 la cl\u00e9, on le d\u00e9cale d'une position vers la droite;</li> <li>une fois que ce n'est plus possible, on ins\u00e8re la cl\u00e9.</li> </ul> <p>Exercice  1</p> \u00c9nonc\u00e9IndicationCorrection <p>Impl\u00e9menter l'algorithme du tri par insertion sous la forme d'une fonction:</p> \ud83d\udc0d Script Python<pre><code>def tri_insertion(tab: list) -&gt; None:\n'''\n    Trie en place le tableau tab donn\u00e9 en param\u00e8tre\n    '''\n</code></pre> \ud83d\udc0d Script Python<pre><code>def tri_insertion(tab: list) -&gt; None:\n'''\n    Trie en place le tableau tab donn\u00e9 en param\u00e8tre\n    '''\n    for i in range():\n        cle = \n        j = \n        while  and :\n            tab[ ] = tab[ ]\n            j =\n        tab[]\u00a0= \n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Il s'agit d'\u00e9tudier la complexit\u00e9 de cet algorithme de fa\u00e7on exp\u00e9rimentale.</p> <p>Pour cela:</p> <ol> <li>Reprendre les fonctions <code>chrono</code> et <code>pire_cas</code> de l'exercice 2 sur le tri par s\u00e9lection et afficher le graphique des temps d'ex\u00e9cution.</li> <li>Faire de m\u00eame avec une liste d\u00e9j\u00e0 tri\u00e9e. Que remarquez-vous?</li> </ol> <p>\u00c0 voir</p> <p>https://www.toptal.com/developers/sorting-algorithms </p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/","title":"C15 Algorithme glouton","text":""},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#activites","title":"Activit\u00e9s","text":""},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#activite-1-introduction","title":"Activit\u00e9 1 : Introduction","text":"<p>Probl\u00e8me d\u2019optimisation : Le voyageur</p> <p>Enonc\u00e9 du probl\u00e8me : Un voyageur souhaite visiter plusieurs villes de France, dans n\u2019importe quel ordre, mais en minimisant la distance parcourue.</p> <p></p> <p>Le tableau suivant donne les distances routi\u00e8res kilom\u00e9triques entre plusieurs villes de France :</p> Clermont-Ferrand La Rochelle Lille Limoges Lyon Marseille Nantes Paris La Rochelle 462 Lille 622 688 Limoges 173 222 608 Lyon 165 614 681 385 Marseille 413 823 1001 593 314 Nantes 534 137 600 320 655 986 Paris 423 472 225 392 466 775 385 Toulouse 377 421 894 290 467 404 585 678 <p>Question 1 : </p> <ul> <li>D\u00e9part et arriv\u00e9e \u00e0 Clermont-Ferrand,  </li> <li>Villes \u00e0 visiter : Limoges, Lyon, Paris et Toulouse.   </li> </ul> <p>Q1.a Combien de \"chemin\" possible ?  </p> <p>Q1.b D\u00e9terminer tous les chemins possibles ainsi que le kilom\u00e9trage totale.</p> <p>Q1.c R\u00e9pondre au probl\u00e8me: quel est le trajet optimal ?</p> <p>Le probl\u00e8me se ram\u00e8ne \u00e0 trouver un ordre de visite des quatre villes pour lequel la somme des distance donn\u00e9es par ce tableau est aussi petite que possible. Une mani\u00e8re simple d'aborder le probl\u00e8me consiste \u00e0 \u00e9num\u00e9rer tous les cas possibles et calculer la distance  correspondante pour chacun des cas.  </p> <p>Question 2 : Calculer le nombre de trajets possibles si le voyageur d\u00e9cide de visiter toutes les villes du tableau.  </p> Tip <p>Cette technique (r\u00e9pertorier tous les cas de figure et faire une \u00e9tude exhaustive) n'est pas possible \u00e0 grande \u00e9chelle.  D\u00e9terminer le nombre d'itin\u00e9raires possibles :</p> <ul> <li>8 villes (hors ville de d\u00e9part) on a : \\(\\dfrac{8 \\times 7 \\times 6 \\times 5 \\times 4 \\times 3 \\times 2 \\times 1}{2}= 20160\\) itin\u00e9raires possibles.  </li> <li>10 villes (hors ville de d\u00e9part), nombre d'itin\u00e9raires \u00e0 tester : \\(\\dfrac{10 \\times 9 \\times 8 \\times 7 \\cdots \\times 2 \\times, 1}{2}=\\) 1 714 400  </li> <li>13 villes (hors ville de d\u00e9part), nombre d'itin\u00e9raires \u00e0 tester : \\(\\dfrac{13 \\times 12 \\cdots \\times 2 \\times, 1}{2}=\\) 3 113 510 400  </li> <li>20 villes (hors ville de d\u00e9part), nombre de parcours \u00e0 tester :  \\(\\dfrac{20 \\times 19 \\times 18 \\times 17 \\cdots \\times 2 \\times, 1}{2}=\\) 1 216 451 004 088 320 000    <p>Face \u00e0 de tels probl\u00e8mes d'optimisation impossible \u00e0 explorer exhaustivement, il peut \u00eatre utile de conna\u00eetre des algorithmes donnant rapidement une r\u00e9ponse qui, sans \u00eatre n\u00e9cessairement optimale, resterait bonne.</p> </li> </ul>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#synthese","title":"Synth\u00e8se","text":"<p>Nous avons vu que la force brute ne permet pas de r\u00e9soudre (en un temps raisonnable) le probl\u00e8me du voyageur de commerce lorsqu'on augmente le nombre de villes.</p> <p>Maintenant que vous avez manipul\u00e9 ce probl\u00e8me et vu \u00e0 quel point il est complexe \u00e0 r\u00e9soudre, nous allons voir comment faire autrement.</p> <p>A retenir :</p> <ul> <li>Les algorithmes gloutons (greedy algorithms) constituent une alternative beaucoup plus simple \u00e0 programmer, mais dont le r\u00e9sultat n\u2019est pas toujours optimal (sauf dans certaines situations dites canoniques)</li> <li>L\u2019approche gloutonne consiste \u00e0 construire une solution compl\u00e8te par une succession de choix locaux donnant syst\u00e9matiquement la meilleure solution partielle.  </li> </ul> <p>Pour r\u00e9sumer, on peut employer un algorithme glouton lorsque :  </p> <ul> <li>une solution compl\u00e8te peut \u00eatre construite en passant par une succession de solutions partielles,  </li> <li>chaque solution partielle est \u00e9tablie en faisant un choix local \u00e0 partir de la solution partielle pr\u00e9c\u00e9dente,  </li> <li>on dispose d\u2019une fonction permettant d\u2019\u00e9valuer la qualit\u00e9 de chaque solution partielle.  </li> </ul> <p>Les choix ne sont jamais remis en cause : une fois faits, on ne revient pas dessus. Cela constitue une diff\u00e9rence essentielle avec la programmation dynamique qui au lieu de se focaliser sur un seul sous-probl\u00e8me, explore les solutions de tous les sous-probl\u00e8mes pour les combiner finalement de mani\u00e8re optimale.</p> <p>Les algorithmes gloutons sont utilis\u00e9s pour r\u00e9pondre \u00e0 des probl\u00e8mes d'optimisation, c'est-\u00e0-dire des probl\u00e8mes algorithmiques dans lesquels l'objectif est de trouver une solution \" la meilleure possible \" selon un crit\u00e8re, parmi un ensemble de solutions \u00e9galement valides mais potentiellement moins avantageuses.  </p> <p>Le contexte g\u00e9n\u00e9ral d'un tel probl\u00e8me d'optimisation est donc le suivant :  b</p> <ul> <li>on consid\u00e8re  un probl\u00e8me poss\u00e9dant un tr\u00e8s grand nombre de solutions  </li> <li>on dispose d'une fonction math\u00e9matique \u00e9valuant la qualit\u00e9 de chaque solution  </li> <li>on cherche une solution qui soit bonne, voire meilleure.  </li> </ul> <p>Les algorithmes gloutons s'appliquent lorsque de plus : * la recherche d'une solution peut se ramener \u00e0 une succession de choix qui produisent et pr\u00e9cisent petit \u00e0 petit une solution partielle * on dispose d'une fonction math\u00e9matique \u00e9valuant la qualit\u00e9 de chaque solution partielle (dont on attend qu'elle soit coh\u00e9rente avec la fonction d'\u00e9valuation des solutions compl\u00e8tes).</p> <p>Retour \u00e0 l'activit\u00e9</p> <p>R\u00e9pondre \u00e0 la question de l'activit\u00e9 en appliquant cet algorithme.</p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#activite-2-mise-en-oeuvre-avec-python","title":"Activit\u00e9 2 : Mise en oeuvre avec Python","text":""},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#activite-3-le-probleme-du-sac-a-dos","title":"Activit\u00e9 3 : Le probl\u00e8me du sac \u00e0 dos","text":"<p>Un cambrioleur ne peut emporter que 40 kg sur son dos dans son sac. Il a le choix d'emporter certains des objets suivants :</p> Poids (masse en kg) Valeur (prix de revente) objet A 13 700 objet B 12 500 objet C 8 200 objet D 10 300 objet E 14 600 objet F 18 800 <p>Il va se demander quels objets choisir pour obtenir une valeur totale maximale tout en ne d\u00e9passant pas 40 kg.</p> <p>Q1</p> <p>Classer ces objets par valeur d\u00e9croissante et donner la solution de l'algorithme glouton avec ce crit\u00e8re de classement.</p> <p>Q2</p> <p>M\u00eame question avec un classement par poids croissant.</p> <p>Q3</p> <p>M\u00eame question avec un classement par valeur/poids (valeur massique) d\u00e9croissant.</p> <p>Q4</p> <p>A-t-on obtenu la solution optimale ?</p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#activite-capytale","title":"Activit\u00e9 Capytale","text":"<p>Activit\u00e9 Capytale : </p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#activite-4-rendu-de-monnaie","title":"Activit\u00e9 4 : Rendu de monnaie","text":"<p>Pr\u00e9sentation du probl\u00e8me</p> <p>Un achat dit en esp\u00e8ces se traduit par un \u00e9change de pi\u00e8ces et de billets. Pour simplifier, consid\u00e9rons que les pi\u00e8ces d\u00e9signent indiff\u00e9remment les v\u00e9ritables pi\u00e8ces ou les billets. Supposons qu\u2019un achat induise un rendu de monnaie 49 euros. Quelles pi\u00e8ces peuvent \u00eatre rendues ?  La r\u00e9ponse n\u2019est pas unique :  </p> <ul> <li>Quatre pi\u00e8ces de 10 euros, 1 pi\u00e8ce de 5euros et deux pi\u00e8ces de 2e uros conviennent.  </li> <li>Mais quarante-neuf pi\u00e8ces de 1 euros conviennent \u00e9galement !  </li> </ul> <p>Si la question est de rendre la monnaie avec un minimum de pi\u00e8ces, la r\u00e9ponse reste simple : c\u2019est la premi\u00e8re solution propos\u00e9e. Toutefois, comment parvient-on \u00e0 un tel r\u00e9sultat ? Quels choix ont \u00e9t\u00e9 faits qui optimisent le nombre de pi\u00e8ces rendus ?  </p> <p>Le probl\u00e8me est de rendre la monnaie en un minimum de pi\u00e8ces. La solution d\u00e9pend \u00e9videmment du syst\u00e8me de monnaie utilis\u00e9. Consid\u00e9rons le syst\u00e8me mon\u00e9taire europ\u00e9en simplifi\u00e9 o\u00f9 les pi\u00e8ces prennent les valeurs 500, 200, 100, 50, 20, 10, 5, 2 , 1 euros. Rendre 49 euros avec un minimum de pi\u00e8ces est un probl\u00e8me d\u2019optimisation. En pratique, sans s\u2019en rendre compte g\u00e9n\u00e9ralement, tout individu met en \u0153uvre un algorithme glouton. Il choisit d\u2019abord la plus grandeur valeur de monnaie, parmi 1, 2, 5, 10, contenue dans 49 euros. En l\u2019occurrence, quatre fois un pi\u00e8ce de 10 euros. La somme de 9 euros restant \u00e0 rendre, il choisit une pi\u00e8ce de 5 euros, puis deux pi\u00e8ces de 2 euros. Mais cette strat\u00e9gie gagnante pour la somme de 49 euros l\u2019est-elle pour n\u2019importe quelle somme \u00e0 rendre ? </p> <p>Application du paradigme glouton</p> <p>Exo</p> <ol> <li> <p>On consid\u00e8re le syst\u00e8me mon\u00e9taire europ\u00e9en systeme = [1, 2, 5, 10, 20, 50, 100, 200, 500].  Quelle est la solution gloutonne pour un rendu de monnaie de 34 euros?  de 47 euros ?  </p> </li> <li> <p>On consid\u00e8re le syst\u00e8me mon\u00e9taire systeme = [1, 3, 6, 12, 24, 30]. Quelle est la solution gloutonne pour un rendu de monnaie de 49 euros ? Est-elle optimale ? </p> </li> </ol> <p>Remarque :</p> <p>Un syst\u00e8me mon\u00e9taire pour lequel l\u2019algorithme de rendu de monnaie glouton donne toujours un nombre minimal de pi\u00e8ces est dit canonique. Il existe des algorithmes permettant de d\u00e9terminer si un syst\u00e8me mon\u00e9taire est canonique. </p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#activite-sur-capytale","title":"Activit\u00e9 sur Capytale","text":"<p>Activit\u00e9 Capytale : </p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#exercices","title":"Exercices","text":"<p>Coloriage de carte</p> <p>On veut colorier une carte en s\u2019assurant que deux zones limitrophes n\u2019ont pas la m\u00eame couleur avec le minimum de couleurs possible. On choisit de trier les zones par nombres de zones limitrophes, par ordre d\u00e9croissant. utilisez pour cela le tableau ci-dessous. La m\u00e9thode gloutonne est le choix de colorier la zone ayant le plus d\u2019adjacent, puis la zone ayant le plus d\u2019adjacent non limitrophe \u00e0 cette zone et ainsi de suite.</p> <p></p> <p>Effectuer le coloriage de cette carte avec cette m\u00e9thode.</p> <p>Minimiser somme sur une grille</p> <p>Sur la grille ci-dessous, on part de la case tout \u00e0 gauche marqu\u00e9e de la lettre D. On souhaite atteindre les cases vides sur la partie droite en se d\u00e9pla\u00e7ant de case en case.  </p> <p></p> <p>Lorsqu\u2019on est sur une case on peut se d\u00e9placer sur une des deux cases voisines situ\u00e9es sur la droite. On note S la somme de toutes les cases travers\u00e9es. Par exemple on peut effectuer la trajectoire suivante : D \u2013 7 \u2013 5 \u2013 3 \u2013 5 \u2013 7 \u2013 9 \u2013 8 \u2013 9 \u2013 6  qui conduit \u00e0 S = 59. On cherche \u00e0 effectuer la trajectoire qui rend la somme S la plus petite possible.  </p> <ul> <li>D\u00e9finir une r\u00e8gle de choix qui vous donne une solution respectant les contraintes. Quelle trajectoire et quelle somme S obtenez-vous avec cette r\u00e8gle ?  </li> <li> <p>Est-il optimal ? Sur cette grille, en cherchant bien, la trajectoire optimale donne une somme S=23. Votre algorithme glouton a-t-il trouv\u00e9 cette trajectoire optimale ?  </p> </li> <li> <p>Pour obtenir la solution optimale de fa\u00e7on certaine on souhaite trouver toutes les trajectoires possibles et calculer pour chacune d\u2019elles la somme associ\u00e9e. Quel est le nombre de trajectoires au total ?</p> </li> </ul> <p>Rendu de monnaie</p> <p>Donner une somme avec le moins de pi\u00e8ces possibles. On veut donner la somme de 14 euros dans les syst\u00e8mes de pi\u00e8ce suivant : - s1={1; 2; 5; 10} ;  - s2={1; 2; 7; 10 } ; - s3={3; 5;7;10 }  </p> <p>On commence par ordonner les pi\u00e8ces dans l\u2019ordre d\u00e9croissant: il suffira de choisir les pi\u00e8ces dans l\u2019ordre pour faire un choix optimum local. Compl\u00e9ter les tableaux avec ce choix optimum local. </p> <ul> <li>Syst\u00e8me 1 </li> </ul> Pi\u00e8ce nombre 10 5 2 1 <ul> <li>Syst\u00e8me 2 </li> </ul> Pi\u00e8ce nombre 10 7 2 1 <ul> <li>Syst\u00e8me 3  </li> </ul> Pi\u00e8ce nombre 10 7 5 3 <ol> <li> <p>Comparer les r\u00e9sultats et commenter.  </p> </li> <li> <p>Ecrire en pseudo-code un algorithme de rendu de monnaie.  </p> </li> <li> <p>Impl\u00e9menter une fonction rendu monnaie(m, systeme) et la tester pour le syst\u00e8me de pi\u00e8ce europ\u00e9en (le billet de plus forte valeur est 500) et pour un montant m donn\u00e9.   </p> </li> <li> <p>Modifier le code de la fonction <code>rendu monnaie</code> pour qu\u2019elle renvoie un dictionnaire o\u00f9 les cl\u00e9s sont les valeurs des pi\u00e8ces rendues et les valeurs le nombre de pi\u00e8ces \u00e0 rendre.  </p> </li> </ol> <p>Exemple \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt;rendu_monnaie(14, [10, 5, 2, 1]) \n{1:0, 2:2,5:0, 10:1}\n</code></pre></p> <p>Ranger ses affaires</p> <p>On dispose de n objets \\(x_1,x_2,.....x_n\\) ayant chacun une valeur \\(v_i\\) et une masse \\(m_i\\). On poss\u00e8de un sac \u00e0 dos dans lequel on ne peut mettre qu\u2019une masse maximale M. On veut remplir le sac de fa\u00b8con \u00e0 ce que la valeur des objets emport\u00e9s soit maximale.  </p> <p>Optimiser le rangement On prend M=10 kg. Il s\u2019agit de choisir les objets \u00e0 emporter dans le sac afin maximiser la valeur totale tout en respectant la contrainte du poids maximal. C\u2019est un probl\u00e8me d\u2019optimisation avec contrainte. Consid\u00e9rons les objets suivants et un sac de capacit\u00e9 maximale 10 kg. Quels objets faut-il prendre ? </p> Objet A B C D E F masse en kg 7 6 4 3 2 1 valeur en euros 9100 7200 4800 2700 2600 200 <p>Il y a plusieurs choix possibles :  </p> <ul> <li>Strat\u00e9gie 1 : prendre toujours l\u2019objet de plus grande valeur n\u2019exc\u00e9dant pas la capacit\u00e9 restante (il faut trier pr\u00e9alablement par valeur d\u00e9croissante)  </li> <li>Strat\u00e9gie 2 : prendre toujours l\u2019objet de plus faible masse (il faut trier pr\u00e9alablement par masse croissante)  </li> <li>Strat\u00e9gie 3 : prendre toujours l\u2019objet de plus grand rapport \\(\\dfrac{valeur}{masse}\\) n\u2019exc\u00e9dant pas la capacit\u00e9 restante (il faut trier pr\u00e9alablement en suivant ce rapport de fa\u00e7on d\u00e9croissante). </li> </ul> <p>Q1. Tester ces trois strat\u00e9gies et donner la valeur emport\u00e9e dans les trois cas. Q2. On dispose d\u2019une liste d\u2019objets de masses m = [9, 10, 12, 14, 11, 5, 7, 5, 6, 2] ainsi que de leurs valeurs associ\u00e9es v = [10, 8, 7, 7, 5, 4, 3, 2, 2, 1].  Par exemple, le premier objet d\u2019indice 0 a pour masse 9 kg et pour valeur 10 euros. Programmer un algorithme pour le knapsack problem. Tester le programme pour une masse maximale de 22 kg. </p> <p>Bien s\u00fbr, pour manipuler plus finement les objets, il faudrait changer les structures de donn\u00e9es utilis\u00e9es en utilisant une seule liste, un dictionnaire ou de la programmation objet pour repr\u00e9senter l\u2019ensemble des objets consid\u00e9r\u00e9s.</p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton/#approfondissement","title":"Approfondissement","text":"<p>A venir</p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton_solution_exercies/","title":"Probl\u00e8me du sac \u00e0 dos - Exercice","text":"<p>Un cambrioleur ne peut emporter que 40 kg sur son dos dans son sac. Il a le choix d'emporter certains des objets suivants :</p> Poids (masse en kg) Valeur (prix de revente) objet A 15 500 objet B 24 400 objet C 9 350 objet D 25 750 objet E 5 400 objet F 12 800 objet G 2 1400 objet H 18 550"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton_solution_exercies/#q1","title":"Q1","text":"<p>Classer ces objets par valeur d\u00e9croissante et donner la solution de l'algorithme glouton avec ce crit\u00e8re de classement.</p> objet G F D H A B E C Valeur 1400 800 750 550 500 400 400 350 Poids 2 12 25 18 15 24 5 9 <p>Avec l'algorithme glouton et cette strat\u00e9gie :  - on prend les objets G - F et D soit une valeur de 2950 et un poids de 39 kg.</p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton_solution_exercies/#q2","title":"Q2","text":"<p>M\u00eame question avec un classement par poids croissant.</p> objet G E C F A H B D Valeur 1400 400 350 800 500 550 400 750 Poids 2 5 9 12 15 18 24 25 <p>Avec l'algorithme glouton et cette strat\u00e9gie :  - on prend les objets G - E - C et F soit une valeur de 2950 et un poids de 29 kg.</p>"},{"location":"T07_Algorithmes/T7_1_Gloutons/algo_glouton_solution_exercies/#q3","title":"Q3","text":"<p>M\u00eame question avec un classement par valeur/poids (valeur massique) croissant.</p> objet G E F C A H D B Valeur 1400 400 800 350 500 550 750 400 Poids 2 5 12 9 15 18 25 24 valeur massique 700 80 66.7 38.9 33.3 30.7 30 16.7 <p>Avec l'algorithme glouton et cette strat\u00e9gie :  - on prend les objets G - E - F et C soit une valeur de 2950 et un poids de 29 kg.</p> <p>Avec l'algorithme glouton et cette strat\u00e9gie :  - on prend les objets 3 - 1 - 2 et 7 pour un poids de 5.5 kg et une valeur de 20.</p> <p>Q4</p> <p>A-t-on obtenu la solution optimale ?</p>"},{"location":"T07_Algorithmes/T7_3_Dichotomie/T7_3_Dichotomie/","title":"Dichotomie","text":""},{"location":"T07_Algorithmes/T7_3_Dichotomie/T7_3_Dichotomie/#activite","title":"Activit\u00e9","text":""},{"location":"T07_Algorithmes/T7_3_Dichotomie/T7_3_Dichotomie/#activite-5-recherche-dichotomique","title":"Activit\u00e9 5 : Recherche dichotomique","text":"<ol> <li>Copier et ex\u00e9cuter le programme du jeu du nombre myst\u00e8re. \ud83d\udc0d Script Python<pre><code>import random\n\nNB_MIN=1\nNB_MAX=100\n\nprint(f\"Choisir un nombre entre {NB_MIN} et {NB_MAX}, je vais tenter de le deviner en vous posant des questions\")\ndebut = NB_MIN\nfin = NB_MAX\nwhile fin-debut&gt;0:\n    milieu = (fin+debut)//2\n    reponse = input(f\"Le nombre est-il strictement plus grand que {milieu} ?\")\n    if reponse=='O':\n        debut=milieu+1\n    else:\n        fin=milieu\nprint(f\"Le nombre \u00e9tait : {debut}\")\n</code></pre><ol> <li>Faire quelques parties, expliquer la strat\u00e9gie de l'ordinateur pour trouver le nombre myst\u00e8re.</li> <li>Lorsque le nombre est compris entre 1 et 100, en combien d'essais au maximum l'ordinateur trouve-t-il la solution ?</li> <li>Et si le nombre myst\u00e8re est compris entre 1 et 200 ?</li> </ol> </li> <li> <p>En s'inspirant de cette strat\u00e9gie de recherche appel\u00e9e dichotomie (couper en deux), on cherche un algorithme pour d\u00e9terminer si un \u00e9l\u00e9ment se trouve ou non dans une liste. Par exemple, si on recherche 28 dans \\([14, 15, 17, 22, 23, 25, 29, 34, 38]\\), le tableau ci-dessous repr\u00e9sente les \u00e9tapes de la m\u00e9thode :</p> Etape Liste Milieu Comparaison \\(\\underbrace{[\\overset{_\\wedge^{0}}{14}, 15, 17, 22,}_{ } \\underset{_4^\\uparrow}{23} , \\overbrace{25, 29, 34, \\underset{_8^{\\vee}}{38}]}_{ }\\) \\((0+8)//2 = 4\\) \\(23 &lt;28\\) [<code>14, 15, 17, 22,23</code> , \\(\\underbrace{\\overset{_\\wedge^{5}}{25}} \\underset{_6^\\uparrow}{29}, \\overbrace{34, \\underset{_8^{\\vee}}{38}]}_{ }\\) \\((5+8)//2=6\\) \\(29 \\geq 28\\). [<code>14, 15, 17, 22,23</code> , \\(\\underset{_5^\\uparrow}{\\overset{_\\wedge^{5}}{25}}, \\underset{_6^{\\vee}}{29}\\) <code>34,38</code>] \\((5+6)//2=5\\) \\(25 &lt; 28\\). [<code>14, 15, 17, 22,23,25</code> \\(\\underset{_6^{\\vee}}{\\overset{_\\wedge^6}{29}}\\) <code>34,38</code>] - - <p>Arr\u00eat de l'algorithme, \\(28\\) n'est pas dans la liste.</p> <ol> <li>D\u00e8s l'\u00e9tape 2, on a gris\u00e9 les \u00e9l\u00e9ments situ\u00e9s avant 23 pour indiquer que 28 ne s'y trouve pas. Quelle propri\u00e9t\u00e9 de la liste le permet ?</li> <li>Que repr\u00e9sente les nombres situ\u00e9s en rouge au-dessus (ou au-dessous) des \u00e9l\u00e9ments de la liste ?</li> <li>Quelle est la condition d'arr\u00eat de cet algorithme ?</li> <li>Si la liste contenait 100 \u00e9l\u00e9ments, en combien d'\u00e9tapes cet algorithme se terminerait-il ? Justifier.</li> </ol> </li> <li> <p>Recopier et compl\u00e9ter le fonctionnement de cet algorithme pour chercher si 4 est dans la liste \\([1, 4, 7, 12, 13, 14]\\) :</p> Etape Liste Milieu Comparaison 1 \\(\\underbrace{[\\overset{_\\wedge^{...}}{1}, 4,}_{ } \\underset{_2^\\uparrow}{7} , \\overbrace{12, 13, \\underset{_{...}^{\\vee}}{14}]}_{ }\\) \\((...+...)//2 = ...\\) \\(... \\geq 4\\) 2 ... ... ... 3 ... ... ... 4 ... ... ... </li> <li> <p>Recopier et compl\u00e9ter la fonction Python suivante qui impl\u00e9mente l'algorithme de recherche par dichotomie.</p> </li> </ol> \ud83d\udc0d Script Python<pre><code>def recherche_dichotomie(element,liste):\n    debut = ...\n    fin = ...\n    while ....:\n        milieu = ...\n        if element==liste[milieu]:\n            return True\n        elif ...:\n            debut=.....\n        else:\n            fin=.....\n    return False\n</code></pre> <p>Aide</p> <ul> <li>Les variables <code>debut</code> (ligne 2) et <code>fin</code> (ligne 3) contiennent les indices de la liste entre lesquels on recherche.</li> <li>La condition d'arr\u00eat (ligne 4) est que l'\u00e9cart entre ces deux indices est \u00e9gale \u00e0 0.</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/","title":"kppv - Cours","text":"<ul> <li>Cr\u00e9dits</li> <li>Pr\u00e9sentation du probl\u00e8me de     classification</li> <li>Algorithme des k plus proches     voisins</li> <li>Choix des param\u00e8tres et limites de     l'algorithme<ul> <li>Le choix de la distance</li> <li>Le choix du param\u00e8tre <code>k</code></li> <li>Les limites de l'algorithme</li> </ul> </li> <li>Histoire de l'intelligence artificielle et des algorithmes     d'apprentissage</li> <li>Synth\u00e8se</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/#credits","title":"Cr\u00e9dits","text":"<p>Ce cours a \u00e9t\u00e9 construit \u00e0 partir de plusieurs sources : l'excellent cours de Julien de Vill\u00e8le dont sont extraits certains passages ; le chapitre 13 du manuel NSI de la collection Tortue chez Ellipse, auteurs : Ballabonski, Conchon, Filliatre, N'Guyen ; les fiches de cours 37 et 38 du Prepabac Premi\u00e8re NSI chez Hatier, auteurs : Laurent Signac et Guillaume Connan ; un QCM sur https://doctools.dgpad.net r\u00e9alis\u00e9 par Alain Busser.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/#presentation-du-probleme-de-classification","title":"Pr\u00e9sentation du probl\u00e8me de classification","text":"<p>Activit\u00e9 1</p> <p>En guise d'introduction au probl\u00e8me de classification par l'algorithme des k plus proches voisins, r\u00e9pondez au QCM r\u00e9alis\u00e9 par Alain Busser, qui est propos\u00e9 \u00e0 l'adresse https://link.dgpad.net/dsFN.</p> <p>Dans ce cours, on consid\u00e8re un exemple mod\u00e8le constitu\u00e9 de 37 Pokemons dont on donne ci-dessous une repr\u00e9sentation graphique avec :</p> <ul> <li>en abscisse leur vitesse</li> <li>en ordonn\u00e9e leur d\u00e9fense</li> <li>en couleur leur type : Feu ou Roche</li> </ul> <p> </p> <p>Graphique 1 : Pokemons Feu ou Roche avec deux descripteurs</p> <p>Les donn\u00e9es peuvent \u00eatre repr\u00e9sent\u00e9es sous forme d'une table contenant 37 enregistrements ayant cette forme :</p> \ud83d\udc0d Script Python<pre><code>{'nom': 'Salameche',   'defense': '43',  'vitesse': '65',  'type': 'Feu'}\n</code></pre> <p>Chaque enregistrement contient ce qu'on appellera pour la suite :</p> <ul> <li>deux descripteurs <code>'defense'</code> et <code>'vitesse'</code> qui donnent la     position du point,</li> <li>une unique \u00e9tiquette <code>'type'</code> qui donne la couleur du point.</li> </ul> <p>Les valeurs des descripteurs <code>'defense'</code>  et <code>'vitesse'</code> sont de type <code>str</code> dans l'enregistrement. IL faut donc les convertir en type <code>int</code> ou <code>float</code> pour placer le point dans un rep\u00e8re. En pratique les enregistrements sont extraits de fichiers textes , comme des fichiers CSV, et les descripteurs peuvent repr\u00e9senter des cat\u00e9gories ('m\u00e2le', 'femelle' ...) tout autant que des valeurs num\u00e9riques. On a donc choisi de garder toutes les valeurs en type <code>str</code> et de les convertir selon les besoins de traitement.</p> Exemples du cours sur Capytale <p>https://capytale2.ac-paris.fr/web/c/b5ae-1726451</p> <p>Point de cours 1</p> <p>Le probl\u00e8me de classification auquel l'algorithme des k plus proches voisins tente d'apporter une r\u00e9ponse est le suivant (les trois formulations sont \u00e9quivalentes) :</p> <ul> <li>Un nouveau Pokemon a pour <code>'vitesse'</code> 58 et pour <code>'defense'</code>  65, quel est son type ?</li> <li>Un nouveau point a pour coordonn\u00e9es (58 ; 65). Quelle est sa couleur ?</li> <li>Un nouvel enregistrement a pour descripteurs <code>'vitesse' : 58</code> et <code>'defense' : 65</code>. Quelle est son \u00e9tiquette ?</li> </ul> <p>Sur le graphique, si on ne consid\u00e8re que le point vert le plus proche (en mesurant \u00e0 la r\u00e8gle), on peut attribuer l'\u00e9tiquette 'vert' (type Roche)  au nouveau point. Mais si on consid\u00e8re les trois voisins les plus proches , deux sur trois sont rouges et dans ce cas on attribue l'\u00e9tiquette 'rouge' (type Feu). On voit que le nombre de voisins \u00e0 consid\u00e9rer est important, de plus la distance doit \u00eatre d\u00e9finie pr\u00e9cis\u00e9ment. </p> <p>Le param\u00e9trage de l'algorithme peut \u00eatre  effectu\u00e9 par un humain mais son ex\u00e9cution par un ordinateur   permet  :</p> <ul> <li>d'automatiser la r\u00e9ponse,</li> <li>de r\u00e9pondre rapidement \u00e0 des milliers ou millions de questions du m\u00eame type,</li> <li>de g\u00e9n\u00e9raliser \u00e0 des cas avec plus de deux descripteurs</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/#algorithme-des-k-plus-proches-voisins","title":"Algorithme des k plus proches voisins","text":"<p>Activit\u00e9 2</p> <p>Regardez la petite video accessible depuis ce lien : algo_1_sur_2.gif</p> <p>Point de cours 2</p> <p>Les donn\u00e9es sur lesquelles on applique l'algorithme des k plus proches voisins sont :</p> <ul> <li>une table d'enregistrements (dictionnaires Python) d'objets dont on connait l'\u00e9tiquette / la classification, nommons la <code>table_pokemon</code>. On peut remplacer enregistrement par : point, donn\u00e9e ou Pokemon dans notre exemple.</li> <li>l'enregistrement   d'une nouvelle donn\u00e9e dont on cherche l'\u00e9tiquette / la classification, nommons le  <code>nouveau_pokemon</code></li> </ul> <p>Les param\u00e8tres de l'algorithme des k plus proches voisins sont :</p> <ul> <li>Un entier naturel <code>k</code>, g\u00e9n\u00e9ralement impair et compris entre 3 et 10, qui correspond au nombre de voisins les plus proches qui seront examin\u00e9s.</li> <li>Une fonction de distance pour mesurer la proximit\u00e9 entre la nouvelle donn\u00e9e et toutes les  donn\u00e9es d\u00e9j\u00e0 \u00e9tiquet\u00e9es de la table ce qui permettra de s\u00e9lectionner les <code>k</code> plus proches. Cette distance est mesur\u00e9e  \u00e0 partir des valeurs de certains descripteurs pr\u00e9sents dans les enregistrements, comme <code>'vitesse'</code> et <code>'defense'</code> dans l'exemple du cours.</li> </ul> <p>L'algorithme des k plus proches voisins se d\u00e9roule ainsi :</p> <ol> <li>Pour chaque enregistrement / pokemon dans <code>table_pokemon</code>  on calcule la distance entre cet enregistrement et celui de <code>nouveau_pokemon</code>. On stocke au fur et \u00e0 mesure les couples <code>(distance avec chaque  nouveau_pokemon, \u00e9tiquette de l'enregistrement / pokemon)</code> dans un tableau <code>tab_distance</code>.</li> <li>On trie le tableau  <code>tab_distance</code> (qui contient des <code>tuple</code> <code>(distance, \u00e9tiquette)</code>) dans l'ordre croissant selon le crit\u00e8re de distance.</li> <li>On extrait les <code>k</code> plus petits \u00e9l\u00e9ments de <code>tab_distance</code> qui correspondent aux <code>k</code> plus proches voisins de <code>nouveau_pokemon</code> dans un tableau <code>k_voisins</code>.</li> <li>On s\u00e9lectionne l'\u00e9tiquette majoritaire dans le tableau <code>k_voisins</code> et on l'attribue \u00e0 <code>nouveau_pokemon</code> parce que c'est le choix majoritaire parmi les <code>k</code> plus proches voisins.</li> </ol> <p>Exemple 1</p> Exemples du cours sur Capytale <p>https://capytale2.ac-paris.fr/web/c/b5ae-1726451</p> <p>D\u00e9taillons les diff\u00e9rentes \u00e9tapes  de l'algorithme des k plus proches voisins  sur notre exemple de Pokemons.</p> <ul> <li>Initialisation : chargement et traitement du jeu de donn\u00e9es</li> </ul> <p>On charge le fichier CSV contenant le jeu de donn\u00e9es dans une table (un tableau d'enregistrements qui sont des dictionnaires).</p> \ud83d\udc0d Script Python<pre><code>In [1]: table_pokemons = charger_fichier_entete('./datas/pokemons.csv')\n\nIn [2]: table_pokemons[0]\nOut[2]: \n{'nom': 'Rattata', 'vie': '30',\n 'attaque': '56',  'defense': '35',\n 'vitesse': '72',  'type': 'Normal'}\n</code></pre> <p>On filtre la table pour extraire les Pokemons de type Feu et Roche. Une \u00e9tape de traitement des donn\u00e9es est souvent n\u00e9cessaire.</p> \ud83d\udc0d Script Python<pre><code>In [3]: table_pokemons_feu_roche = [pok for pok in table_pokemons \n   ...:                    if pok['type'] in ['Roche', 'Feu']]\n\nIn [4]: len(table_pokemons_feu_roche)\nOut[4]: 37\n</code></pre> <ul> <li>\u00c9tape 1 : calcul des distances </li> </ul> <p>On calcule les distances entre le nouveau Pokemon et tous les Pokemons de la table <code>table_pokemons_feu_roche</code>.</p> \ud83d\udc0d Script Python<pre><code>In [5]: nouveau_pokemon = {'vitesse':58, 'attaque' : 120 , 'defense' : 65, 'vie' : 100 }\n\nIn [6]: table_pokemons_feu_roche[0] #premier Pokemon de la table\nOut[6]: \n{'nom': 'Salameche', 'vie': '39',\n 'attaque': '52',  'defense': '43',\n 'vitesse': '65',  'type': 'Feu'}\n\nIn [7]: salameche = table_pokemons_feu_roche[0]\n\nIn [8]: distance_euclidienne(nouveau_pokemon, salameche, ['vitesse', 'defense'])\nOut[8]: 23.087\n\nIn [9]: tab_distance = table_distance_nouveau(table_pokemons_feu_roche, nouveau_pokemon, distance_euclidienne, 'type',                                      ['vitesse', 'defense'])\n\nIn [10]: tab_distance[:4]\nOut[10]: [(18.385, 'Feu'), (22.091, 'Feu'), (21.19, 'Feu'), (44.598, 'Feu')]\n</code></pre> <ul> <li>\u00c9tapes 2 et 3 : tri et s\u00e9lection des k plus proches voisins </li> </ul> <p>On fixe le param\u00e8tre <code>k</code>, on trie dans l'ordre croissant le tableau <code>tab_distance</code> suivant le crit\u00e8re de distance et on extrait les <code>k</code> plus proches voisins.</p> \ud83d\udc0d Script Python<pre><code>In [11]: k_voisins = trier_puis_extraire(tab_distance, 5)\n\nIn [12]: k_voisins\nOut[12]: ['Roche', 'Feu', 'Feu', 'Feu', 'Feu']\n</code></pre> <ul> <li>\u00c9tape  4 : s\u00e9lection de l'\u00e9tiquette majoritaire parmi les k plus proches voisins</li> </ul> \ud83d\udc0d Script Python<pre><code>In [19]: element_majoritaire(k_voisins)\nOut[19]: 'Feu'\n</code></pre> <p>On peut rassembler toutes les fonctions pr\u00e9c\u00e9dentes en une seule qui renvoie l'\u00e9tiquette majoritaire parmi les <code>k</code> plus proches voisins.    </p> \ud83d\udc0d Script Python<pre><code>def etiquetage_knn(table, nouveau, etiquette, tab_descripteur, k,\n                   distance = distance_euclidienne):    \n    tab_distance = table_distance_nouveau(table, nouveau, distance, etiquette, tab_descripteur)\n    k_voisins = trier_puis_extraire(tab_distance, k)\n    voisin_majoritaire = element_majoritaire(k_voisins)\n    return voisin_majoritaire\n</code></pre> <p>On peut v\u00e9rifier que cela donne le m\u00eame r\u00e9sultat. </p> \ud83d\udc0d Script Python<pre><code>In [20]: etiquetage_knn(table_pokemons_feu_roche, nouveau_pokemon, 'type', ['vitesse', 'defense'], 5)\nOut[20]: 'Feu'\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/#choix-des-parametres-et-limites-de-lalgorithme","title":"Choix des param\u00e8tres et limites de l'algorithme","text":""},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/#le-choix-de-la-distance","title":"Le choix de la distance","text":"<p>\\</p> <p>\\</p> <p>Graphique 2 : distances dans le plan</p> <p>Point de cours 3</p> Exemples du cours sur Capytale <p>https://capytale2.ac-paris.fr/web/c/b5ae-1726451</p> <p>Consid\u00e9rons un nouveau Pokemon et un Pokemon d\u00e9j\u00e0 connu  dans une table :</p> \ud83d\udc0d Script Python<pre><code>In [3]: nouveau_pokemon\nOut[3]: {'vitesse': 58, 'attaque': 120, 'defense': 65, 'vie': 100}\n\nIn [4]: table_pokemons_feu_roche[1]\nOut[4]: \n{'nom': 'Reptincel', 'vie': '58',  'attaque': '64',  'defense': '58',  'vitesse': '80',\n 'type': 'Feu'}\n</code></pre> <ul> <li>Si on caract\u00e9rise chaque Pokemon par deux descripteurs <code>'vitesse'</code> et <code>'defense'</code>, on peut les repr\u00e9senter dans le plan par les points A de coordonn\u00e9es \\((58, 65)\\)  et B de coordonn\u00e9es \\((80, 58)\\). On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple :</li> <li>La distance euclidienne qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e : \\(AB=\\sqrt{(x_{B}-x_{A})^{2}+(y_{B}-y_{A})^{2}}=\\sqrt{(80-58)^{2}+(58-65)^{2}} \\approx 23,087\\)</li> <li> <p>La distance de Manhattan qui correspond \u00e0 la longueur du chemin parcouru pour aller de \\(A\\) \u00e0 \\(B\\) en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 du plan, comme dans le plan d'une ville o\u00f9 les rues se coupent \u00e0 angle droit :        \\(AB=\\vert x_{B}-x_{A} \\vert + \\vert y_{B}-y_{A} \\vert =\\vert 80 - 58 \\vert + \\vert 58 - 65 \\vert = 22 + 7 = 29\\)</p> </li> <li> <p>Si on caract\u00e9rise chaque Pokemon par trois descripteurs <code>'vitesse'</code>, <code>'defense'</code> et <code>'attaque'</code> on peut les repr\u00e9senter dans l'espace  par les points A de coordonn\u00e9es \\((58, 65, 120)\\)  et B de coordonn\u00e9es \\((80, 58, 64)\\). On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple en notant \\(z\\) la troisi\u00e8me coordonn\u00e9e :</p> </li> <li>La distance euclidienne qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e : \\(AB=\\sqrt{(x_{B}-x_{A})^{2}+(y_{B}-y_{A})^{2} + (z_{B}-z_{A})^{2}}=\\sqrt{(80-58)^{2}+ (58-65)^{2} +   (120 - 64)^{2}} \\approx 60,572\\)</li> <li> <p>La distance de Manhattan qui correspond \u00e0 la longueur du chemin parcouru pour aller de \\(A\\) \u00e0 \\(B\\) en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 de l'espace  :        \\(AB=\\vert x_{B}-x_{A} \\vert + \\vert y_{B}-y_{A} \\vert + \\vert z_{B}-z_{A} \\vert =\\vert 80 - 58 \\vert + \\vert 58 - 60 \\vert  + \\vert  120 - 64  \\vert = 22 + 7 + 56 = 85\\)</p> </li> <li> <p>On peut g\u00e9n\u00e9raliser les calculs de distances pr\u00e9c\u00e9dents \u00e0 4, 5 ou \\(n\\) descripteurs.</p> </li> </ul> <p>L'ensemble des k plus proches voisins d\u00e9pend du choix de la distance qui s'effectue en fonction du jeu de donn\u00e9es. </p> <p>De plus, il faut pr\u00eater attention aux diff\u00e9rences d'\u00e9chelles entre les descripteurs : un \u00e9cart de 50 n'a pas le m\u00eame sens sur  une <code>'vitesse'</code>   mesur\u00e9e sur une \u00e9chelle de 0 \u00e0 1000 et sur une <code>'defense'</code>  mesur\u00e9e sur une \u00e9chelle de 0 \u00e0 100. Il peut \u00eatre int\u00e9ressant, dans la phase de traitement des donn\u00e9es, de les normaliser en ramenant chaque valeur de descripteur dans l'intervalle [0;1] avec le rapport \\(\\frac{\\text{valeur}-\\text{valeurMin}}{\\text{valeurMax}-\\text{valeurMin}}\\).</p> <p>Voici une repr\u00e9sentation dans l'espace du jeu de donn\u00e9es des 37 Pokemons Roche et Feu avec trois descripteurs <code>'vitesse'</code>, <code>'defense'</code> et <code>'attaque'</code>. L'ajout d'un descripteur peut permettre d'am\u00e9liorer la classification en s\u00e9parant plus nettement les familles de points selon leur \u00e9tiquette.</p> <p>\\</p> <p>Graphique 3 : Pokemons Feu ou Roche avec trois descripteurs</p> <p>Exercice 1</p> <p>Dans le plan muni d'un rep\u00e8re orthonorm\u00e9 on a repr\u00e9sent\u00e9 cinq points d'un jeu de donn\u00e9es \u00e9tiquet\u00e9s :</p> <ul> <li>trois points d'\u00e9tiquette 'rond' : A, B et C</li> <li>deux points d'\u00e9tiquette 'croix' : E et F</li> </ul> <p>On  consid\u00e8re un nouveau point  D sans \u00e9tiquette.</p> <ol> <li>D\u00e9terminer les trois points les plus proches de D avec la distance euclidienne.</li> <li>D\u00e9terminer les trois points les plus proches de D avec la distance de Manhattan.</li> <li>Quelle est l'\u00e9tiquette de D si on applique l'algorithme des k plus proches voisins avec k = 3 et la distance euclidienne ? et avec k = 3 et la distance de Manhattan ?</li> </ol> <p>\\</p> <p>Exercice 2</p> <p>Les distances euclidienne ou de Manhattan s'appliquent \u00e0 des  descripteurs qui prennent des valeurs num\u00e9riques continues.</p> <p>La distance de Hammming s'applique \u00e0 des descripteurs qui sont  des s\u00e9quences de symboles comme des cha\u00eenes de caract\u00e8res ou des suites de bits 0 ou 1 et prend pour valeur le nombre de symboles diff\u00e9rents entre deux s\u00e9quences.</p> <p>Par exemple, on a  <code>distance_hamming('rat', 'raz') = 1</code> ,  <code>distance_hamming('rat', 'rater') = 2</code>,  <code>distance_hamming('101', '011') = 2</code> et <code>distance_hamming('1010', '101') = 1</code>.</p> <p>\u00c9crire en Python une fonction d'en-t\u00eate <code>distance_hamming(chaine1, chaine2)</code> qui renvoie la distance de Hamming entre deux cha\u00eenes de caract\u00e8res.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/#le-choix-du-parametre-k","title":"Le choix du param\u00e8tre <code>k</code>","text":"<p>Activit\u00e9 3</p> <p>Regardez la petite video accessible depuis ce lien : algo_2_sur_2.gif</p> <p>Point de cours 4</p> Exemples du cours sur Capytale <p>https://capytale2.ac-paris.fr/web/c/b5ae-1726451</p> <p>On reprend l'exemple initial du jeu de donn\u00e9es de 37 Pokemons Roche et Feu caract\u00e9ris\u00e9s par les deux descripteurs <code>'vitesse'</code> et  <code>'defense'</code> et d'un nouveau Pokemon de <code>'vitesse' : 58</code> et <code>'defense' : 65</code> repr\u00e9sent\u00e9s sur le graphique 1.</p> <p>On donne ci-dessous  les \u00e9tiquettes attribu\u00e9s par  l'algorithme des k plus proches voisins avec k variant entre 1 et 9.</p> <p>On observe la sensibilit\u00e9 aux perturbations locales pour les petites valeurs de k : les des deux points  les plus proches sont verts, de type Roche , mais les points dans un voisinage plus large sont majoritairement rouges, de type Feu.  </p> <p>D'un autre c\u00f4t\u00e9, une valeur de k trop grande prend en compte des points \u00e9loign\u00e9s et la classe majoritaire globalement finit par s'imposer.</p> <p>En g\u00e9n\u00e9ral, on choisit une valeur de k entre 3 et 10 et plut\u00f4t un entier impair (pourquoi d'apr\u00e8s vous ?)</p> \ud83d\udc0d Script Python<pre><code>In [30]: nouveau_pokemon = {'vitesse':58, 'attaque' : 120 , 'defense' : 65, 'vie' : 100 }\n    ...: for k in range(1, 11):\n    ...:     print(f\"k = {k}, etiquette = {etiquetage_knn(table_pokemons_feu_roche, nouveau_pokemon, 'type', ['vitesse', 'defense'], k)}\")\n    ...:     \nk = 1, etiquette = Roche\nk = 2, etiquette = Roche\nk = 3, etiquette = Feu\nk = 4, etiquette = Feu\nk = 5, etiquette = Feu\nk = 6, etiquette = Feu\nk = 7, etiquette = Feu\nk = 8, etiquette = Feu\nk = 9, etiquette = Feu\nk = 10, etiquette = Feu\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/#les-limites-de-lalgorithme","title":"Les limites de l'algorithme","text":"<p>Point de cours 5</p> <p>L'algorithme des k plus proches voisins permet de r\u00e9pondre \u00e0 un probl\u00e8me de classification pour tout type de donn\u00e9es mais il faut \u00eatre conscient de ses limites :</p> <ul> <li>il faut calculer les distances entre une nouvelle donn\u00e9e et toutes celles du jeu de donn\u00e9es ce qui implique une complexit\u00e9 au moins lin\u00e9aire en temps, ce qui n'est pas tol\u00e9rable pour des jeux de donn\u00e9es de grande taille ou des applications en temps r\u00e9el</li> <li>la qualit\u00e9 de la pr\u00e9diction repose sur l'hypoth\u00e8se que les donn\u00e9es proches pour la distance choisie sont similaires \u00e0 la nouvelle donn\u00e9e</li> <li>la qualit\u00e9 du jeu de donn\u00e9es est cruciale comme pour tout algorithme de classification.</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/#histoire-de-lintelligence-artificielle-et-des-algorithmes-dapprentissage","title":"Histoire de l'intelligence artificielle et des algorithmes d'apprentissage","text":"<p>Point de cours 6</p> <p>L'algorithme des k plus proches voisins est un exemple simple d'algorithme de classification par apprentissage (machine learning): il exploite un jeu de donn\u00e9es connu pour apporter une information, plausible mais pas forc\u00e9ment exacte sur une nouvelle donn\u00e9e. </p> <p>Cette famille d'algorithmes est rattach\u00e9e \u00e0 la branche de l'informatique d\u00e9nomm\u00e9e intelligence artificielle qui peut \u00eatre d\u00e9finie comme la conception des agents rationnels, autonomes et adaptatifs pour r\u00e9soudre des probl\u00e8mes \u00ab comme ou mieux \u00bb que ne le ferait un \u00eatre humain.</p> <p>L'intelligence artificielle  est apparue d\u00e8s les d\u00e9buts de l'informatique dans les ann\u00e9es 1950, le mythe d'une cr\u00e9ature artificielle intelligente \u00e9tant un classique de la litt\u00e9rature (Golem, Frankenstein ...). Apr\u00e8s avoir connu, un hiver pendant les ann\u00e9es 1980-1990, un renouveau important a lieu depuis les ann\u00e9es 2000. Le d\u00e9veloppement d'id\u00e9es anciennes comme les r\u00e9seaux de neurones a \u00e9t\u00e9 favoris\u00e9 par une acc\u00e9l\u00e9ration des performances mat\u00e9rielles (GPU) et des volumes de donn\u00e9es disponibles (essor du web). Les r\u00e9seaux de neurones profonds  (deep learning) rendent possibles des applications proches de certaines aptitudes consid\u00e9r\u00e9es auparavant comme caract\u00e9ristiques de l'humain: reconnaissance d'image, du langage, prise de d\u00e9cision ...</p> <p>Exercice 3</p> <p>Compl\u00e9ter la frise ci-dessous avec ces \u00e9v\u00e9nements marquants de l'histoire de l'intelligence artificielle  qui sont donn\u00e9s dans le d\u00e9sordre :</p> <ul> <li>test de Turing </li> <li>victoire d'Alpha-Go sur le meilleur joueur humain de jeu de Go</li> <li>premier neurone artificiel imagin\u00e9 par Mc Culloch et Pitts</li> <li>victoire de Watson (IBM) sur les meilleurs joueurs humains au jeu Jeopardy</li> <li>victoire de Deep Blue (IBM) sur le champion du monde d'\u00e9chec Gary Kasparov</li> <li>invention du perceptron par Frank Rosenblatt</li> <li>conf\u00e9rence de Darmouth</li> <li>prix Turing d\u00e9cern\u00e9 \u00e0 Yann Le Cun pour ses travaux sur le Deep Learning</li> </ul> <p>\\ Graphique 4 : histoire de l'intelligence artificielle</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-git/#synthese","title":"Synth\u00e8se","text":"<p>Synth\u00e8se </p> <p>L'algorithme des k plus proches voisins a pour but de  classifier une nouvelle donn\u00e9e en lui attribuant une \u00e9tiquette \u00e0 partir des \u00e9tiquettes  d\u00e9j\u00e0 connues d'un jeu de donn\u00e9es similaires.</p> <p>L'algorithme n'apporte pas une r\u00e9ponse exacte mais une pr\u00e9diction dont la qualit\u00e9 d\u00e9pend du jeu de donn\u00e9es, de la distance utilis\u00e9e pour mesurer  la similarit\u00e9 entre deux donn\u00e9es et du nombre k de voisins les plus proches parmi lesquels l'\u00e9tiquette  majoritaire sera choisie.</p> <p>La derni\u00e8re d\u00e9cennie a connu un essor spectaculaire d'algorithmes de classification par apprentissage bien plus performants et perfectionn\u00e9s qui s'appuient sur des jeux de donn\u00e9es gigantesques et apportent des r\u00e9ponses \u00e0 des questions comme :</p> <ul> <li>Quelle est la classe de cet objet sur cette photo ? une voiture ? une moto ? une poussette ?</li> <li>Quel est, au vu de ses donn\u00e9es m\u00e9dicales, le diagnostic que l'on peut faire sur ce patient ? malade ou pas ?</li> <li>Quel est, au vu de sa  consommation pr\u00e9c\u00e9dente, le profil de ce consommateur de streaming video ? quelles s\u00e9ries peut-on lui sugg\u00e9rer  ?</li> <li>Quel est, au vu de son dossier administratif, le profil de ce contribuable ? fraudeur ou pas ?</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/","title":"Knn cours source","text":""},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/#credits","title":"Cr\u00e9dits","text":"<p>Ce cours a \u00e9t\u00e9 construit \u00e0 partir de plusieurs sources : l'excellent cours de Julien de Vill\u00e8le dont sont extraits certains passages ;  le  chapitre 13 du manuel NSI de la collection Tortue chez Ellipse,  auteurs : Ballabonski, Conchon, Filliatre, N'Guyen ; les fiches de cours 37 et 38 du Prepabac Premi\u00e8re NSI chez Hatier, auteurs : Laurent Signac et Guillaume Connan ; un QCM sur https://doctools.dgpad.net r\u00e9alis\u00e9 par Alain Busser.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/#presentation-du-probleme-de-classification","title":"Pr\u00e9sentation du probl\u00e8me de classification","text":"<p>Activite</p> <p>En guise d'introduction au probl\u00e8me de classification par l'algorithme des k plus proches voisins, r\u00e9pondez au QCM r\u00e9alis\u00e9 par Alain Busser, qui est propos\u00e9 \u00e0 l'adresse https://link.dgpad.net/dsFN.</p> <p>Dans ce cours, on consid\u00e8re un exemple mod\u00e8le constitu\u00e9 de 37 Pokemons  dont on donne ci-dessous une repr\u00e9sentation graphique avec  :</p> <ul> <li>en abscisse leur vitesse</li> <li>en ordonn\u00e9e leur d\u00e9fense</li> <li>en couleur leur type : Feu ou Roche</li> </ul> <p>\\</p> <p>Graphique 1 : Pokemons Feu ou Roche avec deux descripteurs</p> <p>Les donn\u00e9es peuvent \u00eatre repr\u00e9sent\u00e9es sous forme d'une table contenant 37 enregistrements ayant cette forme  : </p> \ud83d\udc0d Script Python<pre><code>{'nom': 'Salameche',   'defense': '43',  'vitesse': '65',  'type': 'Feu'}\n</code></pre> <p>Chaque enregistrement contient ce qu'on appellera pour la suite :</p> <ul> <li>deux descripteurs <code>'defense'</code> et <code>'vitesse'</code> qui donnent la position du point,</li> <li>une unique \u00e9tiquette <code>'type'</code> qui donne la couleur du point.</li> </ul> <p>Remarque</p> <p>Les valeurs des descripteurs <code>'defense'</code>  et <code>'vitesse'</code> sont de type <code>str</code> dans l'enregistrement. IL faut donc les convertir en type <code>int</code> ou <code>float</code> pour placer le point dans un rep\u00e8re. En pratique les enregistrements sont extraits de fichiers textes , comme des fichiers CSV, et les descripteurs peuvent repr\u00e9senter des cat\u00e9gories ('m\u00e2le', 'femelle' ...) tout autant que des valeurs num\u00e9riques. On a donc choisi de garder toutes les valeurs en type <code>str</code> et de les convertir selon les besoins de traitement.</p> <p>Cours</p> <p>Le probl\u00e8me de classification auquel l'algorithme des k plus proches voisins tente d'apporter une r\u00e9ponse est le suivant (les trois formulations sont \u00e9quivalentes) :</p> <ul> <li>Un nouveau Pokemon a pour <code>'vitesse'</code> 58 et pour <code>'defense'</code>  65, quel est son type ?</li> <li>Un nouveau point a pour coordonn\u00e9es (58 ; 65). Quelle est sa couleur ?</li> <li>Un nouvel enregistrement a pour descripteurs <code>'vitesse' : 58</code> et <code>'defense' : 65</code>. Quelle est son \u00e9tiquette ?</li> </ul> <p>Sur le graphique, si on ne consid\u00e8re que le point vert le plus proche (en mesurant \u00e0 la r\u00e8gle), on peut attribuer l'\u00e9tiquette 'vert' (type Roche)  au nouveau point. Mais si on consid\u00e8re les trois voisins les plus proches , deux sur trois sont rouges et dans ce cas on attribue l'\u00e9tiquette 'rouge' (type Feu). On voit que le nombre de voisins \u00e0 consid\u00e9rer est important, de plus la distance doit \u00eatre d\u00e9finie pr\u00e9cis\u00e9ment. </p> <p>Le param\u00e9trage de l'algorithme peut \u00eatre  effectu\u00e9 par un humain mais son ex\u00e9cution par un ordinateur   permet  :</p> <ul> <li>d'automatiser la r\u00e9ponse,</li> <li>de r\u00e9pondre rapidement \u00e0 des milliers ou millions de questions du m\u00eame type,</li> <li>de g\u00e9n\u00e9raliser \u00e0 des cas avec plus de deux descripteurs</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/#algorithme-des-k-plus-proches-voisins","title":"Algorithme des  k plus proches voisins","text":"<p>Activite</p> <p>Regardez la petite video accessible depuis ce lien : algo_1_sur_2.gif</p> <p>Cours</p> <p>Les donn\u00e9es sur lesquelles on applique l'algorithme des k plus proches voisins sont :</p> <ul> <li>une table d'enregistrements (dictionnaires Python) d'objets dont on connait l'\u00e9tiquette / la classification, nommons la <code>table_pokemon</code>. On peut remplacer enregistrement par : point, donn\u00e9e ou Pokemon dans notre exemple.</li> <li>l'enregistrement   d'une nouvelle donn\u00e9e dont on cherche l'\u00e9tiquette / la classification, nommons le  <code>nouveau_pokemon</code></li> </ul> <p>Les param\u00e8tres de l'algorithme des k plus proches voisins sont :</p> <ul> <li>Un entier naturel <code>k</code>, g\u00e9n\u00e9ralement impair et compris entre 3 et 10, qui correspond au nombre de voisins les plus proches qui seront examin\u00e9s.</li> <li>Une fonction de distance pour mesurer la proximit\u00e9 entre la nouvelle donn\u00e9e et toutes les  donn\u00e9es d\u00e9j\u00e0 \u00e9tiquet\u00e9es de la table ce qui permettra de s\u00e9lectionner les <code>k</code> plus proches. Cette distance est mesur\u00e9e  \u00e0 partir des valeurs de certains descripteurs pr\u00e9sents dans les enregistrements, comme <code>'vitesse'</code> et <code>'defense'</code> dans l'exemple du cours.</li> </ul> <p>L'algorithme des k plus proches voisins se d\u00e9roule ainsi :</p> <ol> <li>Pour chaque enregistrement / pokemon dans <code>table_pokemon</code>  on calcule la distance entre cet enregistrement et celui de <code>nouveau_pokemon</code>. On stocke au fur et \u00e0 mesure les couples <code>(distance avec chaque  nouveau_pokemon, \u00e9tiquette de l'enregistrement / pokemon)</code> dans un tableau <code>tab_distance</code>.</li> <li>On trie le tableau  <code>tab_distance</code> (qui contient des <code>tuple</code> <code>(distance, \u00e9tiquette)</code>) dans l'ordre croissant selon le crit\u00e8re de distance.</li> <li>On extrait les <code>k</code> plus petits \u00e9l\u00e9ments de <code>tab_distance</code> qui correspondent aux <code>k</code> plus proches voisins de <code>nouveau_pokemon</code> dans un tableau <code>k_voisins</code>.</li> <li>On s\u00e9lectionne l'\u00e9tiquette majoritaire dans le tableau <code>k_voisins</code> et on l'attribue \u00e0 <code>nouveau_pokemon</code> parce que c'est le choix majoritaire parmi les <code>k</code> plus proches voisins.</li> </ol> <p>Exemple</p> <p>D\u00e9taillons les diff\u00e9rentes \u00e9tapes  de l'algorithme des k plus proches voisins  sur notre exemple de Pokemons.</p> <ul> <li>Initialisation : chargement et traitement du jeu de donn\u00e9es</li> </ul> <p>On charge le fichier CSV contenant le jeu de donn\u00e9es dans une table (un tableau d'enregistrements qui sont des dictionnaires).</p> \ud83d\udc0d Script Python<pre><code>In [1]: table_pokemons = charger_fichier_entete('./datas/pokemons.csv')\n\nIn [2]: table_pokemons[0]\nOut[2]: \n{'nom': 'Rattata', 'vie': '30',\n 'attaque': '56',  'defense': '35',\n 'vitesse': '72',  'type': 'Normal'}\n</code></pre> <p>On filtre la table pour extraire les Pokemons de type Feu et Roche. Une \u00e9tape de traitement des donn\u00e9es est souvent n\u00e9cessaire.</p> \ud83d\udc0d Script Python<pre><code>In [3]: table_pokemons_feu_roche = [pok for pok in table_pokemons \n   ...:                    if pok['type'] in ['Roche', 'Feu']]\n\nIn [4]: len(table_pokemons_feu_roche)\nOut[4]: 37\n</code></pre> <ul> <li>\u00c9tape 1 : calcul des distances </li> </ul> <p>On calcule les distances entre le nouveau Pokemon et tous les Pokemons de la table <code>table_pokemons_feu_roche</code>.</p> \ud83d\udc0d Script Python<pre><code>In [5]: nouveau_pokemon = {'vitesse':58, 'attaque' : 120 , 'defense' : 65, 'vie' : 100 }\n\nIn [6]: table_pokemons_feu_roche[0] #premier Pokemon de la table\nOut[6]: \n{'nom': 'Salameche', 'vie': '39',\n 'attaque': '52',  'defense': '43',\n 'vitesse': '65',  'type': 'Feu'}\n\nIn [7]: salameche = table_pokemons_feu_roche[0]\n\nIn [8]: distance_euclidienne(nouveau_pokemon, salameche, ['vitesse', 'defense'])\nOut[8]: 23.087\n\nIn [9]: tab_distance = table_distance_nouveau(table_pokemons_feu_roche, nouveau_pokemon, distance_euclidienne, 'type',                                      ['vitesse', 'defense'])\n\nIn [10]: tab_distance[:4]\nOut[10]: [(18.385, 'Feu'), (22.091, 'Feu'), (21.19, 'Feu'), (44.598, 'Feu')]\n</code></pre> <ul> <li>\u00c9tapes 2 et 3 : tri et s\u00e9lection des k plus proches voisins </li> </ul> <p>On fixe le param\u00e8tre <code>k</code>, on trie dans l'ordre croissant le tableau <code>tab_distance</code> suivant le crit\u00e8re de distance et on extrait les <code>k</code> plus proches voisins.</p> \ud83d\udc0d Script Python<pre><code>In [11]: k_voisins = trier_puis_extraire(tab_distance, 5)\n\nIn [12]: k_voisins\nOut[12]: ['Roche', 'Feu', 'Feu', 'Feu', 'Feu']\n</code></pre> <ul> <li>\u00c9tape  4 : s\u00e9lection de l'\u00e9tiquette majoritaire parmi les k plus proches voisins</li> </ul> \ud83d\udc0d Script Python<pre><code>In [19]: element_majoritaire(k_voisins)\nOut[19]: 'Feu'\n</code></pre> <p>On peut rassembler toutes les fonctions pr\u00e9c\u00e9dentes en une seule qui renvoie l'\u00e9tiquette majoritaire parmi les <code>k</code> plus proches voisins.</p> \ud83d\udc0d Script Python<pre><code>def etiquetage_knn(table, nouveau, etiquette, tab_descripteur, k,\n                   distance = distance_euclidienne):    \n    tab_distance = table_distance_nouveau(table, nouveau, distance, etiquette, tab_descripteur)\n    k_voisins = trier_puis_extraire(tab_distance, k)\n    voisin_majoritaire = element_majoritaire(k_voisins)\n    return voisin_majoritaire\n</code></pre> <p>On peut v\u00e9rifier que cela donne le m\u00eame r\u00e9sultat.</p> \ud83d\udc0d Script Python<pre><code>In [20]: etiquetage_knn(table_pokemons_feu_roche, nouveau_pokemon, 'type', ['vitesse', 'defense'], 5)\nOut[20]: 'Feu'\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/#choix-des-parametres-et-limites-de-lalgorithme","title":"Choix des param\u00e8tres et limites de l'algorithme","text":""},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/#le-choix-de-la-distance","title":"Le choix de la distance","text":"<p>Graphique  2 : distances dans le plan</p> <p>Cours</p> <p>Consid\u00e9rons un nouveau Pokemon et un Pokemon d\u00e9j\u00e0 connu  dans une table :</p> \ud83d\udc0d Script Python<pre><code>In [3]: nouveau_pokemon\nOut[3]: {'vitesse': 58, 'attaque': 120, 'defense': 65, 'vie': 100}\n\nIn [4]: table_pokemons_feu_roche[1]\nOut[4]: \n{'nom': 'Reptincel', 'vie': '58',  'attaque': '64',  'defense': '58',  'vitesse': '80',\n 'type': 'Feu'}\n</code></pre> <ul> <li>Si on caract\u00e9rise chaque Pokemon par deux descripteurs <code>'vitesse'</code> et <code>'defense'</code>, on peut les repr\u00e9senter dans le plan par les points A de coordonn\u00e9es \\((58, 65)\\)  et B de coordonn\u00e9es \\((80, 58)\\). On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple :</li> <li>La distance euclidienne qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e : \\(AB=\\sqrt{(x_{B}-x_{A})^{2}+(y_{B}-y_{A})^{2}}=\\sqrt{(80-58)^{2}+(58-65)^{2}} \\approx 23,087\\)</li> <li> <p>La distance de Manhattan qui correspond \u00e0 la longueur du chemin parcouru pour aller de \\(A\\) \u00e0 \\(B\\) en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 du plan, comme dans le plan d'une ville o\u00f9 les rues se coupent \u00e0 angle droit :        \\(AB=\\vert x_{B}-x_{A} \\vert + \\vert y_{B}-y_{A} \\vert =\\vert 80 - 58 \\vert + \\vert 58 - 65 \\vert = 22 + 7 = 29\\)</p> </li> <li> <p>Si on caract\u00e9rise chaque Pokemon par trois descripteurs <code>'vitesse'</code>, <code>'defense'</code> et <code>'attaque'</code> on peut les repr\u00e9senter dans l'espace  par les points A de coordonn\u00e9es \\((58, 65, 120)\\)  et B de coordonn\u00e9es \\((80, 58, 64)\\). On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple en notant \\(z\\) la troisi\u00e8me coordonn\u00e9e :</p> </li> <li>La distance euclidienne qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e : \\(AB=\\sqrt{(x_{B}-x_{A})^{2}+(y_{B}-y_{A})^{2} + (z_{B}-z_{A})^{2}}=\\sqrt{(80-58)^{2}+ (58-65)^{2} +   (120 - 64)^{2}} \\approx 60,572\\)</li> <li> <p>La distance de Manhattan qui correspond \u00e0 la longueur du chemin parcouru pour aller de \\(A\\) \u00e0 \\(B\\) en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 de l'espace  :        \\(AB=\\vert x_{B}-x_{A} \\vert + \\vert y_{B}-y_{A} \\vert + \\vert z_{B}-z_{A} \\vert =\\vert 80 - 58 \\vert + \\vert 58 - 60 \\vert  + \\vert  120 - 64  \\vert = 22 + 7 + 56 = 85\\)</p> </li> <li> <p>On peut g\u00e9n\u00e9raliser les calculs de distances pr\u00e9c\u00e9dents \u00e0 4, 5 ou \\(n\\) descripteurs.</p> </li> </ul> <p>L'ensemble des k plus proches voisins d\u00e9pend du choix de la distance qui s'effectue en fonction du jeu de donn\u00e9es. </p> <p>De plus, il faut pr\u00eater attention aux diff\u00e9rences d'\u00e9chelles entre les descripteurs : un \u00e9cart de 50 n'a pas le m\u00eame sens sur  une <code>'vitesse'</code>   mesur\u00e9e sur une \u00e9chelle de 0 \u00e0 1000 et sur une <code>'defense'</code>  mesur\u00e9e sur une \u00e9chelle de 0 \u00e0 100. Il peut \u00eatre int\u00e9ressant, dans la phase de traitement des donn\u00e9es, de les normaliser en ramenant chaque valeur de descripteur dans l'intervalle [0;1] avec le rapport \\(\\frac{\\text{valeur}-\\text{valeurMin}}{\\text{valeurMax}-\\text{valeurMin}}\\).</p> <p>Voici une repr\u00e9sentation dans l'espace du jeu de donn\u00e9es des 37 Pokemons Roche et Feu avec trois descripteurs <code>'vitesse'</code>, <code>'defense'</code> et <code>'attaque'</code>. L'ajout d'un descripteur peut permettre d'am\u00e9liorer la classification en s\u00e9parant plus nettement les familles de points selon leur \u00e9tiquette.</p> <p>{:.center}</p> <p>Graphique 3 : Pokemons Feu ou Roche avec trois descripteurs</p> <p>Exercice</p> <p>Dans le plan muni d'un rep\u00e8re orthonorm\u00e9 on a repr\u00e9sent\u00e9 cinq points d'un jeu de donn\u00e9es \u00e9tiquet\u00e9s :</p> <ul> <li>trois points d'\u00e9tiquette 'rond' : A, B et C</li> <li>deux points d'\u00e9tiquette 'croix' : E et F</li> </ul> <p>On  consid\u00e8re un nouveau point  D sans \u00e9tiquette.</p> <ol> <li>D\u00e9terminer les trois points les plus proches de D avec la distance euclidienne.</li> <li>D\u00e9terminer les trois points les plus proches de D avec la distance de Manhattan.</li> <li>Quelle est l'\u00e9tiquette de D si on applique l'algorithme des k plus proches voisins avec k = 3 et la distance euclidienne ? et avec k = 3 et la distance de Manhattan ?</li> </ol> <p>\\</p> <p>Exercice</p> <p>Les distances euclidienne ou de Manhattan s'appliquent \u00e0 des  descripteurs qui prennent des valeurs num\u00e9riques continues.</p> <p>La distance de Hammming s'applique \u00e0 des descripteurs qui sont  des s\u00e9quences de symboles comme des cha\u00eenes de caract\u00e8res ou des suites de bits 0 ou 1 et prend pour valeur le nombre de symboles diff\u00e9rents entre deux s\u00e9quences.</p> <p>Par exemple, on a  <code>distance_hamming('rat', 'raz') = 1</code> ,  <code>distance_hamming('rat', 'rater') = 2</code>,  <code>distance_hamming('101', '011') = 2</code> et <code>distance_hamming('1010', '101') = 1</code>.</p> <p>\u00c9crire en Python une fonction d'en-t\u00eate <code>distance_hamming(chaine1, chaine2)</code> qui renvoie la distance de Hamming entre deux cha\u00eenes de caract\u00e8res.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/#le-choix-du-parametre-k","title":"Le choix du param\u00e8tre <code>k</code>","text":"<p>Activite</p> <p>Regardez la petite video accessible depuis ce lien : algo_2_sur_2.gif</p> <p>Cours</p> <p>On reprend l'exemple initial du jeu de donn\u00e9es de 37 Pokemons Roche et Feu caract\u00e9ris\u00e9s par les deux descripteurs <code>'vitesse'</code> et  <code>'defense'</code> et d'un nouveau Pokemon de <code>'vitesse' : 58</code> et <code>'defense' : 65</code> repr\u00e9sent\u00e9s sur le graphique 1.</p> <p>On donne ci-dessous  les \u00e9tiquettes attribu\u00e9s par  l'algorithme des k plus proches voisins avec k variant entre 1 et 9.</p> <p>On observe la sensibilit\u00e9 aux perturbations locales pour les petites valeurs de k : les des deux points  les plus proches sont verts, de type Roche , mais les points dans un voisinage plus large sont majoritairement rouges, de type Feu.  </p> <p>D'un autre c\u00f4t\u00e9, une valeur de k trop grande prend en compte des points \u00e9loign\u00e9s et la classe majoritaire globalement finit par s'imposer.</p> <p>En g\u00e9n\u00e9ral, on choisit une valeur de k entre 3 et 10 et plut\u00f4t un entier impair (pourquoi d'apr\u00e8s vous ?)</p> \ud83d\udc0d Script Python<pre><code>In [30]: nouveau_pokemon = {'vitesse':58, 'attaque' : 120 , 'defense' : 65, 'vie' : 100 }\n    ...: for k in range(1, 11):\n    ...:     print(f\"k = {k}, etiquette = {etiquetage_knn(table_pokemons_feu_roche, nouveau_pokemon, 'type', ['vitesse', 'defense'], k)}\")\n    ...:     \nk = 1, etiquette = Roche\nk = 2, etiquette = Roche\nk = 3, etiquette = Feu\nk = 4, etiquette = Feu\nk = 5, etiquette = Feu\nk = 6, etiquette = Feu\nk = 7, etiquette = Feu\nk = 8, etiquette = Feu\nk = 9, etiquette = Feu\nk = 10, etiquette = Feu\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/#les-limites-de-lalgorithme","title":"Les limites de l'algorithme","text":"<p>Cours</p> <p>L'algorithme des k plus proches voisins permet de r\u00e9pondre \u00e0 un probl\u00e8me de classification pour tout type de donn\u00e9es mais il faut \u00eatre conscient de ses limites :</p> <ul> <li>il faut calculer les distances entre une nouvelle donn\u00e9e et toutes celles du jeu de donn\u00e9es ce qui implique une complexit\u00e9 au moins lin\u00e9aire en temps, ce qui n'est pas tol\u00e9rable pour des jeux de donn\u00e9es de grande taille ou des applications en temps r\u00e9el</li> <li>la qualit\u00e9 de la pr\u00e9diction repose sur l'hypoth\u00e8se que les donn\u00e9es proches pour la distance choisie sont similaires \u00e0 la nouvelle donn\u00e9e</li> <li>la qualit\u00e9 du jeu de donn\u00e9es est cruciale comme pour tout algorithme de classification.</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/#histoire-de-lintelligence-artificielle-et-des-algorithmes-dapprentissage","title":"Histoire de l'intelligence artificielle et des algorithmes d'apprentissage","text":"<p>Cours</p> <p>L'algorithme des k plus proches voisins est un exemple simple d'algorithme de classification par apprentissage (machine learning): il exploite un jeu de donn\u00e9es connu pour apporter une information, plausible mais pas forc\u00e9ment exacte sur une nouvelle donn\u00e9e. </p> <p>Cette famille d'algorithmes est rattach\u00e9e \u00e0 la branche de l'informatique d\u00e9nomm\u00e9e intelligence artificielle qui peut \u00eatre d\u00e9finie comme la conception des agents rationnels, autonomes et adaptatifs pour r\u00e9soudre des probl\u00e8mes \u00ab comme ou mieux \u00bb que ne le ferait un \u00eatre humain.</p> <p>L'intelligence artificielle  est apparue d\u00e8s les d\u00e9buts de l'informatique dans les ann\u00e9es 1950, le mythe d'une cr\u00e9ature artificielle intelligente \u00e9tant un classique de la litt\u00e9rature (Golem, Frankenstein ...). Apr\u00e8s avoir connu, un hiver pendant les ann\u00e9es 1980-1990, un renouveau important a lieu depuis les ann\u00e9es 2000. Le d\u00e9veloppement d'id\u00e9es anciennes comme les r\u00e9seaux de neurones a \u00e9t\u00e9 favoris\u00e9 par une acc\u00e9l\u00e9ration des performances mat\u00e9rielles (GPU) et des volumes de donn\u00e9es disponibles (essor du web). Les r\u00e9seaux de neurones profonds  (deep learning) rendent possibles des applications proches de certaines aptitudes consid\u00e9r\u00e9es auparavant comme caract\u00e9ristiques de l'humain: reconnaissance d'image, du langage, prise de d\u00e9cision ...</p> <p>Exercice</p> <p>Compl\u00e9ter la frise ci-dessous avec ces \u00e9v\u00e9nements marquants de l'histoire de l'intelligence artificielle  qui sont donn\u00e9s dans le d\u00e9sordre :</p> <ul> <li>test de Turing </li> <li>victoire d'Alpha-Go sur le meilleur joueur humain de jeu de Go</li> <li>premier neurone artificiel imagin\u00e9 par Mc Culloch et Pitts</li> <li>victoire de Watson (IBM) sur les meilleurs joueurs humains au jeu Jeopardy</li> <li>victoire de Deep Blue (IBM) sur le champion du monde d'\u00e9chec Gary Kasparov</li> <li>invention du perceptron par Frank Rosenblatt</li> <li>conf\u00e9rence de Darmouth</li> <li>prix Turing d\u00e9cern\u00e9 \u00e0 Yann Le Cun pour ses travaux sur le Deep Learning</li> </ul> <p></p> <p>Graphique 4 : histoire de l'intelligence artificielle</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-source/#synthese","title":"Synth\u00e8se","text":"<p>Memo</p> <p>L'algorithme des k plus proches voisins a pour but de  classifier une nouvelle donn\u00e9e en lui attribuant une \u00e9tiquette \u00e0 partir des \u00e9tiquettes  d\u00e9j\u00e0 connues d'un jeu de donn\u00e9es similaires.</p> <p>L'algorithme n'apporte pas une r\u00e9ponse exacte mais une pr\u00e9diction dont la qualit\u00e9 d\u00e9pend du jeu de donn\u00e9es, de la distance utilis\u00e9e pour mesurer  la similarit\u00e9 entre deux donn\u00e9es et du nombre k de voisins les plus proches parmi lesquels l'\u00e9tiquette  majoritaire sera choisie.</p> <p>La derni\u00e8re d\u00e9cennie a connu un essor spectaculaire d'algorithmes de classification par apprentissage bien plus performants et perfectionn\u00e9s qui s'appuient sur des jeux de donn\u00e9es gigantesques et apportent des r\u00e9ponses \u00e0 des questions comme :</p> <ul> <li>Quelle est la classe de cet objet sur cette photo ? une voiture ? une moto ? une poussette ?</li> <li>Quel est, au vu de ses donn\u00e9es m\u00e9dicales, le diagnostic que l'on peut faire sur ce patient ? malade ou pas ?</li> <li>Quel est, au vu de sa  consommation pr\u00e9c\u00e9dente, le profil de ce consommateur de streaming video ? quelles s\u00e9ries peut-on lui sugg\u00e9rer  ?</li> <li>Quel est, au vu de son dossier administratif, le profil de ce contribuable ? fraudeur ou pas ?</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/","title":"Cours sur l'algorithme des k plus proches voisins","text":""},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/#credits","title":"Cr\u00e9dits","text":"<p>Ce cours a \u00e9t\u00e9 construit \u00e0 partir de plusieurs sources : l'excellent cours de Julien de Vill\u00e8le dont sont extraits certains passages ;  le  chapitre 13 du manuel NSI de la collection Tortue chez Ellipse,  auteurs : Ballabonski, Conchon, Filliatre, N'Guyen ; les fiches de cours 37 et 38 du Prepabac Premi\u00e8re NSI chez Hatier, auteurs : Laurent Signac et Guillaume Connan ; un QCM sur https://doctools.dgpad.net r\u00e9alis\u00e9 par Alain Busser.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/#presentation-du-probleme-de-classification","title":"Pr\u00e9sentation du probl\u00e8me de classification","text":"<p>:::activite     En guise d'introduction au probl\u00e8me de classification par l'algorithme des k plus proches voisins, r\u00e9pondez au QCM r\u00e9alis\u00e9 par Alain Busser, qui est propos\u00e9 \u00e0 l'adresse https://link.dgpad.net/dsFN. :::</p> <p>Dans ce cours, on consid\u00e8re un exemple mod\u00e8le constitu\u00e9 de 37 Pokemons  dont on donne ci-dessous une repr\u00e9sentation graphique avec  :</p> <ul> <li>en abscisse leur vitesse</li> <li>en ordonn\u00e9e leur d\u00e9fense</li> <li>en couleur leur type : Feu ou Roche</li> </ul> <p>\\</p> <p>Graphique 1 : Pokemons Feu ou Roche avec deux descripteurs</p> <p>Les donn\u00e9es peuvent \u00eatre repr\u00e9sent\u00e9es sous forme d'une table contenant 37 enregistrements ayant cette forme  : </p> \ud83d\udc0d Script Python<pre><code>{'nom': 'Salameche',   'defense': '43',  'vitesse': '65',  'type': 'Feu'}\n</code></pre> <p>Chaque enregistrement contient ce qu'on appellera pour la suite :</p> <ul> <li>deux descripteurs <code>'defense'</code> et <code>'vitesse'</code> qui donnent la position du point,</li> <li>une unique \u00e9tiquette 'type' qui donne la couleur du point.</li> </ul> <p>:::remarque     Les valeurs des descripteurs <code>'defense'</code>  et <code>'vitesse'</code> sont de type <code>str</code> dans l'enregistrement. IL faut donc les convertir en type <code>int</code> ou <code>float</code> pour placer le point dans un rep\u00e8re. En pratique les enregistrements sont extraits de fichiers textes , comme des fichiers CSV, et les descripteurs peuvent repr\u00e9senter des cat\u00e9gories ('m\u00e2le', 'femelle' ...) tout autant que des valeurs num\u00e9riques. On a donc choisi de garder toutes les valeurs en type <code>str</code> et de les convertir selon les besoins de traitement. :::</p> <p>:::cours     Le probl\u00e8me de classification auquel l'algorithme des k plus proches voisins tente d'apporter une r\u00e9ponse est le suivant (les trois formulations sont \u00e9quivalentes) :</p> \ud83d\udccb Algo<pre><code>* Un nouveau Pokemon a pour `'vitesse'` 58 et pour `'defense'`  65, quel est son type ?\n* Un nouveau point a pour coordonn\u00e9es (58 ; 65). Quelle est sa couleur ?\n* Un nouvel enregistrement a pour descripteurs `'vitesse' : 58` et `'defense' : 65`. Quelle est son \u00e9tiquette ?\n\nSur le graphique, si on ne consid\u00e8re que le point vert le plus proche (en mesurant \u00e0 la r\u00e8gle), on peut attribuer l'\u00e9tiquette 'vert' (type _Roche_)  au nouveau point. Mais si on consid\u00e8re les trois voisins les plus proches , deux sur trois sont rouges et dans ce cas on attribue l'\u00e9tiquette 'rouge' (type _Feu_). On voit que le nombre de voisins \u00e0 consid\u00e9rer est important, de plus la distance doit \u00eatre d\u00e9finie pr\u00e9cis\u00e9ment.\n\nLe param\u00e9trage de l'algorithme peut \u00eatre  effectu\u00e9 par un humain mais son ex\u00e9cution par un ordinateur   permet  :\n* d'automatiser la r\u00e9ponse,\n* de r\u00e9pondre rapidement \u00e0 des milliers ou millions de questions du m\u00eame type,\n* de g\u00e9n\u00e9raliser \u00e0 des cas avec plus de deux descripteurs\n</code></pre> <p>::: </p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/#algorithme-des-k-plus-proches-voisins","title":"Algorithme des  k plus proches voisins","text":"<p>:::activite     Regardez la petite video accessible depuis ce lien : algo_1_sur_2.gif :::</p> <p>:::cours</p> \ud83d\udccb Algo<pre><code>Les donn\u00e9es sur lesquelles on applique _l'algorithme des k plus proches voisins_ sont :\n\n* une table d'enregistrements (dictionnaires Python) d'objets dont on connait __l'\u00e9tiquette / la classification__, nommons la `table_pokemon`. On peut remplacer enregistrement par : point, donn\u00e9e ou Pokemon dans notre exemple.\n* l'enregistrement   d'une nouvelle donn\u00e9e dont on cherche __l'\u00e9tiquette / la classification__, nommons le  `nouveau_pokemon`\n\nLes param\u00e8tres de _l'algorithme des k plus proches voisins_ sont :\n\n* Un __entier naturel `k`__, g\u00e9n\u00e9ralement impair et compris entre 3 et 10, qui correspond au nombre de voisins les plus proches qui seront examin\u00e9s.\n* Une __fonction de distance__ pour mesurer la proximit\u00e9 entre la nouvelle donn\u00e9e et toutes les  donn\u00e9es d\u00e9j\u00e0 \u00e9tiquet\u00e9es de la table ce qui permettra de s\u00e9lectionner les `k` plus proches. Cette distance est mesur\u00e9e  \u00e0 partir des valeurs de certains descripteurs pr\u00e9sents dans les enregistrements, comme `'vitesse'` et `'defense'` dans l'exemple du cours.\n\n\n_L'algorithme des k plus proches voisins_ se d\u00e9roule ainsi :\n\n1. Pour chaque enregistrement / pokemon dans `table_pokemon`  on calcule la distance entre cet enregistrement et celui de `nouveau_pokemon`. On stocke au fur et \u00e0 mesure les couples `(distance avec chaque  nouveau_pokemon, \u00e9tiquette de l'enregistrement / pokemon)` dans un tableau `tab_distance`.\n2. On trie le tableau  `tab_distance` (qui contient des `tuple` `(distance, \u00e9tiquette)`) dans l'ordre croissant selon le crit\u00e8re de distance.\n3. On extrait les `k` plus petits \u00e9l\u00e9ments de `tab_distance` qui correspondent aux `k` plus proches voisins de `nouveau_pokemon` dans un tableau `k_voisins`.\n4. On s\u00e9lectionne l'\u00e9tiquette majoritaire dans le tableau `k_voisins` et on l'attribue \u00e0 `nouveau_pokemon` parce que c'est le choix majoritaire parmi les `k` plus proches voisins.\n</code></pre> <p>:::</p> <p>:::exemple</p> \ud83d\udccb Algo<pre><code>D\u00e9taillons les diff\u00e9rentes \u00e9tapes  de _l'algorithme des k plus proches voisins_  sur notre exemple de Pokemons.\n\n* __Initialisation : chargement et traitement du jeu de donn\u00e9es__\n\nOn charge le fichier [CSV](https://fr.wikipedia.org/wiki/Comma-separated_values) contenant le jeu de donn\u00e9es dans une table (un tableau d'enregistrements qui sont des dictionnaires).\n\n~~~python\nIn [1]: table_pokemons = charger_fichier_entete('./datas/pokemons.csv')\n\nIn [2]: table_pokemons[0]\nOut[2]: \n{'nom': 'Rattata', 'vie': '30',\n 'attaque': '56',  'defense': '35',\n 'vitesse': '72',  'type': 'Normal'}\n~~~\n\nOn filtre la table pour extraire les Pokemons de type Feu et Roche. Une \u00e9tape de traitement des donn\u00e9es est souvent n\u00e9cessaire.\n\n~~~python\nIn [3]: table_pokemons_feu_roche = [pok for pok in table_pokemons \n   ...:                    if pok['type'] in ['Roche', 'Feu']]\n\nIn [4]: len(table_pokemons_feu_roche)\nOut[4]: 37\n~~~\n\n* __\u00c9tape 1 : calcul des distances__\n\nOn calcule les distance entre le nouveau Pokemon et tous les Pokemons de la table `table_pokemons_feu_roche`.\n\n~~~python\nIn [5]: nouveau_pokemon = {'vitesse':58, 'attaque' : 120 , 'defense' : 65, 'vie' : 100 }\n\nIn [6]: table_pokemons_feu_roche[0] #premier Pokemon de la table\nOut[6]: \n{'nom': 'Salameche', 'vie': '39',\n 'attaque': '52',  'defense': '43',\n 'vitesse': '65',  'type': 'Feu'}\n\nIn [7]: salameche = table_pokemons_feu_roche[0]\n\nIn [8]: distance_euclidienne(nouveau_pokemon, salameche, ['vitesse', 'defense'])\nOut[8]: 23.087\n\nIn [9]: tab_distance = table_distance_nouveau(table_pokemons_feu_roche, nouveau_pokemon, distance_euclidienne, 'type',                                      ['vitesse', 'defense'])\n\nIn [10]: tab_distance[:4]\nOut[10]: [(18.385, 'Feu'), (22.091, 'Feu'), (21.19, 'Feu'), (44.598, 'Feu')]\n~~~\n\n* __\u00c9tapes 2 et 3 : tri et s\u00e9lection des k plus proches voisins__\n\nOn fixe le param\u00e8tre, on trie dans l'ordre croissant le tableau `tab_distance` suivant le crit\u00e8re de distance et on extrait les `k` plus proches voisins.\n\n~~~python\nIn [11]: k_voisins = trier_puis_extraire(tab_distance, 5)\n\nIn [12]: k_voisins\nOut[12]: ['Roche', 'Feu', 'Feu', 'Feu', 'Feu']\n~~~\n\n* __\u00c9tape  4 : s\u00e9lection de l'\u00e9tiquette majoritaire parmi les k plus proches voisins__\n\n~~~python\nIn [19]: element_majoritaire(k_voisins)\nOut[19]: 'Feu'\n~~~~\n\nOn peut rassemble toutes les fonctions pr\u00e9c\u00e9dentes en une seule qui renvoie l'\u00e9tiquette majoritaire parmi les `k` plus proches voisins.\n\n~~~python\ndef etiquetage_knn(table, nouveau, etiquette, tab_descripteur, k,\n                   distance = distance_euclidienne):    \n    tab_distance = table_distance_nouveau(table, nouveau, distance, etiquette, tab_descripteur)\n    k_voisins = trier_puis_extraire(tab_distance, k)\n    voisin_majoritaire = element_majoritaire(k_voisins)\n    return voisin_majoritaire\n~~~\n\nOn peut v\u00e9rifier que cela donne le m\u00eame r\u00e9sultat.\n\n~~~python\nIn [20]: etiquetage_knn(table_pokemons_feu_roche, nouveau_pokemon, 'type', ['vitesse', 'defense'], 5)\nOut[20]: 'Feu'\n~~~\n</code></pre> <p>:::</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/#choix-des-parametres-et-limites-de-lalgorithme","title":"Choix des param\u00e8tres et limites de l'algorithme","text":""},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/#le-choix-de-la-distance","title":"Le choix de la distance","text":"<p>:::{.minipage width=\"0.5\\linewidth\" center=\"true\"}     \\     &amp;     \\ :::</p> <p>Graphique  2 : distances dans le plan</p> <p>:::cours     Consid\u00e9rons un nouveau Pokemon et un Pokemon d\u00e9j\u00e0 connu  dans une table :</p> \ud83d\udccb Algo<pre><code>~~~python\nIn [3]: nouveau_pokemon\nOut[3]: {'vitesse': 58, 'attaque': 120, 'defense': 65, 'vie': 100}\n\nIn [4]: table_pokemons_feu_roche[1]\nOut[4]: \n{'nom': 'Reptincel', 'vie': '58',  'attaque': '64',  'defense': '58',  'vitesse': '80',\n 'type': 'Feu'}\n~~~~\n\n* Si on caract\u00e9rise chaque Pokemon par deux descripteurs `'vitesse'` et `'defense'`, on peut les repr\u00e9senter dans le plan par les points A de coordonn\u00e9es $(58, 65)$  et B de coordonn\u00e9es $(80, 58)$. On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple :\n   * La __distance euclidienne__ qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e :  \n      $AB=\\sqrt{(x_{B}-x_{A})^{2}+(y_{B}-y_{A})^{2}}=\\sqrt{(80-58)^{2}+(58-65)^{2}} \\approx 23,087$\n   * La __distance de Manhattan__ qui correspond \u00e0 la longueur du chemin parcouru pour aller de $A$ \u00e0 $B$ en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 du plan, comme dans le plan d'une ville o\u00f9 les rues se coupent \u00e0 angle droit :\n       $AB=\\vert x_{B}-x_{A} \\vert + \\vert y_{B}-y_{A} \\vert =\\vert 80 - 58 \\vert + \\vert 58 - 65 \\vert = 22 + 7 = 29$\n\n* Si on caract\u00e9rise chaque Pokemon par trois descripteurs `'vitesse'`, `'defense'` et `'attaque'` on peut les repr\u00e9senter dans l'espace  par les points A de coordonn\u00e9es $(58, 65, 120)$  et B de coordonn\u00e9es $(80, 58, 64)$. On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple en notant $z$ la troisi\u00e8me coordonn\u00e9e :\n   * La __distance euclidienne__ qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e :  \n      $AB=\\sqrt{(x_{B}-x_{A})^{2}+(y_{B}-y_{A})^{2} + (z_{B}-z_{A})^{2}}=\\sqrt{(80-58)^{2}+ (58-65)^{2} +   (120 - 64)^{2}} \\approx 60,572$\n   * La [distance de Manhattan](https://fr.wikipedia.org/wiki/Distance_de_Manhattan) qui correspond \u00e0 la longueur du chemin parcouru pour aller de $A$ \u00e0 $B$ en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 du plan, comme dans le plan d'une ville o\u00f9 les rues se coupent \u00e0 angle droit :\n       $AB=\\vert x_{B}-x_{A} \\vert + \\vert y_{B}-y_{A} \\vert =\\vert 80 - 58 \\vert + \\vert 58 - 60 \\vert  + \\vert  120 - 64  \\vert = 22 + 7 + 56 = 85$\n\n* On peut g\u00e9n\u00e9raliser les calculs de distances pr\u00e9c\u00e9dents \u00e0 4, 5 ou n descripteurs.\n\nL'ensemble des k plus proches voisins d\u00e9pend du choix de la distance qui s'effectue en fonction du jeu de donn\u00e9es.\n\nDe plus, il faut pr\u00eater attention aux diff\u00e9rences d'\u00e9chelles entre les descripteurs : un \u00e9cart de 50 n'a pas le m\u00eame sens sur  une `'vitesse'`   mesur\u00e9e sur une \u00e9chelle de 0 \u00e0 1000 et sur une `'defense'`  mesur\u00e9e sur une \u00e9chelle de 0 \u00e0 100. Il peut \u00eatre int\u00e9ressant, dans la phase de traitement des donn\u00e9es, de les normaliser en ramenant chaque valeur de descripteur dans l'intervalle [0;1] avec le rapport $\\frac{\\text{valeur}-\\text{valeurMin}}{\\text{valeurMax}-\\text{valeurMin}}$.\n</code></pre> <p>:::</p> <p>Voici une repr\u00e9sentation dans l'espace du jeu de donn\u00e9es des 37 Pokemons Roche et Feu avec trois descripteurs <code>'vitesse'</code>, <code>'defense'</code> et <code>'attaque'</code>. L'ajout d'un descripteur peut permettre d'am\u00e9liorer la classification en s\u00e9parant plus nettement les familles de points selon leur \u00e9tiquette.</p> <p>:::{.minipage width=\"0.8\\linewidth\" center=\"true\"}     \\     Graphique 3 : Pokemons Feu ou Roche avec trois descripteurs :::</p> <p>:::exercice     Dans le plan muni d'un rep\u00e8re orthonorm\u00e9 on a repr\u00e9sent\u00e9 cinq points d'un jeu de donn\u00e9es \u00e9tiquet\u00e9s :</p> \ud83d\udccb Algo<pre><code>* trois points d'\u00e9tiquette 'rond' : A, B et C\n* deux points d'\u00e9tiquette 'croix' : E et F\n\nOn  consid\u00e8re un nouveau point  D sans \u00e9tiquette.\n\n\n1. D\u00e9terminer les trois points les plus proches de D avec la __distance euclidienne__.\n2. D\u00e9terminer les trois points les plus proches de D avec la __distance de Manhattan__.\n3. Quelle est l'\u00e9tiquette de D si on applique l'algorithme des k plus proches voisins avec k = 3 et la __distance euclidienne__ ? et avec k = 3 et la __distance de Manhattan__ ?\n\n![exercice distances](images/distances.png){width=\"70%\"}\\\n</code></pre> <p>:::</p> <p>:::exercice     Les distances euclidienne ou de Manhattan s'appliquent \u00e0 des  descripteurs qui prennent des valeurs num\u00e9riques continues.</p> \ud83d\udccb Algo<pre><code>La [distance de Hammming](https://fr.wikipedia.org/wiki/Distance_de_Hamming) s'applique \u00e0 des descripteurs qui sont  des s\u00e9quences de symboles comme des cha\u00eenes de caract\u00e8res ou des suites de bits 0 ou 1 et prend pour valeur le nombre de symboles diff\u00e9rents entre deux s\u00e9quences.\n\nPar exemple, on a  `distance_hamming('rat', 'raz') = 1` ,  `distance_hamming('rat', 'rater') = 2`,  `distance_hamming('101', '011') = 2` et `distance_hamming('1010', '101') = 1`.\n\n\u00c9crire en Python une fonction d'en-t\u00eate `distance_hamming(chaine1, chaine2)` qui renvoie la distance de Hamming entre deux cha\u00eenes de caract\u00e8res.\n</code></pre> <p>:::</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/#le-choix-du-parametre-k","title":"Le choix du param\u00e8tre <code>k</code>","text":"<p>:::activite     Regardez la petite video accessible depuis ce lien : algo_2_sur_2.gif :::</p> <p>:::cours</p> \ud83d\udccb Algo<pre><code>On reprend l'exemple initial du jeu de donn\u00e9es de 37 Pokemons _Roche_ et _Feu_ caract\u00e9ris\u00e9s par les deux descripteurs `'vitesse'` et  `'defense'` et d'un nouveau Pokemon de `'vitesse' : 58` et `'defense' : 65` repr\u00e9sent\u00e9s sur le graphique 1.\n\nOn donne ci-dessous  les \u00e9tiquettes attribu\u00e9s par  _l'algorithme des k plus proches voisins_ avec k variant entre 1 et 9.\n\nOn observe la sensibilit\u00e9 aux perturbations locales pour les petites valeurs de k : les des deux points  les plus proches sont verts, de type _Roche_ , mais les points dans un voisinage plus large sont majoritairement rouges, de type _Feu_.\n\nD'un autre c\u00f4t\u00e9, une valeur de k trop grande prend en compte des points \u00e9loign\u00e9s et la classe majoritaire globalement finit par s'imposer.\n\nEn g\u00e9n\u00e9ral, on choisit une valeur de k entre 3 et 10 et plut\u00f4t un entier impair (pourquoi d'apr\u00e8s vous ?)\n\n~~~python\nIn [30]: nouveau_pokemon = {'vitesse':58, 'attaque' : 120 , 'defense' : 65, 'vie' : 100 }\n    ...: for k in range(1, 11):\n    ...:     print(f\"k = {k}, etiquette = {etiquetage_knn(table_pokemons_feu_roche, nouveau_pokemon, 'type', ['vitesse', 'defense'], k)}\")\n    ...:     \nk = 1, etiquette = Roche\nk = 2, etiquette = Roche\nk = 3, etiquette = Feu\nk = 4, etiquette = Feu\nk = 5, etiquette = Feu\nk = 6, etiquette = Feu\nk = 7, etiquette = Feu\nk = 8, etiquette = Feu\nk = 9, etiquette = Feu\nk = 10, etiquette = Feu\n~~~\n</code></pre> <p>:::</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/#les-limites-de-lalgorithme","title":"Les limites de l'algorithme","text":"<p>:::cours</p> \ud83d\udccb Algo<pre><code>_L'algorithme des k plus proches voisins_ permet de r\u00e9pondre \u00e0 un __probl\u00e8me de classification__ pour tout type de donn\u00e9es mais il faut \u00eatre conscient de ses limites :\n\n*  il faut calculer les distances entre une nouvelle donn\u00e9e et toutes celles du jeu de donn\u00e9es ce qui implique une complexit\u00e9 au moins lin\u00e9aire en temps, ce qui n'est pas tol\u00e9rable pour des jeux de donn\u00e9es de grande taille ou des applications en temps r\u00e9el\n*  la qualit\u00e9 de la pr\u00e9diction repose sur l'hypoth\u00e8se que les donn\u00e9es proches pour la distance choisie sont similaires \u00e0 la nouvelle donn\u00e9e\n*  la qualit\u00e9 du jeu de donn\u00e9es est cruciale comme pour tout algorithme de classification.\n</code></pre> <p>:::</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/#histoire-de-lintelligence-artificielle-et-des-algorithmes-dapprentissage","title":"Histoire de l'intelligence artificielle et des algorithmes d'apprentissage","text":"<p>:::cours     L'algorithme des k plus proches voisins est un exemple simple d'algorithme de classification par apprentissage (machine learning): il exploite un jeu de donn\u00e9es connu pour apporter une information, plausible mais pas forc\u00e9ment exacte sur une nouvelle donn\u00e9e. On </p> \ud83d\udccb Algo<pre><code>Cette famille d'algorithmes est rattach\u00e9e \u00e0 la branche de l'informatique d\u00e9nomm\u00e9e __intelligence artificielle__ qui peut \u00eatre d\u00e9finie comme _la conception des agents rationnels, autonomes et adaptatifs pour r\u00e9soudre des probl\u00e8mes \u00ab comme ou mieux \u00bb que\nne le ferait un \u00eatre humain_.\n\nL'__intelligence artificielle__  est apparue d\u00e8s les d\u00e9buts de l'informatique dans les ann\u00e9es 1950, le mythe d'une cr\u00e9ature artificielle intelligente \u00e9tant un classique de la litt\u00e9rature (Golem, Frankenstein ...). Apr\u00e8s avoir connu, un _hiver_ pendant les ann\u00e9es 1980-1990, un renouveau important a lieu depuis les ann\u00e9es 2000. Le d\u00e9veloppement d'id\u00e9es anciennes comme les r\u00e9seaux de neurones a \u00e9t\u00e9 favoris\u00e9 par une acc\u00e9l\u00e9ration des performances mat\u00e9rielles (GPU) et des volumes de donn\u00e9es disponibles (essor du web). Les r\u00e9seaux de neurones profonds  (_deep learning_) rendent possibles des applications proches de certaines aptitudes consid\u00e9r\u00e9es auparavant comme caract\u00e9ristiques de l'humain: reconnaissance d'image, du langage, prise de d\u00e9cision ...\n</code></pre> <p>:::</p> <p>:::exercice     Compl\u00e9ter la frise ci-dessous avec ces \u00e9v\u00e9nements marquants de l'histoire de l'intelligence artificielle  qui sont donn\u00e9s dans le d\u00e9sordre :</p> \ud83d\udccb Algo<pre><code>* test de Turing \n* victoire d'Alpha-Go sur le meilleur joueur humain de jeu de Go\n* premier neurone artificiel imagin\u00e9 par Mc Culloch et Pitts\n* victoire de Watson (IBM) sur les meilleurs joueurs humains au jeu Jeopardy\n* victoire de Deep Blue (IBM) sur le champion du monde d'\u00e9chec Gary Kasparov\n* invention du perceptron par Frank Rosenblatt\n* conf\u00e9rence de Darmouth\n* prix Turing d\u00e9cern\u00e9 \u00e0 Yann Le Cun pour ses travaux sur le Deep Learning\n</code></pre> <p>:::</p> <p>:::{.minipage width=\"\\linewidth\" center=\"true\"}     \\     Graphique 4 : histoire de l'intelligence artificielle :::</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/knn-cours-tmp-mkdocs/#synthese","title":"Synth\u00e8se","text":"<p>:::memo</p> \ud83d\udccb Algo<pre><code>_L'algorithme des k plus proches voisins_ a pour but de  classifier une nouvelle donn\u00e9e en lui attribuant une \u00e9tiquette \u00e0 partir des \u00e9tiquettes  d\u00e9j\u00e0 connues d'un jeu de donn\u00e9es similaires.\n\nL'algorithme n'apporte pas une r\u00e9ponse exacte mais une pr\u00e9diction dont la qualit\u00e9 d\u00e9pend du jeu de donn\u00e9es, de la distance utilis\u00e9e pour mesurer  la similarit\u00e9 entre deux donn\u00e9es et du nombre k de voisins les plus proches parmi lesquels l'\u00e9tiquette  majoritaire sera choisie.\n\nLa derni\u00e8re d\u00e9cennie a connu un essor spectaculaire d'algorithmes e classification par apprentissage bien plus performants et perfectionn\u00e9s qui s'appuient sur des jeux de donn\u00e9es gigantesques et apportent des r\u00e9ponses \u00e0 des questions comme :\n\n- Quelle est la classe de cet objet sur cette photo ? une voiture ? une moto ? une poussette ?\n- Quel est, au vu de ses donn\u00e9es m\u00e9dicales, le diagnostic que l'on peut faire sur ce patient ? malade ou pas ?\n- Quel est, au vu de sa  consommation pr\u00e9c\u00e9dente, le profil de ce consommateur streaming video ? quelles s\u00e9ries peut-on lui sugg\u00e9rer  ?\n- Quel est, au vu de son dossier administratif, le profil de ce contribuable ? fraudeur ou pas ?\n</code></pre> <p>:::</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-git/","title":"kppv - TP","text":"<ul> <li>Cr\u00e9dits</li> <li>Partie 1 : impl\u00e9mentation de l'algorithme des k plus proches     voisins</li> <li>Partie 2 : application \u00e0 un jeu de donn\u00e9es     historique</li> <li>Distance de Manhattan, optimisation de la complexit\u00e9 puis \u00e9tude de     l'influence du param\u00e8tre     k</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-git/#credits","title":"Cr\u00e9dits","text":"<p>Ce TP est inspir\u00e9 pour la partie 2 d'un travail de Julien de Vill\u00e8le.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-git/#partie-1-implementation-de-lalgorithme-des-k-plus-proches-voisins","title":"Partie 1 : impl\u00e9mentation de l'algorithme des k plus proches voisins","text":"T\u00e9l\u00e9chargement du mat\u00e9riel pour le TP <p>materiel_tp/zip</p> <ol> <li>Ouvrir dans un environnement de programmation Python le fichier     <code>tp_eleve.py</code> qui est fourni.</li> <li>Lister le contenu du r\u00e9pertoire <code>datas</code> qui est fourni.</li> <li>Quel est le r\u00f4le de l'instruction     <code>from from utilitaires_knn import *</code> ?</li> <li>En suivant les sp\u00e9cifications donn\u00e9es dans les <code>docstring</code> et \u00e0     l'aide du cours, compl\u00e9ter les diff\u00e9rentes fonctions permettant     d'impl\u00e9menter l'algorithme de recherche des k plus proches voisins     dans <code>tp_eleve.py</code> et dans l'encadr\u00e9 ci-dessous. Petite diff\u00e9rence     avec le cours : on utilise une clef de tri dans la fonction     <code>trier_puis_extraire</code>. Par d\u00e9faut, <code>sorted</code> trie les <code>tuple</code> par     ordre alphab\u00e9tique sur les composantes (selon la premi\u00e8re, puis la     seconde etc \u2026) donc on n'aurait pas besoin de pr\u00e9ciser qu'on veut     trier selon la premi\u00e8re composante (les distances). N\u00e9anmoins, si on     ne pr\u00e9cise pas la clef de tri, <code>sorted</code> va trier en cas d'\u00e9galit\u00e9 de     distance selon l'ordre alphab\u00e9tique des \u00e9tiquettes, ce qui est     arbitraire et donne des r\u00e9sultats diff\u00e9rents que la m\u00e9thode de tri     diff\u00e9rente pr\u00e9sent\u00e9e dans la partie 3.</li> <li>V\u00e9rifier chaque fonction avec le test unitaire fourni dans     <code>tp_eleve.py</code> qui s'ex\u00e9cute avec la syntaxe     <code>test_unitaire_nom_fonction()</code> sur le jeu de donn\u00e9es <code>pokemons.csv</code>.</li> </ol> \ud83d\udc0d Script Python<pre><code>from utilitaires_knn import *\nimport math\nimport random\n\n#%% Partie 1 : impl\u00e9mentation\n\n\ndef distance_euclidienne(enreg_a, enreg_b, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n        enreg_a, enreg_b et deux enregistrements de donn\u00e9es sous forme de \n        dictionnaires\n        tab_descripteur un tableau de descripteurs (certaines clefs des \n                                                    enregistrements)\n\n    Returns\n    -------\n        distance euclidienne entre enreg_a et enreg_b selon les valeurs des \n        descripteurs de tab_descripteur arrondie \u00e0 3 chiffres apr\u00e8s la virgule\n    \"\"\"\n    distance_carre = 0\n    for descripteur in tab_descripteur:\n        \"\u00e0 compl\u00e9ter \"\n\n\n\n    return round(math.sqrt(distance_carre), 3)\n\n\ndef table_distance_nouveau(table, nouveau, distance, etiquette, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n    table : une table d'enregistrements de type dictionnaire\n    nouveau : un nouvel enregistrement de type dictionnaire\n    distance : une fonction de distance entre deux enregistrements\n    etiquette : nom du descripteur d'\u00e9tiquette dans les enregistrements\n    tab_descripteur : un tableau avec les noms des descripteurs utilis\u00e9s\n    dans le calcul de la distance\n\n    Returns\n    -------\n    tab_distance un tableau de tuple (distance entre nouveau et un \n    enregistrement de table, \u00e9tiquette de cet enregistrement)\n    \"\"\"    \n    tab_distance = []\n    for enreg in table:\n        \"\u00e0 compl\u00e9ter \"\n\n\n    return tab_distance\n\ndef clef_tri(couple):\n\"\"\"Clef de tri pour trier un couple de valeurs selon\n    la premi\u00e8re composante\"\"\"\n    return couple[0]\n\n\ndef trier_puis_extraire(tab_distance, k):\n\"\"\"\n    Parameters\n    ----------\n    tab_distance un tableau de tuple (distance entre deux  enregistrements\n    , \u00e9tiquette) renvoy\u00e9 par table_distance_nouveau\n\n    Returns\n    -------\n    tableau k_voisins des k plus petits \u00e9l\u00e9ments de tab_distance\n    selon le crit\u00e8re de distance\n    \"\"\"\n    #pr\u00e9condition\n    assert k &lt;= len(tab_distance)\n    #tri selon la premi\u00e8re composante de chaque tuple (la distance)\n    tab_tri = sorted(tab_distance, key = clef_tri)\n    \"\u00e0 compl\u00e9ter \"\n\n\n\n\n\n\ndef element_majoritaire(k_voisins):\n\"\"\"\n    Parameters\n    ----------\n    k_voisins : tableau des k plus proches voisins \n\n    Returns\n    -------\n    voisin_majoritaire : chaine de caract\u00e8re type str, \u00e9tiquette majoritaire\n    parmi les voisins\n    \"\"\"\n    occurence = dict()\n    voisin_majoritaire = k_voisins[0]\n    for voisin in k_voisins:\n        if voisin not in occurence:\n            occurence[voisin] = 1\n        else:\n            \"\u00e0 compl\u00e9ter \"\n\n\n        if voisin != voisin_majoritaire  \\\n           and occurence[voisin] &gt; occurence[voisin_majoritaire]:\n            \"\u00e0 compl\u00e9ter \"\n\n\n    return voisin_majoritaire    \n\n\n\ndef etiquetage_knn(table, nouveau, etiquette, tab_descripteur, k,\n                   distance = distance_euclidienne):\n\"\"\"\n    Parameters\n    ----------\n    table : tableau de dictionnaires\n        table d'enregistrements\n    nouveau : un dictionnaire\n        un nouvel enregistrement\n    etiquette : une chaine de caract\u00e8res\n        le nom du descripteur d'\u00e9tiquette\n    tab_descripteur : un tableau\n        liste des noms des descripteurs utilis\u00e9s pour la comparaison\n    k : un entier\n        le nombre de voisins examin\u00e9s\n    distance : une fonction distance\n        The default is distance_euclidienne.\n\n    Returns\n    -------\n    voisin_majoritaire : une chaine ce caract\u00e8re\n        l'\u00e9tiquette majoriataire parmi les k plus proches voisins\n    \"\"\"\n    \"\u00e0 compl\u00e9ter \"\n\n\n\n\n\n\n\n\n#fin\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-git/#partie-2-application-a-un-jeu-de-donnees-historique","title":"Partie 2 : application \u00e0 un jeu de donn\u00e9es historique","text":"<p>Le jeu de donn\u00e9es auquel nous allons nous int\u00e9resser est un jeu de donn\u00e9es c\u00e9l\u00e8bre. Il a \u00e9t\u00e9 cr\u00e9\u00e9 et utilis\u00e9 par Ronald Aylmer Fisher en 1936 (biologiste et statisticien) et concerne 3 esp\u00e8ces d'iris : setosa, virginica et versicolor. Voir l'article de Wikipedia pour les photos des iris et plus de d\u00e9tails.</p> <p>Ce jeu de donn\u00e9es est compos\u00e9 de 50 individus pour chacune des trois esp\u00e8ces (setosa, versicolor, virginica) soit 150 individus en tout.</p> <p>Pour chacun de ces individus on dispose des champs :</p> <ul> <li> <p>id              : num\u00e9ro d'\u00e9chantillon (identifiant)  </p> </li> <li> <p>longueur_sepale : longueur des s\u00e9pales  </p> </li> <li> <p>largeur_sepale  : largeur des s\u00e9pales  </p> </li> <li> <p>longueur_petale : longueur des p\u00e9tales  </p> </li> <li> <p>largeur_petale  : largeur des p\u00e9tales  </p> </li> <li> <p>espece          : 'Iris-setosa', 'Irid_virginica' ou 'Iris-versicolor'</p> </li> </ul> <p>La question que se posait M. Fisher est : \"Puis-je, \u00e0 partir des longueurs et largeurs des s\u00e9pales et p\u00e9tales, pr\u00e9dire l'esp\u00e8ce d'un iris ?\"</p> <p>On va donc, \u00e0 partir des quatre descripteurs <code>longueur_sepale, largeur_sepale, longueur_petale</code> et <code>largeur_petale</code>, rechercher une pr\u00e9diction de l'\u00e9tiquette <code>espece</code>.</p> <p>On travaille toujours dans le fichier <code>tp_eleve.py</code>.</p> T\u00e9l\u00e9chargement du mat\u00e9riel pour le TP <p>materiel_tp/zip</p> <ol> <li> <p>Rechercher l'emplacement du fichier <code>iris.csv</code> puis charger dans une     variable <code>table_iris</code> son contenu avec la fonction     <code>charger_fichier_entete</code> du module <code>utilitaires_knn</code>.</p> </li> <li> <p>D\u00e9finir dans une variable <code>iris_a_etiqueter</code> un nouvel iris sans     \u00e9tiquette.</p> \ud83d\udc0d Script Python<pre><code>iris_a_etiqueter = {'longueur_sepale':'5.7', \n                    'largeur_sepale':'3.5', \n                    'longueur_petale':'4.8', \n                    'largeur_petale':'0.2'}\n</code></pre> </li> <li> <p>Avec la fonction <code>afficher_donnees_point</code> du module     <code>utilitaires_knn</code>, on peut afficher le jeu de donn\u00e9es et la nouvelle     donn\u00e9e dans un rep\u00e8re du plan en rep\u00e9rant les points par deux     descripteurs <code>\"longueur_sepale\"</code> et <code>\"longueur_petale\"</code>.</p> \ud83d\udc0d Script Python<pre><code>afficher_donnees_point([\"longueur_sepale\", \"longueur_petale\"], 'espece', \n                        table_iris ,  point = [5.7, 4.8],\n                        fichier = 'iris-longpetale-longsepale-point.png')\n</code></pre> <p>On obtient alors le graphique 1.</p> <ul> <li>Les trois nuages de points class\u00e9s par esp\u00e8ce sont-ils bien s\u00e9par\u00e9s     ? L'algorithme des k plus proches voisins va-t-il bien fonctionner     en g\u00e9n\u00e9ral ?</li> <li>Le point marqu\u00e9 d'une croix orange repr\u00e9sente l'iris d'esp\u00e8ce     inconnue. L'algorithme des k plus proches voisins va-t-il bien     fonctionner pour cet iris particulier ? Sur quels param\u00e8tres peut-on     jouer pour am\u00e9liorer la pr\u00e9diction ?</li> <li>Avec la fonction <code>etiquetage_knn</code>, \u00e9crire un code qui affiche les     pr\u00e9dictions de l'algorithme des k plus proches voisins pour k     variant entre 1 et 20. Commentaires ?</li> </ul> </li> </ol> <p>\\ Graphique 1 : Jeu de donn\u00e9es iris avec deux descripteurs</p> <ol> <li> <p>Avec la fonction <code>afficher_donnees_point</code> du module     <code>utilitaires_knn</code>, afficher le jeu de donn\u00e9es et la nouvelle donn\u00e9e     dans un rep\u00e8re du plan en rep\u00e9rant les points par trois descripteurs     <code>\"longueur_sepale\"</code>, <code>\"longueur_petale\"</code> et <code>\"largeur_sepale\"</code>. On     doit obtenir le graphique 2.</p> <ul> <li>Les trois nuages de points class\u00e9s par esp\u00e8ce sont-ils bien     s\u00e9par\u00e9s ? L'algorithme des k plus proches voisins va-t-il bien     fonctionner en g\u00e9n\u00e9ral ?</li> <li>Le point marqu\u00e9 d'une croix orange repr\u00e9sente l'iris d'esp\u00e8ce     inconnue. L'algorithme des k plus proches voisins va-t-il bien     fonctionner pour cet iris particulier ?</li> <li>Avec la fonction <code>etiquetage_knn</code>, \u00e9crire un code qui affiche     les pr\u00e9dictions de l'algorithme des k plus proches voisins pour     k variant entre 1 et 20. Comparer avec les r\u00e9sultats obtenus \u00e0     la question 3. avec deux descripteurs.</li> </ul> </li> </ol> <p>\\ Graphique 2 : Jeu de donn\u00e9es iris avec trois descripteurs</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-git/#distance-de-manhattan-optimisation-de-la-complexite-puis-etude-de-linfluence-du-parametre-k","title":"Distance de Manhattan, optimisation de la complexit\u00e9 puis \u00e9tude de l'influence du param\u00e8tre k","text":"<p>Dans la ville imaginaire de Manhattan, les rues sont agenc\u00e9es selon un quadrillage et la distance entre deux immeubles A et B de coordonn\u00e9es  et  correspond \u00e0 la longueur du parcours d'un taxi allant de A vers B en longeant les rues : .</p> <p>On consid\u00e8re que chaque immeuble de la ville sont rep\u00e9r\u00e9s dans un rep\u00e8re orthonorm\u00e9 par un couple de coordonn\u00e9es  o\u00f9  et  sont des entiers naturels.</p> <p>Dans r\u00e9pertoire <code>datas</code> qui est fourni, se trouve un fichier <code>nettoyage.csv</code> avec 944 enregistrements d'immeubles de Manhattan avec trois descripteurs 'x', 'y' et une \u00e9tiquette 'nettoyage' :</p> <ul> <li>'x' : abscisse de l'immeuble un entier compris entre 0 et 100</li> <li>'y' : ordonn\u00e9e de l'immeuble un entier compris entre 0 et 100</li> <li>'nettoyage' : le nom de l'entreprise de nettoyage de l'immeuble qui     peut prendre deux valeurs : 'jules' ou 'paul'</li> </ul> <p>On travaille toujours dans le fichier <code>tp_eleve.py</code>.</p> T\u00e9l\u00e9chargement du mat\u00e9riel pour le TP <p>materiel_tp/zip</p> <ol> <li> <p>Saisir le code suivant pour :</p> <ul> <li>charger dans une variable <code>table_nettoyage</code> le contenu du jeu de     donn\u00e9es <code>nettoyage.csv</code> avec la fonction <code>charger_fichier_entete</code> du     module <code>utilitaires_knn</code> ;</li> <li>afficher le jeu de donn\u00e9es et enregistrer l'image dans le r\u00e9pertoire     de travail.</li> </ul> \ud83d\udc0d Script Python<pre><code>table_nettoyage = charger_fichier_entete('./datas/nettoyage.csv')\nafficher_donnees([\"x\", \"y\"], \n                 'nettoyage', table_nettoyage, \n                 fichier = 'nettoyage.png')\n</code></pre> </li> </ol> <p>\\ Graphique 3 : Entreprises de nettoyages dans Manhattan</p> <ol> <li> <p>Compl\u00e9ter le code de la fonction <code>distance_manhattan</code> en respectant     la sp\u00e9cification donn\u00e9e dans la <code>docstring</code>. V\u00e9rifier ensuite que le     test unitaire <code>test_unitaire_distance_manhattan()</code> est r\u00e9ussi.</p> \ud83d\udc0d Script Python<pre><code>def distance_manhattan(enreg_a, enreg_b, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n        enreg_a, enreg_b et deux enregistrements de donn\u00e9es sous forme de \n        dictionnaires\n        tab_descripteur un tableau de descripteurs (certaines clefs des \n                                                    enregistrements)\n\n    Returns\n    -------\n        distance de manhattan entre enreg_a et enreg_b selon les valeurs des \n        descripteurs de tab_descripteur arrondie \u00e0 3 chiffres apr\u00e8s la virgule\n    \"\"\"\n    distance = 0\n    for descripteur in tab_descripteur:\n        distance = \"\u00e0  compl\u00e9ter\"\n    return distance\n</code></pre> </li> <li> <p>Compl\u00e9ter le code suivant afin d'afficher une pr\u00e9diction de     l'entreprise de nettoyage choisie pour un nouvel immeuble de     coordonn\u00e9es     ,     \u00e0 l'aide de la fonction <code>etiquetage_knn</code> \u00e9crite pr\u00e9c\u00e9demment. On     pensera \u00e0 passer en param\u00e8tre la fonction <code>distance_manhattan</code> car     la distance par d\u00e9faut est <code>distance_euclidienne</code>. Pour simplifier     on suppose que si un immeuble existe d\u00e9j\u00e0 au point de coordonn\u00e9es          alors une nouvelle \u00e9tiquette est attribu\u00e9e.</p> \ud83d\udc0d Script Python<pre><code>nouveau_client = {'x' : 30, 'y' : 43}\nfor k in range(1, 11):\n    prediction = \"\u00e0 compl\u00e9ter\"\n    print(\"k = \", k, \"pr\u00e9diction  :\", prediction)\n</code></pre> </li> <li> <p>La complexit\u00e9 temporelle dominante dans l'algorithme des k plus     proches voisins que nous avons impl\u00e9ment\u00e9 est celle du tri, ce qui     donne un ordre de grandeur en          pour un jeu de donn\u00e9es de taille     . On va impl\u00e9menter     un algorithme de complexit\u00e9 lin\u00e9aire, d'ordre de grandeur     , ce qui sera plus     performant sur des jeux de donn\u00e9es de tr\u00e8s grande taille</p> </li> <li> <p>On consid\u00e8re un algorithme de complexit\u00e9 en          (fonction logarithme d\u00e9cimal de la calculatrice qui donne     approximativement le nombre de chiffres d'un nombre en base dix) et     on admet que son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille      est de 1     milliseconde. Quel est son temps d'ex\u00e9cution pour un jeu de donn\u00e9es     de taille      ? de taille      ? de     taille          ?</p> </li> <li>On consid\u00e8re un algorithme de complexit\u00e9 en          et on admet que son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de     taille      est de 2 millisecondes. Quel est son temps d'ex\u00e9cution pour un jeu     de donn\u00e9es de taille      ? de     taille      ? de     taille          ?</li> <li> <p>Quel est l'int\u00e9r\u00eat d'une complexit\u00e9 en      par rapport \u00e0 une     complexit\u00e9 en          ?</p> </li> <li> <p>Pour obtenir un algorithme de complexit\u00e9 lin\u00e9aire,on ne va pas trier     tout le jeu de donn\u00e9es de taille      mais maintenir une     liste les k plus proches voisins lors du parcours du tableau     <code>tab_distance</code>.</p> </li> </ol> <p>Celui-ci contient les tuples (distance, \u00e9tiquette) sous cette forme :</p> \ud83d\udc0d Script Python<pre><code>[(10.0, 'paul'), (13.0, 'paul'), (14.0, 'paul'), (16.0, 'jules'), (17.0, 'paul'), ...]\n</code></pre> <p>On proc\u00e8de ainsi :</p> <ul> <li>On trie d'abord les k premiers \u00e9l\u00e9ments de <code>tab_distance</code> dans une     liste <code>k_voisins</code></li> <li>Pour chacun des couples suivants on l'ins\u00e8re \u00e0 sa place dans     <code>k_voisins</code> puis on enl\u00e8ve le dernier \u00e9l\u00e9ment de <code>k_voisins</code> (de     plus grande de distance) pour garder uniquement les k voisins les     plus proches. L'algorithme d'insertion est le m\u00eame que pour le tri     par insertion.</li> </ul> <p>Compl\u00e9ter la fonction <code>trier_puis_extraire_insertion</code>.</p> <p>V\u00e9rifier avec le test unitaire <code>test_unitaire_trier_puis_extraire_insertion()</code>.</p> \ud83d\udc0d Script Python<pre><code>def trier_puis_extraire_insertion(tab_distance, k):\n\"\"\"\n    Parameters\n    ----------\n    tab_distance un tableau de tuple (distance entre deux  enregistrements\n    , \u00e9tiquette) renvoy\u00e9 par table_distance_nouveau\n\n    Returns\n    -------\n    tableau k_voisins des k plus petits \u00e9l\u00e9ments de tab_distance\n    selon le crit\u00e8re de distance\n    \"\"\"\n    #pr\u00e9condition\n    assert k &lt;= len(tab_distance)\n    #liste tri\u00e9e des k premiers tuples de tab_distance \n    k_voisins = sorted([tab_distance[i] for i in range(k)])\n    #parcours des tuples suivants\n    for i in range(k, len(tab_distance)):     \n        nouveau = tab_distance[i]\n        #ajout de nouveau \u00e0 la fin de tab_distance\n        k_voisins.append(nouveau)\n        #insertion de nouveau \u00e0 sa place dans la liste tri\u00e9e k_voisins\n        #comme dans le tri par insertion avec une boucle while\n        j = k - 1\n        \"\u00e0 compl\u00e9ter\"\n\n\n\n        #invariant : ici k_voisins toujours dans l'ordre croissant des distances\n        #on enl\u00e8ve le  dernier tuple de k_voisin = voisin le plus loin\n        k_voisins.pop()\n    #on extrait de k_voisins la liste des \u00e9tiquettes uniquement\n    return [voisin[1] for voisin in k_voisins[:k]]\n</code></pre> <p>Modifier la fonction <code>etiquetage_knn</code> en une fonction <code>etiquetage_knn_insertion</code> qui pr\u00e9dit une \u00e9tiquette en utilisant <code>trier_puis_extraire_insertion</code>.</p> <ol> <li>On veut mesurer exp\u00e9rimentalement la complexit\u00e9 temporelle de     <code>etiquetage_knn_insertion</code>. Sp\u00e9cifier la fonction <code>mesure_temps</code> qui     est fournie. \u00e0 l'aide d'une <code>docstring</code>.</li> </ol> <p>On donne ci-dessous un exemple d'ex\u00e9cution. Commenter les r\u00e9sultats affich\u00e9s.</p> \ud83d\udc0d Script Python<pre><code>In [43]: mesure_temps(etiquetage_knn_insertion, 5)\nTaille :  100  Temps :  0.0001652430000831373 Ratio = temps/ temps_precedent = None\nTaille :  1000  Temps :  0.0013811469998472603 Ratio = temps/ temps_precedent = 8.358278409084654\nTaille :  10000  Temps :  0.01579672799925902 Ratio = temps/ temps_precedent = 11.437398047424324\nTaille :  100000  Temps :  0.15101633700032835 Ratio = temps/ temps_precedent = 9.559975775199275\nTaille :  1000000  Temps :  1.513596802999018 Ratio = temps/ temps_precedent = 10.022735507057936\n</code></pre> <ol> <li>On fournit une proc\u00e9dure d'en-t\u00eate     <code>influence_k(nb_clients,  cote_ville)</code> qui pr\u00e9dit l'\u00e9tiquette pour     tous les immeubles de la ville avec l'algorithme des k plus proches     voisins, k variant de 1 \u00e0 10 et affiche la carte des pr\u00e9dictions. Si     l'immeuble est d\u00e9j\u00e0 dans le jeu de donn\u00e9es on fait quand m\u00eame une     pr\u00e9diction , qui peut \u00eatre diff\u00e9rente de l'\u00e9tiquette du point (pas     absurde si on le voit comme une r\u00e9attribution de march\u00e9). Ex\u00e9cuter     le test propos\u00e9 puis commenter \u00e0 partir des images obtenues     l'influence du param\u00e8tre k sur la pr\u00e9diction. Un exemple en video     est disponible ici)</li> </ol> <p>\\</p> <p>\\</p> <p>Graphique 4 : Influence du param\u00e8tre k</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-source/","title":"TP sur l'algorithme des k plus proches voisins","text":""},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-source/#credits","title":"Cr\u00e9dits","text":"<p>Ce  TP est inspir\u00e9 pour la partie 2 d'un travail de Julien de Vill\u00e8le.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-source/#partie-1-implementation-de-lalgorithme-des-k-plus-proches-voisins","title":"Partie 1 : impl\u00e9mentation de l'algorithme des k plus proches voisins","text":"<ol> <li>Ouvrir dans un environnement de programmation Python le fichier <code>tp_eleve.py</code> qui est fourni.</li> <li>Lister le contenu du r\u00e9pertoire  <code>datas</code> qui est fourni.</li> <li>Quel est le r\u00f4le de l'instruction <code>from utilitaires_knn import *</code> ?</li> <li>En suivant les sp\u00e9cifications donn\u00e9es dans les <code>docstring</code> et \u00e0 l'aide du cours, compl\u00e9ter les diff\u00e9rentes fonctions permettant d'impl\u00e9menter l'algorithme de recherche des k plus proches voisins dans <code>tp_eleve.py</code> et dans l'encadr\u00e9 ci-dessous. Petite diff\u00e9rence avec le cours : on utilise une clef de tri dans la fonction <code>trier_puis_extraire</code>. Par d\u00e9faut, <code>sorted</code> trie les <code>tuple</code>  par ordre alphab\u00e9tique sur les  composantes (selon la premi\u00e8re, puis la seconde etc ...) donc on n'aurait pas besoin de pr\u00e9ciser qu'on veut trier selon la premi\u00e8re composante (les distances). N\u00e9anmoins, si on ne pr\u00e9cise pas la clef de tri,  <code>sorted</code> va trier en cas d'\u00e9galit\u00e9 de distance selon l'ordre alphab\u00e9tique des \u00e9tiquettes, ce qui est arbitraire et donne des r\u00e9sultats diff\u00e9rents que la m\u00e9thode de tri diff\u00e9rente pr\u00e9sent\u00e9e dans la partie 3.</li> <li>V\u00e9rifier  chaque fonction avec le test unitaire fourni dans <code>tp_eleve.py</code>  qui s'ex\u00e9cute avec la syntaxe <code>test_unitaire_nom_fonction()</code> sur le jeu de donn\u00e9es <code>pokemons.csv</code>.</li> </ol> \ud83d\udc0d Script Python<pre><code>from utilitaires_knn import *\nimport math\nimport random\n\n#%% Partie 1 : impl\u00e9mentation\n\n\ndef distance_euclidienne(enreg_a, enreg_b, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n        enreg_a, enreg_b et deux enregistrements de donn\u00e9es sous forme de \n        dictionnaires\n        tab_descripteur un tableau de descripteurs (certaines clefs des \n                                                    enregistrements)\n\n    Returns\n    -------\n        distance euclidienne entre enreg_a et enreg_b selon les valeurs des \n        descripteurs de tab_descripteur arrondie \u00e0 3 chiffres apr\u00e8s la virgule\n    \"\"\"\n    distance_carre = 0\n    for descripteur in tab_descripteur:\n        \"\u00e0 compl\u00e9ter \"\n\n\n\n    return round(math.sqrt(distance_carre), 3)\n\n\ndef table_distance_nouveau(table, nouveau, distance, etiquette, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n    table : une table d'enregistrements de type dictionnaire\n    nouveau : un nouvel enregistrement de type dictionnaire\n    distance : une fonction de distance entre deux enregistrements\n    etiquette : nom du descripteur d'\u00e9tiquette dans les enregistrements\n    tab_descripteur : un tableau avec les noms des descripteurs utilis\u00e9s\n    dans le calcul de la distance\n\n    Returns\n    -------\n    tab_distance un tableau de tuple (distance entre nouveau et un \n    enregistrement de table, \u00e9tiquette de cet enregistrement)\n    \"\"\"    \n    tab_distance = []\n    for enreg in table:\n        \"\u00e0 compl\u00e9ter \"\n\n\n    return tab_distance\n\ndef clef_tri(couple):\n\"\"\"Clef de tri pour trier un couple de valeurs selon\n    la premi\u00e8re composante\"\"\"\n    return couple[0]\n\n\ndef trier_puis_extraire(tab_distance, k):\n\"\"\"\n    Parameters\n    ----------\n    tab_distance un tableau de tuple (distance entre deux  enregistrements\n    , \u00e9tiquette) renvoy\u00e9 par table_distance_nouveau\n\n    Returns\n    -------\n    tableau k_voisins des k plus petits \u00e9l\u00e9ments de tab_distance\n    selon le crit\u00e8re de distance\n    \"\"\"\n    #pr\u00e9condition\n    assert k &lt;= len(tab_distance)\n    #tri selon la premi\u00e8re composante de chaque tuple (la distance)\n    tab_tri = sorted(tab_distance, key = clef_tri)\n    \"\u00e0 compl\u00e9ter \"\n\n\n\n\n\n\ndef element_majoritaire(k_voisins):\n\"\"\"\n    Parameters\n    ----------\n    k_voisins : tableau des k plus proches voisins \n\n    Returns\n    -------\n    voisin_majoritaire : chaine de caract\u00e8re type str, \u00e9tiquette majoritaire\n    parmi les voisins\n    \"\"\"\n    occurence = dict()\n    voisin_majoritaire = k_voisins[0]\n    for voisin in k_voisins:\n        if voisin not in occurence:\n            occurence[voisin] = 1\n        else:\n            \"\u00e0 compl\u00e9ter \"\n\n\n        if voisin != voisin_majoritaire  \\\n           and occurence[voisin] &gt; occurence[voisin_majoritaire]:\n            \"\u00e0 compl\u00e9ter \"\n\n\n    return voisin_majoritaire    \n\n\n\ndef etiquetage_knn(table, nouveau, etiquette, tab_descripteur, k,\n                   distance = distance_euclidienne):\n\"\"\"\n    Parameters\n    ----------\n    table : tableau de dictionnaires\n        table d'enregistrements\n    nouveau : un dictionnaire\n        un nouvel enregistrement\n    etiquette : une chaine de caract\u00e8res\n        le nom du descripteur d'\u00e9tiquette\n    tab_descripteur : un tableau\n        liste des noms des descripteurs utilis\u00e9s pour la comparaison\n    k : un entier\n        le nombre de voisins examin\u00e9s\n    distance : une fonction distance\n        The default is distance_euclidienne.\n\n    Returns\n    -------\n    voisin_majoritaire : une chaine ce caract\u00e8re\n        l'\u00e9tiquette majoriataire parmi les k plus proches voisins\n    \"\"\"\n    \"\u00e0 compl\u00e9ter \"\n\n\n\n\n\n\n\n\n#fin\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-source/#partie-2-application-a-un-jeu-de-donnees-historique","title":"Partie 2 : application \u00e0 un jeu de donn\u00e9es historique","text":"<p>Le jeu de donn\u00e9es auquel nous allons nous int\u00e9resser est un jeu de donn\u00e9es c\u00e9l\u00e8bre. Il a \u00e9t\u00e9 cr\u00e9\u00e9 et utilis\u00e9 par Ronald Aylmer Fisher en 1936 (biologiste et statisticien) et concerne 3 esp\u00e8ces d'iris : setosa, virginica et versicolor.  Voir l'article de Wikipedia pour les photos des iris et plus de d\u00e9tails.</p> <p>Ce jeu de donn\u00e9es est compos\u00e9 de 50 individus pour chacune des trois esp\u00e8ces (setosa, versicolor, virginica) soit 150 individus en tout.  </p> <p>Pour chacun de ces individus on dispose des champs : \ud83d\udccb Algo<pre><code>- id              : num\u00e9ro d'\u00e9chantillon (identifiant)  \n\n- longueur_sepale : longueur des s\u00e9pales  \n\n- largeur_sepale  : largeur des s\u00e9pales  \n\n- longueur_petale : longueur des p\u00e9tales  \n\n- largeur_petale  : largeur des p\u00e9tales  \n\n- espece          : 'Iris-setosa', 'Irid_virginica' ou 'Iris-versicolor'\n</code></pre></p> <p>La question que se posait M. Fisher est : \"Puis-je, \u00e0 partir des longueurs et largeurs des s\u00e9pales et p\u00e9tales, pr\u00e9dire l'esp\u00e8ce d'un iris ?\"</p> <p>On va donc, \u00e0 partir des quatre descripteurs <code>longueur_sepale, largeur_sepale, longueur_petale</code> et <code>largeur_petale</code>,  rechercher une pr\u00e9diction de l'\u00e9tiquette <code>espece</code>.</p> <p>On travaille toujours dans le fichier <code>tp_eleve.py</code>.</p> <ol> <li> <p>Rechercher l'emplacement du fichier  <code>iris.csv</code> puis charger dans une variable <code>table_iris</code> son contenu avec la fonction <code>charger_fichier_entete</code> du module <code>utilitaires_knn</code>.</p> </li> <li> <p>D\u00e9finir dans une variable <code>iris_a_etiqueter</code> un nouvel iris sans \u00e9tiquette.</p> </li> </ol> \ud83d\udc0d Script Python<pre><code>iris_a_etiqueter = {'longueur_sepale':'5.7', \n                    'largeur_sepale':'3.5', \n                    'longueur_petale':'4.8', \n                    'largeur_petale':'0.2'}\n</code></pre> <ol> <li>Avec la fonction <code>afficher_donnees_point</code> du module <code>utilitaires_knn</code>, on peut afficher le jeu de donn\u00e9es et la nouvelle donn\u00e9e dans un rep\u00e8re du plan en rep\u00e9rant les points par deux descripteurs <code>\"longueur_sepale\"</code> et  <code>\"longueur_petale\"</code>.  </li> </ol> \ud83d\udc0d Script Python<pre><code>afficher_donnees_point([\"longueur_sepale\", \"longueur_petale\"], 'espece', \n                        table_iris ,  point = [5.7, 4.8],\n                        fichier = 'iris-longpetale-longsepale-point.png')\n</code></pre> <p>On obtient alors le graphique 1.</p> <ul> <li>Les trois nuages de points class\u00e9s par esp\u00e8ce sont-ils bien s\u00e9par\u00e9s ? L'algorithme des k plus proches voisins va-t-il bien fonctionner en g\u00e9n\u00e9ral ?</li> <li>Le point marqu\u00e9 d'une croix orange repr\u00e9sente l'iris d'esp\u00e8ce inconnue. L'algorithme des k plus proches voisins va-t-il bien fonctionner pour cet iris particulier ? Sur quels param\u00e8tres peut-on jouer pour am\u00e9liorer la pr\u00e9diction ?</li> <li>Avec la fonction <code>etiquetage_knn</code>, \u00e9crire un code qui affiche les pr\u00e9dictions de l'algorithme des k plus proches voisins pour k variant entre 1 et 20. Commentaires ?</li> </ul> <p>:::{.minipage width=\"0.8\\linewidth\" center=\"true\"} \\ Graphique 1 : Jeu de donn\u00e9es iris avec deux descripteurs :::</p> <ol> <li> <p>Avec la fonction <code>afficher_donnees_point</code> du module <code>utilitaires_knn</code>, afficher le jeu de donn\u00e9es et la nouvelle donn\u00e9e dans un rep\u00e8re du plan en rep\u00e9rant les points par trois descripteurs <code>\"longueur_sepale\"</code>, <code>\"longueur_petale\"</code> et <code>\"largeur_sepale\"</code>.  On doit obtenir le graphique 2.</p> </li> <li> <p>Les trois nuages de points class\u00e9s par esp\u00e8ce sont-ils bien s\u00e9par\u00e9s ? L'algorithme des k plus proches voisins va-t-il bien fonctionner en g\u00e9n\u00e9ral ?</p> </li> <li>Le point marqu\u00e9 d'une croix orange repr\u00e9sente l'iris d'esp\u00e8ce inconnue. L'algorithme des k plus proches voisins va-t-il bien fonctionner pour cet iris particulier ? </li> <li>Avec la fonction <code>etiquetage_knn</code>, \u00e9crire un code qui affiche les pr\u00e9dictions de l'algorithme des k plus proches voisins pour k variant entre 1 et 20. Comparer avec les r\u00e9sultats obtenus \u00e0 la question 3. avec deux descripteurs.</li> </ol> <p>:::{.minipage width=\"0.8\\linewidth\" center=\"true\"} \\ Graphique 2 : Jeu de donn\u00e9es iris avec trois descripteurs :::</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-source/#distance-de-manhattan-optimisation-de-la-complexite-puis-etude-de-linfluence-du-parametre-k","title":"Distance de Manhattan, optimisation de la complexit\u00e9 puis \u00e9tude de l'influence du param\u00e8tre k","text":"<p>Dans la ville imaginaire de Manhattan, les rues sont agenc\u00e9es selon un quadrillage et la distance entre deux immeubles A et B de coordonn\u00e9es \\((x_{A},y_{A})\\) et \\((x_{B},y_{B})\\) correspond \u00e0 la longueur du parcours d'un taxi allant de A vers B en longeant les rues :  \\(distanceManhattan(A, B)=\\vert x_{B} - x_{A} \\vert + \\vert y_{B} - y_{A} \\vert\\).</p> <p>On consid\u00e8re que chaque immeuble de la ville sont rep\u00e9r\u00e9s dans un rep\u00e8re orthonorm\u00e9 par un couple  de coordonn\u00e9es \\((x, y)\\) o\u00f9 \\(x\\) et \\(y\\) sont des entiers naturels.</p> <p>Dans  r\u00e9pertoire <code>datas</code> qui est fourni, se trouve un fichier <code>nettoyage.csv</code> avec   944 enregistrements d'immeubles de Manhattan avec trois descripteurs  'x', 'y' et une \u00e9tiquette 'nettoyage' :</p> <ul> <li>'x' : abscisse de l'immeuble un entier compris entre 0 et 100</li> <li>'y' : ordonn\u00e9e de l'immeuble un entier compris entre 0 et 100 </li> <li>'nettoyage' : le nom de l'entreprise de nettoyage de l'immeuble qui peut prendre deux valeurs : 'jules' ou 'paul'</li> </ul> <p>On travaille toujours dans le fichier <code>tp_eleve.py</code>.</p> <ol> <li> <p>Saisir le code suivant pour : </p> </li> <li> <p>charger dans une variable <code>table_nettoyage</code> le contenu  du jeu de donn\u00e9es <code>nettoyage.csv</code> avec la fonction <code>charger_fichier_entete</code> du module <code>utilitaires_knn</code> ;</p> </li> <li>afficher le jeu de donn\u00e9es et enregistrer l'image dans le r\u00e9pertoire de travail.</li> </ol> \ud83d\udc0d Script Python<pre><code>table_nettoyage = charger_fichier_entete('./datas/nettoyage.csv')\nafficher_donnees([\"x\", \"y\"], \n                 'nettoyage', table_nettoyage, \n                 fichier = 'nettoyage.png')\n</code></pre> <p>:::{.minipage width=\"0.8\\linewidth\" center=\"true\"} \\ Graphique 3 : Entreprises de nettoyages dans Manhattan :::</p> <ol> <li>Compl\u00e9ter le code de la fonction <code>distance_manhattan</code> en respectant la sp\u00e9cification donn\u00e9e dans la <code>docstring</code>. V\u00e9rifier ensuite que le test unitaire <code>test_unitaire_distance_manhattan()</code> est r\u00e9ussi.</li> </ol> \ud83d\udc0d Script Python<pre><code>def distance_manhattan(enreg_a, enreg_b, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n        enreg_a, enreg_b et deux enregistrements de donn\u00e9es sous forme de \n        dictionnaires\n        tab_descripteur un tableau de descripteurs (certaines clefs des \n                                                    enregistrements)\n\n    Returns\n    -------\n        distance de manhattan entre enreg_a et enreg_b selon les valeurs des \n        descripteurs de tab_descripteur arrondie \u00e0 3 chiffres apr\u00e8s la virgule\n    \"\"\"\n    distance = 0\n    for descripteur in tab_descripteur:\n        distance = \"\u00e0  compl\u00e9ter\"\n    return distance\n</code></pre> <ol> <li>Compl\u00e9ter le code suivant afin d'afficher une pr\u00e9diction de l'entreprise de nettoyage choisie  pour un nouvel immeuble de coordonn\u00e9es \\((30, 43)\\), \u00e0 l'aide de la fonction <code>etiquetage_knn</code> \u00e9crite pr\u00e9c\u00e9demment. On pensera \u00e0 passer en param\u00e8tre la fonction <code>distance_manhattan</code> car la distance par d\u00e9faut est <code>distance_euclidienne</code>. Pour simplifier on suppose que si un immeuble existe d\u00e9j\u00e0 au point de coordonn\u00e9es \\((30, 43)\\) alors une nouvelle \u00e9tiquette est attribu\u00e9e.</li> </ol> \ud83d\udc0d Script Python<pre><code>nouveau_client = {'x' : 30, 'y' : 43}\nfor k in range(1, 11):\n    prediction = \"\u00e0 compl\u00e9ter\"\n    print(\"k = \", k, \"pr\u00e9diction  :\", prediction)\n</code></pre> <ol> <li> <p>La complexit\u00e9 temporelle dominante dans l'algorithme des k plus proches voisins que nous avons impl\u00e9ment\u00e9 est celle du tri, ce qui donne un ordre de grandeur en \\(n \\log(n)\\) pour un jeu de donn\u00e9es de taille \\(n\\). On va impl\u00e9menter un algorithme de complexit\u00e9 lin\u00e9aire, d'ordre de grandeur \\(n\\), ce qui sera plus performant sur des jeux de donn\u00e9es de tr\u00e8s grande taille</p> </li> <li> <p>On consid\u00e8re un algorithme de complexit\u00e9 en \\(n \\log(n)\\) (fonction logarithme d\u00e9cimal de la calculatrice qui donne approximativement le nombre de chiffres d'un nombre en base dix) et on admet que son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille \\(n=10\\) est de 1 milliseconde. Quel est son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille \\(1000\\) ? de taille \\(100000\\) ? de taille \\(10^{6}\\) ?</p> </li> <li>On consid\u00e8re un algorithme de complexit\u00e9 en \\(n \\log(n)\\)  et on admet que son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille \\(n=10\\) est de 2 millisecondes. Quel est son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille \\(1000\\) ? de taille \\(100000\\) ? de taille \\(10^{6}\\) ?</li> <li> <p>Quel est l'int\u00e9r\u00eat d'une complexit\u00e9 en \\(n\\) par rapport \u00e0 une complexit\u00e9 en \\(n \\log(n)\\) ?</p> </li> <li> <p>Pour obtenir un algorithme de complexit\u00e9 lin\u00e9aire,on ne va pas trier tout le jeu de donn\u00e9es de taille \\(n\\) mais maintenir  une liste les k plus proches voisins lors du parcours du tableau <code>tab_distance</code>. </p> </li> </ol> <p>Celui-ci contient les tuples (distance, \u00e9tiquette) sous cette forme :</p> \ud83d\udc0d Script Python<pre><code>[(10.0, 'paul'), (13.0, 'paul'), (14.0, 'paul'), (16.0, 'jules'), (17.0, 'paul'), ...]\n</code></pre> <p>On proc\u00e8de ainsi :</p> <ul> <li>On  trie d'abord les k premiers \u00e9l\u00e9ments de <code>tab_distance</code> dans une liste <code>k_voisins</code></li> <li>Pour chacun des couples suivants  on l'ins\u00e8re  \u00e0 sa place dans <code>k_voisins</code>  puis on enl\u00e8ve le dernier \u00e9l\u00e9ment de <code>k_voisins</code>  (de plus grande de distance) pour garder uniquement les k voisins les plus proches. L'algorithme d'insertion est le m\u00eame que pour le tri par insertion.</li> </ul> <p>Compl\u00e9ter la fonction <code>trier_puis_extraire_insertion</code>.</p> <p>V\u00e9rifier avec le test unitaire <code>test_unitaire_trier_puis_extraire_insertion()</code>.</p> \ud83d\udc0d Script Python<pre><code>def trier_puis_extraire_insertion(tab_distance, k):\n\"\"\"\n    Parameters\n    ----------\n    tab_distance un tableau de tuple (distance entre deux  enregistrements\n    , \u00e9tiquette) renvoy\u00e9 par table_distance_nouveau\n\n    Returns\n    -------\n    tableau k_voisins des k plus petits \u00e9l\u00e9ments de tab_distance\n    selon le crit\u00e8re de distance\n    \"\"\"\n    #pr\u00e9condition\n    assert k &lt;= len(tab_distance)\n    #liste tri\u00e9e des k premiers tuples de tab_distance \n    k_voisins = sorted([tab_distance[i] for i in range(k)])\n    #parcours des tuples suivants\n    for i in range(k, len(tab_distance)):     \n        nouveau = tab_distance[i]\n        #ajout de nouveau \u00e0 la fin de tab_distance\n        k_voisins.append(nouveau)\n        #insertion de nouveau \u00e0 sa place dans la liste tri\u00e9e k_voisins\n        #comme dans le tri par insertion avec une boucle while\n        j = k - 1\n        \"\u00e0 compl\u00e9ter\"\n\n\n\n        #invariant : ici k_voisins toujours dans l'ordre croissant des distances\n        #on enl\u00e8ve le  dernier tuple de k_voisin = voisin le plus loin\n        k_voisins.pop()\n    #on extrait de k_voisins la liste des \u00e9tiquettes uniquement\n    return [voisin[1] for voisin in k_voisins[:k]]\n</code></pre> <p>Modifier la fonction <code>etiquetage_knn</code> en une fonction <code>etiquetage_knn_insertion</code>  qui pr\u00e9dit une \u00e9tiquette en utilisant <code>trier_puis_extraire_insertion</code>.</p> <ol> <li>On veut mesurer exp\u00e9rimentalement la complexit\u00e9 temporelle de <code>etiquetage_knn_insertion</code>. Sp\u00e9cifier la fonction <code>mesure_temps</code> qui est fournie. \u00e0 l'aide d'une <code>docstring</code>. </li> </ol> <p>On donne ci-dessous un exemple d'ex\u00e9cution. Commenter les r\u00e9sultats affich\u00e9s.</p> \ud83d\udc0d Script Python<pre><code>In [43]: mesure_temps(etiquetage_knn_insertion, 5)\nTaille :  100  Temps :  0.0001652430000831373 Ratio = temps/ temps_precedent = None\nTaille :  1000  Temps :  0.0013811469998472603 Ratio = temps/ temps_precedent = 8.358278409084654\nTaille :  10000  Temps :  0.01579672799925902 Ratio = temps/ temps_precedent = 11.437398047424324\nTaille :  100000  Temps :  0.15101633700032835 Ratio = temps/ temps_precedent = 9.559975775199275\nTaille :  1000000  Temps :  1.513596802999018 Ratio = temps/ temps_precedent = 10.022735507057936\n</code></pre> <ol> <li>On fournit une proc\u00e9dure d'en-t\u00eate <code>influence_k(nb_clients,  cote_ville)</code> qui   pr\u00e9dit l'\u00e9tiquette pour tous les immeubles de la ville     avec l'algorithme des k plus proches voisins, k variant de 1 \u00e0 10 et    affiche la carte des pr\u00e9dictions.     Si l'immeuble est d\u00e9j\u00e0 dans le jeu de donn\u00e9es on fait quand m\u00eame une    pr\u00e9diction , qui peut \u00eatre diff\u00e9rente  de l'\u00e9tiquette du point (pas absurde si on le voit comme une      r\u00e9attribution de march\u00e9). Ex\u00e9cuter le  test propos\u00e9 puis commenter \u00e0 partir des images obtenues l'influence du param\u00e8tre k sur la pr\u00e9diction.  Un exemple en video est disponible ici</li> </ol> <p>:::{.minipage width=\"0.5\\linewidth\" center=\"true\"} \\ &amp; \\ :::</p> <p>Graphique 4 : Influence du param\u00e8tre k</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-tmp-mkdocs/","title":"Knn tp tmp mkdocs","text":""},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-tmp-mkdocs/#credits","title":"Cr\u00e9dits","text":"<p>Ce  TP est inspir\u00e9 pour la partie 2 d'un travail de Julien de Vill\u00e8le.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-tmp-mkdocs/#partie-1-implementation-de-lalgorithme-des-k-plus-proches-voisins","title":"Partie 1 : impl\u00e9mentation de l'algorithme des k plus proches voisins","text":"<ol> <li>Ouvrir dans un environnement de programmation Python le fichier <code>tp_eleve.py</code> qui est fourni.</li> <li>Lister le contenu du r\u00e9pertoire  <code>datas</code> qui est fourni.</li> <li>Quel est le r\u00f4le de l'instruction <code>from utilitaires_knn import *</code> ?</li> <li>En suivant les sp\u00e9cifications donn\u00e9es dans les <code>docstring</code> et \u00e0 l'aide du cours, compl\u00e9ter les diff\u00e9rentes fonctions permettant d'impl\u00e9menter l'algorithme de recherche des k plus proches voisins dans <code>tp_eleve.py</code> et dans l'encadr\u00e9 ci-dessous. Petite diff\u00e9rence avec le cours : on utilise une clef de tri dans la fonction <code>trier_puis_extraire</code>. Par d\u00e9faut, <code>sorted</code> trie les <code>tuple</code>  par ordre alphab\u00e9tique sur les  composantes (selon la premi\u00e8re, puis la seconde etc ...) donc on n'aurait pas besoin de pr\u00e9ciser qu'on veut trier selon la premi\u00e8re composante (les distances). N\u00e9anmoins, si on ne pr\u00e9cise pas la clef de tri,  <code>sorted</code> va trier en cas d'\u00e9galit\u00e9 de distance selon l'ordre alphab\u00e9tique des \u00e9tiquettes, ce qui est arbitraire et donne des r\u00e9sultats diff\u00e9rents que la m\u00e9thode de tri diff\u00e9rente pr\u00e9sent\u00e9e dans la partie 3.</li> <li>V\u00e9rifier  chaque fonction avec le test unitaire fourni dans <code>tp_eleve.py</code>  qui s'ex\u00e9cute avec la syntaxe <code>test_unitaire_nom_fonction()</code> sur le jeu de donn\u00e9es <code>pokemons.csv</code>.</li> </ol> \ud83d\udc0d Script Python<pre><code>from utilitaires_knn import *\nimport math\nimport random\n\n#%% Partie 1 : impl\u00e9mentation\n\n\ndef distance_euclidienne(enreg_a, enreg_b, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n        enreg_a, enreg_b et deux enregistrements de donn\u00e9es sous forme de \n        dictionnaires\n        tab_descripteur un tableau de descripteurs (certaines clefs des \n                                                    enregistrements)\n\n    Returns\n    -------\n        distance euclidienne entre enreg_a et enreg_b selon les valeurs des \n        descripteurs de tab_descripteur arrondie \u00e0 3 chiffres apr\u00e8s la virgule\n    \"\"\"\n    distance_carre = 0\n    for descripteur in tab_descripteur:\n        \"\u00e0 compl\u00e9ter \"\n\n\n\n    return round(math.sqrt(distance_carre), 3)\n\n\ndef table_distance_nouveau(table, nouveau, distance, etiquette, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n    table : une table d'enregistrements de type dictionnaire\n    nouveau : un nouvel enregistrement de type dictionnaire\n    distance : une fonction de distance entre deux enregistrements\n    etiquette : nom du descripteur d'\u00e9tiquette dans les enregistrements\n    tab_descripteur : un tableau avec les noms des descripteurs utilis\u00e9s\n    dans le calcul de la distance\n\n    Returns\n    -------\n    tab_distance un tableau de tuple (distance entre nouveau et un \n    enregistrement de table, \u00e9tiquette de cet enregistrement)\n    \"\"\"    \n    tab_distance = []\n    for enreg in table:\n        \"\u00e0 compl\u00e9ter \"\n\n\n    return tab_distance\n\ndef clef_tri(couple):\n\"\"\"Clef de tri pour trier un couple de valeurs selon\n    la premi\u00e8re composante\"\"\"\n    return couple[0]\n\n\ndef trier_puis_extraire(tab_distance, k):\n\"\"\"\n    Parameters\n    ----------\n    tab_distance un tableau de tuple (distance entre deux  enregistrements\n    , \u00e9tiquette) renvoy\u00e9 par table_distance_nouveau\n\n    Returns\n    -------\n    tableau k_voisins des k plus petits \u00e9l\u00e9ments de tab_distance\n    selon le crit\u00e8re de distance\n    \"\"\"\n    #pr\u00e9condition\n    assert k &lt;= len(tab_distance)\n    #tri selon la premi\u00e8re composante de chaque tuple (la distance)\n    tab_tri = sorted(tab_distance, key = clef_tri)\n    \"\u00e0 compl\u00e9ter \"\n\n\n\n\n\n\ndef element_majoritaire(k_voisins):\n\"\"\"\n    Parameters\n    ----------\n    k_voisins : tableau des k plus proches voisins \n\n    Returns\n    -------\n    voisin_majoritaire : chaine de caract\u00e8re type str, \u00e9tiquette majoritaire\n    parmi les voisins\n    \"\"\"\n    occurence = dict()\n    voisin_majoritaire = k_voisins[0]\n    for voisin in k_voisins:\n        if voisin not in occurence:\n            occurence[voisin] = 1\n        else:\n            \"\u00e0 compl\u00e9ter \"\n\n\n        if voisin != voisin_majoritaire  \\\n           and occurence[voisin] &gt; occurence[voisin_majoritaire]:\n            \"\u00e0 compl\u00e9ter \"\n\n\n    return voisin_majoritaire    \n\n\n\ndef etiquetage_knn(table, nouveau, etiquette, tab_descripteur, k,\n                   distance = distance_euclidienne):\n\"\"\"\n    Parameters\n    ----------\n    table : tableau de dictionnaires\n        table d'enregistrements\n    nouveau : un dictionnaire\n        un nouvel enregistrement\n    etiquette : une chaine de caract\u00e8res\n        le nom du descripteur d'\u00e9tiquette\n    tab_descripteur : un tableau\n        liste des noms des descripteurs utilis\u00e9s pour la comparaison\n    k : un entier\n        le nombre de voisins examin\u00e9s\n    distance : une fonction distance\n        The default is distance_euclidienne.\n\n    Returns\n    -------\n    voisin_majoritaire : une chaine ce caract\u00e8re\n        l'\u00e9tiquette majoriataire parmi les k plus proches voisins\n    \"\"\"\n    \"\u00e0 compl\u00e9ter \"\n\n\n\n\n\n\n\n\n#fin\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-tmp-mkdocs/#partie-2-application-a-un-jeu-de-donnees-historique","title":"Partie 2 : application \u00e0 un jeu de donn\u00e9es historique","text":"<p>Le jeu de donn\u00e9es auquel nous allons nous int\u00e9resser est un jeu de donn\u00e9es c\u00e9l\u00e8bre. Il a \u00e9t\u00e9 cr\u00e9\u00e9 et utilis\u00e9 par Ronald Aylmer Fisher en 1936 (biologiste et statisticien) et concerne 3 esp\u00e8ces d'iris : setosa, virginica et versicolor.  Voir l'article de Wikipedia pour les photos des iris et plus de d\u00e9tails.</p> <p>Ce jeu de donn\u00e9es est compos\u00e9 de 50 individus pour chacune des trois esp\u00e8ces (setosa, versicolor, virginica) soit 150 individus en tout.  </p> <p>Pour chacun de ces individus on dispose des champs : \ud83d\udccb Algo<pre><code>- id              : num\u00e9ro d'\u00e9chantillon (identifiant)  \n\n- longueur_sepale : longueur des s\u00e9pales  \n\n- largeur_sepale  : largeur des s\u00e9pales  \n\n- longueur_petale : longueur des p\u00e9tales  \n\n- largeur_petale  : largeur des p\u00e9tales  \n\n- espece          : 'Iris-setosa', 'Irid_virginica' ou 'Iris-versicolor'\n</code></pre></p> <p>La question que se posait M. Fisher est : \"Puis-je, \u00e0 partir des longueurs et largeurs des s\u00e9pales et p\u00e9tales, pr\u00e9dire l'esp\u00e8ce d'un iris ?\"</p> <p>On va donc, \u00e0 partir des quatre descripteurs <code>longueur_sepale, largeur_sepale, longueur_petale</code> et <code>largeur_petale</code>,  rechercher une pr\u00e9diction de l'\u00e9tiquette <code>espece</code>.</p> <p>On travaille toujours dans le fichier <code>tp_eleve.py</code>.</p> <ol> <li> <p>Rechercher l'emplacement du fichier  <code>iris.csv</code> puis charger dans une variable <code>table_iris</code> son contenu avec la fonction <code>charger_fichier_entete</code> du module <code>utilitaires_knn</code>.</p> </li> <li> <p>D\u00e9finir dans une variable <code>iris_a_etiqueter</code> un nouvel iris sans \u00e9tiquette.</p> </li> </ol> \ud83d\udc0d Script Python<pre><code>iris_a_etiqueter = {'longueur_sepale':'5.7', \n                    'largeur_sepale':'3.5', \n                    'longueur_petale':'4.8', \n                    'largeur_petale':'0.2'}\n</code></pre> <ol> <li>Avec la fonction <code>afficher_donnees_point</code> du module <code>utilitaires_knn</code>, on peut afficher le jeu de donn\u00e9es et la nouvelle donn\u00e9e dans un rep\u00e8re du plan en rep\u00e9rant les points par deux descripteurs <code>\"longueur_sepale\"</code> et  <code>\"longueur_petale\"</code>.  </li> </ol> \ud83d\udc0d Script Python<pre><code>afficher_donnees_point([\"longueur_sepale\", \"longueur_petale\"], 'espece', \n                        table_iris ,  point = [5.7, 4.8],\n                        fichier = 'iris-longpetale-longsepale-point.png')\n</code></pre> <p>On obtient alors le graphique 1.</p> <ul> <li>Les trois nuages de points class\u00e9s par esp\u00e8ce sont-ils bien s\u00e9par\u00e9s ? L'algorithme des k plus proches voisins va-t-il bien fonctionner en g\u00e9n\u00e9ral ?</li> <li>Le point marqu\u00e9 d'une croix orange repr\u00e9sente l'iris d'esp\u00e8ce inconnue. L'algorithme des k plus proches voisins va-t-il bien fonctionner pour cet iris particulier ? Sur quels param\u00e8tres peut-on jouer pour am\u00e9liorer la pr\u00e9diction ?</li> <li> <p>Avec la fonction <code>etiquetage_knn</code>, \u00e9crire un code qui affiche les pr\u00e9dictions de l'algorithme des k plus proches voisins pour k variant entre 1 et 20. Commentaires ?</p> <p> Graphique 1 : Jeu de donn\u00e9es iris avec deux descripteurs</p> </li> <li> <p>Avec la fonction <code>afficher_donnees_point</code> du module <code>utilitaires_knn</code>, afficher le jeu de donn\u00e9es et la nouvelle donn\u00e9e dans un rep\u00e8re du plan en rep\u00e9rant les points par trois descripteurs <code>\"longueur_sepale\"</code>, <code>\"longueur_petale\"</code> et <code>\"largeur_sepale\"</code>.  On doit obtenir le graphique 2.</p> </li> <li> <p>Les trois nuages de points class\u00e9s par esp\u00e8ce sont-ils bien s\u00e9par\u00e9s ? L'algorithme des k plus proches voisins va-t-il bien fonctionner en g\u00e9n\u00e9ral ?</p> </li> <li>Le point marqu\u00e9 d'une croix orange repr\u00e9sente l'iris d'esp\u00e8ce inconnue. L'algorithme des k plus proches voisins va-t-il bien fonctionner pour cet iris particulier ? </li> <li> <p>Avec la fonction <code>etiquetage_knn</code>, \u00e9crire un code qui affiche les pr\u00e9dictions de l'algorithme des k plus proches voisins pour k variant entre 1 et 20. Comparer avec les r\u00e9sultats obtenus \u00e0 la question 3. avec deux descripteurs.</p> <p>\\ Graphique 2 : Jeu de donn\u00e9es iris avec trois descripteurs</p> </li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/knn-tp-tmp-mkdocs/#distance-de-manhattan-optimisation-de-la-complexite-puis-etude-de-linfluence-du-parametre-k","title":"Distance de Manhattan, optimisation de la complexit\u00e9 puis \u00e9tude de l'influence du param\u00e8tre k","text":"<p>Dans la ville imaginaire de Manhattan, les rues sont agenc\u00e9es selon un quadrillage et la distance entre deux immeubles A et B de coordonn\u00e9es \\((x_{A},y_{A})\\) et \\((x_{B},y_{B})\\) correspond \u00e0 la longueur du parcours d'un taxi allant de A vers B en longeant les rues :  \\(distanceManhattan(A, B)=\\vert x_{B} - x_{A} \\vert + \\vert y_{B} - y_{A} \\vert\\).</p> <p>On consid\u00e8re que chaque immeuble de la ville sont rep\u00e9r\u00e9s dans un rep\u00e8re orthonorm\u00e9 par un couple  de coordonn\u00e9es \\((x, y)\\) o\u00f9 \\(x\\) et \\(y\\) sont des entiers naturels.</p> <p>Dans  r\u00e9pertoire <code>datas</code> qui est fourni, se trouve un fichier <code>nettoyage.csv</code> avec   944 enregistrements d'immeubles de Manhattan avec trois descripteurs  'x', 'y' et une \u00e9tiquette 'nettoyage' :</p> <ul> <li>'x' : abscisse de l'immeuble un entier compris entre 0 et 100</li> <li>'y' : ordonn\u00e9e de l'immeuble un entier compris entre 0 et 100 </li> <li>'nettoyage' : le nom de l'entreprise de nettoyage de l'immeuble qui peut prendre deux valeurs : 'jules' ou 'paul'</li> </ul> <p>On travaille toujours dans le fichier <code>tp_eleve.py</code>.</p> <ol> <li> <p>Saisir le code suivant pour : </p> </li> <li> <p>charger dans une variable <code>table_nettoyage</code> le contenu  du jeu de donn\u00e9es <code>nettoyage.csv</code> avec la fonction <code>charger_fichier_entete</code> du module <code>utilitaires_knn</code> ;</p> </li> <li>afficher le jeu de donn\u00e9es et enregistrer l'image dans le r\u00e9pertoire de travail.</li> </ol> \ud83d\udc0d Script Python<pre><code>table_nettoyage = charger_fichier_entete('./datas/nettoyage.csv')\nafficher_donnees([\"x\", \"y\"], \n                 'nettoyage', table_nettoyage, \n                 fichier = 'nettoyage.png')\n</code></pre> \ud83d\udccb Algo<pre><code>![graphique longueur sepale longueur petale largeur s\u00e9pale](images/nettoyage.png){width=\"80%\"}\n_Graphique 3 : Entreprises de nettoyages dans Manhattan_\n</code></pre> <ol> <li>Compl\u00e9ter le code de la fonction <code>distance_manhattan</code> en respectant la sp\u00e9cification donn\u00e9e dans la <code>docstring</code>. V\u00e9rifier ensuite que le test unitaire <code>test_unitaire_distance_manhattan()</code> est r\u00e9ussi.</li> </ol> \ud83d\udc0d Script Python<pre><code>def distance_manhattan(enreg_a, enreg_b, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n        enreg_a, enreg_b et deux enregistrements de donn\u00e9es sous forme de \n        dictionnaires\n        tab_descripteur un tableau de descripteurs (certaines clefs des \n                                                    enregistrements)\n\n    Returns\n    -------\n        distance de manhattan entre enreg_a et enreg_b selon les valeurs des \n        descripteurs de tab_descripteur arrondie \u00e0 3 chiffres apr\u00e8s la virgule\n    \"\"\"\n    distance = 0\n    for descripteur in tab_descripteur:\n        distance = \"\u00e0  compl\u00e9ter\"\n    return distance\n</code></pre> <ol> <li>Compl\u00e9ter le code suivant afin d'afficher une pr\u00e9diction de l'entreprise de nettoyage choisie  pour un nouvel immeuble de coordonn\u00e9es \\((30, 43)\\), \u00e0 l'aide de la fonction <code>etiquetage_knn</code> \u00e9crite pr\u00e9c\u00e9demment. On pensera \u00e0 passer en param\u00e8tre la fonction <code>distance_manhattan</code> car la distance par d\u00e9faut est <code>distance_euclidienne</code>. Pour simplifier on suppose que si un immeuble existe d\u00e9j\u00e0 au point de coordonn\u00e9es \\((30, 43)\\) alors une nouvelle \u00e9tiquette est attribu\u00e9e.</li> </ol> \ud83d\udc0d Script Python<pre><code>nouveau_client = {'x' : 30, 'y' : 43}\nfor k in range(1, 11):\n    prediction = \"\u00e0 compl\u00e9ter\"\n    print(\"k = \", k, \"pr\u00e9diction  :\", prediction)\n</code></pre> <ol> <li> <p>La complexit\u00e9 temporelle dominante dans l'algorithme des k plus proches voisins que nous avons impl\u00e9ment\u00e9 est celle du tri, ce qui donne un ordre de grandeur en \\(n \\log(n)\\) pour un jeu de donn\u00e9es de taille \\(n\\). On va impl\u00e9menter un algorithme de complexit\u00e9 lin\u00e9aire, d'ordre de grandeur \\(n\\), ce qui sera plus performant sur des jeux de donn\u00e9es de tr\u00e8s grande taille</p> </li> <li> <p>On consid\u00e8re un algorithme de complexit\u00e9 en \\(n \\log(n)\\) (fonction logarithme d\u00e9cimal de la calculatrice qui donne approximativement le nombre de chiffres d'un nombre en base dix) et on admet que son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille \\(n=10\\) est de 1 milliseconde. Quel est son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille \\(1000\\) ? de taille \\(100000\\) ? de taille \\(10^{6}\\) ?</p> </li> <li>On consid\u00e8re un algorithme de complexit\u00e9 en \\(n \\log(n)\\)  et on admet que son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille \\(n=10\\) est de 2 millisecondes. Quel est son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille \\(1000\\) ? de taille \\(100000\\) ? de taille \\(10^{6}\\) ?</li> <li> <p>Quel est l'int\u00e9r\u00eat d'une complexit\u00e9 en \\(n\\) par rapport \u00e0 une complexit\u00e9 en \\(n \\log(n)\\) ?</p> </li> <li> <p>Pour obtenir un algorithme de complexit\u00e9 lin\u00e9aire,on ne va pas trier tout le jeu de donn\u00e9es de taille \\(n\\) mais maintenir  une liste les k plus proches voisins lors du parcours du tableau <code>tab_distance</code>. </p> </li> </ol> <p>Celui-ci contient les tuples (distance, \u00e9tiquette) sous cette forme :</p> \ud83d\udc0d Script Python<pre><code>[(10.0, 'paul'), (13.0, 'paul'), (14.0, 'paul'), (16.0, 'jules'), (17.0, 'paul'), ...]\n</code></pre> <p>On proc\u00e8de ainsi :</p> <ul> <li>On  trie d'abord les k premiers \u00e9l\u00e9ments de <code>tab_distance</code> dans une liste <code>k_voisins</code></li> <li>Pour chacun des couples suivants  on l'ins\u00e8re  \u00e0 sa place dans <code>k_voisins</code>  puis on enl\u00e8ve le dernier \u00e9l\u00e9ment de <code>k_voisins</code>  (de plus grande de distance) pour garder uniquement les k voisins les plus proches. L'algorithme d'insertion est le m\u00eame que pour le tri par insertion.</li> </ul> <p>Compl\u00e9ter la fonction <code>trier_puis_extraire_insertion</code>.</p> <p>V\u00e9rifier avec le test unitaire <code>test_unitaire_trier_puis_extraire_insertion()</code>.</p> \ud83d\udc0d Script Python<pre><code>def trier_puis_extraire_insertion(tab_distance, k):\n\"\"\"\n    Parameters\n    ----------\n    tab_distance un tableau de tuple (distance entre deux  enregistrements\n    , \u00e9tiquette) renvoy\u00e9 par table_distance_nouveau\n\n    Returns\n    -------\n    tableau k_voisins des k plus petits \u00e9l\u00e9ments de tab_distance\n    selon le crit\u00e8re de distance\n    \"\"\"\n    #pr\u00e9condition\n    assert k &lt;= len(tab_distance)\n    #liste tri\u00e9e des k premiers tuples de tab_distance \n    k_voisins = sorted([tab_distance[i] for i in range(k)])\n    #parcours des tuples suivants\n    for i in range(k, len(tab_distance)):     \n        nouveau = tab_distance[i]\n        #ajout de nouveau \u00e0 la fin de tab_distance\n        k_voisins.append(nouveau)\n        #insertion de nouveau \u00e0 sa place dans la liste tri\u00e9e k_voisins\n        #comme dans le tri par insertion avec une boucle while\n        j = k - 1\n        \"\u00e0 compl\u00e9ter\"\n\n\n\n        #invariant : ici k_voisins toujours dans l'ordre croissant des distances\n        #on enl\u00e8ve le  dernier tuple de k_voisin = voisin le plus loin\n        k_voisins.pop()\n    #on extrait de k_voisins la liste des \u00e9tiquettes uniquement\n    return [voisin[1] for voisin in k_voisins[:k]]\n</code></pre> <p>Modifier la fonction <code>etiquetage_knn</code> en une fonction <code>etiquetage_knn_insertion</code>  qui pr\u00e9dit une \u00e9tiquette en utilisant <code>trier_puis_extraire_insertion</code>.</p> <ol> <li>On veut mesurer exp\u00e9rimentalement la complexit\u00e9 temporelle de <code>etiquetage_knn_insertion</code>. Sp\u00e9cifier la fonction <code>mesure_temps</code> qui est fournie. \u00e0 l'aide d'une <code>docstring</code>. </li> </ol> <p>On donne ci-dessous un exemple d'ex\u00e9cution. Commenter les r\u00e9sultats affich\u00e9s.</p> \ud83d\udc0d Script Python<pre><code>In [43]: mesure_temps(etiquetage_knn_insertion, 5)\nTaille :  100  Temps :  0.0001652430000831373 Ratio = temps/ temps_precedent = None\nTaille :  1000  Temps :  0.0013811469998472603 Ratio = temps/ temps_precedent = 8.358278409084654\nTaille :  10000  Temps :  0.01579672799925902 Ratio = temps/ temps_precedent = 11.437398047424324\nTaille :  100000  Temps :  0.15101633700032835 Ratio = temps/ temps_precedent = 9.559975775199275\nTaille :  1000000  Temps :  1.513596802999018 Ratio = temps/ temps_precedent = 10.022735507057936\n</code></pre> <ol> <li> <p>On fournit une proc\u00e9dure d'en-t\u00eate <code>influence_k(nb_clients,  cote_ville)</code> qui   pr\u00e9dit l'\u00e9tiquette pour tous les immeubles de la ville     avec l'algorithme des k plus proches voisins, k variant de 1 \u00e0 10 et    affiche la carte des pr\u00e9dictions.     Si l'immeuble est d\u00e9j\u00e0 dans le jeu de donn\u00e9es on fait quand m\u00eame une    pr\u00e9diction , qui peut \u00eatre diff\u00e9rente  de l'\u00e9tiquette du point (pas absurde si on le voit comme une      r\u00e9attribution de march\u00e9). Ex\u00e9cuter le  test propos\u00e9 puis commenter \u00e0 partir des images obtenues l'influence du param\u00e8tre k sur la pr\u00e9diction.  Un exemple en video est disponible ici</p> <p></p> <p></p> </li> </ol> <p>Graphique 4 : Influence du param\u00e8tre k</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/backup/knn-tp-git/","title":"Knn tp git","text":"<ul> <li>Cr\u00e9dits</li> <li>Partie 1 : impl\u00e9mentation de l'algorithme des k plus proches     voisins</li> <li>Partie 2 : application \u00e0 un jeu de donn\u00e9es     historique</li> <li>Distance de Manhattan, optimisation de la complexit\u00e9 puis \u00e9tude de     l'influence du param\u00e8tre     k</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/backup/knn-tp-git/#credits","title":"Cr\u00e9dits","text":"<p>Ce TP est inspir\u00e9 pour la partie 2 d'un travail de Julien de Vill\u00e8le.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/backup/knn-tp-git/#partie-1-implementation-de-lalgorithme-des-k-plus-proches-voisins","title":"Partie 1 : impl\u00e9mentation de l'algorithme des k plus proches voisins","text":"<ol> <li>Ouvrir dans un environnement de programmation Python le fichier     <code>tp_eleve.py</code> qui est fourni.</li> <li>Lister le contenu du r\u00e9pertoire <code>datas</code> qui est fourni.</li> <li>Quel est le r\u00f4le de l'instruction     <code>from from utilitaires_knn import *</code> ?</li> <li>En suivant les sp\u00e9cifications donn\u00e9es dans les <code>docstring</code> et \u00e0     l'aide du cours, compl\u00e9ter les diff\u00e9rentes fonctions permettant     d'impl\u00e9menter l'algorithme de recherche des k plus proches voisins     dans <code>tp_eleve.py</code> et dans l'encadr\u00e9 ci-dessous. Petite diff\u00e9rence     avec le cours : on utilise une clef de tri dans la fonction     <code>trier_puis_extraire</code>. Par d\u00e9faut, <code>sorted</code> trie les <code>tuple</code> par     ordre alphab\u00e9tique sur les composantes (selon la premi\u00e8re, puis la     seconde etc \u2026) donc on n'aurait pas besoin de pr\u00e9ciser qu'on veut     trier selon la premi\u00e8re composante (les distances). N\u00e9anmoins, si on     ne pr\u00e9cise pas la clef de tri, <code>sorted</code> va trier en cas d'\u00e9galit\u00e9 de     distance selon l'ordre alphab\u00e9tique des \u00e9tiquettes, ce qui est     arbitraire et donne des r\u00e9sultats diff\u00e9rents que la m\u00e9thode de tri     diff\u00e9rente pr\u00e9sent\u00e9e dans la partie 3.</li> <li>V\u00e9rifier chaque fonction avec le test unitaire fourni dans     <code>tp_eleve.py</code> qui s'ex\u00e9cute avec la syntaxe     <code>test_unitaire_nom_fonction()</code> sur le jeu de donn\u00e9es <code>pokemons.csv</code>.</li> </ol> \ud83d\udc0d Script Python<pre><code>from utilitaires_knn import *\nimport math\nimport random\n\n#%% Partie 1 : impl\u00e9mentation\n\n\ndef distance_euclidienne(enreg_a, enreg_b, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n        enreg_a, enreg_b et deux enregistrements de donn\u00e9es sous forme de \n        dictionnaires\n        tab_descripteur un tableau de descripteurs (certaines clefs des \n                                                    enregistrements)\n\n    Returns\n    -------\n        distance euclidienne entre enreg_a et enreg_b selon les valeurs des \n        descripteurs de tab_descripteur arrondie \u00e0 3 chiffres apr\u00e8s la virgule\n    \"\"\"\n    distance_carre = 0\n    for descripteur in tab_descripteur:\n        \"\u00e0 compl\u00e9ter \"\n\n\n\n    return round(math.sqrt(distance_carre), 3)\n\n\ndef table_distance_nouveau(table, nouveau, distance, etiquette, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n    table : une table d'enregistrements de type dictionnaire\n    nouveau : un nouvel enregistrement de type dictionnaire\n    distance : une fonction de distance entre deux enregistrements\n    etiquette : nom du descripteur d'\u00e9tiquette dans les enregistrements\n    tab_descripteur : un tableau avec les noms des descripteurs utilis\u00e9s\n    dans le calcul de la distance\n\n    Returns\n    -------\n    tab_distance un tableau de tuple (distance entre nouveau et un \n    enregistrement de table, \u00e9tiquette de cet enregistrement)\n    \"\"\"    \n    tab_distance = []\n    for enreg in table:\n        \"\u00e0 compl\u00e9ter \"\n\n\n    return tab_distance\n\ndef clef_tri(couple):\n\"\"\"Clef de tri pour trier un couple de valeurs selon\n    la premi\u00e8re composante\"\"\"\n    return couple[0]\n\n\ndef trier_puis_extraire(tab_distance, k):\n\"\"\"\n    Parameters\n    ----------\n    tab_distance un tableau de tuple (distance entre deux  enregistrements\n    , \u00e9tiquette) renvoy\u00e9 par table_distance_nouveau\n\n    Returns\n    -------\n    tableau k_voisins des k plus petits \u00e9l\u00e9ments de tab_distance\n    selon le crit\u00e8re de distance\n    \"\"\"\n    #pr\u00e9condition\n    assert k &lt;= len(tab_distance)\n    #tri selon la premi\u00e8re composante de chaque tuple (la distance)\n    tab_tri = sorted(tab_distance, key = clef_tri)\n    \"\u00e0 compl\u00e9ter \"\n\n\n\n\n\n\ndef element_majoritaire(k_voisins):\n\"\"\"\n    Parameters\n    ----------\n    k_voisins : tableau des k plus proches voisins \n\n    Returns\n    -------\n    voisin_majoritaire : chaine de caract\u00e8re type str, \u00e9tiquette majoritaire\n    parmi les voisins\n    \"\"\"\n    occurence = dict()\n    voisin_majoritaire = k_voisins[0]\n    for voisin in k_voisins:\n        if voisin not in occurence:\n            occurence[voisin] = 1\n        else:\n            \"\u00e0 compl\u00e9ter \"\n\n\n        if voisin != voisin_majoritaire  \\\n           and occurence[voisin] &gt; occurence[voisin_majoritaire]:\n            \"\u00e0 compl\u00e9ter \"\n\n\n    return voisin_majoritaire    \n\n\n\ndef etiquetage_knn(table, nouveau, etiquette, tab_descripteur, k,\n                   distance = distance_euclidienne):\n\"\"\"\n    Parameters\n    ----------\n    table : tableau de dictionnaires\n        table d'enregistrements\n    nouveau : un dictionnaire\n        un nouvel enregistrement\n    etiquette : une chaine de caract\u00e8res\n        le nom du descripteur d'\u00e9tiquette\n    tab_descripteur : un tableau\n        liste des noms des descripteurs utilis\u00e9s pour la comparaison\n    k : un entier\n        le nombre de voisins examin\u00e9s\n    distance : une fonction distance\n        The default is distance_euclidienne.\n\n    Returns\n    -------\n    voisin_majoritaire : une chaine ce caract\u00e8re\n        l'\u00e9tiquette majoriataire parmi les k plus proches voisins\n    \"\"\"\n    \"\u00e0 compl\u00e9ter \"\n\n\n\n\n\n\n\n\n#fin\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/backup/knn-tp-git/#partie-2-application-a-un-jeu-de-donnees-historique","title":"Partie 2 : application \u00e0 un jeu de donn\u00e9es historique","text":"<p>Le jeu de donn\u00e9es auquel nous allons nous int\u00e9resser est un jeu de donn\u00e9es c\u00e9l\u00e8bre. Il a \u00e9t\u00e9 cr\u00e9\u00e9 et utilis\u00e9 par Ronald Aylmer Fisher en 1936 (biologiste et statisticien) et concerne 3 esp\u00e8ces d'iris : setosa, virginica et versicolor. Voir l'article de Wikipedia pour les photos des iris et plus de d\u00e9tails.</p> <p>Ce jeu de donn\u00e9es est compos\u00e9 de 50 individus pour chacune des trois esp\u00e8ces (setosa, versicolor, virginica) soit 150 individus en tout.</p> <p>Pour chacun de ces individus on dispose des champs :</p> <ul> <li> <p>id              : num\u00e9ro d'\u00e9chantillon (identifiant)  </p> </li> <li> <p>longueur_sepale : longueur des s\u00e9pales  </p> </li> <li> <p>largeur_sepale  : largeur des s\u00e9pales  </p> </li> <li> <p>longueur_petale : longueur des p\u00e9tales  </p> </li> <li> <p>largeur_petale  : largeur des p\u00e9tales  </p> </li> <li> <p>espece          : 'Iris-setosa', 'Irid_virginica' ou 'Iris-versicolor'</p> </li> </ul> <p>La question que se posait M. Fisher est : \"Puis-je, \u00e0 partir des longueurs et largeurs des s\u00e9pales et p\u00e9tales, pr\u00e9dire l'esp\u00e8ce d'un iris ?\"</p> <p>On va donc, \u00e0 partir des quatre descripteurs <code>longueur_sepale, largeur_sepale, longueur_petale</code> et <code>largeur_petale</code>, rechercher une pr\u00e9diction de l'\u00e9tiquette <code>espece</code>.</p> <p>On travaille toujours dans le fichier <code>tp_eleve.py</code>.</p> <ol> <li> <p>Rechercher l'emplacement du fichier <code>iris.csv</code> puis charger dans une     variable <code>table_iris</code> son contenu avec la fonction     <code>charger_fichier_entete</code> du module <code>utilitaires_knn</code>.</p> </li> <li> <p>D\u00e9finir dans une variable <code>iris_a_etiqueter</code> un nouvel iris sans     \u00e9tiquette.</p> </li> </ol> \ud83d\udc0d Script Python<pre><code>iris_a_etiqueter = {'longueur_sepale':'5.7', \n                    'largeur_sepale':'3.5', \n                    'longueur_petale':'4.8', \n                    'largeur_petale':'0.2'}\n</code></pre> <ol> <li>Avec la fonction <code>afficher_donnees_point</code> du module     <code>utilitaires_knn</code>, on peut afficher le jeu de donn\u00e9es et la nouvelle     donn\u00e9e dans un rep\u00e8re du plan en rep\u00e9rant les points par deux     descripteurs <code>\"longueur_sepale\"</code> et <code>\"longueur_petale\"</code>.</li> </ol> \ud83d\udc0d Script Python<pre><code>afficher_donnees_point([\"longueur_sepale\", \"longueur_petale\"], 'espece', \n                        table_iris ,  point = [5.7, 4.8],\n                        fichier = 'iris-longpetale-longsepale-point.png')\n</code></pre> <p>On obtient alors le graphique 1.</p> <ul> <li>Les trois nuages de points class\u00e9s par esp\u00e8ce sont-ils bien s\u00e9par\u00e9s     ? L'algorithme des k plus proches voisins va-t-il bien fonctionner     en g\u00e9n\u00e9ral ?</li> <li>Le point marqu\u00e9 d'une croix orange repr\u00e9sente l'iris d'esp\u00e8ce     inconnue. L'algorithme des k plus proches voisins va-t-il bien     fonctionner pour cet iris particulier ? Sur quels param\u00e8tres peut-on     jouer pour am\u00e9liorer la pr\u00e9diction ?</li> <li>Avec la fonction <code>etiquetage_knn</code>, \u00e9crire un code qui affiche les     pr\u00e9dictions de l'algorithme des k plus proches voisins pour k     variant entre 1 et 20. Commentaires ?</li> </ul> <p>\\ Graphique 1 : Jeu de donn\u00e9es iris avec deux descripteurs</p> <ol> <li> <p>Avec la fonction <code>afficher_donnees_point</code> du module     <code>utilitaires_knn</code>, afficher le jeu de donn\u00e9es et la nouvelle donn\u00e9e     dans un rep\u00e8re du plan en rep\u00e9rant les points par trois descripteurs     <code>\"longueur_sepale\"</code>, <code>\"longueur_petale\"</code> et <code>\"largeur_sepale\"</code>. On     doit obtenir le graphique 2.</p> <ul> <li>Les trois nuages de points class\u00e9s par esp\u00e8ce sont-ils bien     s\u00e9par\u00e9s ? L'algorithme des k plus proches voisins va-t-il bien     fonctionner en g\u00e9n\u00e9ral ?</li> <li>Le point marqu\u00e9 d'une croix orange repr\u00e9sente l'iris d'esp\u00e8ce     inconnue. L'algorithme des k plus proches voisins va-t-il bien     fonctionner pour cet iris particulier ?</li> <li>Avec la fonction <code>etiquetage_knn</code>, \u00e9crire un code qui affiche     les pr\u00e9dictions de l'algorithme des k plus proches voisins pour     k variant entre 1 et 20. Comparer avec les r\u00e9sultats obtenus \u00e0     la question 3. avec deux descripteurs.</li> </ul> </li> </ol> <p>\\ Graphique 2 : Jeu de donn\u00e9es iris avec trois descripteurs</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/TP/backup/knn-tp-git/#distance-de-manhattan-optimisation-de-la-complexite-puis-etude-de-linfluence-du-parametre-k","title":"Distance de Manhattan, optimisation de la complexit\u00e9 puis \u00e9tude de l'influence du param\u00e8tre k","text":"<p>Dans la ville imaginaire de Manhattan, les rues sont agenc\u00e9es selon un quadrillage et la distance entre deux immeubles A et B de coordonn\u00e9es  et  correspond \u00e0 la longueur du parcours d'un taxi allant de A vers B en longeant les rues : .</p> <p>On consid\u00e8re que chaque immeuble de la ville sont rep\u00e9r\u00e9s dans un rep\u00e8re orthonorm\u00e9 par un couple de coordonn\u00e9es  o\u00f9  et  sont des entiers naturels.</p> <p>Dans r\u00e9pertoire <code>datas</code> qui est fourni, se trouve un fichier <code>nettoyage.csv</code> avec 944 enregistrements d'immeubles de Manhattan avec trois descripteurs 'x', 'y' et une \u00e9tiquette 'nettoyage' :</p> <ul> <li>'x' : abscisse de l'immeuble un entier compris entre 0 et 100</li> <li>'y' : ordonn\u00e9e de l'immeuble un entier compris entre 0 et 100</li> <li>'nettoyage' : le nom de l'entreprise de nettoyage de l'immeuble qui     peut prendre deux valeurs : 'jules' ou 'paul'</li> </ul> <p>On travaille toujours dans le fichier <code>tp_eleve.py</code>.</p> <ol> <li> <p>Saisir le code suivant pour :</p> </li> <li> <p>charger dans une variable <code>table_nettoyage</code> le contenu du jeu de     donn\u00e9es <code>nettoyage.csv</code> avec la fonction <code>charger_fichier_entete</code> du     module <code>utilitaires_knn</code> ;</p> </li> <li>afficher le jeu de donn\u00e9es et enregistrer l'image dans le r\u00e9pertoire     de travail.</li> </ol> \ud83d\udc0d Script Python<pre><code>table_nettoyage = charger_fichier_entete('./datas/nettoyage.csv')\nafficher_donnees([\"x\", \"y\"], \n                 'nettoyage', table_nettoyage, \n                 fichier = 'nettoyage.png')\n</code></pre> <p>\\ Graphique 3 : Entreprises de nettoyages dans Manhattan</p> <ol> <li>Compl\u00e9ter le code de la fonction <code>distance_manhattan</code> en respectant     la sp\u00e9cification donn\u00e9e dans la <code>docstring</code>. V\u00e9rifier ensuite que le     test unitaire <code>test_unitaire_distance_manhattan()</code> est r\u00e9ussi.</li> </ol> \ud83d\udc0d Script Python<pre><code>def distance_manhattan(enreg_a, enreg_b, tab_descripteur):\n\"\"\"\n    Parameters\n    ----------\n        enreg_a, enreg_b et deux enregistrements de donn\u00e9es sous forme de \n        dictionnaires\n        tab_descripteur un tableau de descripteurs (certaines clefs des \n                                                    enregistrements)\n\n    Returns\n    -------\n        distance de manhattan entre enreg_a et enreg_b selon les valeurs des \n        descripteurs de tab_descripteur arrondie \u00e0 3 chiffres apr\u00e8s la virgule\n    \"\"\"\n    distance = 0\n    for descripteur in tab_descripteur:\n        distance = \"\u00e0  compl\u00e9ter\"\n    return distance\n</code></pre> <ol> <li>Compl\u00e9ter le code suivant afin d'afficher une pr\u00e9diction de     l'entreprise de nettoyage choisie pour un nouvel immeuble de     coordonn\u00e9es     ,     \u00e0 l'aide de la fonction <code>etiquetage_knn</code> \u00e9crite pr\u00e9c\u00e9demment. On     pensera \u00e0 passer en param\u00e8tre la fonction <code>distance_manhattan</code> car     la distance par d\u00e9faut est <code>distance_euclidienne</code>. Pour simplifier     on suppose que si un immeuble existe d\u00e9j\u00e0 au point de coordonn\u00e9es          alors une nouvelle \u00e9tiquette est attribu\u00e9e.</li> </ol> \ud83d\udc0d Script Python<pre><code>nouveau_client = {'x' : 30, 'y' : 43}\nfor k in range(1, 11):\n    prediction = \"\u00e0 compl\u00e9ter\"\n    print(\"k = \", k, \"pr\u00e9diction  :\", prediction)\n</code></pre> <ol> <li> <p>La complexit\u00e9 temporelle dominante dans l'algorithme des k plus     proches voisins que nous avons impl\u00e9ment\u00e9 est celle du tri, ce qui     donne un ordre de grandeur en          pour un jeu de donn\u00e9es de taille     . On va impl\u00e9menter     un algorithme de complexit\u00e9 lin\u00e9aire, d'ordre de grandeur     , ce qui sera plus     performant sur des jeux de donn\u00e9es de tr\u00e8s grande taille</p> </li> <li> <p>On consid\u00e8re un algorithme de complexit\u00e9 en          (fonction logarithme d\u00e9cimal de la calculatrice qui donne     approximativement le nombre de chiffres d'un nombre en base dix) et     on admet que son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de taille      est de 1     milliseconde. Quel est son temps d'ex\u00e9cution pour un jeu de donn\u00e9es     de taille      ? de taille      ? de     taille          ?</p> </li> <li>On consid\u00e8re un algorithme de complexit\u00e9 en          et on admet que son temps d'ex\u00e9cution pour un jeu de donn\u00e9es de     taille      est de 2 millisecondes. Quel est son temps d'ex\u00e9cution pour un jeu     de donn\u00e9es de taille      ? de     taille      ? de     taille          ?</li> <li> <p>Quel est l'int\u00e9r\u00eat d'une complexit\u00e9 en      par rapport \u00e0 une     complexit\u00e9 en          ?</p> </li> <li> <p>Pour obtenir un algorithme de complexit\u00e9 lin\u00e9aire,on ne va pas trier     tout le jeu de donn\u00e9es de taille      mais maintenir une     liste les k plus proches voisins lors du parcours du tableau     <code>tab_distance</code>.</p> </li> </ol> <p>Celui-ci contient les tuples (distance, \u00e9tiquette) sous cette forme :</p> \ud83d\udc0d Script Python<pre><code>[(10.0, 'paul'), (13.0, 'paul'), (14.0, 'paul'), (16.0, 'jules'), (17.0, 'paul'), ...]\n</code></pre> <p>On proc\u00e8de ainsi :</p> <ul> <li>On trie d'abord les k premiers \u00e9l\u00e9ments de <code>tab_distance</code> dans une     liste <code>k_voisins</code></li> <li>Pour chacun des couples suivants on l'ins\u00e8re \u00e0 sa place dans     <code>k_voisins</code> puis on enl\u00e8ve le dernier \u00e9l\u00e9ment de <code>k_voisins</code> (de     plus grande de distance) pour garder uniquement les k voisins les     plus proches. L'algorithme d'insertion est le m\u00eame que pour le tri     par insertion.</li> </ul> <p>Compl\u00e9ter la fonction <code>trier_puis_extraire_insertion</code>.</p> <p>V\u00e9rifier avec le test unitaire <code>test_unitaire_trier_puis_extraire_insertion()</code>.</p> \ud83d\udc0d Script Python<pre><code>def trier_puis_extraire_insertion(tab_distance, k):\n\"\"\"\n    Parameters\n    ----------\n    tab_distance un tableau de tuple (distance entre deux  enregistrements\n    , \u00e9tiquette) renvoy\u00e9 par table_distance_nouveau\n\n    Returns\n    -------\n    tableau k_voisins des k plus petits \u00e9l\u00e9ments de tab_distance\n    selon le crit\u00e8re de distance\n    \"\"\"\n    #pr\u00e9condition\n    assert k &lt;= len(tab_distance)\n    #liste tri\u00e9e des k premiers tuples de tab_distance \n    k_voisins = sorted([tab_distance[i] for i in range(k)])\n    #parcours des tuples suivants\n    for i in range(k, len(tab_distance)):     \n        nouveau = tab_distance[i]\n        #ajout de nouveau \u00e0 la fin de tab_distance\n        k_voisins.append(nouveau)\n        #insertion de nouveau \u00e0 sa place dans la liste tri\u00e9e k_voisins\n        #comme dans le tri par insertion avec une boucle while\n        j = k - 1\n        \"\u00e0 compl\u00e9ter\"\n\n\n\n        #invariant : ici k_voisins toujours dans l'ordre croissant des distances\n        #on enl\u00e8ve le  dernier tuple de k_voisin = voisin le plus loin\n        k_voisins.pop()\n    #on extrait de k_voisins la liste des \u00e9tiquettes uniquement\n    return [voisin[1] for voisin in k_voisins[:k]]\n</code></pre> <p>Modifier la fonction <code>etiquetage_knn</code> en une fonction <code>etiquetage_knn_insertion</code> qui pr\u00e9dit une \u00e9tiquette en utilisant <code>trier_puis_extraire_insertion</code>.</p> <ol> <li>On veut mesurer exp\u00e9rimentalement la complexit\u00e9 temporelle de     <code>etiquetage_knn_insertion</code>. Sp\u00e9cifier la fonction <code>mesure_temps</code> qui     est fournie. \u00e0 l'aide d'une <code>docstring</code>.</li> </ol> <p>On donne ci-dessous un exemple d'ex\u00e9cution. Commenter les r\u00e9sultats affich\u00e9s.</p> \ud83d\udc0d Script Python<pre><code>In [43]: mesure_temps(etiquetage_knn_insertion, 5)\nTaille :  100  Temps :  0.0001652430000831373 Ratio = temps/ temps_precedent = None\nTaille :  1000  Temps :  0.0013811469998472603 Ratio = temps/ temps_precedent = 8.358278409084654\nTaille :  10000  Temps :  0.01579672799925902 Ratio = temps/ temps_precedent = 11.437398047424324\nTaille :  100000  Temps :  0.15101633700032835 Ratio = temps/ temps_precedent = 9.559975775199275\nTaille :  1000000  Temps :  1.513596802999018 Ratio = temps/ temps_precedent = 10.022735507057936\n</code></pre> <ol> <li>On fournit une proc\u00e9dure d'en-t\u00eate     <code>influence_k(nb_clients,  cote_ville)</code> qui pr\u00e9dit l'\u00e9tiquette pour     tous les immeubles de la ville avec l'algorithme des k plus proches     voisins, k variant de 1 \u00e0 10 et affiche la carte des pr\u00e9dictions. Si     l'immeuble est d\u00e9j\u00e0 dans le jeu de donn\u00e9es on fait quand m\u00eame une     pr\u00e9diction , qui peut \u00eatre diff\u00e9rente de l'\u00e9tiquette du point (pas     absurde si on le voit comme une r\u00e9attribution de march\u00e9). Ex\u00e9cuter     le test propos\u00e9 puis commenter \u00e0 partir des images obtenues     l'influence du param\u00e8tre k sur la pr\u00e9diction. Un exemple en video     est disponible ici)</li> </ol> <p>\\</p> <p>\\</p> <p>Graphique 4 : Influence du param\u00e8tre k</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/","title":"Knn cours git","text":"<ul> <li>Cr\u00e9dits</li> <li>Pr\u00e9sentation du probl\u00e8me de     classification</li> <li>Algorithme des k plus proches     voisins</li> <li>Choix des param\u00e8tres et limites de     l'algorithme<ul> <li>Le choix de la distance</li> <li>Le choix du param\u00e8tre <code>k</code></li> <li>Les limites de l'algorithme</li> </ul> </li> <li>Histoire de l'intelligence artificielle et des algorithmes     d'apprentissage</li> <li>Synth\u00e8se</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/#credits","title":"Cr\u00e9dits","text":"<p>Ce cours a \u00e9t\u00e9 construit \u00e0 partir de plusieurs sources : l'excellent cours de Julien de Vill\u00e8le dont sont extraits certains passages ; le chapitre 13 du manuel NSI de la collection Tortue chez Ellipse, auteurs : Ballabonski, Conchon, Filliatre, N'Guyen ; les fiches de cours 37 et 38 du Prepabac Premi\u00e8re NSI chez Hatier, auteurs : Laurent Signac et Guillaume Connan ; un QCM sur https://doctools.dgpad.net r\u00e9alis\u00e9 par Alain Busser.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/#presentation-du-probleme-de-classification","title":"Pr\u00e9sentation du probl\u00e8me de classification","text":"<p>Activit\u00e9 1</p> <p>En guise d'introduction au probl\u00e8me de classification par l'algorithme des k plus proches voisins, r\u00e9pondez au QCM r\u00e9alis\u00e9 par Alain Busser, qui est propos\u00e9 \u00e0 l'adresse https://link.dgpad.net/dsFN.</p> <p>Dans ce cours, on consid\u00e8re un exemple mod\u00e8le constitu\u00e9 de 37 Pokemons dont on donne ci-dessous une repr\u00e9sentation graphique avec :</p> <ul> <li>en abscisse leur vitesse</li> <li>en ordonn\u00e9e leur d\u00e9fense</li> <li>en couleur leur type : Feu ou Roche</li> </ul> <p> </p> <p>Graphique 1 : Pokemons Feu ou Roche avec deux descripteurs</p> <p>Les donn\u00e9es peuvent \u00eatre repr\u00e9sent\u00e9es sous forme d'une table contenant 37 enregistrements ayant cette forme :</p> \ud83d\udc0d Script Python<pre><code>{'nom': 'Salameche',   'defense': '43',  'vitesse': '65',  'type': 'Feu'}\n</code></pre> <p>Chaque enregistrement contient ce qu'on appellera pour la suite :</p> <ul> <li>deux descripteurs <code>'defense'</code> et <code>'vitesse'</code> qui donnent la     position du point,</li> <li>une unique \u00e9tiquette <code>'type'</code> qui donne la couleur du point.</li> </ul> <p>Les valeurs des descripteurs <code>'defense'</code>  et <code>'vitesse'</code> sont de type <code>str</code> dans l'enregistrement. IL faut donc les convertir en type <code>int</code> ou <code>float</code> pour placer le point dans un rep\u00e8re. En pratique les enregistrements sont extraits de fichiers textes , comme des fichiers CSV, et les descripteurs peuvent repr\u00e9senter des cat\u00e9gories ('m\u00e2le', 'femelle' ...) tout autant que des valeurs num\u00e9riques. On a donc choisi de garder toutes les valeurs en type <code>str</code> et de les convertir selon les besoins de traitement.</p> <p>Point de cours 1</p> <p>Le probl\u00e8me de classification auquel l'algorithme des k plus proches voisins tente d'apporter une r\u00e9ponse est le suivant (les trois formulations sont \u00e9quivalentes) :</p> <ul> <li>Un nouveau Pokemon a pour <code>'vitesse'</code> 58 et pour <code>'defense'</code>  65, quel est son type ?</li> <li>Un nouveau point a pour coordonn\u00e9es (58 ; 65). Quelle est sa couleur ?</li> <li>Un nouvel enregistrement a pour descripteurs <code>'vitesse' : 58</code> et <code>'defense' : 65</code>. Quelle est son \u00e9tiquette ?</li> </ul> <p>Sur le graphique, si on ne consid\u00e8re que le point vert le plus proche (en mesurant \u00e0 la r\u00e8gle), on peut attribuer l'\u00e9tiquette 'vert' (type Roche)  au nouveau point. Mais si on consid\u00e8re les trois voisins les plus proches , deux sur trois sont rouges et dans ce cas on attribue l'\u00e9tiquette 'rouge' (type Feu). On voit que le nombre de voisins \u00e0 consid\u00e9rer est important, de plus la distance doit \u00eatre d\u00e9finie pr\u00e9cis\u00e9ment. </p> <p>Le param\u00e9trage de l'algorithme peut \u00eatre  effectu\u00e9 par un humain mais son ex\u00e9cution par un ordinateur   permet  :</p> <ul> <li>d'automatiser la r\u00e9ponse,</li> <li>de r\u00e9pondre rapidement \u00e0 des milliers ou millions de questions du m\u00eame type,</li> <li>de g\u00e9n\u00e9raliser \u00e0 des cas avec plus de deux descripteurs</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/#algorithme-des-k-plus-proches-voisins","title":"Algorithme des k plus proches voisins","text":"<p>Activit\u00e9 2</p> <p>Regardez la petite video accessible depuis ce lien : algo_1_sur_2.gif</p> <p>Point de cours 2</p> <p>Les donn\u00e9es sur lesquelles on applique l'algorithme des k plus proches voisins sont :</p> <ul> <li>une table d'enregistrements (dictionnaires Python) d'objets dont on connait l'\u00e9tiquette / la classification, nommons la <code>table_pokemon</code>. On peut remplacer enregistrement par : point, donn\u00e9e ou Pokemon dans notre exemple.</li> <li>l'enregistrement   d'une nouvelle donn\u00e9e dont on cherche l'\u00e9tiquette / la classification, nommons le  <code>nouveau_pokemon</code></li> </ul> <p>Les param\u00e8tres de l'algorithme des k plus proches voisins sont :</p> <ul> <li>Un entier naturel <code>k</code>, g\u00e9n\u00e9ralement impair et compris entre 3 et 10, qui correspond au nombre de voisins les plus proches qui seront examin\u00e9s.</li> <li>Une fonction de distance pour mesurer la proximit\u00e9 entre la nouvelle donn\u00e9e et toutes les  donn\u00e9es d\u00e9j\u00e0 \u00e9tiquet\u00e9es de la table ce qui permettra de s\u00e9lectionner les <code>k</code> plus proches. Cette distance est mesur\u00e9e  \u00e0 partir des valeurs de certains descripteurs pr\u00e9sents dans les enregistrements, comme <code>'vitesse'</code> et <code>'defense'</code> dans l'exemple du cours.</li> </ul> <p>L'algorithme des k plus proches voisins se d\u00e9roule ainsi :</p> <ol> <li>Pour chaque enregistrement / pokemon dans <code>table_pokemon</code>  on calcule la distance entre cet enregistrement et celui de <code>nouveau_pokemon</code>. On stocke au fur et \u00e0 mesure les couples <code>(distance avec chaque  nouveau_pokemon, \u00e9tiquette de l'enregistrement / pokemon)</code> dans un tableau <code>tab_distance</code>.</li> <li>On trie le tableau  <code>tab_distance</code> (qui contient des <code>tuple</code> <code>(distance, \u00e9tiquette)</code>) dans l'ordre croissant selon le crit\u00e8re de distance.</li> <li>On extrait les <code>k</code> plus petits \u00e9l\u00e9ments de <code>tab_distance</code> qui correspondent aux <code>k</code> plus proches voisins de <code>nouveau_pokemon</code> dans un tableau <code>k_voisins</code>.</li> <li>On s\u00e9lectionne l'\u00e9tiquette majoritaire dans le tableau <code>k_voisins</code> et on l'attribue \u00e0 <code>nouveau_pokemon</code> parce que c'est le choix majoritaire parmi les <code>k</code> plus proches voisins.</li> </ol> <p>Exemple 1</p> <p>D\u00e9taillons les diff\u00e9rentes \u00e9tapes  de l'algorithme des k plus proches voisins  sur notre exemple de Pokemons.</p> <ul> <li>Initialisation : chargement et traitement du jeu de donn\u00e9es</li> </ul> <p>On charge le fichier CSV contenant le jeu de donn\u00e9es dans une table (un tableau d'enregistrements qui sont des dictionnaires).</p> \ud83d\udc0d Script Python<pre><code>In [1]: table_pokemons = charger_fichier_entete('./datas/pokemons.csv')\n\nIn [2]: table_pokemons[0]\nOut[2]: \n{'nom': 'Rattata', 'vie': '30',\n 'attaque': '56',  'defense': '35',\n 'vitesse': '72',  'type': 'Normal'}\n</code></pre> <p>On filtre la table pour extraire les Pokemons de type Feu et Roche. Une \u00e9tape de traitement des donn\u00e9es est souvent n\u00e9cessaire.</p> \ud83d\udc0d Script Python<pre><code>In [3]: table_pokemons_feu_roche = [pok for pok in table_pokemons \n   ...:                    if pok['type'] in ['Roche', 'Feu']]\n\nIn [4]: len(table_pokemons_feu_roche)\nOut[4]: 37\n</code></pre> <ul> <li>\u00c9tape 1 : calcul des distances </li> </ul> <p>On calcule les distances entre le nouveau Pokemon et tous les Pokemons de la table <code>table_pokemons_feu_roche</code>.</p> \ud83d\udc0d Script Python<pre><code>In [5]: nouveau_pokemon = {'vitesse':58, 'attaque' : 120 , 'defense' : 65, 'vie' : 100 }\n\nIn [6]: table_pokemons_feu_roche[0] #premier Pokemon de la table\nOut[6]: \n{'nom': 'Salameche', 'vie': '39',\n 'attaque': '52',  'defense': '43',\n 'vitesse': '65',  'type': 'Feu'}\n\nIn [7]: salameche = table_pokemons_feu_roche[0]\n\nIn [8]: distance_euclidienne(nouveau_pokemon, salameche, ['vitesse', 'defense'])\nOut[8]: 23.087\n\nIn [9]: tab_distance = table_distance_nouveau(table_pokemons_feu_roche, nouveau_pokemon, distance_euclidienne, 'type',                                      ['vitesse', 'defense'])\n\nIn [10]: tab_distance[:4]\nOut[10]: [(18.385, 'Feu'), (22.091, 'Feu'), (21.19, 'Feu'), (44.598, 'Feu')]\n</code></pre> <ul> <li>\u00c9tapes 2 et 3 : tri et s\u00e9lection des k plus proches voisins </li> </ul> <p>On fixe le param\u00e8tre <code>k</code>, on trie dans l'ordre croissant le tableau <code>tab_distance</code> suivant le crit\u00e8re de distance et on extrait les <code>k</code> plus proches voisins.</p> \ud83d\udc0d Script Python<pre><code>In [11]: k_voisins = trier_puis_extraire(tab_distance, 5)\n\nIn [12]: k_voisins\nOut[12]: ['Roche', 'Feu', 'Feu', 'Feu', 'Feu']\n</code></pre> <ul> <li>\u00c9tape  4 : s\u00e9lection de l'\u00e9tiquette majoritaire parmi les k plus proches voisins</li> </ul> \ud83d\udc0d Script Python<pre><code>In [19]: element_majoritaire(k_voisins)\nOut[19]: 'Feu'\n</code></pre> <p>On peut rassembler toutes les fonctions pr\u00e9c\u00e9dentes en une seule qui renvoie l'\u00e9tiquette majoritaire parmi les <code>k</code> plus proches voisins.    </p> \ud83d\udc0d Script Python<pre><code>def etiquetage_knn(table, nouveau, etiquette, tab_descripteur, k,\n                   distance = distance_euclidienne):    \n    tab_distance = table_distance_nouveau(table, nouveau, distance, etiquette, tab_descripteur)\n    k_voisins = trier_puis_extraire(tab_distance, k)\n    voisin_majoritaire = element_majoritaire(k_voisins)\n    return voisin_majoritaire\n</code></pre> <p>On peut v\u00e9rifier que cela donne le m\u00eame r\u00e9sultat. </p> \ud83d\udc0d Script Python<pre><code>In [20]: etiquetage_knn(table_pokemons_feu_roche, nouveau_pokemon, 'type', ['vitesse', 'defense'], 5)\nOut[20]: 'Feu'\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/#choix-des-parametres-et-limites-de-lalgorithme","title":"Choix des param\u00e8tres et limites de l'algorithme","text":""},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/#le-choix-de-la-distance","title":"Le choix de la distance","text":"<p>\\</p> <p>\\</p> <p>Graphique 2 : distances dans le plan</p> <p>Point de cours 3</p> <p>Consid\u00e9rons un nouveau Pokemon et un Pokemon d\u00e9j\u00e0 connu  dans une table :</p> \ud83d\udc0d Script Python<pre><code>In [3]: nouveau_pokemon\nOut[3]: {'vitesse': 58, 'attaque': 120, 'defense': 65, 'vie': 100}\n\nIn [4]: table_pokemons_feu_roche[1]\nOut[4]: \n{'nom': 'Reptincel', 'vie': '58',  'attaque': '64',  'defense': '58',  'vitesse': '80',\n 'type': 'Feu'}\n</code></pre> <ul> <li>Si on caract\u00e9rise chaque Pokemon par deux descripteurs <code>'vitesse'</code> et <code>'defense'</code>, on peut les repr\u00e9senter dans le plan par les points A de coordonn\u00e9es \\((58, 65)\\)  et B de coordonn\u00e9es \\((80, 58)\\). On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple :</li> <li>La distance euclidienne qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e : \\(AB=\\sqrt{(x_{B}-x_{A})^{2}+(y_{B}-y_{A})^{2}}=\\sqrt{(80-58)^{2}+(58-65)^{2}} \\approx 23,087\\)</li> <li> <p>La distance de Manhattan qui correspond \u00e0 la longueur du chemin parcouru pour aller de \\(A\\) \u00e0 \\(B\\) en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 du plan, comme dans le plan d'une ville o\u00f9 les rues se coupent \u00e0 angle droit :        \\(AB=\\vert x_{B}-x_{A} \\vert + \\vert y_{B}-y_{A} \\vert =\\vert 80 - 58 \\vert + \\vert 58 - 65 \\vert = 22 + 7 = 29\\)</p> </li> <li> <p>Si on caract\u00e9rise chaque Pokemon par trois descripteurs <code>'vitesse'</code>, <code>'defense'</code> et <code>'attaque'</code> on peut les repr\u00e9senter dans l'espace  par les points A de coordonn\u00e9es \\((58, 65, 120)\\)  et B de coordonn\u00e9es \\((80, 58, 64)\\). On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple en notant \\(z\\) la troisi\u00e8me coordonn\u00e9e :</p> </li> <li>La distance euclidienne qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e : \\(AB=\\sqrt{(x_{B}-x_{A})^{2}+(y_{B}-y_{A})^{2} + (z_{B}-z_{A})^{2}}=\\sqrt{(80-58)^{2}+ (58-65)^{2} +   (120 - 64)^{2}} \\approx 60,572\\)</li> <li> <p>La distance de Manhattan qui correspond \u00e0 la longueur du chemin parcouru pour aller de \\(A\\) \u00e0 \\(B\\) en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 de l'espace  :        \\(AB=\\vert x_{B}-x_{A} \\vert + \\vert y_{B}-y_{A} \\vert + \\vert z_{B}-z_{A} \\vert =\\vert 80 - 58 \\vert + \\vert 58 - 60 \\vert  + \\vert  120 - 64  \\vert = 22 + 7 + 56 = 85\\)</p> </li> <li> <p>On peut g\u00e9n\u00e9raliser les calculs de distances pr\u00e9c\u00e9dents \u00e0 4, 5 ou \\(n\\) descripteurs.</p> </li> </ul> <p>L'ensemble des k plus proches voisins d\u00e9pend du choix de la distance qui s'effectue en fonction du jeu de donn\u00e9es. </p> <p>De plus, il faut pr\u00eater attention aux diff\u00e9rences d'\u00e9chelles entre les descripteurs : un \u00e9cart de 50 n'a pas le m\u00eame sens sur  une <code>'vitesse'</code>   mesur\u00e9e sur une \u00e9chelle de 0 \u00e0 1000 et sur une <code>'defense'</code>  mesur\u00e9e sur une \u00e9chelle de 0 \u00e0 100. Il peut \u00eatre int\u00e9ressant, dans la phase de traitement des donn\u00e9es, de les normaliser en ramenant chaque valeur de descripteur dans l'intervalle [0;1] avec le rapport \\(\\frac{\\text{valeur}-\\text{valeurMin}}{\\text{valeurMax}-\\text{valeurMin}}\\).</p> <p>Voici une repr\u00e9sentation dans l'espace du jeu de donn\u00e9es des 37 Pokemons Roche et Feu avec trois descripteurs <code>'vitesse'</code>, <code>'defense'</code> et <code>'attaque'</code>. L'ajout d'un descripteur peut permettre d'am\u00e9liorer la classification en s\u00e9parant plus nettement les familles de points selon leur \u00e9tiquette.</p> <p>\\</p> <p>Graphique 3 : Pokemons Feu ou Roche avec trois descripteurs</p> <p>Exercice 1</p> <p>Dans le plan muni d'un rep\u00e8re orthonorm\u00e9 on a repr\u00e9sent\u00e9 cinq points d'un jeu de donn\u00e9es \u00e9tiquet\u00e9s :</p> <ul> <li>trois points d'\u00e9tiquette 'rond' : A, B et C</li> <li>deux points d'\u00e9tiquette 'croix' : E et F</li> </ul> <p>On  consid\u00e8re un nouveau point  D sans \u00e9tiquette.</p> <ol> <li>D\u00e9terminer les trois points les plus proches de D avec la distance euclidienne.</li> <li>D\u00e9terminer les trois points les plus proches de D avec la distance de Manhattan.</li> <li>Quelle est l'\u00e9tiquette de D si on applique l'algorithme des k plus proches voisins avec k = 3 et la distance euclidienne ? et avec k = 3 et la distance de Manhattan ?</li> </ol> <p>\\</p> <p>Exercice 2</p> <p>Les distances euclidienne ou de Manhattan s'appliquent \u00e0 des  descripteurs qui prennent des valeurs num\u00e9riques continues.</p> <p>La distance de Hammming s'applique \u00e0 des descripteurs qui sont  des s\u00e9quences de symboles comme des cha\u00eenes de caract\u00e8res ou des suites de bits 0 ou 1 et prend pour valeur le nombre de symboles diff\u00e9rents entre deux s\u00e9quences.</p> <p>Par exemple, on a  <code>distance_hamming('rat', 'raz') = 1</code> ,  <code>distance_hamming('rat', 'rater') = 2</code>,  <code>distance_hamming('101', '011') = 2</code> et <code>distance_hamming('1010', '101') = 1</code>.</p> <p>\u00c9crire en Python une fonction d'en-t\u00eate <code>distance_hamming(chaine1, chaine2)</code> qui renvoie la distance de Hamming entre deux cha\u00eenes de caract\u00e8res.</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/#le-choix-du-parametre-k","title":"Le choix du param\u00e8tre <code>k</code>","text":"<p>Activit\u00e9 3</p> <p>Regardez la petite video accessible depuis ce lien : algo_2_sur_2.gif</p> <p>Point de cours 4</p> <p>On reprend l'exemple initial du jeu de donn\u00e9es de 37 Pokemons Roche et Feu caract\u00e9ris\u00e9s par les deux descripteurs <code>'vitesse'</code> et  <code>'defense'</code> et d'un nouveau Pokemon de <code>'vitesse' : 58</code> et <code>'defense' : 65</code> repr\u00e9sent\u00e9s sur le graphique 1.</p> <p>On donne ci-dessous  les \u00e9tiquettes attribu\u00e9s par  l'algorithme des k plus proches voisins avec k variant entre 1 et 9.</p> <p>On observe la sensibilit\u00e9 aux perturbations locales pour les petites valeurs de k : les des deux points  les plus proches sont verts, de type Roche , mais les points dans un voisinage plus large sont majoritairement rouges, de type Feu.  </p> <p>D'un autre c\u00f4t\u00e9, une valeur de k trop grande prend en compte des points \u00e9loign\u00e9s et la classe majoritaire globalement finit par s'imposer.</p> <p>En g\u00e9n\u00e9ral, on choisit une valeur de k entre 3 et 10 et plut\u00f4t un entier impair (pourquoi d'apr\u00e8s vous ?)</p> \ud83d\udc0d Script Python<pre><code>In [30]: nouveau_pokemon = {'vitesse':58, 'attaque' : 120 , 'defense' : 65, 'vie' : 100 }\n    ...: for k in range(1, 11):\n    ...:     print(f\"k = {k}, etiquette = {etiquetage_knn(table_pokemons_feu_roche, nouveau_pokemon, 'type', ['vitesse', 'defense'], k)}\")\n    ...:     \nk = 1, etiquette = Roche\nk = 2, etiquette = Roche\nk = 3, etiquette = Feu\nk = 4, etiquette = Feu\nk = 5, etiquette = Feu\nk = 6, etiquette = Feu\nk = 7, etiquette = Feu\nk = 8, etiquette = Feu\nk = 9, etiquette = Feu\nk = 10, etiquette = Feu\n</code></pre>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/#les-limites-de-lalgorithme","title":"Les limites de l'algorithme","text":"<p>Point de cours 5</p> <p>L'algorithme des k plus proches voisins permet de r\u00e9pondre \u00e0 un probl\u00e8me de classification pour tout type de donn\u00e9es mais il faut \u00eatre conscient de ses limites :</p> <ul> <li>il faut calculer les distances entre une nouvelle donn\u00e9e et toutes celles du jeu de donn\u00e9es ce qui implique une complexit\u00e9 au moins lin\u00e9aire en temps, ce qui n'est pas tol\u00e9rable pour des jeux de donn\u00e9es de grande taille ou des applications en temps r\u00e9el</li> <li>la qualit\u00e9 de la pr\u00e9diction repose sur l'hypoth\u00e8se que les donn\u00e9es proches pour la distance choisie sont similaires \u00e0 la nouvelle donn\u00e9e</li> <li>la qualit\u00e9 du jeu de donn\u00e9es est cruciale comme pour tout algorithme de classification.</li> </ul>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/#histoire-de-lintelligence-artificielle-et-des-algorithmes-dapprentissage","title":"Histoire de l'intelligence artificielle et des algorithmes d'apprentissage","text":"<p>Point de cours 6</p> <p>L'algorithme des k plus proches voisins est un exemple simple d'algorithme de classification par apprentissage (machine learning): il exploite un jeu de donn\u00e9es connu pour apporter une information, plausible mais pas forc\u00e9ment exacte sur une nouvelle donn\u00e9e. </p> <p>Cette famille d'algorithmes est rattach\u00e9e \u00e0 la branche de l'informatique d\u00e9nomm\u00e9e intelligence artificielle qui peut \u00eatre d\u00e9finie comme la conception des agents rationnels, autonomes et adaptatifs pour r\u00e9soudre des probl\u00e8mes \u00ab comme ou mieux \u00bb que ne le ferait un \u00eatre humain.</p> <p>L'intelligence artificielle  est apparue d\u00e8s les d\u00e9buts de l'informatique dans les ann\u00e9es 1950, le mythe d'une cr\u00e9ature artificielle intelligente \u00e9tant un classique de la litt\u00e9rature (Golem, Frankenstein ...). Apr\u00e8s avoir connu, un hiver pendant les ann\u00e9es 1980-1990, un renouveau important a lieu depuis les ann\u00e9es 2000. Le d\u00e9veloppement d'id\u00e9es anciennes comme les r\u00e9seaux de neurones a \u00e9t\u00e9 favoris\u00e9 par une acc\u00e9l\u00e9ration des performances mat\u00e9rielles (GPU) et des volumes de donn\u00e9es disponibles (essor du web). Les r\u00e9seaux de neurones profonds  (deep learning) rendent possibles des applications proches de certaines aptitudes consid\u00e9r\u00e9es auparavant comme caract\u00e9ristiques de l'humain: reconnaissance d'image, du langage, prise de d\u00e9cision ...</p> <p>Exercice 3</p> <p>Compl\u00e9ter la frise ci-dessous avec ces \u00e9v\u00e9nements marquants de l'histoire de l'intelligence artificielle  qui sont donn\u00e9s dans le d\u00e9sordre :</p> <ul> <li>test de Turing </li> <li>victoire d'Alpha-Go sur le meilleur joueur humain de jeu de Go</li> <li>premier neurone artificiel imagin\u00e9 par Mc Culloch et Pitts</li> <li>victoire de Watson (IBM) sur les meilleurs joueurs humains au jeu Jeopardy</li> <li>victoire de Deep Blue (IBM) sur le champion du monde d'\u00e9chec Gary Kasparov</li> <li>invention du perceptron par Frank Rosenblatt</li> <li>conf\u00e9rence de Darmouth</li> <li>prix Turing d\u00e9cern\u00e9 \u00e0 Yann Le Cun pour ses travaux sur le Deep Learning</li> </ul> <p>\\ Graphique 4 : histoire de l'intelligence artificielle</p>"},{"location":"T07_Algorithmes/T7_5_kppv/chapitre22/backup/knn-cours-git/#synthese","title":"Synth\u00e8se","text":"<p>Synth\u00e8se </p> <p>L'algorithme des k plus proches voisins a pour but de  classifier une nouvelle donn\u00e9e en lui attribuant une \u00e9tiquette \u00e0 partir des \u00e9tiquettes  d\u00e9j\u00e0 connues d'un jeu de donn\u00e9es similaires.</p> <p>L'algorithme n'apporte pas une r\u00e9ponse exacte mais une pr\u00e9diction dont la qualit\u00e9 d\u00e9pend du jeu de donn\u00e9es, de la distance utilis\u00e9e pour mesurer  la similarit\u00e9 entre deux donn\u00e9es et du nombre k de voisins les plus proches parmi lesquels l'\u00e9tiquette  majoritaire sera choisie.</p> <p>La derni\u00e8re d\u00e9cennie a connu un essor spectaculaire d'algorithmes de classification par apprentissage bien plus performants et perfectionn\u00e9s qui s'appuient sur des jeux de donn\u00e9es gigantesques et apportent des r\u00e9ponses \u00e0 des questions comme :</p> <ul> <li>Quelle est la classe de cet objet sur cette photo ? une voiture ? une moto ? une poussette ?</li> <li>Quel est, au vu de ses donn\u00e9es m\u00e9dicales, le diagnostic que l'on peut faire sur ce patient ? malade ou pas ?</li> <li>Quel est, au vu de sa  consommation pr\u00e9c\u00e9dente, le profil de ce consommateur de streaming video ? quelles s\u00e9ries peut-on lui sugg\u00e9rer  ?</li> <li>Quel est, au vu de son dossier administratif, le profil de ce contribuable ? fraudeur ou pas ?</li> </ul>"},{"location":"T08_Extras/accueil/","title":"Extras","text":"<p>Vous trouverez ici 4 espaces:</p> Exercices suppl\u00e9mentairesProjetsPygameDivers <p>Pour s'exercer et progresser en programmation.</p> <p> </p> <p>Des projets plus ou moins guid\u00e9s.</p> <p> </p> <p></p> <p>Pygame est un package de Python facilitant la cr\u00e9ation de jeux bas\u00e9s une interface graphique.</p> <p>Cette section traite de points qui ne sont pas au programme mais qui peuvent vous simplifier la vie.</p> <p> </p>"},{"location":"T08_Extras/1Exercices/Exercices/","title":"Exercices suppl\u00e9mentaires","text":"<p>La majorit\u00e9 des exercices propos\u00e9s sont issus du site https://pydefis.callicode.fr qui recense tous les d\u00e9fis des diff\u00e9rentes \u00e9ditions du concours <code>c0d1ng UP</code>.</p> <p>Vous pouvez vous y cr\u00e9er un compte, pour valider les d\u00e9fis et progresser au Hall of Fame... mais ce n'est absolument pas oblig\u00e9.</p>"},{"location":"T08_Extras/1Exercices/Exercices/#desamorcage-dun-explosif-i","title":"D\u00e9samor\u00e7age d'un explosif (I)","text":"<p>Lien Capytale : 0ee2-74101</p> <p>Le d\u00e9coupage de nombres selon un certain nombre de chiffres est quelque chose de courant en programmation.</p> <p>Pour cela, l'astuce r\u00e9side en l'utilisation de la division euclidienne, par la bonne puissance de 10.</p> <p>Par exemple, si on veut r\u00e9cup\u00e9rer le chiffre des unit\u00e9s d'un nombre, il suffit de prendre le reste de la division euclidienne (op\u00e9rateur <code>%</code> en Python) du nombre par 10. Les autres chiffres seront donn\u00e9s par le quotient (op\u00e9rateur <code>//</code> en Python).</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; 3748 % 10\n8\n&gt;&gt;&gt; 3748 // 10\n374\n</code></pre> <p>Pour les deux derniers chiffres, on effectuera une division euclidienne par 100, pour les trois derniers par 1000, etc.</p> Correction \ud83d\udc0d Script Python<pre><code>entree = 797114\nU = entree // 1000\nN = entree % 1000\nfor k in range(N):\n    U = (U*13) % 1000\nprint(U)\n</code></pre>"},{"location":"T08_Extras/1Exercices/Exercices/#sw-iv-il-a-mis-son-mot-de-passe-sur-un-post-it","title":"SW IV : Il a mis son mot de passe sur un post-it !","text":"<p>Lien Capytale : 4f1a-74191</p> <p>Encore la division euclidienne...</p> Correction \ud83d\udc0d Script Python<pre><code>x = 1694\ny = 1546\nfor k in range(50):\n    z = x  # il est imp\u00e9ratif de mettre x en tampon pour faire le 2e calcul avec la bonne valeur de x\n    x = (z + 2*y) % 2018\n    y = (-3*z + y) % 2018\n\ndeclinaison = (x - 900) / 10\nascension_droite = (y / 150) * 2\n\nprint(declinaison, ascension_droite)\n</code></pre>"},{"location":"T08_Extras/1Exercices/Exercices/#toc-boum","title":"Toc Boum","text":"<p>Lien Capytale : 69bf-74184</p> <p>Utiliser la \u00abbrute-force\u00bb !</p> Correction Version basiqueVersion \u00e9volu\u00e9e <p>O\u00f9 l'on affiche tous les couples possibles, et on trouve le bon en les passant en revue \u00ab\u00e0 la main\u00bb.</p> <p>On va m\u00e9moriser le meilleur couple, c'est-\u00e0-dire celui dont la diff\u00e9rence est la plus petite. J'appelle <code>best_a</code> et <code>best_b</code> ces deux valeurs, que j'initialise \u00e0 des valeurs volontairement \u00e9loign\u00e9es.</p> <p>Puis \u00e0 chaque couple trouv\u00e9 (comme dans la version basique), je compare la diff\u00e9rence des deux nombres \u00e0 celle des meilleurs. Si elle est plus petite, je remplace par les nouvelles valeurs de <code>a</code> et de <code>b</code></p> <p>Pour faire la diff\u00e9rence entre deux valeurs, peu importe le signe: on utilisera la valeur absolue, <code>abs</code> en Python.</p>"},{"location":"T08_Extras/1Exercices/Exercices/#le-message-pour-queulorior","title":"Le message pour Queulorior","text":"<p>Lien Capytale : 2549-94446</p> <p>En utilisant Processing.</p> <p>Ou bien le module <code>turtle</code>.</p>"},{"location":"T08_Extras/1Exercices/Exercices/#cerbere","title":"Cerb\u00e8re","text":"<p>Lien Capytale : 0d75-95569</p> <p>Brute-forcez: tester toutes les longueurs enti\u00e8res possibles...</p>"},{"location":"T08_Extras/1Exercices/Exercices/#sw-i-a-lassaut-de-gunray","title":"SW I: \u00e0 l'assaut de Gunray","text":"<p>Lien Capytale : a5b7-101013 </p> <p>Utilisez des accumulateurs.</p> Correction \ud83d\udc0d Script Python<pre><code>epaisseur_totale = 0\nvolume = 0\ntemps = 0\nmoitie = 0\nwhile epaisseur_totale &lt; 70:\n    epaisseur = 3 - 0.005*volume\n    volume += 8*epaisseur\n    epaisseur_totale += epaisseur\n    temps += 1\n    if epaisseur_totale &gt; 35 and moitie == 0:\n        moitie = temps\nprint(moitie, temps)\n</code></pre>"},{"location":"T08_Extras/2Projets/Convertisseur/Convertisseur/","title":"Convertisseur binaire / d\u00e9cimal","text":"<p>Objectif</p> <p>L'objectif de ce projet est de programmer un convertisseur d'\u00e9critures:</p> <ul> <li>d'un nombre d\u00e9cimal en binaire;</li> <li>d'un nombre binaire en d\u00e9cimal.</li> </ul> <p>On n'utilisera bien entendu pas les fonctions natives de Python pour effectuer ces conversions.</p> <p>Il faudra \u00e9crire des fonctions qui effectuent ces conversions.</p> D\u00e9cimal \u2192 BinaireBinaire \u2192 D\u00e9cimal <ul> <li>la fonction prendra en param\u00e8tre un nombre entier (type <code>int</code>);</li> <li>la fonction renverra sa conversion en binaire sous forme d'une cha\u00eene de caract\u00e8res (type <code>str</code>).</li> </ul> <p>Pour cela:</p> <ul> <li>utiliser l'algorithme des divisions successives;</li> <li>stocker les restes dans une cha\u00eene de caract\u00e8res (attention \u00e0 l'ordre)</li> </ul> <ul> <li>la fonction prendra en entr\u00e9e un nombre binaire sous forme d'une cha\u00eene de caract\u00e8res (type <code>str</code>);</li> <li>la fonction renverra sa conversion en d\u00e9cimal sous forme d'un nombre entier (type <code>int</code>).</li> </ul> <p>Pour cela:</p> <ul> <li>parcourir les caract\u00e8res du nombre binaire;</li> <li>incr\u00e9menter de la bonne puissance de deux un <code>int</code> selon les valeurs des caract\u00e8res (convertis en <code>int</code>).</li> </ul> <p>Ouverture</p> <p>R\u00e9aliser de m\u00eame un convertisseur hexad\u00e9cimal / d\u00e9cimal.</p> <p>Proposition de correction</p> D\u00e9cimal \u2192 BinaireBinaire \u2192 D\u00e9cimal \ud83d\udc0d Script Python<pre><code>def decimal_vers_binaire(n: int) -&gt; str:\n'''\n    Renvoie la conversion de l'entier n en mot binaire,\n    en utilisant l'algorithme des divisions successives.\n    - pr\u00e9condition: n doit \u00eatre un entier positif.\n    '''\n    assert n &gt;= 0\n    mot = ''\n    while n != 0:\n        mot = str(n%2) + mot\n        n = n // 2\n    return mot \n</code></pre> \ud83d\udc0d Script Python<pre><code>def binaire_vers_decimal(b: str) -&gt; int:\n'''\n    Renvoie l'\u00e9criture d\u00e9cimale d'un nombre donn\u00e9 par son mot binaire,\n    en utilisant la d\u00e9finition de la base 2.\n    '''\n    exposant = len(b) - 1 \n    decimal = 0\n    for bit in b:\n        decimal = decimal + int(bit)*2**exposant\n        exposant -= 1\n    return decimal\n</code></pre>"},{"location":"T08_Extras/2Projets/Crypto1/Cryptographie_I/","title":"FKLIIUH#GH#FHVDU","text":"<p>Objectif</p> <p>L'objectif de ce projet est de d\u00e9crypter la phrase suivante:</p> <p><code>PRZRFFNTRARPBAGVRAGEVRAQVAGRERFFNAGZNVFVYRFGFHSSVFNZZRAGYBATCBHEARCNFYRQRPELCGRENYNZNVA</code></p> <p>Le principe est simple: chaque lettre de la phrase d'origine (le message clair) a \u00e9t\u00e9 d\u00e9cal\u00e9 d'un certain nombre de rangs dans l'alphabet, toujours le m\u00eame. Ce nombre est la cl\u00e9 de chiffrement.</p> <p>Comme il n'y a que 25 d\u00e9calages possibles, il vous faudra tous les tester un par un (m\u00e9thode par bruteforce) pour r\u00e9ussir le d\u00e9chiffrement.</p> <p>Pr\u00e9-requis</p> <p>En cryptographie, les m\u00e9thodes sont tr\u00e8s souvent num\u00e9riques. Plut\u00f4t que de manipuler les caract\u00e8res eux-m\u00eames, on pr\u00e9f\u00e8re manipuler leurs repr\u00e9sentations dans un encodage (on \u00e9tudiera cette question un peu plus tard dans l'ann\u00e9e).</p> <p>Avec Python, on peut r\u00e9cup\u00e9rer le code Unicode d'un caract\u00e8re avec la fonction <code>ord</code>:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; ord('A')\n65\n</code></pre> <p>et le caract\u00e8re correspondant \u00e0 un code Unicode avec la fonction <code>chr</code>:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; chr(65)\n'A'\n</code></pre> <p>Pour vous guider</p> 123 <p>D\u00e9finissez une fonction <code>decale(lettre)</code> qui d\u00e9cale de 3 rangs dans l'alphabet la lettre majuscule <code>lettre</code> pass\u00e9e en argument (apr\u00e8s Z, on recommencera \u00e0 A...)</p> <p>Rajoutez un param\u00e8tre <code>n</code> \u00e0 la fonction pr\u00e9c\u00e9dente pour pouvoir d\u00e9caler la lettre de <code>n</code> rangs.</p> <p>Utilisez la fonction pr\u00e9c\u00e9dente pour cr\u00e9er la fonction <code>decale_phrase(p, n)</code> qui d\u00e9cale toutes les lettres d'une phrase <code>p</code> de <code>n</code> rangs.</p> <p>Ouverture</p> <p>\u00c9crire une fonction qui crypte une chaine de caract\u00e8res avec au choix:</p> <ul> <li>le chiffre de Vigen\u00e8re;</li> <li>la m\u00e9thode du masque jetable;</li> </ul> <p>Proposition de correction</p> <p>1. \ud83d\udc0d Script Python<pre><code>def decale_lettre(lettre: str) -&gt; str:\n'''\n    Renvoie la lettre situ\u00e9e 3 places plus loin dans l'alphabet, \n    en revenant \u00e9ventuellement au d\u00e9but.\n    '''\n    rang = ord(lettre) + 3\n    if rang &gt; ord('A') + 25:\n        rang = rang - 26\n    return chr(rang)\n</code></pre></p> <p>2. \ud83d\udc0d Script Python<pre><code>def decale_lettre(lettre: str, n: int) -&gt; str:\n'''\n    Renvoie la lettre situ\u00e9e n places plus loin dans l'alphabet, \n    en revenant \u00e9ventuellement au d\u00e9but.\n    '''\n    rang = ord(lettre) + n\n    if rang &gt; ord('A') + 25:\n        rang = rang - 26\n    return chr(rang)\n</code></pre></p> <p>3. \ud83d\udc0d Script Python<pre><code>def decale_phrase(p: str, n: int) -&gt; str:\n'''\n    Renvoie la chaine des caract\u00e8res de p tous d\u00e9cal\u00e9s de n places\n    '''\n    phrase_decalee = ''\n    for lettre in p:\n        phrase_decalee += decale_lettre(lettre, n)\n    return phrase_decalee\n</code></pre></p>"},{"location":"T08_Extras/2Projets/Image/Image/","title":"Image num\u00e9rique","text":""},{"location":"T08_Extras/2Projets/Image/Image/#1-tableau-de-pixels","title":"1. Tableau de pixels","text":"<p>Les caract\u00e9ristiques d'une image</p> QuadrillageD\u00e9finitionR\u00e9solution <p>Une image num\u00e9rique se pr\u00e9sente sous la forme d\u2019un quadrillage - ou d'un tableau - dont chaque case est un pixel d\u2019une couleur donn\u00e9e. On peut donc rep\u00e9rer chaque pixel par sa ligne et sa colonne dans ce tableau (ou \u00e0 l'aide de coordonn\u00e9es en partant du coin en haut \u00e0 gauche1).</p> <p> </p> <p>La d\u00e9finition de l\u2019image est le nombre total de pixels qui la composent. Celle-ci n\u2019est pas forc\u00e9ment \u00e9gale \u00e0 la d\u00e9finition du capteur.</p> <p>On l'obtient donc en multipliant sa largeur par sa hauteur. Par exemple, une image de 1920 pixels de largeur sur 1080 pixels de hauteur a une d\u00e9finition de 1920 x 1080 = 2073600 pixels soit \u00e0 peu pr\u00e8s 2 millions de pixels.</p> <p>La  r\u00e9solution  de  l\u2019image, c\u2019est-\u00e0-dire le  nombre  de  pixels  par  unit\u00e9 de  longueur,  d\u00e9termine  sa  qualit\u00e9  \u00e0 l\u2019impression ou sur un \u00e9cran.</p> <p>Par exemple, la r\u00e9solution standard pour affichage sur le web est de 72 ppp (pixels par pouce) alors qu'une r\u00e9solution de 300 ppp est recommand\u00e9e pour l'impression.</p> <p>Le codage des pixels (couleurs)</p> <p>Chaque pixel correspond \u00e0 un triplet de trois nombres entiers, soit les valeurs de rouge (Red), de vert (Green) et de bleu (Blue) afin de reconstituer la couleur. Chaque valeur est cod\u00e9e sur un octet, soit entre 0 et 255 (ou en pourcentages, ou en hexad\u00e9cimal, voir ici). On parle de code RGB (RVB in french).</p> <p> </p> <p>\u00c0 noter:</p> <ul> <li>une couleur dont les 3 composantes sont identiques correspond \u00e0 un niveau de gris;</li> <li>selon les formats, une quatri\u00e8me composante peut s'ajouter: le canal alpha. Cette valeur (sur un octet \u00e9galement) indique le niveau de transparence du pixel.</li> </ul> <p>Site incontournable</p> <p>Un site pour visualiser les couleurs au formet RGB, et convertir en h\u00e9xad\u00e9cimal : http://www.proftnj.com/RGB3.htm </p>"},{"location":"T08_Extras/2Projets/Image/Image/#2-les-modules","title":"2. Les modules","text":"<p>Pour manipuler les images, nous allons avoir besoin du module <code>imageio</code>. Ce module n\u00e9cessite d'utiliser \u00e9galement le module <code>numpy</code> pour cr\u00e9er des tableaux d'entiers non sign\u00e9s sur 8 bits (un octet).</p> <p> </p> <p><code>imageio</code></p> <ul> <li>Ouvrir et charger une image existante (<code>ada.png</code> par exemple)  dans une variable (<code>img</code> par exemple):</li> </ul> \ud83d\udc0d Script Python<pre><code>img = imageio.imread(\"ada.png\")\n</code></pre> <p>Acc\u00e8s \u00e0 l'image</p> <p>L'image doit \u00eatre dans le dossier courant de travail, a fortiori le m\u00eame que le fichier <code>.py</code>. Si ce n'est pas le cas, il faudra le modifier.</p> <ul> <li>La taille de l'image est accessible dans le triplet (hauteur, largeur, nombre de composantes) donn\u00e9 par:</li> </ul> \ud83d\udc0d Script Python<pre><code>img.shape\n</code></pre> <ul> <li>Lire/modifier un pixel: il s'agit tout simplement de travailler sur le tableau, par indices et par r\u00e9affectation.</li> </ul> \ud83d\udc0d Script Python<pre><code>print(img[2][10])       # pour afficher le pixel ligne 2, colonne 10\nimg[2][10] = [0, 0, 0]  # pour le mettre en noir\n</code></pre> <ul> <li>Sauvegarder une image contenue dans une variable <code>img</code>:</li> </ul> \ud83d\udc0d Script Python<pre><code>imageio.imsave(\"monimage.png\", img)\n</code></pre> <p><code>numpy</code></p> <p>Le module <code>numpy</code> est un module de calcul scientifique orient\u00e9 vers les matrices, qui sont des objets math\u00e9matiques bien pratiques... En gros ce sont des tableaux. On se servira uniquement de ce module pour cr\u00e9er des tableaux vides, au format que le module <code>imageio</code> exige pour pouvoir ensuite sauvegarder l'image (et donc la visualiser).</p> <p>On utilise la fonction <code>zeros</code> du module <code>numpy</code> qui prend en param\u00e8tres un triplet (hauteur, largeur, nombre de composantes) et le type des valeurs, ici donc des entiers non sign\u00e9s sur 8 bits.</p> <p>Par exemple pour une image de 100 pixels (de haut) sur 256 pixels (de large), avec 3 composantes (pas de canal alpha):</p> \ud83d\udc0d Script Python<pre><code>img_vide = numpy.zeros([100,256,3], dtype=np.uint8)\n</code></pre>"},{"location":"T08_Extras/2Projets/Image/Image/#3-exercices","title":"3. Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Solution <ol> <li>T\u00e9l\u00e9charger l'image <code>ada.png</code> ci-dessus (simple clic-gauche), puis la charger dans un programme avec le module <code>imageio</code>.</li> <li>Trouver ses dimensions et son nombre de composantes.</li> <li>Faire un crime de l\u00e8se-majest\u00e9 et tracer une ligne horizontale rouge au nivau du front.</li> </ol> \ud83d\udc0d Script Python<pre><code>import imageio\n\n# on charge l'image dans une variable img\nimg = imageio.imread('ada.png')\n\n# on affiche les dimensions et le nombre de composatnes contenues dans le tuple img.shape\nprint('Hauteur:', img.shape[0], 'Largeur:', img.shape[1], 'Nombre de composantes:', img.shape[2])\n\n# on parcourt la ligne 100 et on remplace tous les pixels par du rouge\nfor j in range(img.shape[1]):\n    img[100][j] = (255, 0, 0, 255)\n\n# on enregistre l'image modifi\u00e9e\nimageio.imsave('ada_modifie.png', img)        \n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Solution <p>Cette image est-elle vraiment compos\u00e9e de pixels tous noirs?</p> <p></p> <ul> <li>on parcourt tous les pixels de l'image avec deux boucles <code>for</code> imbriqu\u00e9es: <code>i</code> sur la hauteur (les lignes) et <code>j</code> sur la largeur (les colonnes);</li> <li>on regarde si le pixel <code>img[i][j]</code> est noir, c'est-\u00e0-dire que ses 3 composantes sont \u00e9gales \u00e0 0;</li> <li>si c'est le cas, on le remplace par un pixel blanc;</li> <li>sinon on ne fait rien: le pixel restera sur une teinte proche du noir.</li> </ul> \ud83d\udc0d Script Python<pre><code>import imageio\nimg = imageio.imread('message.png')\n\nfor i in range(img.shape[0]):\n    for j in range(img.shape[1]):\n        if img[i][j][0] == 0 and img[i][j][1] == 0 and img[i][j][2] == 0:\n            img[i][j] = (255, 255, 255)\n\nimageio.imsave('message_decrypte.png', img)\n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Solution <p>Incruster John Travolta devant le lyc\u00e9e</p> <p> </p> <p> </p> <ul> <li>on charge les deux images dans deux variables;</li> <li>on parcourt l'image sur fond vert, et si le pixel est vert, on le remplace par le pixel (aux m\u00eames coordonn\u00e9es) de l'autre image.</li> <li>on peut bien entendu faire le contraire...</li> </ul> <p>\ud83d\udc0d Script Python<pre><code>import imageio\nimg_john = imageio.imread('john.bmp')\nimg_lycee = imageio.imread('lycmdv_crop.jpg')\n\nfor i in range(img_john.shape[0]):\n    for j in range(img_john.shape[1]):\n        if img_john[i][j][0] == 0 and img_john[i][j][1] == 255 and img_john[i][j][2] == 0:\n            img_john[i][j] = img_lycee[i][j]\n\nimageio.imsave('john_devant_lycee.bmp', img_john)\n</code></pre> On obtient:</p> <p> </p>"},{"location":"T08_Extras/2Projets/Image/Image/#4-creation-deffets","title":"4. Cr\u00e9ation d'effets","text":"<p>Dans cette derni\u00e8re partie, on va recr\u00e9er des effets que des logiciels de retouche d'image (GIMP, Photoshop, ...) proposent.</p> <p>On travaillera (par exemple) sur l'image ci-dessous:</p> <p> </p> <p>Effets</p> Filtre rougeN\u00e9gatifNiveaux de grisFlipPhotomatonPop-artPixellisationFloutage <p>Pour cr\u00e9er un filtre rouge il suffit de conserver la composante rouge et de remplacer les autres composantes par 0.</p> <p>Si vous n'aimez pas le rouge, faites un filtre vert. Ou bleu.</p> <p> </p> Correction \ud83d\udc0d Script Python<pre><code>import imageio\nimg = imageio.imread('VanGogh_Arles.png')\n\nfor i in range(img.shape[0]):\n    for j in range(img.shape[1]):\n        r = img[i][j][0]\n        img[i][j] = (r, 0, 0)\n\nimageio.imsave('img_filtre.png', img)\n</code></pre> <p>Pour obtenir le n\u00e9gatif d'une image, il faut remplacer chaque composante RGB par son compl\u00e9mentaire \u00e0 255.</p> <p>Par exemple, si une composante vaut 42, il faut la remplacer par 213 (= 255 - 42).</p> <p> </p> Correction \ud83d\udc0d Script Python<pre><code>import imageio\nimg = imageio.imread('VanGogh_Arles.png')\n\nfor i in range(img.shape[0]):\n    for j in range(img.shape[1]):\n        r = 255 - img[i][j][0]\n        g = 255 - img[i][j][1]\n        b = 255 - img[i][j][2]\n        img[i][j] = (r, g, b)\n\nimageio.imsave('img_negatif.png', img)\n</code></pre> <p>Dans sa norme 709, la Commission Internationale de l\u2019\u00c9clairage propose de remplacer les 3 composantes d'un pixel (r, g, b) par la valeur suivante :</p> <p>\\(m = 0.2126 \\times r + 0.7152 \\times g + 0.0722 \\times b\\)</p> <p> </p> Correction \ud83d\udc0d Script Python<pre><code>import imageio\nimg = imageio.imread('VanGogh_Arles.png')\n\nfor i in range(img.shape[0]):\n    for j in range(img.shape[1]):\n        r = img[i][j][0]\n        g = img[i][j][1]\n        b = img[i][j][2]\n        m = int(0.2126*r + 0.7152*g + 0.0722*b)\n        img[i][j] = (m, m, m)\n\nimageio.imsave('img_gris.png', img)\n</code></pre> <p>On retourne l'image horizontalement.</p> <p> </p> Correction \ud83d\udc0d Script Python<pre><code>import imageio\nimg = imageio.imread('VanGogh_Arles.png')\n\n# on doit commencer par faire une copie de l'image\nimg_miroir = img.copy()\n\nfor i in range(img.shape[0]):\n    for j in range(img.shape[1]):\n        img_miroir[i,img.shape[1]-j-1] = img[i,j]\n\nimageio.imsave('img_miroir.png', img_miroir)\n</code></pre> <p>C'est une transformation r\u00e9versible, puisqu'on envoie un pixel sur quatre dans chaque carr\u00e9...</p> <p> </p> Correction <p>L'id\u00e9e est d'\u00abenvoyer\u00bb chaque pixel dans l'un des 4 carr\u00e9s, en consid\u00e9rant la parit\u00e9 des indices de ligne <code>i</code> et de colonnes <code>j</code>:</p> <ul> <li>les pixels sur une ligne paire sur les carr\u00e9s du haut;</li> <li>les pixels sur une ligne impaire sur les carr\u00e9s du bas;</li> <li>les pixels sur une colonne paire sur les carr\u00e9s de gauche;</li> <li>les pixels sur une colonne impaire sur les carr\u00e9s de droite;</li> </ul> \ud83d\udc0d Script Python<pre><code>import imageio\nimg = imageio.imread('VanGogh_Arles.png')\n\nimg_photomaton = img.copy()\n\nfor i in range(img.shape[0]):\n    for j in range(img.shape[1]):\n        img_photomaton[i//2 + 128*(i%2)][j//2 + 128*(j%2)] = img[i][j]\n\nimageio.imsave('img_photomaton.png', img_photomaton)\n</code></pre> <p>Le principe est, pour chaque pixel, d'appuyer sur la composante majoritaire: on r\u00e9cup\u00e8re la composante maximale et on l'augmente d'une certaine valeur (par exemple 50 sur l'image ci-dessous) sans d\u00e9passer 255 bien entendu.</p> <p> </p> Correction <p>Avec une fonction...</p> \ud83d\udc0d Script Python<pre><code>import imageio\nimg = imageio.imread('VanGogh_Arles.png')\n\ndef popart(pix: list, val: int) -&gt; list:\n'''\n    renvoie la liste des composantes de pix, en ayant augment\u00e9 la valeur maximale\n    de la valeur val, sans d\u00e9passer 255 bien \u00e9videmment\n    '''\n    m = max(pix)\n    t = []\n    for composante in pix:\n        if composante == m:\n            t.append(min(255, composante+val))\n        else:\n            t.append(composante)\n    return t\n\nfor i in range(img.shape[0]):\n    for j in range(img.shape[1]):\n        img[i][j] = popart(img[i][j], 50)\n\nimageio.imsave('img_popart.png', img)\n</code></pre> <p>Je vous laisse deviner...</p> <p> </p> Correction <p>Le principe est de d\u00e9cider tout d'abord d'une taille de \u00abcarr\u00e9s\u00bb qui vont composer l'image pixellis\u00e9e. Bien entendu, cette taille doit \u00eatre un diviseur commun de la hauteur et de la largeur de l'image. Ici comme l'image fait 256x256, on peut choisir n'importe quelle puissance de 2. Par exemple, prenons 8 pixels. Il y aura donc 256//8 = 32 carr\u00e9s en hauteur et en largeur.</p> <p>Ensuite on va d\u00e9finir la couleur \u00abmoyenne\u00bb qu'on va mettre dans chaque carr\u00e9: on fait la moyenne des composantes dans le carr\u00e9 (moyenne des rouges, moyenne des verts et moyenne des bleus).</p> <p>On affecte enfin cette couleur \u00e0 chaque pixel du carr\u00e9.</p> \ud83d\udc0d Script Python<pre><code>import imageio\nimg = imageio.imread('VanGogh_Arles.png')\n\ncote = 8\n\ndef couleur_moyenne(ligne, colonne):\n    moy = 3 * [0]\n    for i in range(cote):\n        for j in range(cote):\n            for k in range(3):\n                moy[k] += img[cote*ligne + i,cote*colonne + j][k] / (cote**2)\n    return moy\n\n\nfor ligne in range(img.shape[0]//cote):\n    for colonne in range(img.shape[1]//cote):\n        for i in range(cote):\n            for j in range(cote):\n                img[cote*ligne + i,cote*colonne + j] = couleur_moyenne(ligne, colonne)\n\nimageio.imsave(\"img_pixellisee.png\", img)\n</code></pre> <p>Je vous laisse deviner...</p> <p> </p> Correction \ud83d\udc0d Script Python<pre><code>import imageio\nimg = imageio.imread('VanGogh_Arles.png')\n</code></pre> <ol> <li> <p>en fait cela d\u00e9pend de l'outil (module) utilis\u00e9 pour lire et \u00e9crire des images.\u00a0\u21a9</p> </li> </ol>"},{"location":"T08_Extras/2Projets/Perseverance/Perseverance/","title":"Le parachute de Perseverance","text":"<p>Activit\u00e9 d\u00e9branch\u00e9e!</p> <p>Lors de sa descente vers la plan\u00e8te Mars le 18/02/2021 (voir la section Liens), le rover Perseverance de la Nasa a frein\u00e9 sa chute gr\u00e2ce \u00e0 un parachute qui a intrigu\u00e9 quelques internautes du forum Reddit.</p> <p> </p> Vid\u00e9o du d\u00e9ploiement du parachute <p><p> </p></p> <p>Les zones blanches et rouges se d\u00e9composent comme ceci, sur 4 couronnes:</p> <p> </p> <p>Apr\u00e8s quelques essais infructueux, ils ont remarqu\u00e9 que les 80 \u00e9lements de chaque couronne pouvaient se d\u00e9composer en 8 groupes de 10 \u00e9l\u00e9ments , chacun d\u00e9butant par 3 \u00e9l\u00e9ments blancs.</p> <p>En voici les deux premiers groupes mis en relief:</p> <p> </p> <p>D\u00e9codez le message cach\u00e9!</p> <ul> <li>Le tout premier secteur doit correpondre \u00e0 la lettre D: \u00e0 vous de comprendre le codage utilis\u00e9...</li> <li>Le message secret s'obtiendra en tournant en spirale depuis ce secteur, dans le sens horaire, sur les trois premi\u00e8res couronnes.</li> <li>La derni\u00e8re couronne (la plus \u00e0 l'ext\u00e9rieur) est un peu particuli\u00e8re, mais n'en disons pas plus...</li> </ul> <p>Faites votre propre parachute:</p> <p>https://sjwarner.github.io/perseverance-parachute-generator/ </p>"},{"location":"T08_Extras/2Projets/Plus_ou_Moins/Plus_ou_Moins/","title":"Le jeu du + ou -","text":"<p>Alice: \u00ab Je pense \u00e0 un nombre entre 1 et 100. Bob, essaie de le deviner ! \u00bb</p> <p>Bob: \u00ab Ok. 50 ? \u00bb</p> <p>Alice: \u00ab C'est moins! \u00bb</p> <p>Bob: \u00ab 20 ? \u00bb</p> <p>Alice: \u00ab C'est plus! \u00bb</p> <p>Bob: \u00ab 40 ? \u00bb</p> <p>Alice: \u00ab C'est plus! \u00bb</p> <p>Bob: \u00ab 45? \u00bb</p> <p>Alice: \u00ab C'est moins! \u00bb</p> <p>Bob: \u00ab 42? \u00bb</p> <p>Alice: \u00ab Bravo! Tu as devin\u00e9! \u00bb</p> <p>Objectif</p> <p>Programmer ce jeu.</p> Version de baseAm\u00e9liorations possibles <ul> <li>Dans un premier temps, le nombre \u00e0 deviner est fix\u00e9. </li> <li>On saisira les propositions de l'utilisateur (Bob) avec la fonction <code>input</code> (voir ici ).</li> <li>Le programme s'arr\u00eate quand l'utilisateur donne la bonne r\u00e9ponse, et sinon affiche \u00ab C'est plus! \u00bb ou \u00ab C'est moins! \u00bb selon les cas.</li> </ul> <ul> <li>Le nombre \u00e0 deviner est choisi de fa\u00e7on al\u00e9atoire. Voir T6.2 Biblioth\u00e8ques pour la fonction <code>randint</code> du module <code>random</code>.</li> <li>Le programme affiche le nombre de tentatives pour trouver.</li> <li>Le programme joue seul, de fa\u00e7on intelligente.</li> </ul>"},{"location":"T08_Extras/2Projets/Projet_Arts/Sommaire_projet/","title":"DE TEMPS EN TEMPS","text":"<p> Intervention artistique en milieu scolaire <p>Arts Plastiques + Num\u00e9rique et Sciences Informatiques</p> <p> </p> <p>Collectif Meth.O.tapes </p> <p>Pr\u00e9sentation du projet</p> <p>Gauthier Platevoet et Marc-\u00c9tienne Guibert du collectif Meth.O.tapes nous ont propos\u00e9 un projet artistique m\u00ealant arts plastiques et num\u00e9rique, autour du th\u00e8me du \u00ab temps qui passe\u00bb et  de la m\u00e9t\u00e9orologie.</p> <p>En r\u00e9sum\u00e9, l'objectif est de r\u00e9aliser un GIF anim\u00e9 dont les images sont cr\u00e9\u00e9es \u00e0 partir des caract\u00e9ristiques de relev\u00e9s sous diff\u00e9rents formats (photos, vid\u00e9os, enregistrement sonores, palette de couleurs, pression atmosph\u00e9rique, temp\u00e9rature ressentie).</p> <ul> <li> <p>les \u00e9l\u00e8ves suivant la sp\u00e9cialit\u00e9 Arts Plastiques r\u00e9alisent les relev\u00e9s et \u00e9laborent une image plastique synth\u00e9tisant ces relev\u00e9s.</p> </li> <li> <p>les \u00e9l\u00e8ves suivant la sp\u00e9cialit\u00e9 NSI r\u00e9cup\u00e8rent ces images ainsi que les donn\u00e9es brutes et \u00e9laborent un GIF anim\u00e9 selon le protocole communiqu\u00e9 par les artistes.</p> </li> </ul> <p> </p> <p>La banque des rel\u00e9v\u00e9s des \u00e9l\u00e8ves d'Arts Plastiques est visible ici: https://methotapes.com/BILANS_CLIMATIQUES/qg.html  et t\u00e9l\u00e9chargeable l\u00e0 : https://methotapes.com/BILANS_CLIMATIQUES/uploads/ </p> <p>Protocole de g\u00e9n\u00e9ration du GIF</p> <ul> <li>Le GIF doit comporter 25 images de d\u00e9finition 500 \u00d7 500.</li> <li>Chaque image est une zone extraite de l'image fournie par les \u00e9l\u00e8ves d'Arts Plastiques, \u00e0 laquelle on applique un filtre color\u00e9.</li> <li>La taille de la zone extraite ainsi que les coordonn\u00e9es du coin haut-gauche de la zone d\u00e9pendent de l'enregistrement sonore (\u00e0 chaque 1/25e du temps), du son de la vid\u00e9o (\u00e0 chaque 1/25e du temps) ainsi que de la couleur dominante de la vid\u00e9o (\u00e0 chaque 1/25e du temps).</li> <li>Le filtre color\u00e9 d\u00e9pend de la couleur dominante de la vid\u00e9o (\u00e0 chaque 1/25e du temps).</li> </ul> Couleur dominanteEnregistrements sonoresZone \u00e0 extraire <p> </p> <p>Apr\u00e8s avoir divis\u00e9 la dur\u00e9e de la vid\u00e9o par 25, on extrait une image de la vid\u00e9o, puis on extrait la couleur dominante au format HSL (H \u2192 teinte, S \u2192 saturation, L \u2192 luminosit\u00e9). On passe la saturation \u00e0 100 pour obtenir la couleur du filtre, ici pour la 20e image du GIF.</p> <p> </p> <p>De la m\u00eame fa\u00e7on, on r\u00e9cup\u00e8re un intervalle de l'enregistrement sonore de 1/25e de sa dur\u00e9e, dont on calcule le volume minimum (en dbA), not\u00e9 \\(V_{son}\\). On extrait l'audio de la vid\u00e9o et on fait la m\u00eame chose pour obtenir  \\(V_{video}\\).</p> <p> </p> <ul> <li>La largeur W de la zone \u00e0 extraire d\u00e9pend de la saturation S de la couleur dominante.</li> <li>Les coordonn\u00e9es x et y du coin haut-gauche de la zone \u00e0 extraire d\u00e9pendent des volumes \\(V_{son}\\) et \\(V_{video}\\).</li> </ul>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/","title":"Travail sur l'image (et la vid\u00e9o)","text":""},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#conversion-rgb-hsl","title":"Conversion RGB \u27f7 HSL","text":"<p>Codage HSL</p> <p>Le codage informatique des couleurs que nous connaissons est le codage RGB qui est le plus proche du mat\u00e9riel, et le plus r\u00e9pandu. C'est celui utilis\u00e9 par les modules Python de traitement d'image, comme <code>imageio</code> que nous utilisons, ou <code>PIL</code>.</p> <p>Un autre codage des couleurs - celui manipul\u00e9 dans ce projet - est le codage HSL, pour Hue (teinte), Saturation (saturation), Lightness (luminosit\u00e9). Il est plut\u00f4t utilis\u00e9 dans les logiciels de dessin assist\u00e9 par ordinateur ou de retouche d'images.</p> <p>Le proc\u00e9d\u00e9 de conversion des 3 valeurs RGB vers les 3 valeurs HSL est expliqu\u00e9 sur la page Wikip\u00e9dia correspondate.</p> <p>Test de la fonction</p> <p>Pour tester vos conversions, vous pouvez utiliser un convertisseur en ligne, comme celui-ci par exemple o\u00f9 vous trouverez \u00e9galement les formules de conversion.</p>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#recherche-de-la-couleur-dominante","title":"Recherche de la couleur dominante","text":"<p>Extraction d'une frame de la vid\u00e9o</p> <p>Une image est compos\u00e9e de frames, c'est-\u00e0-dire d'images qui d\u00e9filent \u00e0 une certaine fr\u00e9quence (FPS), en g\u00e9n\u00e9ral 24 images par seconde.</p> <p>Pour extraire une image d'une vid\u00e9o, on utilise le module <code>imageio</code>.</p> <p>\ud83d\udc0d Script Python<pre><code>import imageio\nvideo = imageio.get_reader('video.mp4') \nframe = video.get_data(472) \n</code></pre> Dans le code pr\u00e9c\u00e9dent, l'image n\u00b0472 est extraite dans la variable <code>frame</code>. On peut ensuite la manipuler ou la sauvegarder. Pour conna\u00eetre le nombre de frames dans la variable <code>video</code>, on utilise <code>video.count_frames()</code>.</p> <p>Test de la fonction</p> <p>Sur l'image ci-dessous, vous devriez obtenir une couleur dominante de <code>(61, 134, 210)</code> en RGB soit <code>(210, 62, 53)</code> en HSL.</p> <p> </p> <p>Indication</p> <p>Le programme doit parcourir l'image, pixel par pixel, et construire un dictionnaire dont les cl\u00e9s sont les pixels (des tuples) et les valeurs le nombre d'occurences dans l'image.</p> <p>Grosso modo, c'est la m\u00eame chose que dans l'exercice 2 sur les dictionnaires.</p> <p>Ensuite, il s'agit de parcourir le dictionnaire et de chercher la valeur maximale, en m\u00e9morisant le pixel correspondant.</p> <p>Grosso modo, c'est la m\u00eame chose que dans l'exercice 3 sur les dictionnaires.</p> <p>Code \u00e0 compl\u00e9ter:</p> \ud83d\udc0d Script Python<pre><code>def couleur_dominante(img: list) -&gt; tuple:\n'''\n    Cherche le pixel de l'image img qui revient le plus grand nombre de fois dans img.\n    '''\n    pixels = {}\n    # parcours de l'image:\n    for i in \n        for j in \n            if img[i][j] in pixels:\n\n            else:\n\n    # recherche du pixel ayant la plus grande occurence\n    nmax = \n    for pixel, occ in pixels.items():\n\n    return \n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#extraction-de-la-zone","title":"Extraction de la zone","text":"<p>Extraction de la zone</p> <p>Il faudra cr\u00e9er une image vide aux bonnes dimensions, puis affecter pixel par pixel ceux de la zone de l'image initiale d\u00e9finie par les valeurs de x, y et W.</p> <p>Indications</p> <p>La fonction \u00e0 \u00e9crire doit prendre en param\u00e8tres les valeurs qui permettent de calculer x, y et W, c'est-\u00e0-dire S, Vson et Vvideo. Apr\u00e8s avoir calcul\u00e9 ces valeurs, on cr\u00e9e une image vide (constitu\u00e9e en 0 en fait) aux bonnes dimensions puis on lui affecte les valeurs de l'image de base en d\u00e9calant les lignes et colonnes des valeurs x et y.</p> <p>Code \u00e0 compl\u00e9ter:</p> \ud83d\udc0d Script Python<pre><code>def extraction_zone(img: list, S: int, Vson: float, Vvideo: float) -&gt; list:\n'''\n    Renvoie une image constitu\u00e9e des pixels de l'image img, de taille W avec le d\u00e9calage x, y\n    donn\u00e9s par les param\u00e8tres S, Vson et Vvideo.\n    '''\n    W = \n    x = \n    y = \n    zone = numpy.zeros(( , , ), dtype=np.uint8)\n    for i in range(W):\n        for j in range(W):\n            zone[i][j] = \n    return \n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#application-du-filtre","title":"Application du filtre","text":"<p>Overlay blending mode</p> <p>I'm sorry, but I didn't succeed to find a french source for this.</p> <p>So you will have to translate this page to find how to apply a colored filter to a picture.</p> <p>Testing your function</p> <p>Apply an overlay filter with HSL color <code>(210, 53, 58)</code> on the first image below should give the second one.</p> <p> </p> <p>Indications</p> <p>Pour chaque pixel de l'image de d\u00e9part, on applique \u00e0 chaque composante la fonction  overlay avec la composante de la couleur du filtre.</p> <p>Par exemple, si le pixel de l'image est <code>(120, 35, 214)</code> et la couleur du filtre <code>(210, 53, 58)</code>, le pixel de l'image filtr\u00e9e sera <code>(f(120, 210), f(35, 53), f(214, 58))</code>.</p> <p>Il faut donc commencer par \u00e9crire la fonction <code>f</code> qui prend deux entiers comme param\u00e8tres, puis une fonction <code>filtre</code> qui prend en param\u00e8tre une image et la couleur du filtre, qui commencera par cr\u00e9er une image vide aux m\u00eames dimensions que l'image donn\u00e9e en param\u00e8tre, puis la qui modifiera pixel par pixel en parcourant l'image donn\u00e9e en param\u00e8tre.</p> <p>Code \u00e0 compl\u00e9ter:</p> \ud83d\udc0d Script Python<pre><code>def f(a, b):\n    if \n        return\n    else:\n        return\n\ndef filtre(img: list, couleur: tuple) -&gt; image:\n'''\n    Renvoie une nouvelle image, donn\u00e9e par l'application d'une filtre color\u00e9 \u00e0 l'image de d\u00e9part img.\n    '''\n    img_filtree = numpy.zeros(( , , ), dtype=np.uint8)\n    for i in range():\n        for j in range():\n            img_filtree[i][j] = \n\n    return \n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#realisation-du-gif","title":"R\u00e9alisation du GIF","text":"<p>RTFM</p> <p>https://imageio.readthedocs.io/en/stable/examples.html#optimizing-a-gif-using-pygifsicle </p> <p>Indications</p> <ol> <li> <p>Les images cr\u00e9es avec l'application du filtre devront \u00eatre cr\u00e9es avec un nom de fichier num\u00e9rot\u00e9. Par exemple avec l'instruction: \ud83d\udc0d Script Python<pre><code>imaegio.imsave(f'image_gif{k}.png', img)\n</code></pre> o\u00f9 <code>img</code> est l'image renvoy\u00e9e par la fonction <code>filtre</code> et <code>k</code> la variable de boucle correspondant \u00e0 la k-i\u00e8me image sur 25.</p> </li> <li> <p>Une fois les 25 images du GIF cr\u00e9\u00e9es, on utilisera le code suivant, o\u00f9 il faudra pr\u00e9ciser un nom de fichier pour le GIF et adapter \u00e9ventuellement le code aux noms de fichier image: \ud83d\udc0d Script Python<pre><code>with imageio.get_writer('nom_du_gif.gif', mode='I') as writer:\n    for k in range(25):\n        filename = f'image_gif{k}.png'\n        image = imageio.imread(filename)\n        writer.append_data(image)\n</code></pre></p> </li> </ol>"},{"location":"T08_Extras/2Projets/Projet_Arts/02Son/son/","title":"Travail sur le son","text":""},{"location":"T08_Extras/2Projets/Projet_Arts/02Son/son/#preambule","title":"Pr\u00e9ambule","text":"<p>Extraction de l'audio d'une vid\u00e9o</p> <p>Cela se fait tr\u00e8s facilement en ligne de commande dans le terminal.</p> <p>On utilise pour cela le logiciel de lecture et d'encodage vid\u00e9o ffmpeg.</p> <p>Pour l'installer:</p> \ud83d\udccb Algo<pre><code>$ sudo apt install ffmpeg\n</code></pre> <p>Pour l'utiliser, lire par exemple ici. Penser \u00e0 extraire l'audio au format <code>wav</code>.</p>"},{"location":"T08_Extras/2Projets/Projet_Arts/02Son/son/#lecture-dun-son-numerique","title":"Lecture d'un son num\u00e9rique","text":"<p>R\u00e9cup\u00e9ration des donn\u00e9es</p> <p>Pour lire un fichier son au format <code>wav</code>, on utilisera le module: \ud83d\udc0d Script Python<pre><code>import scipy.io.wavfile as wave\n</code></pre></p> <p>La fonction <code>read</code> du module <code>wave</code> permet de r\u00e9cup\u00e9rer la fr\u00e9quence d'\u00e9chantillonnage (nomm\u00e9e <code>rate</code> dans l'exemple suivant) ainsi que l'\u00e9chantillon des valeurs du signal repr\u00e9sentant le son sur 16 bits.</p> \ud83d\udc0d Script Python<pre><code>rate, echantillon = wave.read('son.wav')\n</code></pre> <p>On r\u00e9cup\u00e8re dans <code>echantillon</code> un tableau d'\u00e9l\u00e9ments <code>[cg, cd]</code> o\u00f9 <code>cg</code> est la valeur du canal gauche et <code>cd</code> celle du canal droit. Le signal d'un canal est repr\u00e9sent\u00e9 ci-dessous.</p> <p> </p>"},{"location":"T08_Extras/2Projets/Projet_Arts/02Son/son/#calcul-du-volume-en-dba","title":"Calcul du volume en dBA","text":"<p>Spectre</p> <p>Le volume, en dbA, s'obtient par un traitement du signal pour obtenir le spectre du son:</p> <p> </p> <p>Ce traitement s'effectue par la fonction donn\u00e9e ci-dessous qui n\u00e9cessite l'utilisation du module <code>numpy</code> ainsi que du module <code>math</code>:</p> \ud83d\udc0d Script Python<pre><code>import math\nimport numpy as np\n\ndef spectre(data: list, rate: int, debut: float, duree: float) -&gt; list:\n'''\n    Renvoie le spectre correspondant \u00e0 un intervalle du signal.\n\n    data: le signal d'un canal\n    rate: la fr\u00e9quence d'\u00e9chantillonnage\n    debut: le d\u00e9but de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    duree: la dur\u00e9e de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    '''\n    start = int(debut * rate)\n    stop = int((debut+duree) * rate)\n    s = np.absolute(np.fft.fft(data[start:stop]))\n    s = s / s.max()\n    return [math.log10(i) for i in s if i != 0]\n</code></pre> <p>Donn\u00e9e \u00e0 extraire</p> <ul> <li>Pour chaque intervalle de dur\u00e9e 1/25e de la dur\u00e9e totale du son, vous devez calculer le volume minimal de la liste fournie par la fonction <code>spectre</code>. Cela vous donne une liste de 25 valeurs.</li> <li>Dans cette liste, vous extrayez le minimum et le maximum, puis vous exprimez chaque valaur en pourcentage de la plage min-max.</li> </ul> <p>Exemple: Pour un son donn\u00e9, on obtient les 25 volumes minimaux suivants:  </p> <p>Le minimum de la liste est <code>-7.24</code> et le maximum  est <code>-5.28</code>. Le volume d'indice 2 est <code>-5.96</code>, il est situ\u00e9 \u00e0 65% de l'intervalle [-7.24, -5.28].</p> <ul> <li>C'est ce pourcentage (65%) qui est la valeur \u00e0 extraire pour chaque intervalle du son (\\(V_{son}\\) ou \\(V_{video}\\)).</li> </ul>"},{"location":"T08_Extras/2Projets/Projet_Arts/03Main/main/","title":"Programme principal","text":"<p>Il s'agit maintenant d'articuler toutes les \u00abbriques\u00bb de notre programme.</p> <p>\u00c9tapes-cl\u00e9s</p> <ol> <li> <p>Chaque groupe doit disposer:</p> <ul> <li>d'une image de base (disponibles sur Moodle);</li> <li>d'un enregistrement sonore (disponibles sur Moodle);</li> <li>d'une vid\u00e9o et de l'audio extrait de cette vid\u00e9o (disponibles sur https://methotapes.com/BILANS_CLIMATIQUES/uploads/video/);</li> </ul> </li> <li> <p>On commencera par cr\u00e9er 4 variables contenant les noms de ces fichiers.</p> </li> <li> <p>Le protocole de cr\u00e9ation du GIF comporte 25 it\u00e9rations du m\u00eame proc\u00e9d\u00e9:</p> <ul> <li>extraire une image de la vid\u00e9o, puis sa couleur dominante;</li> <li>extraire les donn\u00e9es du son de l'enregistrement et du son de la vid\u00e9o (qui en fait se font au pr\u00e9alable);</li> <li>extraire la zone de l'image de base;</li> <li>lui appliquer le filtre</li> <li>enregistrer l'image</li> </ul> </li> <li> <p>Une fois les 25 images cr\u00e9\u00e9es, lancer la cr\u00e9ation du GIF:</p> <ul> <li>redimensionner les 25 images \u00e0 la bonne taille 500x500;</li> <li>cr\u00e9er le GIF !</li> </ul> </li> </ol> <p>Redimensionnement des images</p> <p>Le logiciel (Open-source) ImageMagick permet de faire \u00e0 peu pr\u00e8s tout ce qu'on veut comme retouche d'images... en ligne de commande dans un terminal.</p> <p>Par exemple, pour redimensionner une image <code>monimage.png</code> en cr\u00e9ant une nouvelle image: Bash<pre><code>convert -resize 500x500 monimage.png monimageredimensionnee.png\n</code></pre></p> <p>Ou bien en \u00e9crasant l'image: Bash<pre><code>mogrify -resize 500x500 monimage.png </code></pre></p> <p>Shell et Python</p> <p>En Python, on peut ex\u00e9cuter une ligne de commande du shell depuis un programme. Pour cela il faut utiliser le module <code>os</code> et la fonction <code>system</code>: \ud83d\udc0d Script Python<pre><code>import os\nos.system('la commande en chaine de caract\u00e8res')\n</code></pre></p> <p>On s'en servira pour:</p> <ul> <li>extraire l'audio de la vid\u00e9o avec le logiciel <code>ffmpeg</code></li> <li>redimensionner avec <code>ImageMagick</code> les images g\u00e9n\u00e9r\u00e9es en 500x500 pixels pour ensuite les ajouter au GIF.</li> </ul> Module code \u00e9l\u00e8ves <p>Voici le fichier/module compos\u00e9 de vos fonctions qu'il faudra importer dans le programme principal.</p> moduleprojet.py<pre><code>import scipy.io.wavfile as wave\nimport math\nimport numpy\nimport imageio\n\n### 1. Traitement du son #######################################################\n\ndef spectre(data: list, rate: int, debut: float, duree: float) -&gt; list:\n'''\n    Renvoie le spectre correspondant \u00e0 un intervalle du signal.\n\n    data: le signal d'un canal\n    rate: la fr\u00e9quence d'\u00e9chantillonnage\n    debut: le d\u00e9but de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    duree: la dur\u00e9e de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    '''\n    start = int(debut * rate)\n    stop = int((debut+duree) * rate)\n    s = numpy.absolute(numpy.fft.fft(data[start:stop]))\n    s = s / s.max()\n    return [math.log10(i) for i in s if i != 0]\n\n\ndef volumes_min(son)-&gt;list: #M\u00e9lodie\n'''\n    Prend en param\u00e8tre un son qui correspond\n    et renvoie une liste de 25 valeurs qui\n    correspondent aux volume minimaux de\n    chaque 1/25eme de la dur\u00e9e totale du son.\n    '''\n    rate, echantillon = wave.read(son)\n    cd = [elt[1] for elt in echantillon]\n    duree = len(echantillon)/rate\n    duree_intervalle = duree//25\n    depart = 0.0\n    volumes_mini = []\n    for k in range (25):\n        s = spectre(cd, rate, depart, duree_intervalle)\n        volumes_mini.append(min(s))\n        depart += duree_intervalle\n    return volumes_mini\n\ndef pourcentage (lst:list)-&gt; list: #M\u00e9lodie\n'''\n    Prends en param\u00e8tre la liste des volumes minimaux\n    et renvoie la liste contenant les pourcentages de\n    chaque point dans l'intervalle minimal-maximal de\n    la liste de volumes minimaux.\n    '''\n    lst_pourcentage = []\n    maxi = max(lst)\n    mini = min(lst)\n    for elt in lst :\n        p = ((elt-mini)/(maxi-mini))*100\n        lst_pourcentage.append(int(p))\n    return lst_pourcentage\n\n\n### 2. Traitement de l'image ###################################################\n\n# Extraction de la zone\n\ndef extraction_zone(img: list, S: int, Vson: float, Vvideo: float) -&gt; list: #Manon\n'''\n    Renvoie une image constitu\u00e9e des pixels de l'image img, de taille W avec le d\u00e9calage x, y\n    donn\u00e9s par les param\u00e8tres S, Vson et Vvideo.\n    '''\n    W = int(500 * S/100)\n    x = int((500-W) * Vson)\n    y = int((500-W) * Vvideo)\n    #On cr\u00e9ait une image vide pour pouvoir y placer la zone extraite\n    zone = numpy.zeros((W, W, img.shape[2]), dtype=numpy.uint8)\n    for i in range(W):\n        for j in range(W):\n            zone[i][j] = img[i+y][j+x]\n    return zone\n\ndef extraction(image_AP: list, S: int, Vson: float, Vvideo: float) -&gt; list: #Jules\n\n'''\n    Cr\u00e9er une image vide, s\u00e9lectionne une zone dans l'image\n    en param\u00e8tre et copie les pixels de la zone dans l'image vide.\n    '''\n\n    W = int(500 * S/100)\n    x = int((500-W) * Vson)\n    y = int((500-W) * Vvideo)\n\n    zone = numpy.zeros([W,W,3], dtype=numpy.uint8)\n\n    for i in range(W):\n        for j in range(W):\n            zone[i][j] = image_AP[y+i][x+j]\n\n    imageio.imsave(\"monimage.jpg\", zone)\n    return zone\n\n# Recherche de la couleur dominante\n\ndef color_dom(image): #Yanis\n\n    # Cherche le pixel de l'image img qui revient le plus grand nombre de fois dans img.\n    hauteur = image.shape[0]\n    largeur = image.shape[1]\n    pixels = {}\n    for i in range(hauteur):\n        for j in range(largeur):\n            if tuple(image[i][j]) in pixels:\n                pixels[tuple(image[i][j])] += 1     \n            else:\n                pixels[tuple(image[i][j])]  = 1\n\n    # recherche du pixel ayant la plus grande occurence\n    grand = ''\n    nmax = 0\n    for k, v in pixels.items():\n        if v &gt; nmax:\n            grand = k\n            nmax = v\n    return grand \n\ndef couleur_dominante(image) -&gt; tuple: # Manon\n    # On parcous l'image pour savoir combien de fois les couleurs appara\u00eessent dans le tableu.\n    dico_RGB = {}\n    for i in range(img_test.shape[0]):\n        for j in range(img_test.shape[1]):\n    # On utilise un tuple pour qu'il soit possible de parcourir l'image.\n            t = tuple(img_test[i][j])\n            if t in dico_RGB:\n                dico_RGB[t] += 1\n            else:\n                dico_RGB[t] = 1\n\n    # On recherche la couleur qui revient le plus.\n    clr_max_apparition = 0\n    for clr, n in dico_RGB.items():\n        if n &gt; clr_max_apparition:\n            clr_max_apparition = n\n            couleur = clr\n\n    return couleur\n\n# Application du filtre\n\n'''\nla fonction f permet de superposer une teinte sur une couche\n'''\ndef f(a,b): #Florette\n    a=a/255\n    b=b/255\n    if a&lt;0.5 :\n        r= 2*a*b\n    else:\n        r= 1-2*(1-a)*(1-b)\n    return int(r*255)\n\n'''\n    Renvoie une nouvelle image, donn\u00e9e par l'application d'une filtre color\u00e9 \u00e0 l'image de d\u00e9part img.\n    '''\ndef filtre(img : list, couleur: tuple): #Florette\n    img_filtree = numpy.zeros((img.shape[0],img.shape[1],3), dtype=numpy.uint8)\n    for i in range(img.shape[0]):\n        for j in range(img.shape[1]):\n            r=img[i][j][0]\n            g=img[i][j][1]\n            b=img[i][j][2]\n            img_filtree[i][j] = (f(r,couleur[0]), f(g,couleur[1]), f(b,couleur[2]))\n    imageio.imsave(\"imageavecfiltre.jpg\", img_filtree)\n    return img_filtree\n\ndef f(a, b): #Dawson\n    a = a / 255\n    b = b / 255\n    if   a &lt; 0.5:\n        r = 2 * a * b\n    else:\n        r = 1-2*(1-a)*(1-b)\n    return int(r*255) \n\n\ndef filtre(img: list, couleur: tuple): #Dawson\n'''\n    Renvoie une nouvelle image, donn\u00e9e par l'application d'une filtre color\u00e9 \u00e0 l'image de d\u00e9part img.\n    '''\n    img_filtree = numpy.zeros((img.shape[0], img.shape[1],3), dtype=numpy.uint8)\n    for i in range(img.shape[0]):\n        for j in range(img.shape[1]):\n            r = img[i][j][0]\n            g = img[i][j][1]\n            b = img [i][j][2]\n            img_filtree[i][j]=[f(r,couleur[0]), f(g,couleur[1]), f(b,couleur[2])]\n    return img_filtree\n\n\n# Conversion RGB -&gt; HSL\n\ndef convertisseur (r,g,b :int)-&gt; int: #Safia\n'''\n    Convertit la couleur RGB en HSL\n    '''\n    r, g, b = r/255, g/255, b/255\n    Cmax=max(r,g,b)\n    Cmin=min(r,g,b)\n    Cdiff=Cmax-Cmin\n    if Cmax==0:\n        T=0\n    elif Cmax == r:\n        T=(((g-b)/Cdiff)) % 6\n    elif Cmax == g:\n        T = (((b-r)/Cdiff) + 2) % 6\n    elif Cmax == b:\n        T = (((r-g)/Cdiff) + 4) % 6\n    if Cmax == 0:\n        T = 0\n    t=60*T\n    L=1/2*(Cmax+Cmin)\n    if L==1:\n        S=0\n    else:\n        S=Cdiff/(1-abs(2*L-1))\n    return t,S*100,L*100\n</code></pre> Squelette du code \ud83d\udc0d Script Python<pre><code># Import des modules\n\n\n#\u00a0Chargement des fichiers de donn\u00e9es\n\nvideo = 'data/video_station1_groupe5.mp4'\nson = 'son_station1_groupe5.wav'\nimage = imageio.imread('images/Gr5_Sp1_Florette2.jpg')\naudio = 'audio.wav'\n\n#\u00a0Extraction du son de la video\n\nos.system('ffmpeg -i ' +  + ' ' + )\n\n# Extraction des volumes du son et de l'audio\n\nv_son = \nv_video = \n\n# Cr\u00e9ation du reader de la vid\u00e9o\n\nreader = imageio.get_reader(video)\n\n# Boucle principale\n\nfor k in range(25):\n    # extraction de l'image de la video\n\n    # extraction de la couleur dominante, convertie en hsl\n\n    # extraction de la zone\n\n    # application du filtre\n\n    # enregistrement de l'image\n\n\n# Cr\u00e9ation du GIF\nwith imageio.get_writer('GIF_ultime.gif', mode='I') as writer:\n    for k in range(25):\n        #redimensionnement de l'image en ligne de commande\n\n        #lecture de la k-i\u00e8me image du gif\n\n        # ajout de l'image au writer\n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/04Code_final/Final/","title":"Code final du projet","text":""},{"location":"T08_Extras/2Projets/Projet_Arts/04Code_final/Final/#correction-du-bug-audio","title":"Correction du \u00abbug audio\u00bb","text":"<p>Une erreur que beaucoup d'entre vous ont rencontr\u00e9, c'est que pour certaines vid\u00e9os, le son est en mono alors que la fonction <code>extraction_volumes</code> \u00e9tait con\u00e7ue pour un son en st\u00e9r\u00e9o (pas bien, mauvaise conception).</p> <p>L'explication du patch \u00e0 appliquer pour corriger le bug en vid\u00e9o:</p> <p> </p>"},{"location":"T08_Extras/2Projets/Projet_Arts/04Code_final/Final/#le-module","title":"Le module","text":"moduleprojet.py<pre><code>################################################################################\n# Module contenant les fonctions n\u00e9cessaires au traitement de l'image et du son#\n################################################################################\n\n# Import des modules\nimport math\nimport numpy\nimport imageio\nimport scipy.io.wavfile as wave\n\n# Partie 1 : image #############################################################\n\n# Conversions RGB &lt;-&gt; HSL\n\ndef hsl(pix: tuple) -&gt; tuple:\n'''\n    Prend en param\u00e8tre un tuple (r, g, b) correspond \u00e0 une couleur cod\u00e9e en RGB,\n    avec:\n    r, g et b 3 entiers compris entre 0 et 255,\n    et renvoie sa conversion (h, s, l) en HSL, avec\n    h: la teinte, compris entre 0 et 360 degr\u00e9s\n    s: la saturation, entier compris entre 0 et 100\n    l: la luminosit\u00e9, entier compris entre 0 et 100\n    '''\n    r = pix[0]/255\n    g = pix[1]/255\n    b = pix[2]/255\n\n    M, m = max(r, g, b), min(r, g, b)\n    C = M - m\n    print(C)\n    if C == 0:\n        h = 0\n        print('h=0')\n    elif M == r:\n        h = ((g - b)/C ) % 6\n    elif M == g:\n        h = ((b - r)/C + 2) % 6\n    else:\n        h = ((r - g)/C + 4) % 6\n    h = 60 * h\n    l = 0.5 * (M+m)\n    if l == 1 or l == 0:\n        s = 0\n    else:\n        s = C / (1- abs(2*l-1))\n    return (int(h), int(100*s), int(100*l))\n\ndef rgb(pix: tuple) -&gt; tuple:\n'''\n    Prend en param\u00e8tre un tuple (h, s, l) correspond \u00e0 une couleur cod\u00e9e en HSL,\n    avec:\n    h: la teinte, compris entre 0 et 360 degr\u00e9s\n    s: la saturation, entier compris entre 0 et 100\n    l: la luminosit\u00e9, entier compris entre 0 et 100\n    et renvoie sa conversion (h, s, l) en HSL, avec r, g et b 3 entiers compris\n    entre 0 et 255.\n    '''\n    h = pix[0]\n    s = pix[1]/100\n    l = pix[2]/100\n\n    C = (1 - abs(2*l-1)) * s\n    h = h / 60\n    X = C * (1-abs(h%2 - 1))\n    m = l - 0.5*C\n    if h == 0:\n        r, g, b = 0, 0, 0\n    elif h &lt; 1:\n        r, g, b = C, X, 0\n    elif h &lt; 2:\n        r, g, b = X, C, 0\n    elif h &lt; 3:\n        r, g, b = 0, C, X\n    elif h &lt; 4:\n        r, g, b = 0, X, C\n    elif h &lt; 5:\n        r, g, b = X, 0, C\n    else:\n        r, g, b = C, 0, X\n    return (int(255* (r+m)), int(255* (g+m)), int(255* (b+m)))\n\n# Extraction de la couleur dominante\n\ndef extraction_couleur(im: list) -&gt; tuple:\n'''\n    Renvoie le pixel majoritaire dans une image im.\n    On cr\u00e9e un dictionnaire dont les cl\u00e9s sont les pixels et les valeurs\n    leur nombre d'occurences dans im, puis on parcourt le dictionnaire\n    pour rechercher et le pixel majoritaire (en RGB)\n    '''\n    couleurs = {}\n    for i in range(im.shape[0]):\n        for j in range(im.shape[1]):\n            c = tuple(im[i][j])\n            if c in couleurs:\n                couleurs[c] += 1\n            else:\n                couleurs[c] = 1\n    c_max = 0\n    for c, n in couleurs.items():\n        if n &gt; c_max:\n            c_max = n\n            dominante = c\n    return dominante\n\n# Extraction de la zone de l'image\n\ndef extraction_zone(im: list, sat: int, V_son: float, V_video: float) -&gt; list:\n    w = max(10, int(500 * sat / 100))\n    x = int((500-w) * V_son)\n    y = int((500-w) * V_video)\n    zone = numpy.zeros((w, w, im.shape[2]), dtype=numpy.uint8)\n    for i in range(w):\n        for j in range(w):\n            zone[i][j] = im[y+i][x+j]\n    return zone\n\n#\u00a0Application du filtre\n\ndef f(a: int, b: int) -&gt; int:\n'''\n    Fonction d'overlay \u00e0 appliquer sur chaque composante d'un pixel.\n    a est la composante de l'image de base.\n    b est la composante du filtre \u00e0 appliquer.\n    '''\n    a = a/255\n    b = b/255\n    if a &lt; 0.5:\n        return int(255*2*a*b)\n    else:\n        return int(255*(1-2*(1-a)*(1-b)))\n\ndef filtre(img: list, couleur: tuple) -&gt; None:\n'''\n    Cr\u00e9e et renvoie une image compos\u00e9e du filtre de couleur couleur appliqu\u00e9\n    \u00e0 l'image img.\n    '''\n    img_filtree = numpy.zeros((img.shape[0], img.shape[1], 3), dtype=numpy.uint8)\n    for i in range(img.shape[0]):\n        for j in range(img.shape[1]):\n            for c in range(3):\n                img_filtree[i][j][c] = f(img[i][j][c], couleur[c])\n    return img_filtree\n\n# Partie 2 : son ###############################################################\n\n# R\u00e9cup\u00e9ration du spectre\n\ndef spectre(data: list, rate: int, debut: float, duree: float) -&gt; list:\n'''\n    Renvoie le spectre correspondant \u00e0 un intervalle du signal.\n\n    data: le signal d'un canal\n    rate: la fr\u00e9quence d'\u00e9chantillonnage\n    debut: le d\u00e9but de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    duree: la dur\u00e9e de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    '''\n    start = int(debut * rate)\n    stop = int((debut+duree) * rate)\n    s = numpy.absolute(numpy.fft.fft(data[start:stop]))\n    s = s / s.max()\n    return [math.log10(i) for i in s if i != 0]\n\ndef extraction_volumes(filename: str) -&gt; list:\n'''\n    D\u00e9coupe un fichier son en 25 intervalles, r\u00e9cup\u00e8re le volume minimal (en dbA)\n    du spectre de chaque intervalle et renvoie ces volumes en pourcentage de la\n    plage [vmin, vmax].\n    '''\n    rate, echantillon = wave.read(filename)\n    if type(echantillon[0]) is numpy.ndarray:\n        data = [e[0] for e in echantillon] # on choisit un seul canal, ici le gauche\n    else:\n        data = echantillon\n    duree = len(data) / rate\n    volumes = []\n    for k in range(25):\n        sp = spectre(data, rate, k*duree/25, duree/25)\n        volumes.append(min(sp))\n    vmin, vmax = min(volumes), max(volumes)\n    pourcentages = [(v-vmin) / (vmax-vmin) for v in volumes]\n    return pourcentages\n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/04Code_final/Final/#le-programme-principal","title":"Le programme principal","text":"main.py<pre><code>import moduleprojet as mp\nimport imageio\nimport os\n\n#\u00a0Chargement des fichiers de donn\u00e9es\nvideo = 'videos/video_gr4_st2.mp4'\nson = 'sons/son_gr4_st2.wav'\nimage = imageio.imread('images/image_gr4_el1.jpg')\naudio = 'audio.wav'\n\n#\u00a0Extraction du son de la video\nos.system('rm audio.wav') # sinon ffmpeg plante...\nos.system('ffmpeg -i ' + video + ' ' + audio)\n\n# Extraction des volumes du son et de l'audio\nv_son = mp.extraction_volumes(son)\nv_video = mp.extraction_volumes(audio)\n\n# Cr\u00e9ation du reader de la vid\u00e9o\nreader = imageio.get_reader(video)\n\n# Boucle principale\nfor k in range(25):\n    # extraction de l'image de la video\n    frame = reader.get_data(k * reader.count_frames() // 25)\n\n    # extraction de la couleur dominante, convertie en hsl\n    dominante = mp.hsl(mp.extraction_couleur(frame))\n\n    # extraction de la zone\n    zone = mp.extraction_zone(image, dominante[1], v_son[k], v_video[k])\n\n    # application du filtre\n    couleur_filtre = mp.rgb((dominante[0], 100, dominante[2]))\n    zone_filtree = mp.filtre(zone, couleur_filtre)\n\n    # enregistrement de l'image\n    imageio.imsave(f'images/image_gif{k}.png', zone_filtree)\n\n    #\u00a0redimensionnement des images\n    os.system(f'mogrify -resize 500x images/image_gif{k}.png')  \n\n# Cr\u00e9ation du GIF\nwith imageio.get_writer('GIF_ultime.gif', mode='I') as writer:\n    for k in range(25):\n        image = imageio.imread(f'images/image_gif{k}.png')\n        writer.append_data(image)\n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/05Productions/Productions/","title":"Productions","text":""},{"location":"T08_Extras/2Projets/Syracuse/Syracuse/","title":"La conjecture de Syracuse","text":"<p>Prenons un entier naturel \\(n\\). On construit la suite de Syracuse de \\(n\\) en appliquant le proc\u00e9d\u00e9 suivant:</p> <ul> <li>si \\(n\\) est pair, on le divise par 2;</li> <li>sinon on le multiplie par 3 et on ajoute 1;</li> <li>on recommence avec le nombre obtenu.</li> </ul> <p>On arr\u00eate le proc\u00e9d\u00e9 lorsqu'on finit par obtenir 1. </p> <p>Par exemple, si on choisit 13 comme nombre de d\u00e9part, on obtient la suite : 13, 40, 20, 10, 5, 16, 8, 4, 2, 1.</p> <p>La conjecture de Syracuse postule qu'on atteindra toujours 1 quel que soit le nombre \\(n\\) de d\u00e9part.</p> <p>Pour chaque suite de Syracuse, de terme de d\u00e9part \\(n\\), on d\u00e9finit:</p> <ul> <li>le temps de vol: c'est le nombre d'it\u00e9rations pour obtenir 1;</li> <li>le temps de vol en altitude: c'est le nombre d'it\u00e9rations avant de passer en dessous de \\(n\\) (pour la premi\u00e8re fois);</li> <li>l'altitude maximale: c'est la valeur maximale de la suite.</li> </ul> <p>Par exemple, pour la suite de Syracuse de 13, le temps de vol est 9, le temps de vol en altitude est 3 et l'altitude maximale est 40.</p> <p>Objectif</p> <p>L'objectif de ce projet est de construire un module contenant diff\u00e9rentes fonctions permettant d'\u00e9tudier ce suites.</p> <p>En particulier, le module contiendra a minima les fonctions suivantes:</p> <ul> <li><code>suivant</code> : renvoie le successeur d'un nombre entier dans le proc\u00e9d\u00e9 de Syracuse;</li> <li><code>syracuse</code> : renvoie la suite de Syracuse;</li> <li><code>temps_de_vol</code>, <code>altitude_max</code>, et <code>temps_vol_altitude</code> dont les noms sont j'esp\u00e8re assez parlants...</li> <li><code>affiche_syracuse</code>: qui doit afficher le graphique de la suite (utiliser pour cela le module <code>matplotlib.pyplot</code>.</li> </ul> <p>Partie I</p> <p>\u00c0 la main, \u00e9crire les suites de Syracuse de 15, 64, et 97. D\u00e9terminer pour chacune les temps de vol, temps de vol en altitude et altitude maximale.</p> <p>Ces exemples serviront plus tard de jeu de tests pour les fonctions \u00e0 \u00e9crire.</p> <p>Partie II</p> <ol> <li>Sp\u00e9cifier chacune des fonctions demand\u00e9es.</li> <li>\u00c9crire les jeux de tests pour chaque fonction (except\u00e9e <code>affiche_syracuse</code>).</li> </ol> <p>Partie III</p> <p>\u00c9crire les fonctions.</p>"},{"location":"T08_Extras/3Pygame/01-Pygame_intro/","title":"Mini-Projet 3 :   Pygame : Introduction","text":"<p>Ressources</p> <p>La documentation officielle de Pygame : https://www.pygame.org/docs/ </p> <p>Lancement de Pygame et cr\u00e9ation de fen\u00eatre</p> \ud83d\udc0d Script Python<pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\nfenetre.fill([10,186,181])\n\npygame.display.flip()\n\n# Boucle des \u00e9v\u00e9nements\ncontinuer = True\nwhile continuer:\n    for evenement in pygame.event.get():    #Attente des \u00e9v\u00e9nements\n        if evenement.type == QUIT:\n            continuer = False\n\n# Sortie\npygame.quit()\n</code></pre> <p>Explication du code</p> Lignes 1 et 2Ligne 4Lignes 5 et 6Ligne 9Lignes 12 \u00e0 16Ligne 19 <p>On importe le module <code>pygame</code> ainsi que des variables locales bien utiles pour la suite...</p> <p><code>pygame.init()</code> effectue une initialisation globale de tous les modules <code>pygame</code> import\u00e9s. \u00c0 mettre au d\u00e9but du code.</p> <p>On cr\u00e9e une fen\u00eatre graphique en pr\u00e9cisant sa taille en pixels (largeur, hauteur) et sa couleur de remplissage (on verra plus tard comment utiliser plut\u00f4t une image de fond).</p> <p><code>pygame.display.flip()</code> effectue un rafra\u00eechissement total de tous les \u00e9l\u00e9ments graphiques de la fen\u00eatre. \u00c0 mettre donc plut\u00f4t vers la fin du code.</p> <p>C'est la boucle \u00abinfinie\u00bb (de gestion) des \u00e9v\u00e9nements, dont on ne sortira que par la bascule d'un bool\u00e9en, appel\u00e9 ici <code>continuer</code>.</p> <p>On ferme tout proprement.</p> <p>Remarque: on peut pr\u00e9ciser le titre de la fen\u00eatre avec <code>pygame.display.set_caption(\"Mon super programme\")</code>.</p>"},{"location":"T08_Extras/3Pygame/02-Pygame_image/","title":"Mini-Projet 4 :   Pygame : Animation simple","text":"<p>L'objectif ici est de faire appara\u00eetre un personnage (une image) et de l'animer. Pour illustrer cela on va utiliser cette image que l'on va faire rebondire sur les bords de la fen\u00eatre.</p>"},{"location":"T08_Extras/3Pygame/02-Pygame_image/#creation-de-la-fenetre-et-insertion-de-limage","title":"Cr\u00e9ation de la fen\u00eatre et insertion de l'image","text":"\ud83d\udc0d Script Python<pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nwidth, height = 320, 240\nscreen = pygame.display.set_mode((width, height))\n\nballe = pygame.image.load(\"basketball16.png\")\nposition_balle = balle.get_rect()\nscreen.blit(balle, position_balle)\npygame.display.flip()\n\npygame.quit()\n</code></pre> <p>Explication du code</p> Ligne 9Ligne 10Ligne 11 <p>On importe l'image dans une variable <code>balle</code> qui est un objet <code>pygame</code> de type <code>Surface</code>.</p> <p>Afin de facilement pouvoir le d\u00e9placer, on stocke la position de cet objet dans une variable <code>position_balle</code>, qui sera de type <code>rect</code>. </p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; position_balle\n&lt;rect(0, 0, 16, 16)&gt;\n</code></pre> <p>o\u00f9 les deux premiers attributs sont les coordonn\u00e9es (abscisse, ordonn\u00e9e) et les deux derniers la largeur et la hauteur de l'image.</p> <p>On affiche cette image en la superposant aux \u00e9l\u00e9ments graphiques d\u00e9j\u00e0 affich\u00e9s (en l'occurence, rien...) avec la m\u00e9thode <code>blit</code>.</p>"},{"location":"T08_Extras/3Pygame/02-Pygame_image/#animation-de-limagepersonnage","title":"Animation de l'image/personnage","text":"<p>D\u00e9placement</p> <p>Pour d\u00e9placer l'image/le personnage, il faut modifier ses coordonn\u00e9es \u00e0 chaque rafra\u00eechissement de la fen\u00eatre. </p> D\u00e9placement absoluD\u00e9placement relatif <p>On peut acc\u00e9der directement aux coordonn\u00e9es d'un objet de type <code>rect</code>. Par exemple:</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; position_balle.left\n0\n&gt;&gt;&gt; position_balle.bottom\n16\n&gt;&gt;&gt; position_balle.topleft\n(0, 0)\n</code></pre> Pour afficher la balle en position <code>(50, 100)</code> (pour le coin haut-gauche, qui est traditionnellement celui sur lequel on travaille), il suffit donc d'\u00e9crire:</p> \ud83d\udc0d Script Python<pre><code>position_balle.topleft = (50, 100)\n</code></pre> <p>On indique le d\u00e9placement (horizontal et vertical) par rapport \u00e0 la position initiale.</p> <p>Par exemple, pour d\u00e9caler la balle de 10 pixels vers la droite et de 20 pixels vers le haut: \ud83d\udc0d Script Python<pre><code>position_balle.move(10, -20)\n</code></pre></p> <p>Pour notre animation, on d\u00e9cide donc d'un d\u00e9calage relatif en abscisse et en ordonn\u00e9e, qu'on stocke par exemple dans une liste.</p> <p>Ici, pour d\u00e9placer d'un pixel sur chaque coordonn\u00e9e:</p> \ud83d\udc0d Script Python<pre><code>speed = [1, 1]\nposition_balle.move(speed)\n</code></pre> <p>Bien entendu, il faut changer ces valeurs lorsqu'on atteint le bord de la fen\u00eatre:</p> <ul> <li>si <code>position_balle.right</code> d\u00e9passe la largeur <code>width</code>, il faut repartir vers la gauche, c'est-\u00e0-dire passer de la valeur <code>1</code> \u00e0 <code>-1</code>.</li> <li>et si <code>position_balle.left</code> devient n\u00e9gatif, il faut repartir vers la droite, c'est-\u00e0-dire passer de la valeur <code>-1</code> \u00e0 <code>1</code>.</li> </ul> <p>Le code suivant va donc actualiser ce d\u00e9placement et faire rebondir notre balle de droite \u00e0 gauche:</p> \ud83d\udc0d Script Python<pre><code>import pygame\nfrom pygame.locals import *\n\n\npygame.init()\n\nwidth, height = 320, 240\nscreen = pygame.display.set_mode((width, height))\n\nballe = pygame.image.load(\"basketball16.png\")\nposition_balle = balle.get_rect()\nscreen.blit(balle, position_balle)\npygame.display.flip()\n\nspeed = [1, 0]\n\ncontinuer = True\nwhile continuer:\n    for evenement in pygame.event.get():\n        if evenement.type == QUIT:\n            continuer = False\n\n    if position_balle.left &lt; 0 or position_balle.right &gt; width:\n        speed[0] = -speed[0]\n\n    position_balle = position_balle.move(speed) \n\n    screen.fill([0, 0, 0])\n    screen.blit(balle, position_balle)\n    pygame.display.flip()\n\npygame.quit()\n</code></pre> <p><code>screen.fill</code></p> <p>Commenter la ligne 28. En quoi est-elle importante?</p> <p>\u00c0 vous de jouer pour terminer le programme...</p> <p>Pour s'entra\u00eener</p> <p>\u00c9crire un programme o\u00f9 un personnage se d\u00e9place  al\u00e9atoirement dans la fen\u00eatre.</p> <p>Vous pourrez utiliser les instructions :</p> <ul> <li><code>pygame.time.delay(1000)</code> afin de ne bouger le personnage que toutes les 1000 millisecondes (ou une autre valeur \u00e0 votre guise).</li> <li><code>randint(a,b)</code> du package <code>random</code>, qui renvoie un entier pseudo-al\u00e9atoire entre <code>a</code> et <code>b</code>.</li> </ul> <p>Pour le personnage, vous pouvez utiliser un sprite (libre de droits) trouv\u00e9 sur le Web, mais privil\u00e9giez le format PNG qui g\u00e8re la transparence. Ou bien celui-ci:  </p>"},{"location":"T08_Extras/3Pygame/03-Pygame_events/","title":"Mini-Projet 5 :   Pygame : Gestion des \u00e9v\u00e8nements","text":"<p>Lorsqu'un programme <code>pygame</code> est lanc\u00e9, la variable interne <code>pygame.event.get()</code> re\u00e7oit en continu les \u00e9v\u00e8nements des p\u00e9riph\u00e9riques g\u00e9r\u00e9s par le syst\u00e8me d'exploitation.  </p> <p>Dans les exemples pr\u00e9c\u00e9dents, on a uniquement r\u00e9cup\u00e9r\u00e9 l'\u00e9v\u00e9nement de type <code>QUIT</code> (clic sur la croix de fermeture de la fen\u00eatre) pour stopper la boucle et terminer le programme:</p> \ud83d\udc0d Script Python<pre><code>for evenement in pygame.event.get():  \n    if evenement.type == QUIT:\n        continuer = False\n</code></pre> <p>Nous allons maintenant nous int\u00e9resser aux \u00e9v\u00e8nements de type <code>KEYDOWN</code> (touche de clavier appuy\u00e9e) ou de type <code>MOUSEBUTTONDOWN</code> (boutons de souris appuy\u00e9).</p>"},{"location":"T08_Extras/3Pygame/03-Pygame_events/#1-evenements-clavier","title":"1. \u00c9v\u00e9nements clavier","text":"<p>Structure de code</p> <p>On contr\u00f4le si l'\u00e9v\u00e9nement est de type <code>KEYDOWN</code>, puis on d\u00e9termine l'instruction \u00e0 ex\u00e9cuter en fonction de l'attribut <code>key</code> de l'\u00e9v\u00e9nement (c'est-\u00e0-dire le code de la touche):</p> \ud83d\udc0d Script Python<pre><code>for evenement in pygame.event.get():   \n    if evenement.type == KEYDOWN:\n        if evenement.key == K_RIGHT:\n            print(\"fl\u00e8che droite appuy\u00e9e\")\n</code></pre> <p>Remarques:</p> <ul> <li>la liste des codes des touches se retrouve ici : https://www.pygame.org/docs/ref/key.html </li> <li>r\u00e9manence des touches : si on veut que l'action associ\u00e9e \u00e0 l'appui d'une touche se r\u00e9p\u00e8te (par ex. toutes les 50 millisecondes) tant que la touche reste enfonc\u00e9e, on utilise:  \ud83d\udc0d Script Python<pre><code>pygame.key.set_repeat(50)\n</code></pre></li> </ul> <p>\u00c0 vous de jouer</p> <p>\u00c9crire un programme qui d\u00e9place un personnage dans la fen\u00eatre, pilot\u00e9 pour les quatre touches directionnelles du clavier.</p>"},{"location":"T08_Extras/3Pygame/03-Pygame_events/#2-evenements-souris","title":"2. \u00c9v\u00e9nements souris","text":"<p>Structure de code</p> <p>On contr\u00f4le cette fois que l'\u00e9v\u00e8nement est de type <code>MOUSEBUTTONDOWN</code>, puis on d\u00e9termine l'instruction \u00e0 ex\u00e9cuter en fonction de l'attribut <code>button</code> de l'\u00e9v\u00e9nement (<code>1</code> pour bouton gauche, <code>2</code> pour bouton droit, <code>3</code> \u00e0 <code>5</code> pour la molette).</p> \ud83d\udc0d Script Python<pre><code>for evenement in pygame.event.get():   \n    if evenement.type == MOUSEBUTTONDOWN:\n        if evenement.button == 1:\n            print(\"clic gauche d\u00e9tect\u00e9\")\n</code></pre> <p>Remarque:  on r\u00e9cup\u00e8re le tuple des coordonn\u00e9es de la souris par l'instruction <code>pygame.event.get_pos()</code>.</p>"},{"location":"T08_Extras/3Pygame/04-Pygame_extras/","title":"Mini-Projet 6 :   Pygame : Textes, dessins, fen\u00eatres","text":""},{"location":"T08_Extras/3Pygame/04-Pygame_extras/#1-ecrire-du-texte","title":"1. \u00c9crire du texte","text":"<p>Pour \u00e9crire du texte avec Pygame, il faut:</p> <ul> <li>d\u00e9finir une police de caract\u00e8res (font en anglais), en pr\u00e9cisant la taille;</li> <li>cr\u00e9er un objet de type <code>Surface</code> dans lequel le texte est dessin\u00e9, en pr\u00e9cisant la couleur et le fond;</li> <li>attacher cet objet \u00e0 la fen\u00eatre avec <code>blit</code>.</li> </ul> Exemple de code<pre><code>mapolice = pygame.font.SysFont(\"Deja Vu Sans MS\", 80)\nlabel_victoire = mapolice.render(\"Gagn\u00e9 !\", True, (255, 0, 0), None)\nfenetre.blit(label_victoire, (50, 100))\n</code></pre>"},{"location":"T08_Extras/3Pygame/04-Pygame_extras/#2-dessiner-avec-pygame","title":"2. Dessiner avec Pygame","text":"<p>On peut dessiner des formes simples (lignes, rectangles, polygones, cercles, etc) avec le module <code>pygame.draw</code>. Le mieux est de consulter la documentation.</p> <p>Some examples:</p> \ud83d\udc0d Script Python<pre><code># Define the colors we will use in RGB format\nBLACK = (  0,   0,   0)\nWHITE = (255, 255, 255)\nBLUE =  (  0,   0, 255)\nGREEN = (  0, 255,   0)\nRED =   (255,   0,   0)\n\n# Draw on the screen a GREEN line from (0,0) to (50.75) \n# 5 pixels wide.\npygame.draw.line(screen, GREEN, [0, 0], [50,30], 5)\n\n# Draw on the screen a GREEN line from (0,0) to (50.75) \n# 5 pixels wide.\npygame.draw.lines(screen, BLACK, False, [[0, 80], [50, 90], [200, 80], [220, 30]], 5)\n\n# Draw on the screen a GREEN line from (0,0) to (50.75) \n# 5 pixels wide.\npygame.draw.aaline(screen, GREEN, [0, 50],[50, 80], True)\n\n# Draw a rectangle outline\npygame.draw.rect(screen, BLACK, [75, 10, 50, 20], 2)\n\n# Draw a solid rectangle\npygame.draw.rect(screen, BLACK, [150, 10, 50, 20])\n\n# Draw an ellipse outline, using a rectangle as the outside boundaries\npygame.draw.ellipse(screen, RED, [225, 10, 50, 20], 2) \n\n# Draw an solid ellipse, using a rectangle as the outside boundaries\npygame.draw.ellipse(screen, RED, [300, 10, 50, 20]) \n\n# This draws a triangle using the polygon command\npygame.draw.polygon(screen, BLACK, [[100, 100], [0, 200], [200, 200]], 5)\n\n# Draw an arc as part of an ellipse. \n# Use radians to determine what angle to draw.\npygame.draw.arc(screen, BLACK,[210, 75, 150, 125], 0, pi/2, 2)\npygame.draw.arc(screen, GREEN,[210, 75, 150, 125], pi/2, pi, 2)\npygame.draw.arc(screen, BLUE, [210, 75, 150, 125], pi,3*pi/2, 2)\npygame.draw.arc(screen, RED,  [210, 75, 150, 125], 3*pi/2, 2*pi, 2)\n\n# Draw a circle\npygame.draw.circle(screen, BLUE, [60, 250], 40)\n</code></pre>"},{"location":"T08_Extras/3Pygame/04-Pygame_extras/#3-gerer-plusieurs-fenetres","title":"3. G\u00e9rer plusieurs fen\u00eatres","text":"<p>En terminale...</p>"},{"location":"T08_Extras/3Pygame/pygame/","title":"Projet","text":"Projet              Pygame : Initiation"},{"location":"T08_Extras/3Pygame/pygame/#gestion-des-evenements","title":"Gestion des \u00e9v\u00e8nements","text":"<p>En informatique, un \u00e9v\u00e9nement peut \u00eatre une entr\u00e9e clavier (soit l\u2019appui soit le rel\u00e2chement d\u2019une touche), le d\u00e9placement de votre souris, un clic (encore une fois, appui ou rel\u00e2chement, qui seront trait\u00e9s comme deux \u00e9v\u00e9nements distincts). Un bouton de votre joystick peut aussi engendrer un \u00e9v\u00e9nement, et m\u00eame la fermeture de votre fen\u00eatre est consid\u00e9r\u00e9 comme un \u00e9v\u00e9nement\u202f!</p> <p>Pour Pygame, un \u00e9v\u00e9nement est repr\u00e9sent\u00e9 par un type et divers autres attributs que nous allons d\u00e9tailler dans ce chapitre.</p>"},{"location":"T08_Extras/3Pygame/pygame/#comment-les-capturer","title":"Comment les capturer ?","text":"<p>On utilise le module event de Pygame.</p> <p>Voici ce que nous dit la documentation \u00e0 propos de ce module\u202f:</p> Afficher/Masquer la documentation <ul> <li>pygame.event  </li> <li>pygame module for interacting with events and queues  </li> <li>pygame.event.pump \u2014 internally process pygame event handlers  </li> <li>pygame.event.get \u2014 get events from the queue  </li> <li>pygame.event.poll \u2014 get a single event from the queue  </li> <li>pygame.event.wait \u2014 wait for a single event from the queue  </li> <li>pygame.event.peek \u2014 test if event types are waiting on the queue  </li> <li>pygame.event.clear \u2014 remove all events from the queue  </li> <li>pygame.event.event_name \u2014 get the string name from and event id  </li> <li>pygame.event.set_blocked \u2014 control which events are allowed on the queue  </li> <li>pygame.event.set_allowed \u2014 control which events are allowed on the queue  </li> <li>pygame.event.get_blocked \u2014 test if a type of event is blocked from the queue  </li> <li>pygame.event.set_grab \u2014 control the sharing of input devices with other applications  </li> <li>pygame.event.get_grab \u2014 test if the program is sharing input devices  </li> <li>pygame.event.post \u2014 place a new event on the queue  </li> <li>pygame.event.Event \u2014 create a new event object  </li> <li> <p>pygame.event.EventType \u2014 pygame object for representing SDL events</p> </li> <li> <p>event </p> </li> </ul> <p>Et comme on peut le voir, le module event ne permet pas que d\u2019intercepter des \u00e9v\u00e9nements. Il nous permet aussi de cr\u00e9er des \u00e9v\u00e9nements. Et m\u00eame d\u2019en bloquer\u202f!</p> <ul> <li>Lorsqu'un programme <code>pygame</code> est lanc\u00e9, la variable interne <code>pygame.event.get()</code> re\u00e7oit en continu les \u00e9v\u00e8nements des p\u00e9riph\u00e9riques g\u00e9r\u00e9s par le syst\u00e8me d'exploitation.  </li> <li>Nous allons nous int\u00e9resser aux \u00e9v\u00e8nements de type <code>KEYDOWN</code> (touche de clavier appuy\u00e9e) ou de type <code>MOUSEBUTTONDOWN</code> (boutons de souris appuy\u00e9).</li> </ul>"},{"location":"T08_Extras/3Pygame/pygame/#evenements-clavier","title":"\u00c9v\u00e8nements clavier","text":""},{"location":"T08_Extras/3Pygame/pygame/#exemple-de-code","title":"Exemple de code","text":"<p>La structure de code pour d\u00e9tecter l'appui sur une touche de clavier est, dans le cas de la d\u00e9tection de la touche \u00abFl\u00e8che droite\u00bb :</p> <p>\ud83d\udc0d Script Python<pre><code>for event in pygame.event.get():   \n  if event.type == KEYDOWN:\n    if event.key == K_RIGHT:\n      print(\"fl\u00e8che droite appuy\u00e9e\")\n</code></pre> La touche (en anglais key) \u00abFl\u00e8che Droite\u00bb est appel\u00e9e <code>K_RIGHT</code> par <code>pygame</code>. </p> <p>Le nom de toutes les touches peut \u00eatre retrouv\u00e9 \u00e0 l'adresse pygame ref</p> <p>Remarque : c'est gr\u00e2ce \u00e0 la ligne initiale \ud83d\udc0d Script Python<pre><code>from pygame.locals import *\n</code></pre> que la variable <code>K_RIGHT</code> (et toutes les autres) est reconnue.</p>"},{"location":"T08_Extras/3Pygame/pygame/#probleme-de-la-remanence","title":"Probl\u00e8me de la r\u00e9manence","text":"<p>Quand une touche de clavier est appuy\u00e9e, elle le reste un certain temps. Parfois volontairement (sur un intervalle long) quand l'utilisateur d\u00e9cide de la laisser appuy\u00e9e, mais aussi involontairement (sur un intervalle tr\u00e8s court), lors d'un appui \u00abclassique\u00bb. Il existe donc toujours un intervalle de temps pendant lequel la touche reste appuy\u00e9e. Que doit faire notre programme pendant ce temps ? Deux options sont possibles :</p> <ul> <li>option 1 : consid\u00e9rer que la touche appuy\u00e9e correspond \u00e0 un seul et unique \u00e9v\u00e8nement, quelle que soit la dur\u00e9e de l'appui sur la touche.</li> <li>option 2 : consid\u00e9rer qu'au bout d'un certain d\u00e9lai, la touche encore appuy\u00e9e doit d\u00e9clencher un nouvel \u00e9v\u00e8nement.</li> </ul> <p>Par d\u00e9faut,<code>pygame</code> est r\u00e9gl\u00e9 sur l'option 1. N\u00e9anmoins, il est classique pour les jeux vid\u00e9os de vouloir que \u00ablaisser la touche appuy\u00e9e\u00bb continue \u00e0 faire avancer le personnage. Nous allons donc faire en sorte que toutes les 50 millisecondes, un nouvel appui soit d\u00e9tect\u00e9 si la touche est rest\u00e9e enfonc\u00e9e. Cela se fera par l'expression :</p> \ud83d\udc0d Script Python<pre><code>pygame.key.set_repeat(50)\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#le-jeu-de-tennis-a-la-pong","title":"Le jeu de tennis (\u00e0 la Pong)","text":"<p>Pour la cr\u00e9ation du jeu de tennis, nous allons organiser notre code en plusieurs fichiers :</p> <ul> <li>un fichier tennis.py qui sera le programme principal  </li> <li>un fichier constantes.py qui contiendra les constantes utilis\u00e9es par les autres fichiers (hauteur et largeur de fen\u00eatre, couleurs), certaines fonctions...  </li> </ul>"},{"location":"T08_Extras/3Pygame/pygame/#les-packages-utilises","title":"Les packages utilis\u00e9s","text":"<p>On commence par introduire les packages (biblioth\u00e8ques) qui seront utilis\u00e9es :</p> \ud83d\udc0d Script Python<pre><code>import pygame\nfrom pygame.locals import *\nfrom constantes import *\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#les-constantes-du-jeu-fichier-constantespy","title":"Les constantes du jeu : fichier constantes.py","text":"<p>On d\u00e9finit la hauteur et la largeur de la fen\u00eatre ainsi que l'abscisse du mur qui sera situ\u00e9 \u00e0 droite.</p> <p>On d\u00e9finit \u00e9galement un jeu de couleurs.</p> Fichier constantes.py \ud83d\udc0d Script Python<pre><code>import pygame\nfrom pygame.locals import *\nfrom constantes import *\n\n\n# initialisation de l'\u00e9cran de jeu\npygame.init()\n\n\n\npolice = pygame.font.SysFont(\"Arial\", 25)\nfonte = pygame.font.Font(None, 30) \n\n\n# Initialise la fen\u00eatre de jeu\nlargeur_ecran = 600\nhauteur_ecran = 400\n\nscreen = pygame.display.set_mode((largeur_ecran,hauteur_ecran))\npygame.display.set_caption(\"Tennis\")\n\n# variables d'\u00e9tat\n\nhauteur_raquette=50\n\nlargeur_raquette =10\ndist_mur   = 20  # distance du mur au bord de la raquette\n\n\nraquette_G_x = dist_mur\nraquette_G_y = 50\n\n\nball_x = int(largeur_ecran / 2)\nball_y = int(hauteur_ecran / 2)\nball_speed_x = -4\nball_speed_y = -4\nball_rayon  = 10\n\nscore = 0\nvie=2\n\nCOORD_X_MUR = largeur_ecran-20\n\n\n# Definit des couleurs RGB\nBLACK = [0, 0, 0]\nWHITE = [255, 255, 255]\nGREEN = [24, 161, 80]\nRED   = [255, 0, 0]\nBLUE  = [30 , 36 , 161]\nORANGE = [196 , 92 , 54]\n\n#fonctions permettant de dessiner la balle et les deux raquettes\ndef Raquette(x, y):\n  R = (x,y,largeur_raquette,hauteur_raquette)\n  pygame.draw.rect(screen, WHITE, R, 0)\n\ndef Balle(x,y):\n  pygame.draw.circle(screen, WHITE, (x,y),10, 0)\n\ndef Mur():\n  R = (COORD_X_MUR,0,20,hauteur_ecran)\n  pygame.draw.rect(screen, GREEN, R, 0)\n\n\n\ndef touche_clavier():\n  for event in pygame.event.get():\n    if event.type == KEYDOWN:\n      # Ctrl-C pour quitter le jeu\n      if event.key == pygame.K_c and pygame.key.get_mods() &amp; pygame.KMOD_CTRL:\n        quitter()\n      # retourner la touche press\u00e9e \n      return event.key\n    # sinon, ne rien retourner (valeur nulle)\n    return None    \n\ndef attente():\n  while touche_clavier() == None:\n      pygame.display.update()\n\n# initialisation de l'\u00e9cran de jeu\npygame.init()\n\n\n\n\ndef affiche_texte_centre(texte, y=-1, couleur=None):\n  if couleur == None:\n    couleur = ORANGE\n  rendu = fonte.render(texte, True, couleur)\n  rectangle = rendu.get_rect()\n  if y == -1:\n    rectangle.center = ((largeur_ecran) / 2 , (hauteur_ecran) / 2)\n  else:\n    rectangle.center = ((largeur_ecran) / 2 , y)\n  screen.blit(rendu, rectangle)\n\ndef affiche_texte(texte, x, y, couleur=None):\n  if couleur == None:\n    couleur = WHITE\n  rendu = fonte.render(texte, True, couleur)\n  rectangle = rendu.get_rect()\n  rectangle.center = (x, y)\n  screen.blit(rendu, rectangle)\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#le-jeu","title":"Le jeu","text":"<p>On cr\u00e9e la fen\u00eatre de jeu, on utilise la fonte courante et on charge les sons qui seront utilis\u00e9 pour le jeu :</p> <ul> <li>la musique d'ambiance music.mp3  </li> <li>et le bruit de verre bris\u00e9 glass_break.wav qui indique la fin du jeu  </li> </ul> <p>Le jeu se compose de trois parties :</p> <ul> <li>l'\u00e9cran d'accueil qui indique quelles sont les touches pour jouer  </li> <li>le jeu de tennis  </li> <li>la fin de partie qui affiche le score obtenu par le joueur  </li> </ul> tennis.py \ud83d\udc0d Script Python<pre><code>import pygame\nfrom pygame.locals import *\nfrom constantes import *\n\n\n\n\n\n\n\n\n# Gestion du rafraichissement de l'\u00e9cran\nclock = pygame.time.Clock()\n\n# Cache le pointeur de la souris\npygame.mouse.set_visible(0)\n\n\n\n\n###########################################################\n# \u00e9cran d'accueil\n###########################################################\nscreen.fill(BLACK)\naffiche_texte_centre(\"Appuyez sur une touche pour commencer\", 100)\naffiche_texte_centre(\"Fl\u00e8che haut pour faire monter la raquette\", 140)\naffiche_texte_centre(\"Fl\u00e8che bas pour faire descendre la raquette\", 170)\n\nattente()\n\n# Le jeu continue tant que l'utilisateur ne ferme pas la fen\u00eatre\nTermine = False\n\n# Boucle principale de jeu\nwhile not Termine:\n  # recup\u00e8re la liste des \u00e9v\u00e8nements du joueur\n  event = pygame.event.Event(pygame.USEREVENT)\n\n  # dessine le mur de droite\n\n  # EVENEMENTS\n  # d\u00e9tecte le clic sur le bouton close de la fen\u00eatrepygame.Rect\n  for event in pygame.event.get():\n      if event.type == pygame.QUIT:\n        Termine = True\n\n  # r\u00e9cup\u00e8re la liste des touches claviers appuye\u00e9es sous la forme d'une liste de bool\u00e9ens\n  KeysPressed = pygame.key.get_pressed()\n\n  # LOGIQUE\n  # d\u00e9placement du palet gauche\n\n  if KeysPressed[pygame.K_UP]:\n      raquette_G_y -= 3\n\n  if KeysPressed[pygame.K_DOWN]:\n      raquette_G_y += 3\n\n\n  if raquette_G_y &lt; 0 :\n      raquette_G_y = 0\n\n\n  if raquette_G_y &gt; hauteur_ecran - hauteur_raquette :\n      raquette_G_y = hauteur_ecran - hauteur_raquette\n\n  # D\u00e9placement de la balle\n  ball_x += ball_speed_x\n  ball_y += ball_speed_y\n\n  if ball_y &lt; ball_rayon or ball_y &gt; hauteur_ecran - ball_rayon :\n      ball_speed_y *= -1\n\n  # collision entre la balle et le palet de gauche\n  if ball_x  &lt;  dist_mur + largeur_raquette + ball_rayon :\n      if ball_y &gt; raquette_G_y  and  ball_y  &lt;  raquette_G_y + hauteur_raquette :\n          ball_speed_x *= -1\n          score+=1\n\n\n\n  # collision avec les murs gauche et droit\n  if ball_x &lt; ball_rayon :\n      ball_x = int(largeur_ecran / 2)\n      ball_y = int(hauteur_ecran / 2)\n      vie-=1\n\n\n  if ball_x &gt; largeur_ecran - ball_rayon :\n      ball_speed_x *= -1\n\n\n\n  # AFFICHAGE\n  # Dessine le fond\n  screen.fill(BLACK)\n  Mur()\n  Raquette(raquette_G_x, raquette_G_y)\n\n  Balle(ball_x,ball_y)\n\n  #  dessine le texte dans une zone de rendu \u00e0 part\n  texte = \"Votre score : \" + str(score) + \" Vie : \" + str(vie)\n  if score == 15 :\n      texte = \"Joueur GAGNANT\"\n      Termine=True\n  if vie&lt;=0:\n      texte = 'PERDU' \n      Termine=True\n\n\n  zone = police.render( texte, True, GREEN)\n  # affiche la zone de rendu au dessus de fenetre de jeu\n  screen.blit(zone,(280,10))\n\n\n\n  # Bascule l'image dessin\u00e9e \u00e0 l'\u00e9cran\n  pygame.display.flip()\n\n    # Demande \u00e0 pygame de se caler sur 30 FPS\n  clock.tick(30)\n\nscreen.fill( 'black')\ntexte = \"Votre score est de {} points\".format(score)\naffiche_texte_centre(texte,150)\naffiche_texte_centre(\"Appuyez sur une touche pour terminer\", 200)\nattente()\n\n# Ferme la fen\u00eatre\ndel(police)\npygame.quit()\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#le-jeu-pong-en-lui-meme","title":"Le jeu Pong en lui-m\u00eame","text":"<p>A vous</p> <p>Faites votre propre jeu avec une deuxi\u00e8me raquette, meilleur gestion des rebonds, changement de vitesses....</p>"},{"location":"T08_Extras/3Pygame/pygame/#snake-en-python-le-plus-simplement-possible","title":"SNAKE en Python, le plus simplement possible","text":""},{"location":"T08_Extras/3Pygame/pygame/#version-0","title":"Version 0","text":""},{"location":"T08_Extras/3Pygame/pygame/#pygame","title":"Pygame","text":"<p>On importe pygame avec :</p> \ud83d\udc0d Script Python<pre><code>import pygame\nfrom pygame.locals import *\n</code></pre> <p>Le second import sert \u00e0 quitter le jeu propremement.</p>"},{"location":"T08_Extras/3Pygame/pygame/#constantes","title":"Constantes","text":"<p>On cr\u00e9e quelques constantes :</p> \ud83d\udc0d Script Python<pre><code>HAUTEUR = 600  # hauteur de la fenetre\nLARGEUR = 600  # largeur de la fenetre\nBLOC = 20\n\n# Les couleurs utilis\u00e9es\nNOIR = (..., ..., ...)  # fond\nROUGE = (..., ..., ...) # pomme\nJAUNE = (..., ..., ...)  # t\u00eate\nVERT = (..., ..., ...)  # corps\nCYAN = (..., ..., ...)  # texte\n\nFPS = 30\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#initialisation","title":"initialisation","text":"<p>On initialise le jeu :</p> \ud83d\udc0d Script Python<pre><code>pygame.init()\nhorloge = pygame.time.Clock()\nfenetre = pygame.display.set_mode((LARGEUR, HAUTEUR))\npygame.display.set_caption('Snake')\n\npygame.display.update()\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#boucle-infinie","title":"Boucle Infinie","text":"<p>Tous les jeux comportent une boucle infinie. Celle-ci ne contient pas grand chose :</p> <ul> <li>quitter le jeu,  </li> <li>remplir la fen\u00eatre de noir  </li> <li>faire avancer l'horloge  </li> <li>mettre \u00e0 jour les affichages  </li> </ul>"},{"location":"T08_Extras/3Pygame/pygame/#boucle-infinie_1","title":"Boucle infinie","text":"\ud83d\udc0d Script Python<pre><code>while True:\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            pygame.quit()\n        if event.type == KEYDOWN:\n            if event.key == K_ESCAPE:\n                pygame.quit()\n    fenetre.fill(NOIR)\n    horloge.tick(FPS)\n    pygame.display.update()\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#boucle-infinie_2","title":"Boucle infinie","text":"<ul> <li> <p>La boucle <code>for event in...</code> permet de r\u00e9cup\u00e9rer les \u00e9v\u00e9nements \"cliquer sur la croix\" ou \"appuyer sur Escape\" et quitte le jeu dans ce cas.</p> </li> <li> <p>Ensuite on dessine la fen\u00eatre, remplie de noir</p> </li> <li>On fait avancer l'horloge</li> <li>On affiche tout \u00e7a</li> </ul>"},{"location":"T08_Extras/3Pygame/pygame/#version-1","title":"Version 1","text":""},{"location":"T08_Extras/3Pygame/pygame/#ecrire-du-texte","title":"Ecrire du texte","text":"<p>Cette fonction nous permettra d'\u00e9crire facilement le score</p> \ud83d\udc0d Script Python<pre><code>def drawText(text, font, surface, x, y):\n    textobj = font.render(text, 1, CYAN)\n    textrect = textobj.get_rect()\n    textrect.topleft = (x, y)\n    surface.blit(textobj, textrect)\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#taille-de-la-police-valeur-du-score","title":"Taille de la police, valeur du score","text":"\ud83d\udc0d Script Python<pre><code>font = pygame.font.SysFont(None, 48)\n</code></pre> <p>et</p> \ud83d\udc0d Script Python<pre><code>score = 0\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#le-serpent","title":"Le serpent","text":"<p>Le serpent est une double liste</p> \ud83d\udc0d Script Python<pre><code>snake = [[3, 3], [2, 3], [1, 3]]\n</code></pre> <p>Le premier \u00e9l\u00e9ment est sa t\u00eate, elle est en <code>[3,3]</code> ensuite vient son corps. Il commence donc avec une taille de 3.</p>"},{"location":"T08_Extras/3Pygame/pygame/#dessiner-le-serpent","title":"Dessiner le serpent","text":"<p>Dans la boucle infinie, avant l'horloge :</p> \ud83d\udc0d Script Python<pre><code>  for elt in snake[1:]:\n      pygame.draw.rect(fenetre, VERT, (elt[0] * BLOC, elt[1] * BLOC,  BLOC, BLOC))\n  pygame.draw.rect(fenetre, JAUNE, (snake[0][0] * BLOC, snake[0][1] * BLOC, BLOC, BLOC))\n</code></pre> <p>Le corps est vert et la t\u00eate jaune.</p>"},{"location":"T08_Extras/3Pygame/pygame/#afficher-le-score","title":"Afficher le score","text":"<p>On utilise notre fonction cr\u00e9e plus t\u00f4t :</p> \ud83d\udc0d Script Python<pre><code>drawText(str(score), font, fenetre, 0.2*LARGEUR, 0.2*HAUTEUR)\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#version-2","title":"Version 2","text":"<p>On ne capturait que \"Escape\" et le clic sur la croix. On ajoute les fl\u00eaches.</p>"},{"location":"T08_Extras/3Pygame/pygame/#capturer-les-touches-du-jeu","title":"Capturer les touches du jeu","text":""},{"location":"T08_Extras/3Pygame/pygame/#diminuer-la-vitesse-de-rafaichissement","title":"Diminuer la vitesse de rafa\u00eechissement","text":"\ud83d\udc0d Script Python<pre><code>FPS = 5\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#deplacer-le-serpent","title":"D\u00e9placer le serpent","text":"<p>On commence par cr\u00e9er une direction (= la vitesse) en dehors de la boucle infinie</p> \ud83d\udc0d Script Python<pre><code>direction = (1, 0)\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#deplacer-le-serpent_1","title":"D\u00e9placer le serpent","text":"<p>Chaque pression d'une fl\u00eache change la direction :</p> \ud83d\udc0d Script Python<pre><code>    key = pygame.key.get_pressed()\n    if key:\n        if key[pygame.K_UP]:\n            direction = (..., ...)\n        if key[pygame.K_DOWN]:\n            direction = (..., ...)\n        if key[pygame.K_LEFT]:\n            direction = (..., ...)\n        if key[pygame.K_RIGHT]:\n            direction = (..., ...)\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#deplacer-le-serpent_2","title":"D\u00e9placer le serpent","text":"<p>Ensuite la t\u00eate.</p> <p>C'est l'ancienne t\u00eate, qui s'est d\u00e9plac\u00e9e :</p> \ud83d\udc0d Script Python<pre><code>  head = [snake[0][0] + direction[0], snake[0][1] + direction[1]]\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#deplacer-le-serpent_3","title":"D\u00e9placer le serpent","text":"<p>Le corps se d\u00e9place.</p> <ol> <li>On ajoute la t\u00eate au d\u00e9but :</li> </ol> Correction \ud83d\udc0d Script Python<pre><code>  snake.insert(0, head)\n</code></pre> <ol> <li>On perd un \u00e9l\u00e9ment de fin :</li> </ol> Correction \ud83d\udc0d Script Python<pre><code>  snake.pop(-1)\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#version-4","title":"Version 4","text":""},{"location":"T08_Extras/3Pygame/pygame/#la-mort-du-serpent","title":"La mort du serpent","text":"<p>Il meurt :</p> <ul> <li>s'il quitte l'\u00e9cran  </li> <li>si sa t\u00eate est dans son corps  </li> </ul>"},{"location":"T08_Extras/3Pygame/pygame/#la-mort-du-serpent_1","title":"La mort du serpent","text":"Correction \ud83d\udc0d Script Python<pre><code>  if head in snake[1:] or head[0] &lt; 0 or head[0] &gt; LARGEUR / BLOC - 1 or head[1] &lt; 0 or head[1] &gt; HAUTEUR / BLOC - 1:\n   pygame.quit()\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#version-5","title":"Version 5","text":""},{"location":"T08_Extras/3Pygame/pygame/#fluidite","title":"Fluidit\u00e9","text":"<p>Le jeu n'est pas fluide.</p> <p>On va mettre \u00e0 jour les \u00e9l\u00e9ments du jeux toutes les 1.5 secondes et afficher 30 frames par secondes.</p> <p>Il nous faut deux variables suppl\u00e9mentaires :</p> <ol> <li>Une valeur pour d\u00e9cider quand mettre \u00e0 jour  </li> <li>Un compteur  </li> </ol>"},{"location":"T08_Extras/3Pygame/pygame/#fluidite_1","title":"Fluidit\u00e9","text":"\ud83d\udc0d Script Python<pre><code>FPS = 30\nMAJ = 10\n\n# ...\n\n# juste avant la boucle infinie\ncompteur = 0\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#fluidite_2","title":"Fluidit\u00e9","text":"<p>Dans la boucle infinie</p> \ud83d\udc0d Script Python<pre><code>  if compteur == MAJ:\n    compteur = 0\n    head = [snake[0][0] + direction[0], snake[0][1] + direction[1]]\n    # mettre les autres \u00e9v\u00e9nements concernant le snake\n\n  # On augmente le compteur\n  # tout \u00e0 la fin de la boucle infinie\n  compteur += 1\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#nourriture","title":"Nourriture","text":"<p>On cr\u00e9e d'abord une nouvelle liste :</p> \ud83d\udc0d Script Python<pre><code>pomme = [8, 3]\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#nourriture_1","title":"Nourriture","text":"<p>On dessine la pomme comme la t\u00eate, mais en rouge</p> Correction \ud83d\udc0d Script Python<pre><code>pygame.draw.rect(fenetre, ROUGE,(pomme[0] * BLOC, pomme[1] * BLOC, BLOC, BLOC))\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#nourriture_2","title":"Nourriture","text":"<p>Puis on d\u00e9tecte la collision avec la pomme.</p> <p>En cas de collision :</p> <ol> <li>Le score augmente  </li> <li>Une nouvelle pomme est cr\u00e9e.  </li> </ol> <p>La boucle <code>while</code> emp\u00eache la pomme d'appara\u00eetre sur le serpent</p>"},{"location":"T08_Extras/3Pygame/pygame/#nourriture_3","title":"Nourriture","text":"Correction \ud83d\udc0d Script Python<pre><code>from random import randint\n  # ...\n\n  # Dans la boucle infinie\n  if snake[0] == pomme:\n    score += 1\n    while pomme in snake:\n        pomme = [randint(0, LARGEUR / BLOC - 1),\n                randint(0, HAUTEUR / BLOC - 1)]\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#nourriture_4","title":"Nourriture","text":"<p>S'il n'y a pas de collision le serpent diminue, sinon il conserve sa taille</p> \ud83d\udc0d Script Python<pre><code>  else:\n    snake.pop(-1)\n</code></pre>"},{"location":"T08_Extras/3Pygame/pygame/#conclusion","title":"Conclusion","text":"<p>C'est termin\u00e9...</p> <p>Snake en 100 lignes (peu comment\u00e9es) avec le minimum d'instructions. On peut faire beaucoup plus court mais c'est d\u00e9j\u00e0 tr\u00e8s simple</p> <ul> <li>Python permet notamment de cr\u00e9er des jeux,  </li> <li>Cr\u00e9er un jeu avec Pygame n'est pas difficile,  </li> <li>Il nous faut quelques constantes, quelques \u00e9l\u00e9ments de jeu (serpent, t\u00eate)  </li> <li>Une boucle infinie dans laquelle  </li> <li>On lit les saisies de l'utilisateur  </li> <li>On effectue les calculs (nouvelle t\u00eate, collisions etc.)  </li> <li>On met \u00e0 jour les \u00e9l\u00e9ments graphiques  </li> </ul> Code final \ud83d\udc0d Script Python<pre><code>\"\"\"\nSnake simple\nSnake r\u00e9alis\u00e9 \"simplement\" en Pygame avec Python 3.\nN\u00e9cessite Pygame et Python 3.7\n\"\"\"\n# -*- coding: utf-8 -*-\n\n# pour choisir o\u00f9 faire appara\u00eetre la nouvelle pomme\nfrom random import randint\n# la librairie pygame\nimport pygame\n# afin de quitter le jeu proprement\nfrom pygame.locals import *\n\n\n# Les dimensions de la fen\u00eatre\nHAUTEUR = 600  # hauteur de la fenetre\nLARGEUR = 600  # largeur de la fenetre\n# Ainsi que celle d'un carr\u00e9 \u00e0 l'\u00e9cran : 20 pixels\nBLOC = 20\n\n# Les couleurs utilis\u00e9es\nNOIR = (0, 0, 0)  # fond\nROUGE = (193, 68, 51)  # pomme\nJAUNE = (208, 210, 62)  # t\u00eate\nVERT = (97, 195, 73)  # corps\nCYAN = (51, 133, 193)  # texte\n\n# Vitesse de rafa\u00eechissement du jeu\nFPS = 60\n# On effectue les calculs toutes les 15 frames\nMAJ = 15\n\n\n############################################################\n#####################   Fonctions             ##############\n############################################################\n\n\ndef drawText(text, font, surface, x, y):\n'''\n    Dessine du texte \u00e0 l'\u00e9cran\n    @param text: (str) le texte\n    @param font: (pygame.font) la police\n    @param surface: (pygame.surface) la surface sur laquelle \u00e9crire\n    @param x, y: (int) les coordonn\u00e9es du texte\n    '''\n    textobj = font.render(text, 1, CYAN)\n    textrect = textobj.get_rect()\n    textrect.topleft = (x, y)\n    surface.blit(textobj, textrect)\n\n\n############################################################\n#####################   GAME INITIALISATION   ##############\n############################################################\n\n\n# pygame\n# les \u00e9l\u00e9ments indispensables sont init, time.Clock()  et un\n# display\npygame.init()\nhorloge = pygame.time.Clock()\nfenetre = pygame.display.set_mode((LARGEUR, HAUTEUR))\n# titre de la fen\u00eatre\npygame.display.set_caption('Snake')\n\n# taille et type de la fonte\nfont = pygame.font.SysFont(None, 48)\n\n# on met imm\u00e9diatement \u00e0 jour avant de commencer\npygame.display.update()\n\n############################################################\n#####################   GAME LOOP    #######################\n############################################################\n\n# les \u00e9l\u00e9ments du jeu\n# le serpent est un tableau \u00e0 2 dimensions.\n# le premier est la t\u00eate, les suivants le corps\n# chaque \u00e9l\u00e9ment est une liste de cooordonn\u00e9es [abs, ord]\nsnake = [[3, 3], [2, 3], [1, 3]]\ndirection = (1, 0)\npomme = [8, 3]\n\n# le score est un entier\nscore = 0\n\n# compteur de frame pour les mises \u00e0 jour\ncompteur = 0\n\nwhile True:\n    # Saisies de l'utilisateur\n\n    # quitter le jeu\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            pygame.quit()\n\n        if event.type == KEYDOWN:\n            if event.key == K_ESCAPE:\n                pygame.quit()\n\n    # d\u00e9placer le serpent\n    key = pygame.key.get_pressed()\n    if key:\n        if key[pygame.K_UP]:\n            # on change la direction vers le haut\n            direction = (0, -1)\n        if key[pygame.K_DOWN]:\n            # on change la direction vers le bas\n            direction = (0, 1)\n        if key[pygame.K_LEFT]:\n            # on change la direction vers la gauche\n            direction = (-1, 0)\n        if key[pygame.K_RIGHT]:\n            # on change la direction vers la droite\n            direction = (1, 0)\n\n    # Calculs\n    # ils ne sont effectu\u00e9s que toutes les 15 frames\n    if compteur == MAJ:\n        # on reset le compteur\n        compteur = 0\n\n        # la nouvelle t\u00eate est l'ancienne, d\u00e9plac\u00e9e dans la direction\n        head = [snake[0][0] + direction[0], snake[0][1] + direction[1]]\n\n        # on l'ins\u00e8re au d\u00e9but\n        snake.insert(0, head)\n\n        # collision t\u00eate / pomme\n        if snake[0] == pomme:\n            # on augmente le score\n            score += 1\n            # on d\u00e9place la pomme en dehors du corps\n            while pomme in snake:\n                # n\u00e9cessaire de tirer plusieurs fois si on n'a\n                # pas de chance !\n                pomme = [randint(0, LARGEUR / BLOC - 1),\n                        randint(0, HAUTEUR / BLOC - 1)]\n        else:\n            # si le serpent n'a pas mang\u00e9 la pomme, il diminue\n            snake.pop(-1)\n\n        # mort du serpent\n        # s'il touche son corps\n        # ou s'il quitte l'\u00e9cran\n        if head in snake[1:] \\\n                or head[0] &lt; 0 \\\n                or head[0] &gt; LARGEUR / BLOC - 1 \\\n                or head[1] &lt; 0 \\\n                or head[1] &gt; HAUTEUR / BLOC - 1:\n            pygame.quit()\n\n    # Graphiques\n\n    # d'abord on remplit de noir pour cacher les images pr\u00e9c\u00e9dentes\n    fenetre.fill(NOIR)\n    # Ensuite on dessine le corps en vert\n    for elt in snake[1:]:\n        pygame.draw.rect(fenetre, VERT,\n                        (elt[0] * BLOC, elt[1] * BLOC, BLOC, BLOC))\n\n    # la t\u00eate en jaune\n    pygame.draw.rect(fenetre, JAUNE,\n                    (snake[0][0] * BLOC, snake[0][1] * BLOC, BLOC, BLOC))\n\n    # la pomme en rouge\n    pygame.draw.rect(fenetre, ROUGE,\n                    (pomme[0] * BLOC, pomme[1] * BLOC, BLOC, BLOC))\n\n    # le score dans le coin de l'\u00e9cran\n    drawText(str(score), font, fenetre, 0.2 * LARGEUR, 0.2 * HAUTEUR)\n\n    # On met pygame \u00e0 jour\n    # en avan\u00e7ant l'horloge\n    horloge.tick(FPS)\n    # en dessinant les \u00e9l\u00e9ments\n    pygame.display.update()\n    # et comptant les frames\n    compteur += 1\n</code></pre>"},{"location":"T08_Extras/4Divers/1Habitudes/Travail/","title":"Bonnes habitudes de travail","text":""},{"location":"T08_Extras/4Divers/1Habitudes/Travail/#dossiers-fichiers-et-versionning","title":"Dossiers, fichiers et versionning","text":"<p>Cette ann\u00e9e en NSI nous allons manipuler un certain nombre de fichiers. Il est important de les nommer et les classer de fa\u00e7on rigoureuse pour les retrouver rapidement et les partager.</p> Spoiler alert <p>Ces conseils ne sont pas r\u00e9serv\u00e9s \u00e0 NSI, ils peuvent s'appliquer \u00e0 toutes les disciplines...</p> <p>Conseils</p> <ul> <li>Utilisez des dossiers pour classer vos fichiers. Il n'y en a jamais assez.</li> <li>Prenez l'habitude de faire plusieurs sauvegardes de vos documents (sur le r\u00e9seau du lyc\u00e9e, sur l'ENT, sur cl\u00e9 USB).</li> <li>\u00c9vitez dans les noms de fichiers et de dossiers les espaces (utilisez plut\u00f4t _ ) ainsi que les caract\u00e8res accentu\u00e9s et les caract\u00e8res sp\u00e9ciaux.</li> <li>Un nom de fichier doit \u00eatre parlant (un peu comme une variable en fait). On \u00e9vitera de nommer ses codes Python <code>python1.py</code>, <code>python2.py</code>, <code>python3.py</code>, etc. Mais plut\u00f4t <code>1NSI_T7_tri_selection.py</code> par exemple pour un exercice de programmation sur le tri par selection au th\u00e8me 7.</li> <li>Lorsqu'on travaille sur un projet ou un programme cons\u00e9quent, il peut \u00eatre utile de conserver des archives du travail \u00e0 plusieurs \u00e9tapes de l'\u00e9laboration, plut\u00f4t que de ne conserver que la derni\u00e8re version. \u00c0 cet effet on pourra num\u00e9roter : <code>1NSI_projet_morpion_v1.py</code>, puis <code>1NSI_projet_morpion_v2.py</code>, <code>1NSI_projet_morpion_v3.py</code>, etc.</li> </ul>"},{"location":"T08_Extras/4Divers/1Habitudes/Travail/#espace-de-travail","title":"Espace de travail","text":"<p>Il est conseill\u00e9 de travailler avec 3 espaces:</p> <ul> <li>l'\u00e9cran de l'ordinateur partitionn\u00e9 avec les 2 premiers espaces: ce site et un IDE;</li> </ul> <p> </p> <ul> <li>une feuille de papier et un stylo comme troisi\u00e8me espace...</li> </ul>"},{"location":"T08_Extras/4Divers/2Jupyter/Jupyter/","title":"Jupyter","text":""},{"location":"T08_Extras/4Divers/2Jupyter/Jupyter/#notebooks","title":"Notebooks","text":"<p>Jupyter est une application Web utilis\u00e9e pour programmer dans plusieurs langages, en particulier en Python. Jupyter permet de r\u00e9aliser des notebooks, qui sont des documents interactifs contenant \u00e0 la fois des zones de texte (en markdown) et des zones de code informatique, qui peut s'ex\u00e9cuter directement dans la fen\u00eatre.</p> <p>Cela permet donc de suivre des indications et de coder dans la m\u00eame fen\u00eatre. Cela sera particuli\u00e8rement adapt\u00e9 pour des s\u00e9ances d'exercices basiques, plut\u00f4t que d'utiliser un fichier <code>.py</code> \u00e0 chaque fois avec Thonny.</p> <p>Extension</p> <p>L'extension des fichiers notebooks Jupyter est <code>.ipynb</code>.</p> <p>Ex\u00e9cution du code</p> <p>La zone s\u00e9lectionn\u00e9e s'ex\u00e9cute avec le raccourci <code>CTRL+ENTER</code>.</p>"},{"location":"T08_Extras/4Divers/2Jupyter/Jupyter/#au-lycee","title":"Au lyc\u00e9e","text":"Vid\u00e9o <p><p> </p></p>"},{"location":"T08_Extras/4Divers/2Jupyter/Jupyter/#en-ligne","title":"En ligne","text":"<p>Un service Jupyter est int\u00e9gr\u00e9 \u00e0 l'ENT. Il suffit pour cela de lancer l'application depuis le mur des applications de l'ENT.</p> Vid\u00e9o <p><p> </p></p>"},{"location":"T08_Extras/4Divers/3Clavier/Clavier/","title":"Usage du clavier","text":"<p>Utiliser le clavier est souvent bien plus pratique et surtout plus rapide qu'utiliser la souris. Encore faut-il apprendre \u00e0 l'apprivoiser...</p> <p> </p> <p>La s\u00e9lection au clavier</p> <p>Outre les touches <code>DEBUT</code> et <code>FIN</code> qui permettent d'atteindre rapidement le d\u00e9but ou la fin d'une ligne, les fl\u00e8ches directionelles servent \u00e9videmment \u00e0 se d\u00e9placer dans du texte. Mais combin\u00e9es:</p> <ul> <li>\u00e0 la touche <code>CTRL</code> : elles permettent de se d\u00e9placer de mot en mot;</li> <li>\u00e0 la touche <code>MAJ</code> : elles permettent de s\u00e9lectionner un caract\u00e8re;</li> <li>aux touches <code>MAJ</code> et <code>CTRL</code>: elles permettent de s\u00e9lectionner un mot.</li> </ul> <p>De m\u00eame, en se pla\u00e7ant en d\u00e9but d'une ligne et en combinant la touche <code>MAJ</code> et <code>FIN</code>, on s\u00e9lectionne la ligne enti\u00e8re.</p> <p>La touche <code>TAB</code></p> <p> </p> <p>Outre le marquage d'un taquet de tabulation dans un traitement de texte, la touche <code>TAB</code> sert \u00e0 :</p> <ul> <li>passer d'un champ de formulaire \u00e0 un autre dans une page Web. Par exemple lorsque vous vous identifiez \u00e0 un compte, apr\u00e8s avoir tap\u00e9 votre login, plut\u00f4t que d'utiliser la souris pour aller dans le champ \"Mot de passe\", appuyez sur <code>TAB</code> pour y acc\u00e9der directement.</li> <li>ins\u00e9rer un nombre d'espaces fixes : on sert sert pour indenter le code;</li> <li>compl\u00e9ter des commandes enregistr\u00e9es dans un IDE ou un terminal. Par exemple, si vous avez nomm\u00e9 une variable <code>mon_nom_de_variable_tres_tres_long</code>, plus tard dans le code, vous pouvez taper <code>mon</code> + <code>TAB</code> et l'IDE doit vous proposer l'auto-compl\u00e9tion du nom.</li> </ul> <p>Les raccourcis clavier</p> <p>Il existe de tr\u00e8s nombreux raccourcis clavier qui permettent d'ex\u00e9cuter des t\u00e2ches courantes sans passer par les menus du logiciel. Certains sont (quasi-)universels, c'est-\u00e0-dire que ce sont les m\u00eames sur tous les logiciels, d'autres sont sp\u00e9cifiques \u00e0 chaque logiciel. Il est important d'en conna\u00eetre quelques-uns pour \u00eatre plus efficace.</p> Les universelsIDENavigateur Web <ul> <li>La triplette magique <code>CTRL+X</code>, <code>CTRL+C</code>, <code>CTRL+V</code> pour couper, copier, coller;</li> <li><code>CTRL+O</code> pour ouvrir un fichier</li> <li><code>CTRL+N</code> pour cr\u00e9er un nouveau document;</li> <li><code>CTRL+S</code> pour sauvegarder le document en cours;</li> <li><code>CTRL+MAJ+S</code> pour sauvegarder en pr\u00e9cisant le nom du fichier;</li> <li><code>CTRL+Z</code> pour annuler la derni\u00e8re action, <code>CTRL+Y</code> ou <code>CTRL+MAJ+Z</code> pour la r\u00e9tablir;</li> <li><code>CTRL+W</code> pour fermer un onglet;</li> <li><code>CTRL+Q</code> ou <code>ALT+F4</code> pour fermer le logiciel;</li> <li><code>CTRL+A</code> pour s\u00e9lectionner tout (All).</li> </ul> <p>\u00c0 chercher de suite lorsqu'on utilise un nouvel IDE, les raccourcis pour les actions suivantes (entre parenth\u00e8ses ceux de Thonny):</p> <ul> <li>ex\u00e9cuter le code (<code>F5</code>)</li> <li>commenter/d\u00e9commenter une ligne (<code>CTRL+M</code>)</li> </ul> <ul> <li><code>CTRL+T</code> pour ouvrir un nouvel onglet;</li> <li><code>CTRL+H</code> pour ouvrir l'historique;</li> <li>combiner <code>CTRL</code> + clic pour forcer l'ouverture d'un lien dans un nouvel onglet;</li> <li>combiner <code>MAJ</code> + clic pour forcer l'ouverture d'un lien dans une nouvelle fen\u00eatre;</li> </ul>"},{"location":"T08_Extras/4Divers/4Chaines/Strings/","title":"Manipulation de cha\u00eenes de caract\u00e8res","text":"<p>Totalement hors programme, la manipulation des cha\u00eenes de caract\u00e8res (type string, <code>str</code>) peut \u00eatre pourtant bien pratique pour g\u00e9rer l'affichage de certaines sorties de programmes, ou bien pour faire du text parsing dans des fichiers textes.</p> <p>\u00c0 savoir</p> <ul> <li> <p>On \u00e9crit les cha\u00eenes de caract\u00e8res avec des guillemets simples <code>'NSI'</code> ou doubles <code>\"NSI\"</code>. Peu importe, sauf si la cha\u00eene de caract\u00e8res comporte une apostrophe <code>'</code>, auquel cas il est obligatoire d'utiliser les doubles.</p> </li> <li> <p>Une cha\u00eene de caract\u00e8res est un objet iterable: on peut donc le parcourir, r\u00e9cup\u00e9rer sa longueur et ses caract\u00e8res gr\u00e2ce \u00e0 leur indice.</p> </li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; mot = \"Guido\"\n&gt;&gt;&gt; len(mot)\n5\n&gt;&gt;&gt; mot[2]\n'i'\n&gt;&gt;&gt; for l in mot:\n    print(l)\n\nG\nu\ni\nd\no\n&gt;&gt;&gt; \n</code></pre> <ul> <li>Une cha\u00eene de caract\u00e8res est un objet non mutable : on ne peut pas le modifier.</li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; mot = \"Guido\"\n&gt;&gt;&gt; mot[4] = 'e'\nTraceback (most recent call last):\n  File \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nTypeError: 'str' object does not support item assignment\n&gt;&gt;&gt; \n</code></pre> <p>Concat\u00e9nation</p> <p>La concat\u00e9nation de plusieurs cha\u00eenes de caract\u00e8res consiste tout simplement \u00e0 les mettre bout \u00e0 bout. Elle se fait en Python avec l'op\u00e9rateur <code>+</code>. On peut \u00e9galement multiplier une cha\u00eene de caract\u00e8res par un entier1.</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; a = \"truc\"\n&gt;&gt;&gt; b = \"muche\"\n&gt;&gt;&gt; a + b\n'trucmuche'\n&gt;&gt;&gt; 14 * \"miaou\"\n'miaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaou'\n</code></pre> <p>Conversions</p> <ul> <li>On peut convertir un entier, un flottant en cha\u00eene de caract\u00e8res avec la fonction <code>str</code>:</li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; str(2)\n'2'\n&gt;&gt;&gt; str(2.0)\n'2.0'\n</code></pre> <ul> <li>On peut convertir une cha\u00eene de caract\u00e8res en liste avec la fonction <code>list</code>:</li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; list(\"Python\")\n['P', 'y', 't', 'h', 'o', 'n']\n</code></pre> <p><code>split</code> and <code>join</code></p> <ul> <li>On peut d\u00e9couper une cha\u00eene de caract\u00e8res avec la m\u00e9thode <code>split</code>. Sans param\u00e8tre, elle d\u00e9coupe sur le caract\u00e8re espace. Avec un param\u00e8tre de type <code>str</code>, elle d\u00e9coupe selon ce caract\u00e8re. Dans les deux cas, le caract\u00e8re de d\u00e9coupe est supprim\u00e9. Elle retourne une liste.</li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; p = \"Un ordinateur, c'est compl\u00e8tement con.\"\n&gt;&gt;&gt; p.split()\n['Un', 'ordinateur,', \"c'est\", 'compl\u00e8tement', 'con.']\n&gt;&gt;&gt; m = 'Abracadabra'\n&gt;&gt;&gt; m.split('a')\n['Abr', 'c', 'd', 'br', '']\n&gt;&gt;&gt;\n</code></pre> <ul> <li>Dans l'autre sens, on peut fusionner avec la m\u00e9thode <code>join</code> les \u00e9lements d'une liste dont tous les \u00e9l\u00e9ments sont de type <code>str</code>, avec un caract\u00e8re d'insertion entre les \u00e9l\u00e9ments.</li> </ul> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; l = ['P', 'y', 't', 'h', 'o', 'n']\n&gt;&gt;&gt; \"\".join(l)\n'Python'\n&gt;&gt;&gt; \" \".join([\"NSI\", \"c'est\", \"de\", \"l'eau\"])\n\"NSI, c'est de l'eau\"\n</code></pre> <ol> <li> <p>puisque la multiplication par un entier n'est qu'un raccourci pour l'addition de m\u00eames termes.\u00a0\u21a9</p> </li> </ol>"},{"location":"T08_Extras/4Divers/5Trucs/Trucs/","title":"Trucs et astuces","text":""},{"location":"T08_Extras/4Divers/5Trucs/Trucs/#1-recuperer-une-entree-clavier-dans-un-programme","title":"1. R\u00e9cup\u00e9rer une entr\u00e9e clavier dans un programme","text":"<p>Entr\u00e9e clavier</p> <p>En Python, la fonction <code>input</code> permet de faire une pause dans l'ex\u00e9cution du programme et attend que l'utilisateur fasse une entr\u00e9e au clavier (termin\u00e9e bien entendu par la touche <code>ENTER</code>).</p> <p>Cette fonction renvoie cette entr\u00e9e syst\u00e9matiquement sous le type <code>str</code>. Il faudra penser \u00e0 la convertir en <code>int</code> ou <code>float</code> si la saisie attendue est num\u00e9rique.</p> <p>On peut, de fa\u00e7on facultative, pr\u00e9ciser en argument une cha\u00eene de caract\u00e8re qui sera affich\u00e9e au pr\u00e9alable (pratique pour poser une question).</p> <p>Exemples</p> <p>Ces exemples sont \u00e0 tester dans un IDE.</p> Saisie d'un texte (sans argument)Saisie d'un texte (avec argument)Conversion de la saisie en <code>int</code> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; r = input()\nsalut\n&gt;&gt;&gt; r\n'salut'\n&gt;&gt;&gt; type(r)\n&lt;class 'str'&gt;\n&gt;&gt;&gt; \n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; r = input(\"Quel \u00e2ge avez-vous? \")\nQuel \u00e2ge avez-vous? 15\n&gt;&gt;&gt; r\n'15'\n&gt;&gt;&gt; type(r)\n&lt;class 'str'&gt;\n&gt;&gt;&gt; \n</code></pre> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; r = int(input(\"Quel \u00e2ge avez-vous?\"))\nQuel \u00e2ge avez-vous? 15\n&gt;&gt;&gt; r\n15\n&gt;&gt;&gt; type(r)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; \n</code></pre>"},{"location":"T08_Extras/4Divers/5Trucs/Trucs/#2-lincrementation-dune-variable","title":"2. L'incr\u00e9mentation d'une variable.","text":"<p>\u00abIncr\u00e9menter\u00bb une variable signifie l'augmenter. </p> <p>Imaginons une variable appel\u00e9e <code>compteur</code>. Au d\u00e9marrage de notre programme, elle est initialis\u00e9e \u00e0 la valeur 0.  \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; compteur = 0\n</code></pre></p> <p>Consid\u00e9rons qu'\u00e0 un moment du programme, cette variable doit \u00eatre modifi\u00e9e, par exemple en lui ajoutant 1.</p> <p>En Python, cela s'\u00e9crira :</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; compteur = compteur + 1\n</code></pre> <p>Observ\u00e9e avec des yeux de math\u00e9maticien, la pr\u00e9c\u00e9dente instruction est une horreur.</p> <p></p> <p>Vue avec des yeux d'informaticien, voil\u00e0 comment est interpr\u00e9t\u00e9e la commande \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; compteur = compteur + 1\n</code></pre></p> <ol> <li>On \u00e9value la partie droite de l'\u00e9galit\u00e9, donc l'expression <code>compteur + 1</code>.</li> <li>On va donc chercher le contenu de la variable <code>compteur</code>. Si celle-ci n'existe pas, un message d'erreur est renvoy\u00e9.</li> <li>On additionne 1 au contenu de la variable <code>compteur</code>.</li> <li>On \u00e9crase le contenu actuel de la variable <code>compteur</code> avec la valeur obtenue au 3.   </li> </ol> <p>\u00c0 la fin de ces op\u00e9rations, la variable <code>compteur</code> a bien augment\u00e9 de 1.</p> <p>Cette proc\u00e9dure d'incr\u00e9mentation est tr\u00e8s tr\u00e8s classique, il faut la ma\u00eetriser parfaitement !</p> <p>Syntaxe classique et syntaxe Pythonesque </p> <p>L'incr\u00e9mentation d'une variable <code>compteur</code> s'\u00e9crira donc en Python : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; compteur = compteur + 1\n</code></pre> Mais il existe aussi une syntaxe particuli\u00e8re, un peu plus courte :</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; compteur += 1\n</code></pre> Cette syntaxe peut se ranger dans la cat\u00e9gorie des sucres syntaxiques : c'est bien de la conna\u00eetre, c'est amusant de s'en servir, mais son utilisation n'est en rien obligatoire et peut avoir un effet n\u00e9faste, celui d'oublier r\u00e9ellement ce qu'il se passe derri\u00e8re.</p>"},{"location":"T08_Extras/4Divers/5Trucs/Trucs/#3-utilisation-du-module-pil","title":"3. Utilisation du module <code>PIL</code>","text":"<p>Le module <code>PIL</code> permet la cr\u00e9ation et la manipulation d'images.</p> <p>Voir ici .</p>"},{"location":"T08_Extras/4Divers/6c0d1ngUP/CodingUP/","title":"Pr\u00e9paration \u00e0 c0d1ng UP","text":"<p>Le blog pour s'inscrire et avoir toutes les infos.</p> <p>Lecture d'un fichier texte</p> <p>Voici deux principales m\u00e9thodes pour lire un fichier texte \u00e0 l'aide de la fonction <code>open</code> (aucun module requis, elle fait partie des fonctions natives de Python :</p> M\u00e9thode 1: sans traitementM\u00e9thode 2: avec traitement <p>Si on n'a pas besoin de traiter les donn\u00e9es sur chaque ligne du fichier texte, on peut r\u00e9cup\u00e9rer le fichier sous forme d'une liste (<code>data</code> ici), o\u00f9 chaque \u00e9l\u00e9ment sera une ligne du fichier (<code>input.txt</code> ici), de type <code>str</code> bien entendu, avec:</p> \ud83d\udc0d Script Python<pre><code>data = open('input.txt').read().splitlines()\n</code></pre> <p>On peut \u00e9galement parcourir ligne par ligne le fichier ainsi:</p> \ud83d\udc0d Script Python<pre><code>data = []\nwith open('input.txt') as f:\n    for line in f.readlines():\n        data.append(line.strip())\n</code></pre> <p>Ce code est identique \u00e0 la m\u00e9thode 1, mais la boucle <code>for</code> permet de faire un traitement de la cha\u00eene de caract\u00e9res <code>line</code> avant ajout \u00e0 la liste <code>data</code>.</p> <p>Remarque: la m\u00e9thode <code>strip</code> permet de \u00abnettoyer\u00bb la cha\u00eene de caract\u00e8res, c'est-\u00e0-dire ici d'enlever le caract\u00e8re <code>\\n</code> de retour \u00e0 la ligne.</p> <p>Pour s'entra\u00eener:</p> <p>https://pydefis.callicode.fr/defis/EwoksSansA/txt </p> <p>https://pydefis.callicode.fr/defis/EwoksVoyelle/txt </p> <p>D\u00e9fi par requ\u00eate web</p> <p>Ce genre de d\u00e9fi donne deux url: l'une pour r\u00e9cup\u00e9rer les donn\u00e9es (m\u00e9thode GET), l'autre pour envoyer votre r\u00e9ponse (m\u00e9thode POST). On va effectuer des requ\u00eates \u00e0 ces url via le module <code>requests</code>.</p> <p> </p> \ud83d\udc0d Script Python<pre><code>import requests\n\n# On fait une requ\u00eate (GET) \u00e0 la premi\u00e8re adresse (copiez-collez l'adresse):\nr = requests.get(\"http...\")\n\n# On r\u00e9cup\u00e8re le texte contenu dans la page r\u00e9cup\u00e9r\u00e9e:\ndata = r.text.split(\"\\n\") \n\n# On r\u00e9sout le d\u00e9fi !\n# On stocke par exemple la r\u00e9ponse dans une variable nomm\u00e9e... reponse\n\n\n# On r\u00e9pond avec une requ\u00eate (POST) \u00e0 la deuxi\u00e8me adresse (copiez-collez l'adresse).\n# On renvoie en fait un dictionnaire, o\u00f9 \"sig\" est la signature contenue dans la premi\u00e8re\n# ligne du texte (c-a-d data[0]), et o\u00f9 \"rep\" est la valeur de la r\u00e9ponse...\nans = requests.post(\"http...\", {\"sig\": data[0], \"rep\": reponse})\n\n# On affiche le r\u00e9sultat de la requ\u00eate pour contr\u00f4ler\nprint(ans.text) \n</code></pre> <p>Pour s'entra\u00eener:</p> <p>https://pydefis.callicode.fr/defis/ExempleURL/txt </p> <p>https://pydefis.callicode.fr/defis/BaladeEchiquier/txt </p> <p>Les sets</p> <p>Un objet set est une collection d'\u00e9l\u00e9ments comme les listes ou les tuples, \u00e0 la diff\u00e9rence qu'ils ne sont pas tri\u00e9s ni ordonn\u00e9s, et donc on ne peut avoir acc\u00e8s \u00e0 leurs \u00e9l\u00e9ments par indexation.</p> <p>De plus, un set ne peut pas contenir plusieurs \u00e9l\u00e9ments identiques. Il ressemble ainsi \u00e0 un \u00abensemble d'\u00e9l\u00e9ments\u00bb en math\u00e9matiques, et se note comme lui entre accolades.</p> <p>On peut n\u00e9anmoins lui ajouter/supprimer des \u00e9l\u00e9ments, tester l'appartenance, le parcourir, cr\u00e9er l'intersection ou la r\u00e9union de plusieurs sets, etc.</p> <p>Une utilisation des sets permet donc d'\u00e9liminer les doublons. Exemples:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; s1 = {'a', 'e', 'i', 'o', 'u'}\n&gt;&gt;&gt; s2 = set('jack sparrow')\n&gt;&gt;&gt; s2\n{'c', ' ', 'p', 's', 'a', 'k', 'j', 'r', 'w', 'o'}\n&gt;&gt;&gt; set('124512453252514')\n{'5', '4', '3', '1', '2'}\n&gt;&gt;&gt; len(s2)\n10\n&gt;&gt;&gt; 'e' in s1\nTrue\n&gt;&gt;&gt; 'e' in s2\nFalse\n&gt;&gt;&gt; s2.remove(' ')\n&gt;&gt;&gt; s2\n{'c', 'p', 's', 'a', 'k', 'j', 'r', 'w', 'o'}\n&gt;&gt;&gt; s1.add('y')\n&gt;&gt;&gt; s1\n{'y', 'u', 'a', 'e', 'o', 'i'}\n&gt;&gt;&gt; s1 &amp; s2\n{'o', 'a'}\n&gt;&gt;&gt; s1 | s2\n{'u', 'c', 'j', 'r', 'y', 'e', 's', 'a', 'p', 'k', 'i', 'w', 'o'}\n&gt;&gt;&gt; {'u', 'y'} &lt;= s1\nTrue\n</code></pre> <p>Pour plus de d\u00e9tails, voir ici </p> <p>Pour s'entra\u00eener:</p> <p>https://pydefis.callicode.fr/defis/CodeCabine/txt</p> <p>Lire et travailler sur une image</p> <p>\u00c7a se passe l\u00e0 </p> <p>Pour s'entra\u00eener:</p> <p>https://pydefis.callicode.fr/defis/Herculito09Ceinture/txt </p> <p>Slicing</p> <p>Lorsqu'on travaille sur une liste, il peut \u00eatre n\u00e9cessaire (ou pratique) d'extraire une tranche (slice) de cette liste, c'est-\u00e0-dire une succession d'\u00e9l\u00e9ments cons\u00e9cutifs.</p> <p>Par exemple, si on dispose d'une liste <code>[4, 2, 1, 3, 6, 0, 8]</code>, on peut extraire la tranche <code>[2, 1, 3, 6]</code> en pr\u00e9cisant les indices de d\u00e9but et de fin (non inclus, comme dans <code>range</code>). Si on ne pr\u00e9cise pas l'indice de d\u00e9but (respectivement l'indice de fin), on \u00abslice\u00bb depuis le premier \u00e9l\u00e9ment (resp. jusqu'au dernier):</p> <p>\ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; lst = [4, 2, 1, 3, 6, 0, 8]\n&gt;&gt;&gt; lst[1:5]\n[2, 1, 3, 6]\n&gt;&gt;&gt; lst[1:]\n[2, 1, 3, 6, 0, 8]\n&gt;&gt;&gt; lst[:4]\n[4, 2, 1, 3]\n</code></pre> On peut \u00e9galement pr\u00e9ciser un pas : \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; lst[1:5:2]\n[2, 3]\n&gt;&gt;&gt; lst[::2]\n[4, 1, 6, 8]\n</code></pre></p> <p>Cela peut donc \u00eatre utile pour d\u00e9couper une liste en tranches de longueur donn\u00e9e, ici 8 par exemple:</p> \ud83d\udc0d Script Python<pre><code>&gt;&gt;&gt; test = list(range(64))\n&gt;&gt;&gt; test[0:8]\n[0, 1, 2, 3, 4, 5, 6, 7]\n&gt;&gt;&gt; test[8:16]\n[8, 9, 10, 11, 12, 13, 14, 15]\n&gt;&gt;&gt; tranches = [test[8*k:8*(k+1)] for k in range(len(test)//8)]\n&gt;&gt;&gt; tranches\n[[0, 1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15], [16, 17, 18, 19, 20, \n21, 22, 23], [24, 25, 26, 27, 28, 29, 30, 31], [32, 33, 34, 35, 36, 37, 38, 39],\n[40, 41, 42, 43, 44, 45, 46, 47], [48, 49, 50, 51, 52, 53, 54, 55], [56, 57, 58\n, 59, 60, 61, 62, 63]]\n</code></pre> <p>Pour s'entra\u00eener:</p> <p>https://pydefis.callicode.fr/defis/Fourchelangue/txt </p>"},{"location":"T08_Extras/4Divers/7Processing/Accueil_processing/","title":"Prise en main de Processing","text":"<p>  Processing est un outil de cr\u00e9ation multim\u00e9dia utilisant le code informatique. Simple de prise en main, il a \u00e9t\u00e9 cr\u00e9\u00e9 par des artistes pour des artistes. On peut utiliser le langage Python pour entrer les instructions.</p> <p>Nous l'utiliserons pour ajouter du graphisme \u00e0 nos cr\u00e9ations...</p> Documentation <ul> <li>Le site officiel (anglais) </li> <li>Un manuel d'utilisation (fran\u00e7ais) </li> </ul> <p> </p>"},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/","title":"Les bases de Processing","text":""},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/#repere","title":"Rep\u00e8re","text":"<p>\u00c0 l'ex\u00e9cution de tout script Processing, une fen\u00eatre s'affiche avec une zone de dessin qu'on appelle g\u00e9n\u00e9ralement canevas (canvas in english). Sa taille se d\u00e9finit \u00e0 l'aide de la fonction <code>size</code>. Par exemple, pour cr\u00e9er un canevas de 300 pixels sur 200 pixels, on utilisera:</p> \ud83d\udc0d Script Python<pre><code>size(300, 200)\n</code></pre> <p>Chaque pixel de cette zone est rep\u00e9r\u00e9e par des coordonn\u00e9es dans le rep\u00e8re suivant, dont l'origine se situe en haut \u00e0 gauche et l'axe des ordonn\u00e9es est orient\u00e9 vers le bas.</p> <p> </p>"},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/#traces","title":"Trac\u00e9s","text":"<p>Trac\u00e9s de base</p> <ul> <li><code>point</code> : permet de dessiner un point (pixel). En param\u00e8tre, les coordonn\u00e9es du point.</li> <li><code>line</code>: permet de tracer une ligne entre deux points. En param\u00e8tres, les coordonn\u00e9es des deux points.</li> <li><code>rect</code>: permet de tracer un rectangle. En param\u00e8tres, les coordonn\u00e9es du sommet haut-gauche, puis la largeur et la hauteur du rectangle.</li> <li><code>ellipse</code>: permet de tracer une ellipse. En param\u00e8tres, les coordonn\u00e9es du centre, puis la largeur et la hauteur (mettre la m\u00eame valeur pour un cercle).</li> </ul> Exemples <p>Copier-coller le code suivant et faire varier les param\u00e8tres pour bien les comprendre.</p> \ud83d\udc0d Script Python<pre><code>background(255)\nrect(90, 50, 20, 100)\nfill(244, 164, 96)\nellipse(100, 70, 60, 60)\nfill(255, 255, 255)\nellipse(81, 70, 16, 32)\npoint(81, 70)\nellipse(119, 70, 16, 32)\npoint(119, 70)\nline(90, 150, 80, 160)\nline(110, 150, 120, 160)\n</code></pre>"},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/#couleurs","title":"Couleurs","text":"<p>Pinceau</p> <ul> <li><code>background</code>: permet de d\u00e9finir la couleur du fond de la zone de dessin. En param\u00e8tres, les trois composantes RGB de la couleur.</li> <li><code>stroke</code>: permet de d\u00e9finir la couleur du pinceau (noir par d\u00e9faut) pour le contour de la forme. En param\u00e8tres, les trois composantes RGB de la couleur.</li> <li><code>noStroke</code>: permet de dessiner une forme sans coutour (pas de param\u00e8tre).</li> <li><code>strokeWeight</code>: permet de d\u00e9finir la largeur du pinceau. En param\u00e8tre, le nombre de pixel.</li> <li><code>fill</code>: permet de d\u00e9finir la couleur de remplissage de la forme. En param\u00e8tres, les trois composantes RGB de la couleur.</li> </ul> Exemples <p>Copier-coller le code suivant et faire varier les param\u00e8tres pour bien les comprendre.</p> \ud83d\udc0d Script Python<pre><code>background(255)\nfill(255, 0, 0)\nrect(90, 50, 20, 100)\nnoStroke()\nfill(244, 164, 96)\nellipse(100, 70, 60, 60)\nstroke(1)\nfill(255, 255, 255)\nellipse(81, 70, 16, 32)\npoint(81, 70)\nellipse(119, 70, 16, 32)\nstrokeWeight(5)\npoint(119, 70)\nstrokeWeight(2)\nline(90, 150, 80, 160)\nline(110, 150, 120, 160)\n</code></pre>"},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/#exercice","title":"Exercice","text":"<p>Exercice  1</p> <p></p> <p>Dans un canevas de 300 x 200 pixels, dessiner successivement les drapeaux fran\u00e7ais, japonais puis tch\u00e8que.</p> <p>Consulter la documentation pour les triangles ou polygones (Menu \"Help\", puis \"References\").</p>"},{"location":"T08_Extras/4Divers/7Processing/02_Animations/T10.2_Animations/","title":"Animations","text":"<p>Le principe</p> <p>Processing propose 2 fonctions pr\u00e9d\u00e9finies que le programmeur devra compl\u00e9ter :</p> <ul> <li>la fonction <code>setup</code> qui sera appel\u00e9e une seule fois d\u00e8s le d\u00e9but de l\u2019ex\u00e9cution du programme ;</li> <li>la fonction <code>draw</code> qui sera appel\u00e9e \u00e0 chaque image \u00e0 raison de 60 images par d\u00e9faut (on peut r\u00e9gler les FPS avec la fonction <code>frameRate</code> ).</li> </ul> <p>Ces deux fonctions ne prennent aucun param\u00e8tre et ne retournent aucune valeur.</p> <p>Exemple</p> \ud83d\udc0d Script Python<pre><code>r = 2\ndr = 2\ndef setup():\n    size(400, 400)\n    stroke(255, 0, 0)\n    fill(0)\n    # frameRate(20)\ndef draw():\n    global r, dr\n    background(255)\n    ellipse(200, 200, 2*r, 2*r)\n    if r &lt; 2 or r &gt; 200:\n        dr = -dr\n    r = r + dr\n</code></pre> Explication du code Les variablesLa fonction <code>setup</code>La fonction <code>draw</code> <p>On d\u00e9finit deux variables <code>r</code> pour le rayon du disque et <code>dr</code> pour la quantit\u00e9 ajout\u00e9e \u00e0 ce rayon \u00e0 chaque image (frame).</p> <p>Avec Processing, il est imp\u00e9ratif de pr\u00e9ciser que ce sont des variables globales pour pouvoir les utiliser dans la fonction <code>draw</code> (ligne 9).</p> <p>On d\u00e9finit la taille de la zone de dessin, la couleur du contour (rouge) et du remplissage (noir).</p> <p>C'est ici qu'on d\u00e9crit ce qui doit se passer \u00e0 chaque image: on augmente le rayon <code>r</code> de la quantit\u00e9 <code>dr</code>, qu'on passe \u00e0 son oppos\u00e9 d\u00e8s que le rayon devient trop grand ou trop petit pour alterner augmentation et diminution.</p> <p>Exercice  2</p> <ol> <li>\u00c9crire un programme permettant d\u2019avoir une balle rouge (cr\u00e9\u00e9e avec la fonction ellipse), de rayon constant cette fois,  qui traverse la zone de dessin de gauche \u00e0 droite.</li> <li>Am\u00e9liorer le programme pour que la balle rebondisse sur les bords de la zone.</li> <li>Modifier le programme pour permettre \u00e0 la balle de se d\u00e9placer en diagonale. La position de d\u00e9part, la vitesse de d\u00e9part ainsi que la direction de d\u00e9part pourront \u00eatre al\u00e9atoires. Les rebonds sur les bords de la fen\u00eatre devront rester r\u00e9alistes.</li> </ol>"},{"location":"T08_Extras/4Divers/7Processing/03_Interactions/T10.3_Interactions/","title":"Interactions clavier et souris","text":"<p>Nous allons maintenant nous int\u00e9resser \u00e0 l'interaction avec l'utilisateur. Pour l'instant (Processing offre \u00e9norm\u00e9ment de possibilit\u00e9s) nous allons nous contenter de la souris et du clavier.</p>"},{"location":"T08_Extras/4Divers/7Processing/03_Interactions/T10.3_Interactions/#souris","title":"Souris","text":"<p>Fonctions r\u00e9serv\u00e9es</p> <p>Processing propose 4 fonctions qui devront \u00eatre compl\u00e9t\u00e9es par le programmeur :</p> <ul> <li>le code se trouvant dans la fonction <code>mousePressed</code> est ex\u00e9cut\u00e9 \u00e0 chaque fois que l'utilisateur appuie sur un des boutons de la souris.</li> <li>le code se trouvant dans la fonction <code>mouseReleased</code>  est ex\u00e9cut\u00e9 \u00e0 chaque fois qu'un bouton de la souris qui avait \u00e9t\u00e9 pr\u00e9alablement press\u00e9 est rel\u00e2ch\u00e9.</li> <li>le code se trouvant dans la fonction <code>mouseMoved</code>  est ex\u00e9cut\u00e9 \u00e0 chaque image tant que la souris se d\u00e9place.</li> <li>le code se trouvant dans la fonction <code>mouseDragged</code>  est est ex\u00e9cut\u00e9 \u00e0 chaque image tant que la souris se d\u00e9place et que le bouton de la souris est enfonc\u00e9.</li> </ul> <p>Ces 4 fonctions ne prennent aucun param\u00e8tre et ne retournent aucune valeur.</p> <p>De plus les variables <code>mouseX</code> et <code>mouseY</code> permettent de r\u00e9cup\u00e9rer la position de la souris.</p> <p>Exemple</p> \ud83d\udc0d Script Python<pre><code>def setup():\n    global x, y, r\n    size(400, 400)\n    noStroke()\n    fill(0)\n    r = 10\n    x = 200\n    y = 200\n\ndef mousePressed():\n    global x, y, r\n    r = r + 100\n    x = mouseX\n    y = mouseY\n\ndef mouseReleased():\n    global r\n    r = r - 100\n\ndef draw():\n    global x, y, r\n    background(255)\n    ellipse(x, y, 2*r, 2*r)\n</code></pre> <p>Exercice  3</p> <p>\u00c9crire un programme qui permettra d\u2019afficher un nouveau carr\u00e9 \u00e0 chaque clic de souris (sans effacer les carr\u00e9s d\u00e9j\u00e0 pr\u00e9sents). Le centre du carr\u00e9 devra se trouver au niveau du pointeur de la souris au moment du clic. La couleur du carr\u00e9 devra \u00eatre al\u00e9atoire.</p>"},{"location":"T08_Extras/4Divers/7Processing/03_Interactions/T10.3_Interactions/#clavier","title":"Clavier","text":"<p>Fonctions r\u00e9serv\u00e9es</p> <p>Processing propose 2 fonctions qui devront \u00eatre compl\u00e9t\u00e9es par le programmeur :</p> <ul> <li>le code se trouvant dans la fonction <code>keyPressed</code> est ex\u00e9cut\u00e9 \u00e0 chaque fois que l\u2019utilisateur enfonce une touche ;</li> <li>le code se trouvant dans la fonction <code>keyReleased</code> est ex\u00e9cut\u00e9 quand une touche du clavier est rel\u00e2ch\u00e9e.</li> </ul> <p>Ces 2 fonctions ne prennent aucun param\u00e8tre et ne retournent aucune valeur.</p> <p>De plus la variable <code>key</code> (ou <code>keyCode</code> pour les touches non ASCII1)  r\u00e9cup\u00e8re la touche press\u00e9e.</p> <p>Exemple</p> \ud83d\udc0d Script Python<pre><code>def setup():\n    size(200, 200)\n    textAlign(CENTER)\n    background(255)\n\ndef keyPressed():\n    if key == 'n':\n        background(0)\n        fill(255)\n        text(\"NUIT\", 100, 100)\n    elif key == 'j':\n        background(255)\n        fill(0)   \n        text(\"JOUR\", 100, 100)\n    elif key == ENTER:\n        background(255, 0, 0)\n    elif key == ' ':\n        background(0, 0, 255)\n    elif key == CODED:\n        if keyCode == UP:\n            background(127)\n            fill(0) \n            text(\"Compris?\", 100, 100)\n\ndef draw():\n    pass\n</code></pre> <p>Exercice  4</p> <p>\u00c9crire un programme permettant d\u2019afficher une balle noire qui pourra \u00eatre d\u00e9plac\u00e9e \u00e0 l\u2019aide des fl\u00e8ches du clavier. La balle ne devra pas pouvoir sortir de la fen\u00eatre.</p> <p>Exercice  5</p> <p>Reprendre l\u2019animation de la balle qui rebondit sur les bords de la fen\u00eatre et le modifier pour qu\u2019un clic sur la balle change sa couleur et l\u2019acc\u00e9l\u00e8re.</p> <p>Pour d\u00e9tecter si un clic a lieu sur la balle, il faut calculer la distance entre le centre de la balle et le clic de la souris et savoir si elle est inf\u00e9rieure au rayon de la balle.</p> <p>On pourra utiliser la fonction suivante:</p> <p>\ud83d\udc0d Script Python<pre><code>def distance(x1, y1, x2, y2):\n    return ((x1 - x2)**2 + (y1 - y2)**2) ** 0.5\n</code></pre> Facultatif : on peut ajouter un compteur du nombre de clics sur la balle.</p> <ol> <li> <p>les fl\u00e8ches directionnelles (UP, DOWN, RIGHT, LEFT) ainsi que ALT, CONTROL, SHIFT.\u00a0\u21a9</p> </li> </ol>"},{"location":"T08_Extras/5MiniProjet/dessine_ta_rue/","title":"Mini-Projet 2 :   Dessine ta rue","text":"<p>objectif</p> <p>On souhaite \u00e9crire un programme qui permet de g\u00e9n\u00e9rer \u00ab al\u00e9atoirement \u00bb le dessin d\u2019une rue d'immeuble.</p> <p>Cahier des charges</p> <p>Voici ci-dessous un exemple de ce que devrait donner votre programme lorsque vous le lancerez :</p> <p></p> <p></p> <p>Cahier des charges :</p> <p>Pour cela, vous utiliserez le module turtle dont le principe est de suivre dans une fen\u00eatre l\u2019\u00e9volution d\u2019une tortue (symbolis\u00e9e par une fl\u00e8che) qui suivra vos instructions \u00e0 la lettre.</p> <p>Les contraintes urbanistiques sont les suivantes :</p> <ul> <li>les immeubles ont au minimum un rez-de-chauss\u00e9e et au maximum 4 \u00e9tages (5 niveaux) ;  </li> <li>les immeubles ont une couleur unique pour toute la fa\u00e7ade ;  </li> <li>les rez-de-chauss\u00e9e n'ont qu'une seule porte ;  </li> <li>Tout le reste est libre et peut donc \u00eatre \u00ab personnalis\u00e9 \u00bb.  </li> </ul> <p>Information</p> <p>Les fonctions sont donn\u00e9es avec certains param\u00e8tres, vous pouvez rajouter un param\u00e8tre couleur par exemple...</p> <p>Aide Construction</p> <ul> <li>Penser \u00e0 faire un dessin, utiliser des coorodnn\u00e9es et \u00e0 utiliser la fonction <code>goto(x,y)</code>. </li> <li>Les murs, fen\u00eatres et portes ne sont que des rectangles.  </li> <li>Un immeuble est un assemblage de murs, porte et fen\u00eatres.</li> <li>...</li> </ul> <p>Pour la couleur, vous avez \u00e0 votre disposition le code suivant :</p> \ud83d\udc0d Script Python<pre><code>from turtle import *\nfrom random import *\n\ndef couleur_aleatoire():\n'''Renvoie une cha\u00eene de caract\u00e8res correspondant \u00e0 une couleur al\u00e9atoire opaque.'''\n    s, hexa_chars = \"#\", \"0123456789abcdef\"\n    for _ in range(6):\n        s = s + choice(hexa_chars)\n    #s = s + '11'                                      #&lt;---- rajoute de la transparence\n    return s\n</code></pre> <p>Question 1</p> <p>Impl\u00e9menter la fonction <code>sol(y)</code> qui trace un trait pour d\u00e9finir le niveau de la rue.</p> \ud83d\udc0d Script Python<pre><code>def sol(y):\n'''\n    Param\u00e8tres\n        y : ordonn\u00e9e du sol du la rue\n    '''\n</code></pre> <p>Question 2</p> <p>Impl\u00e9menter la fonction mur(x,y,w,h) qui permet de tracer les murs d'une maison (un rectangle), vous pouvez rajouter un param\u00e8tre couleur.</p> \ud83d\udc0d Script Python<pre><code>def mur(x,y,w,h):\n'''\n    Param\u00e8tres\n        x, y : coordonn\u00e9es du centre de la base de rectangle\n        w : largeur du rectangle\n        h : hauteur du rectangle\n    '''\n</code></pre> <p>Question 3</p> <p>Impl\u00e9menter la fonction fenetre(x,y,w,h) qui permet de tracer une fen\u00eatre</p> \ud83d\udc0d Script Python<pre><code>def fenetre(x,y,w,h):\n'''\n    Param\u00e8tres\n        x, y : coordonn\u00e9es du centre de la base de rectangle\n        w : largeur de la fen\u00eatre\n        h : hauteur de la fen\u00eatre\n    '''\n</code></pre> <p>Question 4</p> <p>Impl\u00e9menter la fonction <code>toit(x,y,w,h)</code> qui permet de tracer un toit (envisager plusieurs mod\u00e8les).</p> <p>Question 5</p> <p>Impl\u00e9menter la fonction <code>porte(x,y,w,h)</code> qui permet de tracer une porte (envisager plusieurs mod\u00e8les).</p> <p>Question 6</p> <p>Impl\u00e9menter la fonction <code>immeuble(x,y,w,h)</code> qui permet de tracer un immeuble avec un nombre al\u00e9atoire d'\u00e9tage et utilsera les fonctions <code>toit(x,y,w,h)</code>, <code>porte(x,y,w,h)</code>, <code>fenetre(x,y,w,h)</code> et <code>mur(x,y,w,h)</code> au minimum .</p> <p>Question 7</p> <p>Impl\u00e9menter la fonction <code>ville()</code>. La fonction fera appel \u00e0 <code>immeuble(x,y,w,h)</code></p> \ud83d\udc0d Script Python<pre><code>def ville():\n\"\"\"\n    C'est une fonction qui permet de cr\u00e9er une ville avec des batiments \n    de tailles et couleurs differentes. Elle est lanc\u00e9e automatiquement\n    \"\"\"\n</code></pre> <p></p>"},{"location":"T08_Extras/5MiniProjet/logo/","title":"Mini-Projet 1 :   D\u00e9fi Logo Sprint","text":"<p>Objectif</p> <p>Nous allons suivre une d\u00e9marche de projet pour cr\u00e9er un logo num\u00e9rique \u00e0 l\u2019aide de python et turtle. (le faire \u00e0 partir d\u2019un logiciel de traitement d\u2019image serait trop simple ...)</p> <p>Reprise de Deezer</p> <p></p> <p>Cahier des charges :</p> <p>Logo num\u00e9rique original qui contient :  </p> <p>\u2022 Plusieurs colonnes de rectangles, carr\u00e9s, polyg\u00f4nes ou de cercles color\u00e9s. \u2022 Un texte au choix en dessous de ces colonnes . \u2022 Des couleurs vari\u00e9s. \u2022 Le code est bas\u00e9 sur des fonctions et des boucles pour \u00e9viter les r\u00e9p\u00e9titions.  </p> <p>Ressources autres</p> <p>tutoriel turtle</p>"},{"location":"T08_Extras/5MiniProjet/logo/#le-sprint","title":"Le \u00ab sprint \u00bb","text":"<p>Windows retro</p> <p></p> 5\u2019 R\u00e9partition des t\u00e2ches 30\u2019 1\u00e8re session de travail 5\u2019 Point d\u2019\u00e9tape 1 \u2022 Mise en commun : qu\u2019est-ce qui marche ? Ne marche pas ? ... \u2022 Echange et nouvelle r\u00e9partition de t\u00e2ches en fonction des difficult\u00e9s. 30\u2019 2nde session de travail 5\u2019 Point d\u2019\u00e9tape 2 \u2022 Mise en commun : premi\u00e8re version. \u2022 Elaboration des protocoles de tests 20\u2019 3\u00e8me session de travail \u2022 Tests et corrections finales 5\u2019 Final \u2022 Mise en commun et rendu final"},{"location":"T08_Extras/5MiniProjet/logo/#conseils","title":"CONSEILS","text":"<p>\u2022 Description et r\u00e9partition des t\u00e2ches pr\u00e9cise  </p> Description de la t\u00e2che Ordre / Priorit\u00e9 Temps allou\u00e9 Qui ? Crit\u00e8res de validation ... ... ... ... <p>\u2022 Se mettre d\u2019accord sur les noms de variables et les E/S d\u2019\u00e9ventuels fonctions \u2022 PDCA (Plan, Do, Check, Act) Imaginer \u2192 Tester \u2192 V\u00e9rifier \u2192 Modifier \u2026 etc \u2022 Ne pas oublier de documenter par des commentaires pr\u00e9cis. \u2022 Les diff\u00e9rents codes r\u00e9alis\u00e9s sont \u00e0 regrouper dans un m\u00eame programme.  </p>"},{"location":"T08_Extras/5MiniProjet/logo/#evaluation","title":"Evaluation","text":""},{"location":"T08_Extras/5MiniProjet/logo/#fonctionnalites-minimales-demandees","title":"Fonctionnalit\u00e9s minimales demand\u00e9es :","text":"\u2022 Colonne de formes /2 \u2022 Texte /2 \u2022 Formes color\u00e9es /2 \u2022 Couleur de fond /2"},{"location":"T08_Extras/5MiniProjet/logo/#fonctionnalites-plus-1pt-par-fct","title":"Fonctionnalit\u00e9s plus : ( +1pt par fct)","text":"\u2022 Recherches d\u2019images/formes originales \u2022 Autre... \u2022 Choix des param\u00e8tres du logo \u00e0 cr\u00e9er"},{"location":"T08_Extras/5MiniProjet/logo/#code","title":"Code :","text":"\u2022 Lisibilit\u00e9 du code, clart\u00e9 /2 \u2022 Utilisation de fonctions /2 \u2022 Variables explicites /2 \u2022 Utilisation de boucles for ou while /2 \u2022 Commentaires pertinents /2"},{"location":"T09_Evaluations/DS_portes_logiques/","title":"C8 Les instructions conditionnelles","text":""},{"location":"T09_Evaluations/DS_portes_logiques/#partie-a-qcm","title":"Partie A QCM","text":"<p>Exo</p> <p>1. Parmi les quatre expressions suivantes, laquelle s'\u00e9value en True ?</p> <ul> <li> a) False and (True and False)</li> <li> b) False or (True and False)</li> <li> c) True and (True and False)</li> <li> d) True or (True and False)</li> </ul> <p>2. Sachant que l'expression not(a or b) a la valeur True, quelles peuvent \u00eatre les valeurs des variables bool\u00e9ennes a et b ?</p> <ul> <li> a) True et True</li> <li> b) False et True</li> <li> c) True et False</li> <li> d) False et False</li> </ul> <p>3. Pour quelles valeurs bool\u00e9ennes des variables a, b et c l'expression (a or b) and (not c) a-t-elle pour valeur True</p> <ul> <li> a) a = True b = False c = True</li> <li> b) a = True b = False c = False</li> <li> c) a = False b = False c = True</li> <li> d) a = False b = True c = True</li> </ul> <p>4. Si A et B sont des variables bool\u00e9ennes, laquelle de ces expressions bool\u00e9ennes est \u00e9quivalente \u00e0 (not A) or B ?</p> <ul> <li> a) (A and B) or (not A and B)</li> <li> b) (A and B) or (not A and B) or (not A and not B)</li> <li> c) (not A and B) or (not A and not B)</li> <li> d) (A and B) or (not A and not B)</li> </ul> <p>5. Quel est l'op\u00e9rateur bool\u00e9en qui vaut 1 seulement lorsque les deux op\u00e9randes valent 1 ?</p> <ul> <li> a) Or</li> <li> b) And</li> <li> c) Nor</li> <li> d) Nand</li> </ul> <p>6. Parmi les propositions suivantes, quelle expression est \u00e9gale \u00e0\u00a0<code>not(a and b)</code>\u00a0?</p> <ul> <li> a) <code>(not a) and (not b)</code></li> <li> b) <code>(not a) or (not b)</code></li> <li> c) <code>(not a) and  b</code></li> <li> d) <code>a and (not b)</code></li> </ul> <p>7. Quelles sont les valeurs manquantes dans la table de v\u00e9rit\u00e9 suivante :</p> a b not a b or (not a) 0 0 1 1 0 1 1 1 1 0 ? ? 1 1 0 1 <ul> <li> a) 0 et 0</li> <li> b) 0 et 1</li> <li> c) 1 et 0</li> <li> d) 1 et 1</li> </ul> <p>8. Si <code>a</code> vaut <code>True</code> et <code>b</code> vaut <code>False</code>, que vaut l'expression <code>not(a and b)</code> ?</p> <ul> <li> a) <code>False</code></li> <li> b) <code>True</code></li> <li> c) Cette expression renvoie une erreur</li> <li> d) <code>None</code></li> </ul> <p>9. Si l'expression <code>not(a or b)</code> vaut True, alors les valeurs possibles de <code>a</code>et <code>b</code> sont :</p> <ul> <li> a) <code>True</code> et <code>True</code></li> <li> b) <code>True</code> et <code>False</code></li> <li> c) <code>False</code> et <code>True</code></li> <li> d) <code>False</code> et <code>False</code></li> </ul> <p>10. Sur le sch\u00e9ma de circuit suivant, quelles sont les valeurs des sorties <code>A</code> et <code>B</code> ?</p> <p></p> <ul> <li> a) <code>A=0</code> et <code>B=0</code></li> <li> b) <code>A=0</code> et <code>B=1</code></li> <li> c) <code>A=1</code> et <code>B=0</code></li> <li> d) <code>A=1</code> et <code>B=1</code></li> </ul>"},{"location":"T09_Evaluations/DS_portes_logiques/#partie-b-sur-feuille","title":"Partie B : Sur feuille","text":"<p>Exo</p> <p>Montrer l'\u00e9galit\u00e9 suivante : not(A or B) = not(A) and not(B)</p> <p>Exo</p> <p>Donner la table de v\u00e9rit\u00e9 de : S = (A or B) and ( not(A) or B) Quelle \u00e9galit\u00e9 bool\u00e9enne peut-on d\u00e9duire ?  </p> <p>Exo</p> <p>Donner la table de v\u00e9rit\u00e9 de : S = (A and B) or (A and not(C)) or (not(A) and C)</p> <p>Exo</p> <p>Donner la table de v\u00e9rit\u00e9 de : S = (NOT(A) and B) or (A and C)  </p> <p>Exo</p> <p>Donner la table de v\u00e9rit\u00e9 de : S = (A nor B) or (A nand B)</p> <p>Exo</p> <p>On donne le sch\u00e9ma ci-dessous, donner son expression et sa table de v\u00e9rit\u00e9.</p> <p></p>   \\pagebreak"},{"location":"T09_Evaluations/DS_portes_logiques/#partie-c-sur-machine","title":"Partie C : sur machine","text":"<p>Exo</p> <p>Construire le circuit suivant : not(A or B) = not(A) and not(B)</p> <p>Exo</p> <p>Construire : S = (A or B) and ( not(A) or B)  </p> <p>Exo</p> <p>Construire : S = (NOT(A) and B) or (A and C)  </p> <p>Exo</p> <p>Construire : S = (A and B) or (A and not(C)) or (not(A) and C)</p> <p>Exo</p> <p>Reproduire le sch\u00e9ma ci-dessous, et donner sa table de v\u00e9rit\u00e9.</p> <p></p>"},{"location":"T09_Evaluations/Evaluation_C_Corrige_T6_1_Les_boucles_FOR/","title":"Evaluation C Corrige T6 1 Les boucles FOR","text":"Th\u00e8me 6 - Langages et programmation                           Evaluation              Les Boucles FOR en Python - Evaluation <p>Devoir \u00e0 faire avec des points bonus sur les derniers exercices. N'oublier pas d'enregistrer r\u00e9guli\u00e8rement votre travail. A la fin penser \u00e0 rendre votre travail. Bon courage \u00e0 vous.</p> Exercice 1 :  La punition     Ecrire un programme qui demande \u00e0 l'utilisateur un message et le nombre de foisqu'il faut afficher ce message.     \ud83d\udc0d Script Python<pre><code>msg=input('Donner le texte \u00e0 rep\u00e9ter : ')\nnb_de_fois=int(input(\"donner le nombre de fois qu'il faut r\u00e9p\u00e9ter le texte : \" ))\nfor k in range(nb_de_fois):\n    print(msg)\n</code></pre> Exercice 2 :  Ecrire un programme qui calcule et affiche le produit 87x52 en n'effectuant que des additions.     \ud83d\udc0d Script Python<pre><code>resultat=0\nfor k in range(87):\n    resultat+=52\nprint(resultat)\n</code></pre> Exercice 3 :  Ecrire un programme qui demande \u00e0 l'utilisateur de saisir un nombre entier, puis qui affiche la table de multiplication correspondande.         Quel table voulez-vous afficher ? 7      7 x 1 = 7     7 x 2 = 14     7 x 3 = 21     ...  \ud83d\udc0d Script Python<pre><code>nb=int(input(\"Quelle table de multiplication voulez-vous afficher ? )\"))\nprint(f\"Table de {nb} : \")\nfor k in range(11):\n    print(f\"{nb} * {k} = {nb*k}\")\n</code></pre> Exercice 4 :   Ecrire un programme qui affiche tous les entiers impairs de 0 \u00e0 187 inclus.  \ud83d\udc0d Script Python<pre><code>for k in range(1,188,2):\n    print(k, end=' ')\n</code></pre> Exercice 5 :  Ecrire un programme qui affiche tous les carr\u00e9s des nombres compris entre 0 et 29.  \ud83d\udc0d Script Python<pre><code>for k in range(30):\n    print(k**2, end=' ')\n</code></pre> Exercice 6 :   1) Ecrire un programme qui affiche un rectangle de 5 lignes et 10 colonnes avec le caract\u00e8re # comme ci-dessous :     ##########     ##########     ##########     ##########     ########## 2) Am\u00e9liorer ce programme pour qu'il demande d'abord \u00e0 l'utilisateur de saisir la largeur et la hauteur du rectangle. On peut aussi lui demander avec quel caract\u00e8re il souhaite remplir le rectangle. \ud83d\udc0d Script Python<pre><code># 1\u00e8re question :\nfor ligne in range(5):\n    for colonne in range(10):\n        print(\"#\",end='')\n    print(\"\")\n</code></pre> \ud83d\udc0d Script Python<pre><code># 2\u00e8me question\nlargeur = int(input(\"Veuillez saisir la largeur du rectangle : \"))\nhauteur = int(input(\"Veuillez saisir la hauteur du rectangle : \"))\ncaract\u00e8re = input(\"Veuillez saisir le caract\u00e8re de remplissage : \")\nfor ligne in range(hauteur):\n    for colonne in range(largeur):\n        print(caract\u00e8re,end='')\n    print('')\n</code></pre> Exercice 7 :   1) Ecrire un programme qui calcule la moyenne de 7 notes.  2) Am\u00e9liorer ce programme pour qu'il demande d'abord \u00e0 l'utilisateur de saisir le nombre de notes \u00e0 rentrer puis qui calcule la moyenne de ses notes.      \ud83d\udc0d Script Python<pre><code>somme = 0\nfor i in range(7):\n    note = float(input(\"Saisissez la note n\u00b0\"+str(i+1)+\" : \"))\n    somme = somme + note   # ou somme += note\nmoyenne = somme / 5\nprint(f\"La moyenne des notes est {moyenne}\")\n</code></pre> \ud83d\udc0d Script Python<pre><code>somme = 0\nnb_2_notes=int(input(\"Combien de notes voulez-vous rentrer ? \"))\nfor i in range(nb_2_notes):\n    note = float(input(\"Saisissez la note n\u00b0\"+str(i+1)+\" : \"))\n    somme = somme + note   # ou somme += note\nmoyenne = somme / nb_2_notes\nprint(f\"La moyenne des notes est {moyenne}\")\n</code></pre> <p></p> Exercice 8 :  Ecrire un programme qui affiche le r\u00e9sultat suivant :  36 33 30 27 24 21 18 15 12 9 6 3 0  \ud83d\udc0d Script Python<pre><code>for k in range(36,-1,-3):\n    print(k,end=' ')\n</code></pre> Exercice 9 :  Ecrire un programme qui dessine un triangle comme ci-dessous avec une hauteur saisie par l'utilisateur. ***** **** *** ** *      \ud83d\udc0d Script Python<pre><code>hauteur=int(input(\"Veuillez saisir la hauteur du triangle : \"))\nfor ligne in range(hauteur,0,-1):\n    print(\"*\"*ligne)\n</code></pre> Exercice 10 :  Ecrire un programme qui dessine une figure comme ci-dessous avec une hauteur et une largeur de 6 (on a un carr\u00e9). ****** *****&amp; ****&amp;&amp; ***&amp;&amp;&amp; **&amp;&amp;&amp;&amp; *&amp;&amp;&amp;&amp;&amp; &amp;&amp;&amp;&amp;&amp;&amp;       \ud83d\udc0d Script Python<pre><code>hauteur=int(input(\"Veuillez saisir la hauteur du triangle : \"))\nfor ligne in range(0,hauteur+1):\n    fin_ligne=hauteur-ligne\n    print(\"*\"*fin_ligne+\"&amp;\"*ligne)\n</code></pre> Exercice 11 :  Ecrire un programme qui dessine une figure comme ci-dessous avec une hauteur saisie par l'utilisateur. &amp; &amp;&amp; &amp;&amp;&amp; &amp;&amp;&amp;&amp; &amp;&amp;&amp;&amp;&amp; &amp;&amp;&amp;&amp;&amp;&amp; \ud83d\udc0d Script Python<pre><code>hauteur=int(input(\"Veuillez saisir la hauteur du triangle : \"))\nfor ligne in range(hauteur+1):\n    print(\"*\"*ligne)\n</code></pre> Exercice 12 :  Ecrire un programme qui demande 7 valeurs \u00e0 l'utilisateur et qui affiche la somme de ces valeurs.   \ud83d\udc0d Script Python<pre><code>somme = 0\nfor i in range(7):\n    note = float(input(\"Saisissez la note n\u00b0\"+str(i+1)+\" : \"))\n    somme += note   # ou somme += note\nprint(f\"La moyenne des notes est {somme}\")\n</code></pre> Exercice 13 :  Ecrire un programme simule le lancer de 500 d\u00e9s et qui affiche la moyenne des r\u00e9sultats obtenus.   \ud83d\udc0d Script Python<pre><code>from random import *\n\nsomme = 0\nfor i in range(500):\n    d\u00e9 = randint(1,6)\n    somme = somme + d\u00e9\nmoyenne = somme / 1000\nprint(f\"La moyenne des 1000 lancers est {moyenne}\")\n</code></pre> Exercice 14 :  Ecrire un programme qui demande \u00e0 l'utilisateur un entier a et un entier n et qui calcule $a^n$ \u00e0 l'aide d'une boucle <code>for</code> (on verra plus tard un algorithme plus rapide que celui-ci). Remarque : il est interdit d'utiliser ** ici!    \ud83d\udc0d Script Python<pre><code>a = int(input(\"Veuillez saisir la valeurs de a (la base) : \"))\nn = int(input(\"Veuillez saisir la valeur de n (l'exponsant) : \"))\npuissance = 1\nfor i in range(n):\n    puissance = puissance * a\nprint(f\"{a} puissance {n} est \u00e9gal \u00e0 {puissance}\")\n</code></pre> Exercice 15 :  Ecrire un programme qui demande de saisir un entier positif n et qui calcule la factorielle de n.     La factorielle de n, not\u00e9e $n!$ est d\u00e9finie par $n! = 1\\times 2\\times 3\\times...\\times n$ .     On a par exemple $3! = 6$. \ud83d\udc0d Script Python<pre><code>n = int(input(\"Veuillez saisir un entier positif : \"))\nfactorielle = 1\nfor i in range(1,n+1):\n    factorielle *=i\nprint(\"La factorielle de \",n,\"est\",factorielle)\n</code></pre> Exercice 16 :   Ecrire un programme qui demande de saisir un entier positif n et qui calcule la somme des carr\u00e9s S de 1 jusqu'\u00e0 $n^2$. $S(n)=1^2 + 2^2 + 3^2 +...+ n^2$ . On a par exemple $S(3) = 14$ \ud83d\udc0d Script Python<pre><code>nb=int(input('Donner le nombre voulu : '))\nresultat=0\nfor k in range(nb+1):\n    resultat+=k**2\nprint(resultat)\n</code></pre>"},{"location":"T09_Evaluations/Evaluation_C_Corrige_T6_1_Les_boucles_FOR/#partie4","title":"4- Dessiner avec Turtle","text":"La biblioth\u00e8que **turtle** permet de dessiner \u00e0 l'\u00e9cran. Le petit programme comment\u00e9 ci-dessous permet d'obtenir un trac\u00e9 int\u00e9ressant :   \ud83d\udc0d Script Python<pre><code>from turtle import *      # On importe la biblioth\u00e8que turtle\n\nspeed(10)                 # On r\u00e8gle la vitesse du trac\u00e9 (un entier compris entre 1 et 10)\ncolor('red', 'yellow')    # On fixe la couleur du trac\u00e9 \u00e0 'rouge' et la couleur de rempissage \u00e0 'jaune'\nbegin_fill()\nfor i in range(36):\n    forward(200)          # La tortue avance de 200 pixels \n    left(170)             # La tortue tourne vers la gauche de 170\u00b0\nend_fill()\ndone()                    # Il faut terminer par done() pour lancer l'ex\u00e9cution du trac\u00e9    \n</code></pre>  Voici quelques fonctionnalit\u00e9s de turtle :   FonctionDescription <code>forward(x)</code>D\u00e9place la tortue de x pixels en marche avant. <code>backward(x)</code>D\u00e9place la tortue de x pixels en marche arri\u00e8re. <code>left(x)</code>Fait pivoter la tortue d'un angle de x degr\u00e9s vers la gauche. <code>right(x)</code>Fait pivoter la tortue d'un angle de x degr\u00e9s vers la droite. <code>goto(x,y)</code>D\u00e9place la tortue au point de corrdonn\u00e9es (x,y). Attention, l'axe des y est orient\u00e9 vers le haut de l'\u00e9cran comme en math\u00e9matiques! <code>penup()</code>L\u00e8ve le crayon (la tortue arr\u00eatera de tracer). <code>pendown()</code>Abaisse le crayon. La tortue se remettra \u00e0 tracer. <code>hideturtle()</code>Cache la tortue. <code>showturtle()</code>Fait r\u00e9apparaitre la tortue. <code>speed(n)</code>R\u00e8gle la vitesse du trac\u00e9. n est un entier compris entre 0 et 10. 1 correspond \u00e0 une vitesse lente, 10 correspond \u00e0 une vitesse rapide. 0 permet d'obtenir un trac\u00e9 instantan\u00e9. <code>done()</code>Lance l'ex\u00e9cution du trac\u00e9. <code>circle(r)</code>Trace un cercle de rayon r.         On peut ajouter une deuxi\u00e8me param\u00e8tre facultatif a si on souhaite tracer seulement tracer un arc de cercle d'angle a. <code>color(couleur1,couleur2)</code>D\u00e9finir la couleur du trac\u00e9 (couleur1) et la couleur de remplissage (couleur2). <code>width(n)</code>R\u00e8gle l'\u00e9paisseur du trait \u00e0 n pixels. Exercice 17 :  Ecrire un programme qui utilise une boucle <code>for</code> pour tracer un carr\u00e9 de c\u00f4t\u00e9 100 pixels, avec un contour bleu et colori\u00e9 en vert. \ud83d\udc0d Script Python<pre><code>\n</code></pre> Exercice 18 :  Ecrire un programme qui trace 10 cercles dont les rayons sont 10, 20, 30, ..., 100 et espac\u00e9 de 2 fois le rayon Choisir une couleur de trac\u00e9 et une couleur de remplissage. \ud83d\udc0d Script Python<pre><code>from turtle import *      # On importe la biblioth\u00e8que turtle\n\nspeed(10)   \ncolor('blue','pink')\nfor k in range(10,110,10):\n\n    begin_fill()\n    circle(k)\n    forward(20)\n    end_fill()\n\ndone()\n</code></pre> Exercice 19 :  Dessiner le drapeau de l'allemagne avec Turtle. \ud83d\udc0d Script Python<pre><code>from turtle import *\n\nup()\ngoto(-250,0)\ndown()\n\ncolor('black', 'black') \nbegin_fill()\nfor i in range(2):\n    forward(300)\n    left(90)\n    forward(75)\n    left(90)\nend_fill()\nright(90)\nforward(75)\nleft(90)\n\ncolor('black', 'red') \nbegin_fill()\nfor i in range(2):\n    forward(300)\n    left(90)\n    forward(75)\n    left(90)\nend_fill()\nright(90)\nforward(75)\nleft(90)\n\n\ncolor('black', 'yellow') \nbegin_fill()\nfor i in range(2):\n    forward(300)\n    left(90)\n    forward(75)\n    left(90)\nend_fill()\nforward(100)\n\ndone()\n</code></pre> \ud83d\udc0d Script Python<pre><code>#Avec une fonction \ndef rectangle(largeur,longueur,couleur1,couleur2):\n    color(couleur1, couleur2) \n    begin_fill()\n    for i in range(2):\n        forward(longueur)\n        left(90)\n        forward(largeur)\n        left(90)\n    end_fill()\n\nup()\ngoto(-250,0)\ndown()\nlargeur=75\nlongueur=300\nrectangle(largeur,longueur,'black','black')\nright(90)\nforward(largeur)\nleft(90)\n\nrectangle(largeur,longueur,'black','red')\nright(90)\nforward(largeur)\nleft(90)\n\nrectangle(largeur,longueur,'black','yellow')\ndone()\n</code></pre> Exercice 20 :  Ecrire un programme qui dessine le diamant ci-dessous. \ud83d\udc0d Script Python<pre><code>from turtle import *\n\nspeed(10)\ncolor('blue') \ngoto(-250,0)\ngoto(250,0)\nfor i in range(11):\n    goto(0,100)\n    goto(i*50-250,0)   \n    goto(0,-100)\ndone()\n</code></pre> \ud83d\udc0d Script Python<pre><code>\n</code></pre>"},{"location":"T09_Evaluations/accueil/","title":"\u00c9valuations","text":""},{"location":"T09_Evaluations/logic/","title":"Logic","text":""}]}