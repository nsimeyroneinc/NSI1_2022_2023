{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ce site est \u00e0 destination des \u00e9l\u00e8ves de premi\u00e8re NSI au Lyc\u00e9e Murat d'Issoire. Il permettra de retrouver les TP&TD trait\u00e9s en classes. Ces TD sont corrig\u00e9s dans la mesure du possible. Info Th\u00e8me en cours : Les Dictionnaires Les th\u00e8mes du programme \u2693\ufe0e Programme \u2693\ufe0e Programme Nous traiterons les diff\u00e9rentes entr\u00e9es du programme dans les chapitres suivants : T1 Rep. des donn\u00e9es T2 Types construits T3 Tables T4 IHM T5 Arch. mat\u00e9rielle T6 Python T7 Algo. Th\u00e8me : Types et valeurs de base \ud83d\uddf9 Codage des entiers \u25a1 Codage des non-entiers \ud83d\uddf9 Bases \u25a1 Codage des caract\u00e8res \u25a1 Bool\u00e9ens Th\u00e8me 2 : Types construits \ud83d\uddf9 Listes - Tableaux \ud83d\uddf9 Tuples \ud83d\uddf9 Dictionnaires Th\u00e8me 3 : Traitements de donn\u00e9es en tables \u25a1 Recherche dans une table \u25a1 Tri d'une table \u25a1 Fusion de tables Th\u00e8me 3 : Interactions entre l'homme et la machine sur le web \ud83d\uddf9 Modalit\u00e9s de l'interaction entre l'homme et la machine \ud83d\uddf9 Interaction Th\u00e8me 5 : Architecture mat\u00e9rielle \u25a1 Architecture Von Neumann \ud83d\uddf9 Architecture r\u00e9seau \u25a1 Protocoles de communication dans un r\u00e9seau \u25a1 D\u00e9couverte des commandes Linux Th\u00e8me 6 : Langages et programmation - Python \ud83d\uddf9 Variables \ud83d\uddf9 Boucle For \ud83d\uddf9 Boucle While \ud83d\uddf9 Instruction conditionnelle If \ud83d\uddf9 Fonctions Th\u00e8me 7 : Algorithmique \ud83d\uddf9 Extremums et moyennes \u25a1 Tri par insertion - Tri par s\u00e9lection \u25a1 Dichotomie \u25a1 Algorithmes gloutons \u25a1 Algorithme KNN Les comp\u00e9tences transversales \u2693\ufe0e La sp\u00e9cialit\u00e9 NSI permet de d\u00e9velopper des comp\u00e9tences transversales : Comp\u00e9tences transversales faire preuve d'autonomie, d'initiative et de cr\u00e9ativit\u00e9 pr\u00e9senter un probl\u00e8me ou sa solution coop\u00e9rer au sein d'une \u00e9quipe rechercher une information et partager des ressources faire un usage responsable et critique de l'information","title":"Accueil"},{"location":"Archi_Materielle/TD13_Reseaux/","text":"TD n\u00b013 : Architecture d'un r\u00e9seau Th\u00e8me 3 : Architecture Mat\u00e9rielle TD Filius Programme officiel \u2693\ufe0e Ce cours a pour but de pr\u00e9senter la constitution classique d'un r\u00e9seau, et les \u00e9quipements associ\u00e9s. La partie relative aux protocoles utilis\u00e9s lors des \u00e9changes entre deux machines est d\u00e9taill\u00e9e dans un cours ult\u00e9rieur sur les protocoles de communication. I. D\u00e9couverte de Filius lien de t\u00e9l\u00e9chargement de Filius. Il existe deux modes d\u2019utilisation. Pour r\u00e9aliser le circuit, on utilise le mode conception en cliquant sur l\u2019ic\u00f4ne Les \u00e9l\u00e9ments disponibles sont dispos\u00e9s sur le bord vertical gauche de la fen\u00eatre et il suffit de les glisser/d\u00e9poser dans la zone centrale de conception. Pour effectuer une simulation et installer des logiciels sur les \u00e9l\u00e9ments du r\u00e9seau, on utilise le mode simulation en cliquant sur l\u2019ic\u00f4ne . Pour visualiser correctement le trajet des donn\u00e9es sur le r\u00e9seau, il faut r\u00e9gler la vitesse sur une petite valeur : 10 % ou 20 %. II. Connexion pair \u00e0 pair de deux machines Objectif L\u2019objectif de cette partie est de relier en r\u00e9seau deux machines. Une telle connexion est dite pair \u00e0 pair. Cr\u00e9er un nouveau projet Filius et l\u2019enregistrer dans un dossier de son espace personnel sous le mon de TD13_exercice1.fls. Passer en mode conception et cr\u00e9er un r\u00e9seau de deux machines h\u00f4tes de type portable reli\u00e9es par un c\u00e2ble. Faire un clic droit sur une machine et lui attribuer l\u2019adresse IP 192.168.1.1 comme ci-dessous, en s\u00e9lectionnant l\u2019option Utiliser l\u2019adresse IP comme nom. Attribuer de m\u00eame l\u2019adresse IP 192.168.1.2 \u00e0 l\u2019autre machine. Passer en mode simulation, faire un clic droit sur la machine 192.168.1.1, s\u00e9lectionner Afficher le bureau et installer l\u2019application ligne de commandes en la faisant glisser vers la zone des applications install\u00e9es \u00e0 gauche comme ci-dessous. Lancer l\u2019application ligne de commandes sur la machine 192.168.1.1 puis ex\u00e9cuter la commande ipconfig. Rep\u00e9rer les divers informations donn\u00e9es. Dans l\u2019application ligne de commandes sur la machine 192.168.1.1 ex\u00e9cuter la commande ping 192.168.1.2 pour tester la connexion vers la machine ping 192.168.1.2. Le cable devrait se colorer en vert si la connexion est correcte et les quatre paquets de donn\u00e9es envoy\u00e9s par ping devraient recevoir un \u00e9cho pong retourn\u00e9 par ping 192.168.1.2. Ce qu\u2019il faut retenir \"ipconfig\" sous Windows permet de conna\u00eetre son adresse IP locale et son adresse MAC \"ping\" qui permet d\u2019envoyer des paquets de donn\u00e9es d\u2019une machine A vers une machine B. Si la commande est ex\u00e9cut\u00e9e sur la machine A, le \"ping\" devra \u00eatre suivi par l\u2019adresse IP de la machine B (par exemple, si l\u2019adresse IP de B est \"192.168.1.1\", on aura \"ping 192.168.1.2\") III. Premier r\u00e9seau local lien de t\u00e9l\u00e9chargement de Filius sous Linux Cr\u00e9er le r\u00e9seau local ci-dessous : Pour interconnecter plus de deux machines on utilise un commutateur ou switch en Anglais. Cr\u00e9er un switch reli\u00e9 aux trois machines. Switch Un switch ressemble \u00e0 une multiprise avec plusieurs ports Ethernet RJ45 auxquels sont reli\u00e9s les machines du r\u00e9seau local. Il \u00e9tablit une table de correspondances entre adresse physique MAC et ports. Lorsqu\u2019il re\u00e7oit un paquet, il lit l\u2019adresse MAC du destinataire et transmet le paquet sur le port correspondant. Tester le ping de la machine 192.168.0.1 vers la machine 192.168.0.3 . R\u00e9sultat du ping III.1. La carte r\u00e9seau et son adresse MAC \u2693\ufe0e Chaque ordinateur sur le r\u00e9seau dispose d'une adresse MAC, qui une valeur unique attribu\u00e9e \u00e0 sa carte r\u00e9seau (Ethernet, Wifi, 4G, 5G, ...) lors de sa fabrication en usine. Cette adresse est cod\u00e9e sur 48 bits, pr\u00e9sent\u00e9s sous la forme de 6 octets en hexad\u00e9cimal. Exemple : fc:aa:14:75:45:a5 Les trois premiers octets correspondent au code du fabricant. Un site comme https://www.macvendorlookup.com/ vous permet de retrouver le fabricant d'une adresse MAC quelconque. Ce qu\u2019il faut retenir Toutes les interfaces r\u00e9seau poss\u00e8dent une adresse physique MAC qui est * unique et attribu\u00e9e par le constructeur. Elle est constitu\u00e9e sur 48 bits ou 6 octets repr\u00e9sent\u00e9s en notation hexad\u00e9cimale et s\u00e9par\u00e9s par le caract\u00e8re : (colon en anglais). L\u2019adresse MAC est n\u00e9cessaire pour la liaison r\u00e9seau entre deux \u00e9quipements tandis que l\u2019adresse IP est n\u00e9cessaire pour le routage sur Internet. III.2. Switch, hub, quelle diff\u00e9rence ? \u2693\ufe0e Au sein d'un hub Ethernet (de moins en moins vendus), il n'y a aucune analyse des donn\u00e9es qui transitent : il s'agit simplement d'un d\u00e9doublement des fils de cuivre (tout comme une multiprise \u00e9lectrique). L'int\u00e9gralit\u00e9 des messages est donc envoy\u00e9e \u00e0 l'int\u00e9gralit\u00e9 des ordinateurs du r\u00e9seau, m\u00eame s'ils ne sont pas concern\u00e9s. Au sein d'un switch Ethernet , une analyse est effectu\u00e9e sur la trame qui est \u00e0 distribuer. Lors d'un branchement d'un nouvel ordinateur sur le switch, celui-ci r\u00e9cup\u00e8re son adresse MAC, ce qui lui permet de trier les messages et de ne les distribuer qu'au bon destinataire. IV. Un deuxi\u00e8me sous-r\u00e9seau Rajouter un deuxi\u00e8me sous-r\u00e9seau de la mani\u00e8re suivante (penser \u00e0 bien renommer les switchs). Comment relier ces deux sous-r\u00e9seaux ? Une r\u00e9ponse pas si b\u00eate : avec un cable entre les deux switchs ! Tester cette hypoth\u00e8se en essayant de pinger la machine 192.168.1.2 depuis la machine 192.168.0.1 . R\u00e9sultat du ping Cela ne marche pas. L'ordinateur refuse d'envoyer le ping vers la machine 192.168.1.2 . (spoil : car elle n'est pas dans son sous-r\u00e9seau) Temporairement, renommons la machine 192.168.1.2 en 192.168.0.33 . Testons \u00e0 nouveau le ping depuis la machine 192.168.0.1 . R\u00e9sultat du ping Cela marche. Les paquets sont bien achemin\u00e9s. Intuition : la notion de sous-r\u00e9seau n'est pas topologique (\u00abil suffit de relier les ordinateurs entre eux\u00bb) mais ob\u00e9it \u00e0 des r\u00e8gles num\u00e9riques. III.2.1. Notion de masque de sous-r\u00e9seau \u2693\ufe0e Dans Filius, lors de l'attribution de l'adresse IP \u00e0 une machine, une ligne nous permet de sp\u00e9cifier le masque de sous-r\u00e9seau (appel\u00e9 simplement \u00ab Masque \u00bb dans Filius). C'est ce masque qui va permettre de d\u00e9terminer si une machine appartient \u00e0 un sous-r\u00e9seau ou non, en fonction de son adresse IP. III.2.1.1 Explication basique \u2693\ufe0e Si le masque est 255.255.255.0 , toutes les machines partageant les m\u00eames trois premiers nombres de leur adresse IP appartiendront au m\u00eame sous-r\u00e9seau. Comme ceci est le r\u00e9glage par d\u00e9faut de Filius, cela explique pourquoi 192.168.0.33 et 192.168.0.1 sont sur le m\u00eame sous-r\u00e9seau, et pourquoi 192.168.1.2 et 192.168.0.1 ne sont pas sur le m\u00eame sous-r\u00e9seau. Dans cette configuration, 256 machines peuvent donc appartenir au m\u00eame sous-r\u00e9seau (ce n'est pas tout \u00e0 fait le cas car des adresses finissant par 0 ou par 255 sont r\u00e9serv\u00e9es). Si le masque est 255.255.0.0 , toutes les machines partageant les m\u00eames deux premiers nombres de leur adresse IP appartiendront au m\u00eame sous-r\u00e9seau. Dans cette configuration, 65536 machines peuvent \u00eatre dans le m\u00eame sous-r\u00e9seau. (car \\(256^2=65536\\) ) Exercice Enonc\u00e9 Renommons 192.168.0.33 en 192.168.1.2 et modifions son masque en 255.255.0.0 . Modifions aussi le masque de 192.168.0.1 en 255.255.0.0 . Testons le ping de 192.168.0.1 vers 192.168.1.2 . R\u00e9sultat du ping Cela marche. Les deux machines appartiennent maintenant au m\u00eame sous-r\u00e9seau. III.2.1.2 Explication avanc\u00e9e \u2693\ufe0e Lorsqu'une machine A veut envoyer un message \u00e0 une machine B, elle doit d\u00e9terminer si cette machine : appartient au m\u00eame sous-r\u00e9seau : auquel cas le message est envoy\u00e9 directement via un ou plusieurs switchs. n'appartient pas au m\u00eame sous-r\u00e9seau : auquel cas le message doit d'abord transiter par un routeur (voir V.) Quelle op\u00e9ration permet de distinguer cette appartenance \u00e0 un m\u00eame sous-r\u00e9seau ? Appelons IP_A et IP_B les adresses IP respectives des machines A et B. Appelons M le masque de sous-r\u00e9seau. Nommons & l'op\u00e9rateur de conjonction entre nombres binaires : E1 E2 E1 & E2 0 0 0 0 1 0 1 0 0 1 1 1 Propri\u00e9t\u00e9 : A et B appartiennent au m\u00eame sous-r\u00e9seau \u21d4 IP_A & M = IP_B & M Exemple : consid\u00e9rons trois machines A, B, C d'IP respectives 192.168.129.10 , 192.168.135.200 et 192.168.145.1 , configur\u00e9es avec un masque de sous-r\u00e9seau \u00e9gal \u00e0 255.255.248.0 . machine A machine B machine C IP 192.168.129.10 192.168.135.200 192.168.145.1 M 255.255.248.0 255.255.248.0 255.255.248.0 Adresse r\u00e9seau :IP & M V\u00e9rifions si ces trois machines sont sur le m\u00eame r\u00e9seau. R\u00e8gles de calcul : pour tout octet x , x & 255 = x et x & 0 = 0 . 129 & 248 s'\u00e9crit en binaire 10000001 & 11111000 qui vaut 10000000 , soit 128 en d\u00e9cimal. Exercice : Faite de m\u00eame pour les machines A et C Tip Conclusion : les machines A et B sont sous le m\u00eame sous-r\u00e9seau, mais pas la machine C. 2.1.3 Coh\u00e9rence entre les deux explications \u2693\ufe0e Lorsqu'un masque de sous-r\u00e9seau est \u00e9gal \u00e0 255.255.255.0 , l'op\u00e9ration de conjonction & avec chaque IP ne laissera intacts que les 3 premiers octets, le dernier sera \u00e9gal \u00e0 0. Donc si deux adresses s'\u00e9crivent A.B.C.X et A.B.C.Y , elles appartiendront forc\u00e9ment au m\u00eame sous-r\u00e9seau (typiquement, c'est le cas de 192.168.0.33 et 192.168.0.1 ). 2.2 \u00c9criture des masques de sous-r\u00e9seau : notation CIDR \u2693\ufe0e D'apr\u00e8s ce qui pr\u00e9c\u00e8de, 2 informations sont n\u00e9cessaires pour d\u00e9terminer le sous-r\u00e9seau auquel appartient une machine : son IP et le masque de sous-r\u00e9seau. Une convention de notation permet d'\u00e9crire simplement ces deux renseignements : la notation CIDR . Exemple : - Une machine d'IP 192.168.0.33 avec un masque de sous-r\u00e9seau 255.255.255.0 sera d\u00e9sign\u00e9e par 192.168.0.33 / 24 en notation CIDR. - Le suffixe / 24 signifie que le masque de sous-r\u00e9seau commence par 24 bits cons\u00e9cutifs de valeur 1 : le reste des bits (donc 8 bits) est \u00e0 mis \u00e0 0. - Autrement dit, ce masque vaut 11111111.11111111.11111111.00000000 , soit 255.255.255.0 . De la m\u00eame mani\u00e8re, le suffixe / 16 donnera un masque de 11111111.11111111.00000000.00000000 , soit 255.255.0.0 . Ou encore, un suffixe / 21 donnera un masque de 11111111.11111111.11111000.00000000 , soit 255.255.248.0 . V. Un vrai r\u00e9seau contenant deux sous-r\u00e9seaux distincts : la n\u00e9cessit\u00e9 d'un routeur Notre solution initiale (relier les deux switchs par un cable pour unifier les deux sous-r\u00e9seaux) n'est pas viable \u00e0 l'\u00e9chelle d'un r\u00e9seau plan\u00e9taire. Pour que les machines de deux r\u00e9seaux diff\u00e9rents puissent \u00eatre connect\u00e9es, on va utiliser un dispositif \u00e9quip\u00e9 de deux cartes r\u00e9seaux , situ\u00e9 \u00e0 cheval entre les deux sous-r\u00e9seaux. Cet \u00e9quipement de r\u00e9seau est appel\u00e9 routeur ou passerelle . V.1 Principe de fonctionnement \u2693\ufe0e Imaginons que la machine 192.168.0.1 / 24 veuille communiquer avec la machine 172.16.52.3 / 24 . L'observation du masque de sous-r\u00e9seau de la machine 192.168.0.1 / 24 nous apprend qu'elle ne peut communiquer qu'avec les adresses de la forme 192.168.0.X / 24 , o\u00f9 X est un nombre entre 0 et 255. Les 3 \u00e9tapes du routage : Lorsque qu'une machine A veut envoyer un message \u00e0 une machine B, elle va tout d'abord v\u00e9rifier si cette machine appartient \u00e0 son r\u00e9seau local. si c'est le cas, le message est envoy\u00e9 par l'interm\u00e9diaire du switch qui relie les deux machines. Si la machine B n'est pas trouv\u00e9e sur le r\u00e9seau local de la machine A, le message va \u00eatre achemin\u00e9 vers le routeur, par l'interm\u00e9diaire de son adresse de passerelle (qui est bien une adresse appartenant au sous-r\u00e9seau de A). De l\u00e0, le routeur va regarder si la machine B appartient au deuxi\u00e8me sous-r\u00e9seau auquel il est connect\u00e9. Si c'est le cas, le message est distribu\u00e9, sinon, le routeur va donner le message \u00e0 un autre routeur auquel il est connect\u00e9 et va le charger de distribuer ce message : c'est le proc\u00e9d\u00e9 de routage , qui sera vu en classe de Terminale. Dans notre exemple, l'adresse 172.16.52.3 n'est pas dans le sous-r\u00e9seau de 192.168.0.1 . Le message va donc transiter par le routeur. V.2 Illustration avec Filius \u2693\ufe0e Rajoutons un routeur entre le SwitchA et le SwitchB. Configuration du routeur : L'interface reli\u00e9e au Switch A doit avoir une adresse du sous-r\u00e9seau A. On donne souvent une adresse finissant par 254 , qui est en quelque sorte la derni\u00e8re adresse du r\u00e9seau (en effet l'adresse en 255 est appel\u00e9e adresse de broadcast , utilis\u00e9e pour pinger en une seule fois l'int\u00e9gralit\u00e9 d'un sous-r\u00e9seau). On donne donc l'adresse 192.168.0.254 pour l'interface reli\u00e9e au Switch A, et 192.168.1.254 pour l'interface reli\u00e9e au Switch B. Dans l'onglet g\u00e9n\u00e9ral, s\u00e9lectionner \u00ab Routage automatique \u00bb. Ainsi configur\u00e9 notre routeur peut jouer le r\u00f4le de passerelle entre les deux sous-r\u00e9seaux. Test du ping entre 192.168.0.1 et 192.168.1.2 Cela ne marche pas. Les paquets sont perdus. Pourquoi cet \u00e9chec ? Parce que nous devons dire \u00e0 chaque machine qu'une passerelle est maintenant disponible pour pouvoir sortir de son propre sous-r\u00e9seau. Il faut donc aller sur la machine 192.168.0.1 et lui donner l'adresse de sa passerelle, qui est 192.168.0.254 . Attention, il faut faire de m\u00eame pour 192.168.1.2 (avec la bonne passerelle...) Testons \u00e0 nouveau le ping... Cette fois cela marche. Plus int\u00e9ressant : effectuons un traceroute entre 192.168.0.1 et 192.168.1.2 . On y aper\u00e7oit que la machine 192.168.1.2 est atteignable en deux sauts depuis 192.168.0.1 , en passant par la passerelle 192.168.0.254 Cas d'un r\u00e9seau domestique Chez vous, la box de votre op\u00e9rateur joue simultan\u00e9ment le r\u00f4le de switch et de routeur : switch car elle r\u00e9partit la connexion entre les diff\u00e9rents dispositifs (ordinateurs branch\u00e9s en ethernet, smartphone en wifi, tv connect\u00e9e...) routeur car elle fait le lien entre ce sous-r\u00e9seau domestique (les appareils de votre maison) et le r\u00e9seau internet. L'image ci-dessous pr\u00e9sente le r\u00e9sultat de la commande ipconfig sous Windows. On y retrouve l'adresse IP locale 192.168.9.103 , le masque de sous-r\u00e9seau 255.255.255.0 et l'adresse de la passerelle 192.168.9.1 . 3.3 Annexe : rajout d'un serveur DNS \u2693\ufe0e 3.3.1 Rajout d'un serveur web \u2693\ufe0e Connectons un ordinateur au SwitchB, sur l'adresse 192.168.1.30 et installons dessus un Serveur web et d\u00e9marrons-le. Sur la machine 192.168.0.1 , rajoutons un Navigateur Web. En tapant dans la barre d'adresse l'adresse IP du Serveur web, la page d'accueil de Filius s'affiche. Lors d'une utilisation classique d'un navigateur web, c'est une url m\u00e9morisable qui s'affiche, et non une adresse IP : on retient en effet plus facilement https://www.google.com/ que http://216.58.213.131 , qui renvoient pourtant \u00e0 la m\u00eame adresse. La machine qui assure ce r\u00f4le d'annuaire entre les serveurs web et leur adresse IP s'appelle un serveur DNS . Pour pouvoir indexer la totalit\u00e9 des sites internet, son r\u00f4le est structur\u00e9 de mani\u00e8re hi\u00e9rarchique. Vous trouverez des d\u00e9tails ici V.3.1 Rajout d'un serveur DNS \u2693\ufe0e Rajoutons un serveur DNS minimal, qui n'aura dans son annuaire d'un seul site. Il faut pour cela raccorder une nouvelle machine (mais une machine d\u00e9j\u00e0 sur le r\u00e9seau aurait tr\u00e8s bien pu jouer ce r\u00f4le), et installer dessus un serveur DNS. Sur ce serveur DNS, associons l'adresse http://www.vivelansi.fr \u00e0 l'adresse IP 192.168.1.30 . De retour sur notre machine 192.168.0.1 , sp\u00e9cifions maintenant l'adresse du serveur DNS : Depuis le navigateur web de la machine 192.168.0.1 , le site http://www.vivelansi.fr est maintenant accessible. VI. Routage dans une interconnexion de r\u00e9seaux R\u00e9cup\u00e9rer le fichier exercice_ressources.fls puis l\u2019ouvrir avec Filius. R\u00e9cup\u00e9rer les adresses IP des machines M14 et M9. En mode simulation, faire un ping de la machine M14 vers M9 pour v\u00e9rifier la connexion. Faire un traceroute de la machine M14 vers M9 . Noter le chemin parcouru pour aller de M14 vers M9 . Supprimer le c\u00e2ble r\u00e9seau (clic droit sur le c\u00e2ble) qui relie le routeur F au routeur E (simulation de panne) et refaire un traceroute de M14 et M9. Attendre un peu pour que les tables de routage des routeurs se mettent \u00e0 jour. Que constate-t-on ? Bibliographie Cours d'OpenClassrooms : https://openclassrooms.com/fr/courses/857447-apprenez-le-fonctionnement-des-reseaux-tcp-ip/854659-le-routage https://openclassrooms.com/fr/courses/1561696-les-reseaux-de-zero/3607286-ladressage-cidr","title":"TP 13 R\u00e9seaux"},{"location":"Archi_Materielle/TD13_Reseaux_Diapo/","text":":root { --color-background: #101010 !important; --color-foreground: #FFFFFF !important; font-size: 1.25rem; } blockquote { background: #C3B091; border-left: 15px solid #CC0000; margin: 1.5em 10px; color: black; padding: 0.5em 10px; } TD n\u00b013 : Architecture d'un r\u00e9seau \u2693\ufe0e Programme officiel \u2693\ufe0e Ce cours a pour but de pr\u00e9senter la constitution classique d'un r\u00e9seau, et les \u00e9quipements associ\u00e9s. La partie relative aux protocoles utilis\u00e9s lors des \u00e9changes entre deux machines est d\u00e9taill\u00e9e dans un cours ult\u00e9rieur sur les protocoles de communication. I. D\u00e9couverte de Filius \u2693\ufe0e lien de t\u00e9l\u00e9chargement de Filius. Il existe deux modes d\u2019utilisation. Pour r\u00e9aliser le circuit, on utilise le mode conception en cliquant sur l\u2019ic\u00f4ne . Les \u00e9l\u00e9ments disponibles sont dispos\u00e9s sur le bord vertical gauche de la fen\u00eatre et il suffit de les glisser/d\u00e9poser dans la zone centrale de conception. Pour effectuer une simulation et installer des logiciels sur les \u00e9l\u00e9ments du r\u00e9seau, on utilise le mode simulation en cliquant sur l\u2019ic\u00f4ne . Pour visualiser correctement le trajet des donn\u00e9es sur le r\u00e9seau, il faut r\u00e9gler la vitesse sur une petite valeur : 10 % ou 20 %. II. Connexion pair \u00e0 pair de deux machines \u2693\ufe0e L\u2019objectif de cette partie est de relier en r\u00e9seau deux machines. Une telle connexion est dite pair \u00e0 pair. Cr\u00e9er un nouveau projet Filius et l\u2019enregistrer dans un dossier de son espace personnel sous le mon de TD13_exercice1.fls. Passer en mode conception et cr\u00e9er un r\u00e9seau de deux machines h\u00f4tes de type portable reli\u00e9es par un c\u00e2ble. Faire un clic droit sur une machine et lui attribuer l\u2019adresse IP 192.168.1.1 comme ci-dessous, en s\u00e9lectionnant l\u2019option Utiliser l\u2019adresse IP comme nom. Attribuer de m\u00eame l\u2019adresse IP 192.168.1.2 \u00e0 l\u2019autre machine. Passer en mode simulation, faire un clic droit sur la machine 192.168.1.1, s\u00e9lectionner Afficher le bureau et installer l\u2019application ligne de commandes en la faisant glisser vers la zone des applications install\u00e9es \u00e0 gauche comme ci-dessous. 4. Lancer l\u2019application ligne de commandes sur la machine 192.168.1.1 puis ex\u00e9cuter la commande ipconfig. Rep\u00e9rer les divers informations donn\u00e9es. 5. Dans l\u2019application ligne de commandes sur la machine 192.168.1.1 ex\u00e9cuter la commande ping 192.168.1.2 pour tester la connexion vers la machine ping 192.168.1.2. Le cable devrait se colorer en vert si la connexion est correcte et les quatre paquets de donn\u00e9es envoy\u00e9s par ping devraient recevoir un \u00e9cho pong retourn\u00e9 par ping 192.168.1.2. Ce qu\u2019il faut retenir - ipconfig sous Windows permet de conna\u00eetre son adresse IP locale et son adresse MAC - ping qui permet d\u2019envoyer des paquets de donn\u00e9es d\u2019une machine A vers une machine B. Si la commande est ex\u00e9cut\u00e9e sur la machine A, le ping devra \u00eatre suivi par l\u2019adresse IP de la machine B (par exemple, si l\u2019adresse IP de B est \"192.168.1.1\", on aura \"ping 192.168.1.2\") III. Premier r\u00e9seau local \u2693\ufe0e Cr\u00e9er le r\u00e9seau local ci-dessous : Pour interconnecter plus de deux machines on utilise un commutateur ou switch en Anglais. Cr\u00e9er un switch reli\u00e9 aux trois machines. \"Switch\" Un switch ressemble \u00e0 une multiprise avec plusieurs ports Ethernet RJ45 auxquels sont reli\u00e9s les machines du r\u00e9seau local. Il \u00e9tablit une table de correspondances entre adresse physique MAC et ports. Lorsqu\u2019il re\u00e7oit un paquet, il lit l\u2019adresse MAC du destinataire et transmet le paquet sur le port correspondant. Tester le ping de la machine 192.168.0.1 vers la machine 192.168.0.3 . R\u00e9sultat du ping III.1. La carte r\u00e9seau et son adresse MAC \u2693\ufe0e Chaque ordinateur sur le r\u00e9seau dispose d'une adresse MAC, qui une valeur unique attribu\u00e9e \u00e0 sa carte r\u00e9seau (Ethernet, Wifi, 4G, 5G, ...) lors de sa fabrication en usine. Cette adresse est cod\u00e9e sur 48 bits, pr\u00e9sent\u00e9s sous la forme de 6 octets en hexad\u00e9cimal. Exemple : fc:aa:14:75:45:a5 Les trois premiers octets correspondent au code du fabricant. Un site comme https://www.macvendorlookup.com/ vous permet de retrouver le fabricant d'une adresse MAC quelconque. Ce qu\u2019il faut retenir Toutes les interfaces r\u00e9seau poss\u00e8dent une adresse physique MAC qui est * unique et attribu\u00e9e par le constructeur. Elle est constitu\u00e9e sur 48 bits ou 6 octets repr\u00e9sent\u00e9s en notation hexad\u00e9cimale et s\u00e9par\u00e9s par le caract\u00e8re : (colon en anglais). L\u2019adresse MAC est n\u00e9cessaire pour la liaison r\u00e9seau entre deux \u00e9quipements tandis que l\u2019adresse IP est n\u00e9cessaire pour le routage sur Internet. III.2. Switch, hub, quelle diff\u00e9rence ? \u2693\ufe0e Au sein d'un hub Ethernet (de moins en moins vendus), il n'y a aucune analyse des donn\u00e9es qui transitent : il s'agit simplement d'un d\u00e9doublement des fils de cuivre (tout comme une multiprise \u00e9lectrique). L'int\u00e9gralit\u00e9 des messages est donc envoy\u00e9e \u00e0 l'int\u00e9gralit\u00e9 des ordinateurs du r\u00e9seau, m\u00eame s'ils ne sont pas concern\u00e9s. Au sein d'un switch Ethernet , une analyse est effectu\u00e9e sur la trame qui est \u00e0 distribuer. Lors d'un branchement d'un nouvel ordinateur sur le switch, celui-ci r\u00e9cup\u00e8re son adresse MAC, ce qui lui permet de trier les messages et de ne les distribuer qu'au bon destinataire. IV. Un deuxi\u00e8me sous-r\u00e9seau \u2693\ufe0e Rajouter un deuxi\u00e8me sous-r\u00e9seau de la mani\u00e8re suivante (penser \u00e0 bien renommer les switchs). Comment relier ces deux sous-r\u00e9seaux ? Une r\u00e9ponse pas si b\u00eate : avec un cable entre les deux switchs ! Tester cette hypoth\u00e8se en essayant de pinger la machine 192.168.1.2 depuis la machine 192.168.0.1 . R\u00e9sultat du ping Cela ne marche pas. L'ordinateur refuse d'envoyer le ping vers la machine 192.168.1.2 . (spoil : car elle n'est pas dans son sous-r\u00e9seau) Temporairement, renommons la machine 192.168.1.2 en 192.168.0.33 . Testons \u00e0 nouveau le ping depuis la machine 192.168.0.1 . R\u00e9sultat du ping Cela marche. Les paquets sont bien achemin\u00e9s. Intuition : la notion de sous-r\u00e9seau n'est pas topologique (\u00abil suffit de relier les ordinateurs entre eux\u00bb) mais ob\u00e9it \u00e0 des r\u00e8gles num\u00e9riques. III.2.1. Notion de masque de sous-r\u00e9seau \u2693\ufe0e Dans Filius, lors de l'attribution de l'adresse IP \u00e0 une machine, une ligne nous permet de sp\u00e9cifier le masque de sous-r\u00e9seau (appel\u00e9 simplement \u00ab Masque \u00bb dans Filius). C'est ce masque qui va permettre de d\u00e9terminer si une machine appartient \u00e0 un sous-r\u00e9seau ou non, en fonction de son adresse IP. III.2.1.1 Explication basique \u2693\ufe0e Si le masque est 255.255.255.0 , toutes les machines partageant les m\u00eames trois premiers nombres de leur adresse IP appartiendront au m\u00eame sous-r\u00e9seau. Comme ceci est le r\u00e9glage par d\u00e9faut de Filius, cela explique pourquoi 192.168.0.33 et 192.168.0.1 sont sur le m\u00eame sous-r\u00e9seau, et pourquoi 192.168.1.2 et 192.168.0.1 ne sont pas sur le m\u00eame sous-r\u00e9seau. Dans cette configuration, 256 machines peuvent donc appartenir au m\u00eame sous-r\u00e9seau (ce n'est pas tout \u00e0 fait le cas car des adresses finissant par 0 ou par 255 sont r\u00e9serv\u00e9es). Si le masque est 255.255.0.0 , toutes les machines partageant les m\u00eames deux premiers nombres de leur adresse IP appartiendront au m\u00eame sous-r\u00e9seau. Dans cette configuration, 65536 machines peuvent \u00eatre dans le m\u00eame sous-r\u00e9seau. (car \\(256^2=65536\\) ) Exercice - Renommons 192.168.0.33 en 192.168.1.2 et modifions son masque en 255.255.0.0 . - Modifions aussi le masque de 192.168.0.1 en 255.255.0.0 . - Testons le ping de 192.168.0.1 vers 192.168.1.2 . R\u00e9sultat du ping Cela marche. Les deux machines appartiennent maintenant au m\u00eame sous-r\u00e9seau. III.2.1.2 Explication avanc\u00e9e \u2693\ufe0e Lorsqu'une machine A veut envoyer un message \u00e0 une machine B, elle doit d\u00e9terminer si cette machine : appartient au m\u00eame sous-r\u00e9seau : auquel cas le message est envoy\u00e9 directement via un ou plusieurs switchs. n'appartient pas au m\u00eame sous-r\u00e9seau : auquel cas le message doit d'abord transiter par un routeur (voir V.) Quelle op\u00e9ration permet de distinguer cette appartenance \u00e0 un m\u00eame sous-r\u00e9seau ? Appelons IP_A et IP_B les adresses IP respectives des machines A et B. Appelons M le masque de sous-r\u00e9seau. Nommons & l'op\u00e9rateur de conjonction entre nombres binaires : E1 E2 E1 & E2 0 0 0 0 1 0 1 0 0 1 1 1 Propri\u00e9t\u00e9 : A et B appartiennent au m\u00eame sous-r\u00e9seau \u21d4 IP_A & M = IP_B & M Exemple : consid\u00e9rons trois machines A, B, C d'IP respectives 192.168.129.10 , 192.168.135.200 et 192.168.145.1 , configur\u00e9es avec un masque de sous-r\u00e9seau \u00e9gal \u00e0 255.255.248.0 . machine A machine B machine C IP 192.168.129.10 192.168.135.200 192.168.145.1 M 255.255.248.0 255.255.248.0 255.255.248.0 Adresse r\u00e9seau :IP & M V\u00e9rifions si ces trois machines sont sur le m\u00eame r\u00e9seau. R\u00e8gles de calcul : - pour tout octet x , x & 255 = x et x & 0 = 0 . - 129 & 248 s'\u00e9crit en binaire 10000001 & 11111000 qui vaut 10000000 , soit 128 en d\u00e9cimal. Exercice : Faite de m\u00eame pour les machines A et C Conclusion : les machines A et B sont sous le m\u00eame sous-r\u00e9seau, mais pas la machine C. 2.1.3 Coh\u00e9rence entre les deux explications \u2693\ufe0e Lorsqu'un masque de sous-r\u00e9seau est \u00e9gal \u00e0 255.255.255.0 , l'op\u00e9ration de conjonction & avec chaque IP ne laissera intacts que les 3 premiers octets, le dernier sera \u00e9gal \u00e0 0. Donc si deux adresses s'\u00e9crivent A.B.C.X et A.B.C.Y , elles appartiendront forc\u00e9ment au m\u00eame sous-r\u00e9seau (typiquement, c'est le cas de 192.168.0.33 et 192.168.0.1 ). 2.2 \u00c9criture des masques de sous-r\u00e9seau : notation CIDR \u2693\ufe0e D'apr\u00e8s ce qui pr\u00e9c\u00e8de, 2 informations sont n\u00e9cessaires pour d\u00e9terminer le sous-r\u00e9seau auquel appartient une machine : son IP et le masque de sous-r\u00e9seau. Une convention de notation permet d'\u00e9crire simplement ces deux renseignements : la notation CIDR . Exemple : - Une machine d'IP 192.168.0.33 avec un masque de sous-r\u00e9seau 255.255.255.0 sera d\u00e9sign\u00e9e par 192.168.0.33 / 24 en notation CIDR. - Le suffixe / 24 signifie que le masque de sous-r\u00e9seau commence par 24 bits cons\u00e9cutifs de valeur 1 : le reste des bits (donc 8 bits) est \u00e0 mis \u00e0 0. - Autrement dit, ce masque vaut 11111111.11111111.11111111.00000000 , soit 255.255.255.0 . De la m\u00eame mani\u00e8re, le suffixe / 16 donnera un masque de 11111111.11111111.00000000.00000000 , soit 255.255.0.0 . Ou encore, un suffixe / 21 donnera un masque de 11111111.11111111.11111000.00000000 , soit 255.255.248.0 . V. Un vrai r\u00e9seau contenant deux sous-r\u00e9seaux distincts : la n\u00e9cessit\u00e9 d'un routeur \u2693\ufe0e Notre solution initiale (relier les deux switchs par un cable pour unifier les deux sous-r\u00e9seaux) n'est pas viable \u00e0 l'\u00e9chelle d'un r\u00e9seau plan\u00e9taire. Pour que les machines de deux r\u00e9seaux diff\u00e9rents puissent \u00eatre connect\u00e9es, on va utiliser un dispositif \u00e9quip\u00e9 de deux cartes r\u00e9seaux , situ\u00e9 \u00e0 cheval entre les deux sous-r\u00e9seaux. Cet \u00e9quipement de r\u00e9seau est appel\u00e9 routeur ou passerelle . V.1 Principe de fonctionnement \u2693\ufe0e Imaginons que la machine 192.168.0.1 / 24 veuille communiquer avec la machine 172.16.52.3 / 24 . L'observation du masque de sous-r\u00e9seau de la machine 192.168.0.1 / 24 nous apprend qu'elle ne peut communiquer qu'avec les adresses de la forme 192.168.0.X / 24 , o\u00f9 X est un nombre entre 0 et 255. Les 3 \u00e9tapes du routage : Lorsque qu'une machine A veut envoyer un message \u00e0 une machine B, elle va tout d'abord v\u00e9rifier si cette machine appartient \u00e0 son r\u00e9seau local. si c'est le cas, le message est envoy\u00e9 par l'interm\u00e9diaire du switch qui relie les deux machines. Si la machine B n'est pas trouv\u00e9e sur le r\u00e9seau local de la machine A, le message va \u00eatre achemin\u00e9 vers le routeur, par l'interm\u00e9diaire de son adresse de passerelle (qui est bien une adresse appartenant au sous-r\u00e9seau de A). De l\u00e0, le routeur va regarder si la machine B appartient au deuxi\u00e8me sous-r\u00e9seau auquel il est connect\u00e9. Si c'est le cas, le message est distribu\u00e9, sinon, le routeur va donner le message \u00e0 un autre routeur auquel il est connect\u00e9 et va le charger de distribuer ce message : c'est le proc\u00e9d\u00e9 de routage , qui sera vu en classe de Terminale. Dans notre exemple, l'adresse 172.16.52.3 n'est pas dans le sous-r\u00e9seau de 192.168.0.1 . Le message va donc transiter par le routeur. V.2 Illustration avec Filius \u2693\ufe0e Rajoutons un routeur entre le SwitchA et le SwitchB. Configuration du routeur : L'interface reli\u00e9e au Switch A doit avoir une adresse du sous-r\u00e9seau A. On donne souvent une adresse finissant par 254 , qui est en quelque sorte la derni\u00e8re adresse du r\u00e9seau (en effet l'adresse en 255 est appel\u00e9e adresse de broadcast , utilis\u00e9e pour pinger en une seule fois l'int\u00e9gralit\u00e9 d'un sous-r\u00e9seau). On donne donc l'adresse 192.168.0.254 pour l'interface reli\u00e9e au Switch A, et 192.168.1.254 pour l'interface reli\u00e9e au Switch B. Dans l'onglet g\u00e9n\u00e9ral, s\u00e9lectionner \u00ab Routage automatique \u00bb. Ainsi configur\u00e9 notre routeur peut jouer le r\u00f4le de passerelle entre les deux sous-r\u00e9seaux. Test du ping entre 192.168.0.1 et 192.168.1.2 Cela ne marche pas. Les paquets sont perdus. Pourquoi cet \u00e9chec ? Parce que nous devons dire \u00e0 chaque machine qu'une passerelle est maintenant disponible pour pouvoir sortir de son propre sous-r\u00e9seau. Il faut donc aller sur la machine 192.168.0.1 et lui donner l'adresse de sa passerelle, qui est 192.168.0.254 . Attention, il faut faire de m\u00eame pour 192.168.1.2 (avec la bonne passerelle...) Testons \u00e0 nouveau le ping... Cette fois cela marche. Plus int\u00e9ressant : effectuons un traceroute entre 192.168.0.1 et 192.168.1.2 . On y aper\u00e7oit que la machine 192.168.1.2 est atteignable en deux sauts depuis 192.168.0.1 , en passant par la passerelle 192.168.0.254 Cas d'un r\u00e9seau domestique Chez vous, la box de votre op\u00e9rateur joue simultan\u00e9ment le r\u00f4le de switch et de routeur : switch car elle r\u00e9partit la connexion entre les diff\u00e9rents dispositifs (ordinateurs branch\u00e9s en ethernet, smartphone en wifi, tv connect\u00e9e...) routeur car elle fait le lien entre ce sous-r\u00e9seau domestique (les appareils de votre maison) et le r\u00e9seau internet. L'image ci-dessous pr\u00e9sente le r\u00e9sultat de la commande ipconfig sous Windows. On y retrouve l'adresse IP locale 192.168.9.103 , le masque de sous-r\u00e9seau 255.255.255.0 et l'adresse de la passerelle 192.168.9.1 . 3.3 Annexe : rajout d'un serveur DNS \u2693\ufe0e 3.3.1 Rajout d'un serveur web \u2693\ufe0e Connectons un ordinateur au SwitchB, sur l'adresse 192.168.1.30 et installons dessus un Serveur web et d\u00e9marrons-le. Sur la machine 192.168.0.1 , rajoutons un Navigateur Web. En tapant dans la barre d'adresse l'adresse IP du Serveur web, la page d'accueil de Filius s'affiche. Lors d'une utilisation classique d'un navigateur web, c'est une url m\u00e9morisable qui s'affiche, et non une adresse IP : on retient en effet plus facilement https://www.google.com/ que http://216.58.213.131 , qui renvoient pourtant \u00e0 la m\u00eame adresse. La machine qui assure ce r\u00f4le d'annuaire entre les serveurs web et leur adresse IP s'appelle un serveur DNS . Pour pouvoir indexer la totalit\u00e9 des sites internet, son r\u00f4le est structur\u00e9 de mani\u00e8re hi\u00e9rarchique. Vous trouverez des d\u00e9tails ici V.3.1 Rajout d'un serveur DNS \u2693\ufe0e Rajoutons un serveur DNS minimal, qui n'aura dans son annuaire d'un seul site. Il faut pour cela raccorder une nouvelle machine (mais une machine d\u00e9j\u00e0 sur le r\u00e9seau aurait tr\u00e8s bien pu jouer ce r\u00f4le), et installer dessus un serveur DNS. Sur ce serveur DNS, associons l'adresse http://www.vivelansi.fr \u00e0 l'adresse IP 192.168.1.30 . De retour sur notre machine 192.168.0.1 , sp\u00e9cifions maintenant l'adresse du serveur DNS : Depuis le navigateur web de la machine 192.168.0.1 , le site http://www.vivelansi.fr est maintenant accessible. VI. Routage dans une interconnexion de r\u00e9seaux \u2693\ufe0e R\u00e9cup\u00e9rer le fichier exercice_ressources.fls puis l\u2019ouvrir avec Filius. R\u00e9cup\u00e9rer les adresses IP des machines M14 et M9. En mode simulation, faire un ping de la machine M14 vers M9 pour v\u00e9rifier la connexion. Faire un traceroute de la machine M14 vers M9 . Noter le chemin parcouru pour aller de M14 vers M9 . Supprimer le c\u00e2ble r\u00e9seau (clic droit sur le c\u00e2ble) qui relie le routeur F au routeur E (simulation de panne) et refaire un traceroute de M14 et M9. Attendre un peu pour que les tables de routage des routeurs se mettent \u00e0 jour. Que constate-t-on ? Bibliographie Cours d'OpenClassrooms : https://openclassrooms.com/fr/courses/857447-apprenez-le-fonctionnement-des-reseaux-tcp-ip/854659-le-routage https://openclassrooms.com/fr/courses/1561696-les-reseaux-de-zero/3607286-ladressage-cidr","title":"TD13 Reseaux Diapo"},{"location":"Archi_Materielle/TD13_Reseaux_Diapo/#td-n13-architecture-dun-reseau","text":"","title":"TD n\u00b013 : Architecture d'un r\u00e9seau"},{"location":"Archi_Materielle/TD13_Reseaux_Diapo/#i-decouverte-de-filius","text":"lien de t\u00e9l\u00e9chargement de Filius. Il existe deux modes d\u2019utilisation. Pour r\u00e9aliser le circuit, on utilise le mode conception en cliquant sur l\u2019ic\u00f4ne . Les \u00e9l\u00e9ments disponibles sont dispos\u00e9s sur le bord vertical gauche de la fen\u00eatre et il suffit de les glisser/d\u00e9poser dans la zone centrale de conception. Pour effectuer une simulation et installer des logiciels sur les \u00e9l\u00e9ments du r\u00e9seau, on utilise le mode simulation en cliquant sur l\u2019ic\u00f4ne . Pour visualiser correctement le trajet des donn\u00e9es sur le r\u00e9seau, il faut r\u00e9gler la vitesse sur une petite valeur : 10 % ou 20 %.","title":"I. D\u00e9couverte de Filius"},{"location":"Archi_Materielle/TD13_Reseaux_Diapo/#ii-connexion-pair-a-pair-de-deux-machines","text":"L\u2019objectif de cette partie est de relier en r\u00e9seau deux machines. Une telle connexion est dite pair \u00e0 pair. Cr\u00e9er un nouveau projet Filius et l\u2019enregistrer dans un dossier de son espace personnel sous le mon de TD13_exercice1.fls. Passer en mode conception et cr\u00e9er un r\u00e9seau de deux machines h\u00f4tes de type portable reli\u00e9es par un c\u00e2ble. Faire un clic droit sur une machine et lui attribuer l\u2019adresse IP 192.168.1.1 comme ci-dessous, en s\u00e9lectionnant l\u2019option Utiliser l\u2019adresse IP comme nom. Attribuer de m\u00eame l\u2019adresse IP 192.168.1.2 \u00e0 l\u2019autre machine. Passer en mode simulation, faire un clic droit sur la machine 192.168.1.1, s\u00e9lectionner Afficher le bureau et installer l\u2019application ligne de commandes en la faisant glisser vers la zone des applications install\u00e9es \u00e0 gauche comme ci-dessous. 4. Lancer l\u2019application ligne de commandes sur la machine 192.168.1.1 puis ex\u00e9cuter la commande ipconfig. Rep\u00e9rer les divers informations donn\u00e9es. 5. Dans l\u2019application ligne de commandes sur la machine 192.168.1.1 ex\u00e9cuter la commande ping 192.168.1.2 pour tester la connexion vers la machine ping 192.168.1.2. Le cable devrait se colorer en vert si la connexion est correcte et les quatre paquets de donn\u00e9es envoy\u00e9s par ping devraient recevoir un \u00e9cho pong retourn\u00e9 par ping 192.168.1.2. Ce qu\u2019il faut retenir - ipconfig sous Windows permet de conna\u00eetre son adresse IP locale et son adresse MAC - ping qui permet d\u2019envoyer des paquets de donn\u00e9es d\u2019une machine A vers une machine B. Si la commande est ex\u00e9cut\u00e9e sur la machine A, le ping devra \u00eatre suivi par l\u2019adresse IP de la machine B (par exemple, si l\u2019adresse IP de B est \"192.168.1.1\", on aura \"ping 192.168.1.2\")","title":"II. Connexion pair \u00e0 pair de deux machines"},{"location":"Archi_Materielle/TD13_Reseaux_Diapo/#iii-premier-reseau-local","text":"Cr\u00e9er le r\u00e9seau local ci-dessous : Pour interconnecter plus de deux machines on utilise un commutateur ou switch en Anglais. Cr\u00e9er un switch reli\u00e9 aux trois machines. \"Switch\" Un switch ressemble \u00e0 une multiprise avec plusieurs ports Ethernet RJ45 auxquels sont reli\u00e9s les machines du r\u00e9seau local. Il \u00e9tablit une table de correspondances entre adresse physique MAC et ports. Lorsqu\u2019il re\u00e7oit un paquet, il lit l\u2019adresse MAC du destinataire et transmet le paquet sur le port correspondant. Tester le ping de la machine 192.168.0.1 vers la machine 192.168.0.3 . R\u00e9sultat du ping","title":"III. Premier r\u00e9seau local"},{"location":"Archi_Materielle/TD13_Reseaux_Diapo/#iv-un-deuxieme-sous-reseau","text":"Rajouter un deuxi\u00e8me sous-r\u00e9seau de la mani\u00e8re suivante (penser \u00e0 bien renommer les switchs). Comment relier ces deux sous-r\u00e9seaux ? Une r\u00e9ponse pas si b\u00eate : avec un cable entre les deux switchs ! Tester cette hypoth\u00e8se en essayant de pinger la machine 192.168.1.2 depuis la machine 192.168.0.1 . R\u00e9sultat du ping Cela ne marche pas. L'ordinateur refuse d'envoyer le ping vers la machine 192.168.1.2 . (spoil : car elle n'est pas dans son sous-r\u00e9seau) Temporairement, renommons la machine 192.168.1.2 en 192.168.0.33 . Testons \u00e0 nouveau le ping depuis la machine 192.168.0.1 . R\u00e9sultat du ping Cela marche. Les paquets sont bien achemin\u00e9s. Intuition : la notion de sous-r\u00e9seau n'est pas topologique (\u00abil suffit de relier les ordinateurs entre eux\u00bb) mais ob\u00e9it \u00e0 des r\u00e8gles num\u00e9riques.","title":"IV. Un deuxi\u00e8me sous-r\u00e9seau"},{"location":"Archi_Materielle/TD13_Reseaux_Diapo/#v-un-vrai-reseau-contenant-deux-sous-reseaux-distincts-la-necessite-dun-routeur","text":"Notre solution initiale (relier les deux switchs par un cable pour unifier les deux sous-r\u00e9seaux) n'est pas viable \u00e0 l'\u00e9chelle d'un r\u00e9seau plan\u00e9taire. Pour que les machines de deux r\u00e9seaux diff\u00e9rents puissent \u00eatre connect\u00e9es, on va utiliser un dispositif \u00e9quip\u00e9 de deux cartes r\u00e9seaux , situ\u00e9 \u00e0 cheval entre les deux sous-r\u00e9seaux. Cet \u00e9quipement de r\u00e9seau est appel\u00e9 routeur ou passerelle .","title":"V. Un vrai r\u00e9seau contenant deux sous-r\u00e9seaux distincts : la n\u00e9cessit\u00e9 d'un routeur"},{"location":"Archi_Materielle/TD13_Reseaux_Diapo/#vi-routage-dans-une-interconnexion-de-reseaux","text":"R\u00e9cup\u00e9rer le fichier exercice_ressources.fls puis l\u2019ouvrir avec Filius. R\u00e9cup\u00e9rer les adresses IP des machines M14 et M9. En mode simulation, faire un ping de la machine M14 vers M9 pour v\u00e9rifier la connexion. Faire un traceroute de la machine M14 vers M9 . Noter le chemin parcouru pour aller de M14 vers M9 . Supprimer le c\u00e2ble r\u00e9seau (clic droit sur le c\u00e2ble) qui relie le routeur F au routeur E (simulation de panne) et refaire un traceroute de M14 et M9. Attendre un peu pour que les tables de routage des routeurs se mettent \u00e0 jour. Que constate-t-on ? Bibliographie Cours d'OpenClassrooms : https://openclassrooms.com/fr/courses/857447-apprenez-le-fonctionnement-des-reseaux-tcp-ip/854659-le-routage https://openclassrooms.com/fr/courses/1561696-les-reseaux-de-zero/3607286-ladressage-cidr","title":"VI. Routage dans une interconnexion de r\u00e9seaux"},{"location":"Archi_Materielle/TD13_Reseaux_Prof/","text":"TD n\u00b013 : Architecture d'un r\u00e9seau Th\u00e8me 3 : Architecture Mat\u00e9rielle TD Filius Programme officiel \u2693\ufe0e Ce cours a pour but de pr\u00e9senter la constitution classique d'un r\u00e9seau, et les \u00e9quipements associ\u00e9s. La partie relative aux protocoles utilis\u00e9s lors des \u00e9changes entre deux machines est d\u00e9taill\u00e9e dans un cours ult\u00e9rieur sur les protocoles de communication. I. D\u00e9couverte de Filius lien de t\u00e9l\u00e9chargement de Filius. Il existe deux modes d\u2019utilisation. Pour r\u00e9aliser le circuit, on utilise le mode conception en cliquant sur l\u2019ic\u00f4ne Les \u00e9l\u00e9ments disponibles sont dispos\u00e9s sur le bord vertical gauche de la fen\u00eatre et il suffit de les glisser/d\u00e9poser dans la zone centrale de conception. Pour effectuer une simulation et installer des logiciels sur les \u00e9l\u00e9ments du r\u00e9seau, on utilise le mode simulation en cliquant sur l\u2019ic\u00f4ne . Pour visualiser correctement le trajet des donn\u00e9es sur le r\u00e9seau, il faut r\u00e9gler la vitesse sur une petite valeur : 10 % ou 20 %. II. Connexion pair \u00e0 pair de deux machines L\u2019objectif de cette partie est de relier en r\u00e9seau deux machines. Une telle connexion est dite pair \u00e0 pair. Cr\u00e9er un nouveau projet Filius et l\u2019enregistrer dans un dossier de son espace personnel sous le mon de TD13_exercice1.fls. Passer en mode conception et cr\u00e9er un r\u00e9seau de deux machines h\u00f4tes de type portable reli\u00e9es par un c\u00e2ble. Faire un clic droit sur une machine et lui attribuer l\u2019adresse IP 192.168.1.1 comme ci-dessous, en s\u00e9lectionnant l\u2019option Utiliser l\u2019adresse IP comme nom. Attribuer de m\u00eame l\u2019adresse IP 192.168.1.2 \u00e0 l\u2019autre machine. Passer en mode simulation, faire un clic droit sur la machine 192.168.1.1, s\u00e9lectionner Afficher le bureau et installer l\u2019application ligne de commandes en la faisant glisser vers la zone des applications install\u00e9es \u00e0 gauche comme ci-dessous. Lancer l\u2019application ligne de commandes sur la machine 192.168.1.1 puis ex\u00e9cuter la commande ipconfig. Rep\u00e9rer les divers informations donn\u00e9es. Dans l\u2019application ligne de commandes sur la machine 192.168.1.1 ex\u00e9cuter la commande ping 192.168.1.2 pour tester la connexion vers la machine ping 192.168.1.2. Le cable devrait se colorer en vert si la connexion est correcte et les quatre paquets de donn\u00e9es envoy\u00e9s par ping devraient recevoir un \u00e9cho pong retourn\u00e9 par ping 192.168.1.2. Ce qu\u2019il faut retenir \"ipconfig\" ous Windows permet de conna\u00eetre son adresse IP locale et son adresse MAC \"ping\" qui permet d\u2019envoyer des paquets de donn\u00e9es d\u2019une machine A vers une machine B. Si la commande est ex\u00e9cut\u00e9e sur la machine A, le \"ping\" devra \u00eatre suivi par l\u2019adresse IP de la machine B (par exemple, si l\u2019adresse IP de B est \"192.168.1.1\", on aura \"ping 192.168.1.2\") III. Premier r\u00e9seau local lien de t\u00e9l\u00e9chargement de Filius sous Linux Cr\u00e9er le r\u00e9seau local ci-dessous : Pour interconnecter plus de deux machines on utilise un commutateur ou switch en Anglais. Cr\u00e9er un switch reli\u00e9 aux trois machines. Switch Un switch ressemble \u00e0 une multiprise avec plusieurs ports Ethernet RJ45 auxquels sont reli\u00e9s les machines du r\u00e9seau local. Il \u00e9tablit une table de correspondances entre adresse physique MAC et ports. Lorsqu\u2019il re\u00e7oit un paquet, il lit l\u2019adresse MAC du destinataire et transmet le paquet sur le port correspondant. Tester le ping de la machine 192.168.0.1 vers la machine 192.168.0.3 . R\u00e9sultat du ping III.1. La carte r\u00e9seau et son adresse MAC \u2693\ufe0e Chaque ordinateur sur le r\u00e9seau dispose d'une adresse MAC, qui une valeur unique attribu\u00e9e \u00e0 sa carte r\u00e9seau (Ethernet, Wifi, 4G, 5G, ...) lors de sa fabrication en usine. Cette adresse est cod\u00e9e sur 48 bits, pr\u00e9sent\u00e9s sous la forme de 6 octets en hexad\u00e9cimal. Exemple : fc:aa:14:75:45:a5 Les trois premiers octets correspondent au code du fabricant. Un site comme https://www.macvendorlookup.com/ vous permet de retrouver le fabricant d'une adresse MAC quelconque. Ce qu\u2019il faut retenir Toutes les interfaces r\u00e9seau poss\u00e8dent une adresse physique MAC qui est * unique et attribu\u00e9e par le constructeur. Elle est constitu\u00e9e sur 48 bits ou 6 octets repr\u00e9sent\u00e9s en notation hexad\u00e9cimale et s\u00e9par\u00e9s par le caract\u00e8re : (colon en anglais). L\u2019adresse MAC est n\u00e9cessaire pour la liaison r\u00e9seau entre deux \u00e9quipements tandis que l\u2019adresse IP est n\u00e9cessaire pour le routage sur Internet. III.2. Switch, hub, quelle diff\u00e9rence ? \u2693\ufe0e Au sein d'un hub Ethernet (de moins en moins vendus), il n'y a aucune analyse des donn\u00e9es qui transitent : il s'agit simplement d'un d\u00e9doublement des fils de cuivre (tout comme une multiprise \u00e9lectrique). L'int\u00e9gralit\u00e9 des messages est donc envoy\u00e9e \u00e0 l'int\u00e9gralit\u00e9 des ordinateurs du r\u00e9seau, m\u00eame s'ils ne sont pas concern\u00e9s. Au sein d'un switch Ethernet , une analyse est effectu\u00e9e sur la trame qui est \u00e0 distribuer. Lors d'un branchement d'un nouvel ordinateur sur le switch, celui-ci r\u00e9cup\u00e8re son adresse MAC, ce qui lui permet de trier les messages et de ne les distribuer qu'au bon destinataire. IV. Un deuxi\u00e8me sous-r\u00e9seau Rajouter un deuxi\u00e8me sous-r\u00e9seau de la mani\u00e8re suivante (penser \u00e0 bien renommer les switchs). Comment relier ces deux sous-r\u00e9seaux ? Une r\u00e9ponse pas si b\u00eate : avec un cable entre les deux switchs ! Tester cette hypoth\u00e8se en essayant de pinger la machine 192.168.1.2 depuis la machine 192.168.0.1 . R\u00e9sultat du ping Cela ne marche pas. L'ordinateur refuse d'envoyer le ping vers la machine 192.168.1.2 . (spoil : car elle n'est pas dans son sous-r\u00e9seau) Temporairement, renommons la machine 192.168.1.2 en 192.168.0.33 . Testons \u00e0 nouveau le ping depuis la machine 192.168.0.1 . R\u00e9sultat du ping Cela marche. Les paquets sont bien achemin\u00e9s. Intuition : la notion de sous-r\u00e9seau n'est pas topologique (\u00abil suffit de relier les ordinateurs entre eux\u00bb) mais ob\u00e9it \u00e0 des r\u00e8gles num\u00e9riques. III.2.1. Notion de masque de sous-r\u00e9seau \u2693\ufe0e Dans Filius, lors de l'attribution de l'adresse IP \u00e0 une machine, une ligne nous permet de sp\u00e9cifier le masque de sous-r\u00e9seau (appel\u00e9 simplement \u00ab Masque \u00bb dans Filius). C'est ce masque qui va permettre de d\u00e9terminer si une machine appartient \u00e0 un sous-r\u00e9seau ou non, en fonction de son adresse IP. III.2.1.1 Explication basique \u2693\ufe0e Si le masque est 255.255.255.0 , toutes les machines partageant les m\u00eames trois premiers nombres de leur adresse IP appartiendront au m\u00eame sous-r\u00e9seau. Comme ceci est le r\u00e9glage par d\u00e9faut de Filius, cela explique pourquoi 192.168.0.33 et 192.168.0.1 sont sur le m\u00eame sous-r\u00e9seau, et pourquoi 192.168.1.2 et 192.168.0.1 ne sont pas sur le m\u00eame sous-r\u00e9seau. Dans cette configuration, 256 machines peuvent donc appartenir au m\u00eame sous-r\u00e9seau (ce n'est pas tout \u00e0 fait le cas car des adresses finissant par 0 ou par 255 sont r\u00e9serv\u00e9es). Si le masque est 255.255.0.0 , toutes les machines partageant les m\u00eames deux premiers nombres de leur adresse IP appartiendront au m\u00eame sous-r\u00e9seau. Dans cette configuration, 65536 machines peuvent \u00eatre dans le m\u00eame sous-r\u00e9seau. (car \\(256^2=65536\\) ) Exercice Enonc\u00e9 Renommons 192.168.0.33 en 192.168.1.2 et modifions son masque en 255.255.0.0 . Modifions aussi le masque de 192.168.0.1 en 255.255.0.0 . Testons le ping de 192.168.0.1 vers 192.168.1.2 . R\u00e9sultat du ping Cela marche. Les deux machines appartiennent maintenant au m\u00eame sous-r\u00e9seau. III.2.1.2 Explication avanc\u00e9e \u2693\ufe0e Lorsqu'une machine A veut envoyer un message \u00e0 une machine B, elle doit d\u00e9terminer si cette machine : appartient au m\u00eame sous-r\u00e9seau : auquel cas le message est envoy\u00e9 directement via un ou plusieurs switchs. n'appartient pas au m\u00eame sous-r\u00e9seau : auquel cas le message doit d'abord transiter par un routeur (voir V.) Quelle op\u00e9ration permet de distinguer cette appartenance \u00e0 un m\u00eame sous-r\u00e9seau ? Appelons IP_A et IP_B les adresses IP respectives des machines A et B. Appelons M le masque de sous-r\u00e9seau. Nommons & l'op\u00e9rateur de conjonction entre nombres binaires : E1 E2 E1 & E2 0 0 0 0 1 0 1 0 0 1 1 1 Propri\u00e9t\u00e9 : A et B appartiennent au m\u00eame sous-r\u00e9seau \u21d4 IP_A & M = IP_B & M Exemple : consid\u00e9rons trois machines A, B, C d'IP respectives 192.168.129.10 , 192.168.135.200 et 192.168.145.1 , configur\u00e9es avec un masque de sous-r\u00e9seau \u00e9gal \u00e0 255.255.248.0 . machine A machine B machine C IP 192.168.129.10 192.168.135.200 192.168.145.1 M 255.255.248.0 255.255.248.0 255.255.248.0 Adresse r\u00e9seau :IP & M [comment]: <> ( Adresse r\u00e9seau :IP & M 192.168.128.0 192.168.128.0 V\u00e9rifions si ces trois machines sont sur le m\u00eame r\u00e9seau. R\u00e8gles de calcul : pour tout octet x , x & 255 = x et x & 0 = 0 . 129 & 248 s'\u00e9crit en binaire 10000001 & 11111000 qui vaut 10000000 , soit 128 en d\u00e9cimal. Exercice : Faite de m\u00eame pour les machines A et C Tip Conclusion : les machines A et B sont sous le m\u00eame sous-r\u00e9seau, mais pas la machine C. 2.1.3 Coh\u00e9rence entre les deux explications \u2693\ufe0e Lorsqu'un masque de sous-r\u00e9seau est \u00e9gal \u00e0 255.255.255.0 , l'op\u00e9ration de conjonction & avec chaque IP ne laissera intacts que les 3 premiers octets, le dernier sera \u00e9gal \u00e0 0. Donc si deux adresses s'\u00e9crivent A.B.C.X et A.B.C.Y , elles appartiendront forc\u00e9ment au m\u00eame sous-r\u00e9seau (typiquement, c'est le cas de 192.168.0.33 et 192.168.0.1 ). 2.2 \u00c9criture des masques de sous-r\u00e9seau : notation CIDR \u2693\ufe0e D'apr\u00e8s ce qui pr\u00e9c\u00e8de, 2 informations sont n\u00e9cessaires pour d\u00e9terminer le sous-r\u00e9seau auquel appartient une machine : son IP et le masque de sous-r\u00e9seau. Une convention de notation permet d'\u00e9crire simplement ces deux renseignements : la notation CIDR . Exemple : - Une machine d'IP 192.168.0.33 avec un masque de sous-r\u00e9seau 255.255.255.0 sera d\u00e9sign\u00e9e par 192.168.0.33 / 24 en notation CIDR. - Le suffixe / 24 signifie que le masque de sous-r\u00e9seau commence par 24 bits cons\u00e9cutifs de valeur 1 : le reste des bits (donc 8 bits) est \u00e0 mis \u00e0 0. - Autrement dit, ce masque vaut 11111111.11111111.11111111.00000000 , soit 255.255.255.0 . De la m\u00eame mani\u00e8re, le suffixe / 16 donnera un masque de 11111111.11111111.00000000.00000000 , soit 255.255.0.0 . Ou encore, un suffixe / 21 donnera un masque de 11111111.11111111.11111000.00000000 , soit 255.255.248.0 . V. Un vrai r\u00e9seau contenant deux sous-r\u00e9seaux distincts : la n\u00e9cessit\u00e9 d'un routeur Notre solution initiale (relier les deux switchs par un cable pour unifier les deux sous-r\u00e9seaux) n'est pas viable \u00e0 l'\u00e9chelle d'un r\u00e9seau plan\u00e9taire. Pour que les machines de deux r\u00e9seaux diff\u00e9rents puissent \u00eatre connect\u00e9es, on va utiliser un dispositif \u00e9quip\u00e9 de deux cartes r\u00e9seaux , situ\u00e9 \u00e0 cheval entre les deux sous-r\u00e9seaux. Cet \u00e9quipement de r\u00e9seau est appel\u00e9 routeur ou passerelle . V.1 Principe de fonctionnement \u2693\ufe0e Imaginons que la machine 192.168.0.1 / 24 veuille communiquer avec la machine 172.16.52.3 / 24 . L'observation du masque de sous-r\u00e9seau de la machine 192.168.0.1 / 24 nous apprend qu'elle ne peut communiquer qu'avec les adresses de la forme 192.168.0.X / 24 , o\u00f9 X est un nombre entre 0 et 255. Les 3 \u00e9tapes du routage : Lorsque qu'une machine A veut envoyer un message \u00e0 une machine B, elle va tout d'abord v\u00e9rifier si cette machine appartient \u00e0 son r\u00e9seau local. si c'est le cas, le message est envoy\u00e9 par l'interm\u00e9diaire du switch qui relie les deux machines. Si la machine B n'est pas trouv\u00e9e sur le r\u00e9seau local de la machine A, le message va \u00eatre achemin\u00e9 vers le routeur, par l'interm\u00e9diaire de son adresse de passerelle (qui est bien une adresse appartenant au sous-r\u00e9seau de A). De l\u00e0, le routeur va regarder si la machine B appartient au deuxi\u00e8me sous-r\u00e9seau auquel il est connect\u00e9. Si c'est le cas, le message est distribu\u00e9, sinon, le routeur va donner le message \u00e0 un autre routeur auquel il est connect\u00e9 et va le charger de distribuer ce message : c'est le proc\u00e9d\u00e9 de routage , qui sera vu en classe de Terminale. Dans notre exemple, l'adresse 172.16.52.3 n'est pas dans le sous-r\u00e9seau de 192.168.0.1 . Le message va donc transiter par le routeur. V.2 Illustration avec Filius \u2693\ufe0e Rajoutons un routeur entre le SwitchA et le SwitchB. Configuration du routeur : L'interface reli\u00e9e au Switch A doit avoir une adresse du sous-r\u00e9seau A. On donne souvent une adresse finissant par 254 , qui est en quelque sorte la derni\u00e8re adresse du r\u00e9seau (en effet l'adresse en 255 est appel\u00e9e adresse de broadcast , utilis\u00e9e pour pinger en une seule fois l'int\u00e9gralit\u00e9 d'un sous-r\u00e9seau). On donne donc l'adresse 192.168.0.254 pour l'interface reli\u00e9e au Switch A, et 192.168.1.254 pour l'interface reli\u00e9e au Switch B. Dans l'onglet g\u00e9n\u00e9ral, s\u00e9lectionner \u00ab Routage automatique \u00bb. Ainsi configur\u00e9 notre routeur peut jouer le r\u00f4le de passerelle entre les deux sous-r\u00e9seaux. Test du ping entre 192.168.0.1 et 192.168.1.2 Cela ne marche pas. Les paquets sont perdus. Pourquoi cet \u00e9chec ? Parce que nous devons dire \u00e0 chaque machine qu'une passerelle est maintenant disponible pour pouvoir sortir de son propre sous-r\u00e9seau. Il faut donc aller sur la machine 192.168.0.1 et lui donner l'adresse de sa passerelle, qui est 192.168.0.254 . Attention, il faut faire de m\u00eame pour 192.168.1.2 (avec la bonne passerelle...) Testons \u00e0 nouveau le ping... Cette fois cela marche. Plus int\u00e9ressant : effectuons un traceroute entre 192.168.0.1 et 192.168.1.2 . On y aper\u00e7oit que la machine 192.168.1.2 est atteignable en deux sauts depuis 192.168.0.1 , en passant par la passerelle 192.168.0.254 Cas d'un r\u00e9seau domestique Chez vous, la box de votre op\u00e9rateur joue simultan\u00e9ment le r\u00f4le de switch et de routeur : switch car elle r\u00e9partit la connexion entre les diff\u00e9rents dispositifs (ordinateurs branch\u00e9s en ethernet, smartphone en wifi, tv connect\u00e9e...) routeur car elle fait le lien entre ce sous-r\u00e9seau domestique (les appareils de votre maison) et le r\u00e9seau internet. L'image ci-dessous pr\u00e9sente le r\u00e9sultat de la commande ipconfig sous Windows. On y retrouve l'adresse IP locale 192.168.9.103 , le masque de sous-r\u00e9seau 255.255.255.0 et l'adresse de la passerelle 192.168.9.1 . 3.3 Annexe : rajout d'un serveur DNS \u2693\ufe0e 3.3.1 Rajout d'un serveur web \u2693\ufe0e Connectons un ordinateur au SwitchB, sur l'adresse 192.168.1.30 et installons dessus un Serveur web et d\u00e9marrons-le. Sur la machine 192.168.0.1 , rajoutons un Navigateur Web. En tapant dans la barre d'adresse l'adresse IP du Serveur web, la page d'accueil de Filius s'affiche. Lors d'une utilisation classique d'un navigateur web, c'est une url m\u00e9morisable qui s'affiche, et non une adresse IP : on retient en effet plus facilement https://www.google.com/ que http://216.58.213.131 , qui renvoient pourtant \u00e0 la m\u00eame adresse. La machine qui assure ce r\u00f4le d'annuaire entre les serveurs web et leur adresse IP s'appelle un serveur DNS . Pour pouvoir indexer la totalit\u00e9 des sites internet, son r\u00f4le est structur\u00e9 de mani\u00e8re hi\u00e9rarchique. Vous trouverez des d\u00e9tails ici V.3.1 Rajout d'un serveur DNS \u2693\ufe0e Rajoutons un serveur DNS minimal, qui n'aura dans son annuaire d'un seul site. Il faut pour cela raccorder une nouvelle machine (mais une machine d\u00e9j\u00e0 sur le r\u00e9seau aurait tr\u00e8s bien pu jouer ce r\u00f4le), et installer dessus un serveur DNS. Sur ce serveur DNS, associons l'adresse http://www.vivelansi.fr \u00e0 l'adresse IP 192.168.1.30 . De retour sur notre machine 192.168.0.1 , sp\u00e9cifions maintenant l'adresse du serveur DNS : Depuis le navigateur web de la machine 192.168.0.1 , le site http://www.vivelansi.fr est maintenant accessible. VI. Routage dans une interconnexion de r\u00e9seaux R\u00e9cup\u00e9rer le fichier exercice_ressources.fls puis l\u2019ouvrir avec Filius. R\u00e9cup\u00e9rer les adresses IP des machines M14 et M9. En mode simulation, faire un ping de la machine M14 vers M9 pour v\u00e9rifier la connexion. Faire un traceroute de la machine M14 vers M9 . Noter le chemin parcouru pour aller de M14 vers M9 . Supprimer le c\u00e2ble r\u00e9seau (clic droit sur le c\u00e2ble) qui relie le routeur F au routeur E (simulation de panne) et refaire un traceroute de M14 et M9. Attendre un peu pour que les tables de routage des routeurs se mettent \u00e0 jour. Que constate-t-on ? Bibliographie Cours d'OpenClassrooms : https://openclassrooms.com/fr/courses/857447-apprenez-le-fonctionnement-des-reseaux-tcp-ip/854659-le-routage https://openclassrooms.com/fr/courses/1561696-les-reseaux-de-zero/3607286-ladressage-cidr","title":"TD13 Reseaux Prof"},{"location":"BasesPython/TP04_BasesPython/","text":"TP 04 : Les bases en Python Th\u00e8me 4 : Langages et Programmation COURS Lien Capytale Ce document recense les informations essentielles (donc \u00e0 conna\u00eetre absolument) pour d\u00e9marrer en Python. Votre objectif est de suivre ce notebook et de faire les exercices du notebook d'exercices qui sont indiqu\u00e9s au fur et \u00e0 mesure afin de mettre en pratique. I. Variables et affectations en Python \u2693\ufe0e Dans le langage Python, le symbole = correspondant \u00e0 l'affectation (\u00e9crite \\(\\leftarrow\\) en pseudo-code). Pour affecter la valeur 2 \u00e0 une variable a on \u00e9crit simplement a = 2 . Ainsi, l'algorithme a \u2190 3 b \u2190 2 * a s'\u00e9crit en Python de la fa\u00e7on suivante : a = 3 b = 2 * a \u270f\ufe0f Faire les exercices 1, 2, 3. II. Instructions conditionnelles : if , elif et else \u2693\ufe0e En Python, les instructions conditionnelles se codent en utilisant les instructions if , elif (= contraction de else if ), else qui sont les traductions respectives de si , sinon si et sinon . if condition1 : bloc_instructions_1 elif condition2 : bloc_instructions_2 else : bloc_instructions_3 Remarques : - ne pas oublier les deux points \u00e0 la fin des lignes avec if , elif et else qui permettent d'ouvrir le bloc d'instructions \u00e0 effectuer dans chaque cas ; - les instructions \u00e0 effectuer sont indent\u00e9es d'une tabulation par rapport aux if , elif et else : c'est la syntaxe Python, elle doit absolument \u00eatre respect\u00e9e ; - les instructions elif et else sont optionnelles, c'est-\u00e0-dire que l\u2019on peut avoir seulement un if comme ceci ```python if condition: bloc_instructions ``` ou un `if` suivi d\u2019un `else` comme cela ```python if condition: bloc_instructions_1 else: bloc_instructions_2 ``` au contraire du pseudo-code, on n'\u00e9crit pas en Python de fin si car celui-ci est mat\u00e9rialis\u00e9 par la fin des indentations. Exemple 1 (r\u00f4le des indentations) : Dans le programme suivant, le dernier message s'affiche \u00e0 chaque fois, en revanche les deux messages pr\u00e9c\u00e9dents ne s'affichent que si on entre dans le bloc if , autrement dit si la condition a >= 10 est vraie. a = 15 if a >= 10 : # condition vraie print ( \"Vous avez la moyenne\" ) print ( \"Message dans le bloc d'instructions du if\" ) print ( \"Message en dehors du bloc d'instruction du if\" ) # en dehors du bloc d'instructions du if Vous avez la moyenne Message dans le bloc d'instructions du if Message en dehors du bloc d'instruction du if a = 8 if a >= 10 : # condition fausse print ( \"Vous avez la moyenne\" ) print ( \"Message dans le bloc d'instructions du if\" ) print ( \"Message en dehors du bloc d'instruction du if\" ) # en dehors du bloc d'instructions du if Message en dehors du bloc d'instruction du if Exemple 2 : L'algorithme si scoreA > scoreB alors vainqueur \u2190 \"\u00e9quipe A\" sinon si scoreA < scoreB alors vainqueur \u2190 \"\u00e9quipe B\" sinon vainqueur \u2190 \"Match nul\" se traduit en Python de la mani\u00e8re suivante : if scoreA > scoreB : vainqueur = \"\u00e9quipe A\" elif scoreA < scoreB : vainqueur = \"\u00e9quipe B\" else : vainqueur = \"Match nul\" \u270f\ufe0f Faire les exercices 4, 5 III. Boucles born\u00e9es : boucles for \u2693\ufe0e En Python, les boucles Pour se codent en utilisant l'instruction for : for element in sequence : bloc_instructions Remarques : - element est une variable cr\u00e9\u00e9e par le for , ce n'est pas \u00e0 vous de l'instancier. Elle prend successicement chacune des valeurs figurant dans la sequence parcourue ; - ne pas oublier les deux points \u00e0 la fin de la ligne avec for qui permettent d'ouvrir le bloc d'instructions \u00e0 ex\u00e9cuter (\u00e0 r\u00e9p\u00e9ter) ; - les instructions \u00e0 effectuer sont indent\u00e9es d'une tabulation par rapport au for ; - au contraire du pseudo-code, on n'\u00e9crit pas en Python de fin pour car celui-ci est mat\u00e9rialis\u00e9 la fin des indentations. La fonction range() pour cr\u00e9er des s\u00e9quences de nombres \u2693\ufe0e La fonction range() permet de cr\u00e9er des s\u00e9quences de nombres entiers : range(n) cr\u00e9e une s\u00e9quence des n entiers, de 0 inclus \u00e0 n exclu , c'est-\u00e0-dire : 0, 1, 2, ..., n-1 (\u26a0\ufe0f le premier est 0, donc le n-i\u00e8me est n-1). range(n, m) cr\u00e9e la s\u00e9quence d'entiers de n inclus \u00e0 m exclu , c'est-\u00e0-dire : n, n+1, ..., m-1. range(n, m, p) cr\u00e9e la s\u00e9quence de nombres de n inclus \u00e0 m exclu avec un pas \u00e9gal \u00e0 p , c'est-\u00e0-dire : n, n+p, n+2p, ... . Exemples : range(5) : cr\u00e9e la s\u00e9quence de nombres de 0 inclus \u00e0 5 exclu : c'est-\u00e0-dire les nombres 0, 1, 2, 3, 4. range(2, 8) : cr\u00e9e la s\u00e9quence de nombres de 2 inclus \u00e0 8 exclu : c'est-\u00e0-dire les nombres 2, 3, 4, 5, 6, 7. range(2, 11, 3) : cr\u00e9ee la s\u00e9quence de nombres de 2 inclus \u00e0 11 exclu , par pas de 3 : c'est-\u00e0-dire les nombres 2, 5, 8. On peut visualiser cette s\u00e9quence en affichant leurs valeurs successives : for element in range ( 5 ): print ( element ) 0 1 2 3 4 ou en utilisant la fonction list() : list ( range ( 5 )) [0, 1, 2, 3, 4] N'h\u00e9sitez pas \u00e0 modifier les deux cellulles pr\u00e9c\u00e9dentes pour voir d'autres s\u00e9quences. Ainsi, pour r\u00e9p\u00e9ter un bloc d'instructions 36 fois, il suffit d'\u00e9crire : for i in range ( 36 ): bloc_instructions En effet, la variable i cr\u00e9\u00e9e par la boucle va prendre successivement les valeurs : 0, 1, 2, 3, ..., 35. Elle prend donc 36 valeurs et le bloc bloc_instructions sera donc r\u00e9p\u00e9t\u00e9 36 fois. On aurait aussi pu \u00e9crire cela : for i in range ( 0 , 36 ): bloc_instructions ou encore : ```python for i in range(1,37): bloc_instructions ou encore : ```python for valeur in range(36): bloc_instructions car dans chaque cas, la variable cr\u00e9\u00e9e ( i ou valeur ) parcoure 36 valeurs diff\u00e9rentes. \u270f\ufe0f Faire les exercices 6, 7, 8, 9. Parcourir des cha\u00eenes de caract\u00e8res \u2693\ufe0e La boucle for permet de parcourir tous les \u00e9l\u00e9ments d'une s\u00e9quence . En utilisant range() on a vu que l'on peut parcourir une s\u00e9quence de nombres. Il se trouve que les cha\u00eenes de caract\u00e8res sont \u00e9galement des s\u00e9quences ... de caract\u00e8res. On peut donc aussi les parcourir tr\u00e8s simplement avec une boucle for , de deux mani\u00e8res diff\u00e9rentes. Par ses caract\u00e8res \u2693\ufe0e On peut parcourir une cha\u00eene directement par ses caract\u00e8res : chaine = \"Bonjour les \u00e9l\u00e8ves !\" for caractere in chaine : print ( caractere ) B o n j o u r l e s \u00e9 l \u00e8 v e s ! La variable caractere cr\u00e9\u00e9e par le for prend successivement les valeurs de la s\u00e9quence \"Bonjour les \u00e9l\u00e8ves !\" , c'est-\u00e0-dire qu'elle prend la valeur 'B' puis la valeur 'o' , puis la valeur 'n' , etc. La boucle s'arr\u00eate lorsque toute la s\u00e9quence a \u00e9t\u00e9 parcourue. Par l'indice de ses caract\u00e8res \u2693\ufe0e On peut aussi utiliser la fonction range() pour parcourir les caract\u00e8res par leurs indices. chaine = \"Bonjour les \u00e9l\u00e8ves !\" for indice in range ( len ( chaine )) : print ( chaine [ indice ]) B o n j o u r l e s \u00e9 l \u00e8 v e s ! L'instruction len(chaine) renvoie la longueur de la cha\u00eene de caract\u00e8res, soit 20 dans notre exemple. Donc range(len(chaine)) est \u00e9valu\u00e9e \u00e0 range(20) qui cr\u00e9e la s\u00e9quence d'entiers 0, 1, 2, ..., 19 qui vont \u00eatre affect\u00e9s successivement \u00e0 la variable indice . On affiche ensuite, \u00e0 chaque tour de boucle, le caract\u00e8re en position indice dans chaine c'est-\u00e0-dire chaine[0] , puis chaine[1] , ... et enfin chaine[19] . \u270f\ufe0f Faire l'exercice 10. IV. Boucles non born\u00e9es : boucles while \u2693\ufe0e En Python, les boucles \"Tant que\" se codent en utilisant l'instruction while : while condition : bloc_instructions Remarques : - condition est une variable bool\u00e9enne qui est soit vraie ( True ) soit fausse ( False ) ; - Tant que condition vaut True les instructions du bloc sont r\u00e9p\u00e9t\u00e9es ; - On passe \u00e0 la suite du programme d\u00e8s que condition vaut False . Cela signifie que si condition reste vraie tout le temps, la boucle while boucle \u00e0 l'infini, ce qui pourra causer des probl\u00e8mes plus ou moins importants ; - ne pas oublier les deux points \u00e0 la fin de la ligne avec while qui permettent d'ouvrir le bloc d'instructions \u00e0 ex\u00e9cuter (\u00e0 r\u00e9p\u00e9ter) ; - les instructions \u00e0 effectuer sont indent\u00e9es d'une tabulation par rapport au while ; - au contraire du pseudo-code, on n'\u00e9crit pas en Python de fin tant que car celui-ci est mat\u00e9rialis\u00e9 la fin des indentations. Exemple : a = 3 while a < 14 : a = a + 2 print ( a ) # pour voir l'\u00e9volution de la variable a 5 7 9 11 13 15 \u270f\ufe0f Faire les exercices 11, 12, 13. V. Les fonctions \u2693\ufe0e D\u00e9finition et syntaxe en Python \u2693\ufe0e Dans un langage de programmation, on utilise ce qu'on appelle des fonctions . Une fonction est un ensemble d'instructions qui peut recevoir des arguments et qui peut renvoyer un r\u00e9sultat qui est souvent le contenu d'une ou plusieurs variables. En Python, on d\u00e9finit une fonction en utilisant l'instruction def (de l'anglais define , qui veut dire \"d\u00e9finir\") : def nom_de_la_fonction ( parametre1 , parametre2 , ... , parametreN ): corps_de_la_fonction l'instruction def est suivie du nom de la fonction ; les param\u00e8tres de la fonction sont ensuite \u00e9crits entre parenth\u00e8ses et s\u00e9par\u00e9s par des virgules ; il existe des fonctions sans param\u00e8tre, les parenth\u00e8ses sont n\u00e9anmoins obligatoires et restent vides ; il ne faut pas oublier les deux points apr\u00e8s les parenth\u00e8ses de la premi\u00e8re ligne ; le corps de la fonction est un bloc d'instructions qui contient toutes les lignes qui doivent \u00eatre ex\u00e9cut\u00e9es lorsque la fonction est appel\u00e9e. Le corps de la fonction doit n\u00e9cessairement \u00eatre indent\u00e9 , c'est-\u00e0-dire qu'il doit \u00eatre d\u00e9cal\u00e9 d'une tabulation par rapport \u00e0 l'instruction def . Tr\u00e8s souvent, le corps de la fonction se terminera par l'instruction return suivie de la ou des valeurs que la fonction doit renvoyer. Si la fonction doit renvoyer plusieurs valeurs, celles-ci sont \u00e0 s\u00e9parer par des virgules. Ainsi, le sch\u00e9ma g\u00e9n\u00e9ral d'une fonction Python est : def nom_de_la_fonction ( parametre1 , parametre2 , ... , parametreN ): instructions # sur plusieurs lignes \u00e9ventuellement return valeur1 , valeur2 , valeur3 , etc . # souvent une fonction ne renvoie qu'une valeur Exemple : Voici une fonction def addition ( a , b ): s = a + b return s que l'on peut aussi \u00e9crire plus simplement : def addition ( a , b ): return a + b \u2754 Identifiez dans ces deux fonctions \u00e9crites diff\u00e9remment : leur nom, leur(s) param\u00e8tre(s), leur corps, leur(s) valeur(s) renvoy\u00e9e(s). Remarque : il existe des fonctions qui ne renvoient aucune valeur, l'instruction return n'est donc pas utilis\u00e9e dans le corps de ces fonctions. Appel \u00e0 une fonction \u2693\ufe0e \u26a0\ufe0f Lorsque l'on ex\u00e9cute le code qui d\u00e9finit une fonction, aucune valeur n'est renvoy\u00e9e ! Cela a seulement pour objectif d'enregistrer la fonction en m\u00e9moire. # \u00e0 ex\u00e9cuter : il ne se passera rien (visuellement) def addition ( a , b ): return a + b Pour utiliser une fonction il faut l' appeler . On appelle une fonction par son nom en donnant des arguments (des valeurs) \u00e0 ses param\u00e8tres. Dans ce cas, la fonction va renvoyer la ou les valeurs attendues. # appel \u00e0 la fonction : qui renvoie alors ce qu'il faut ! addition ( 2 , 5 ) 7 Remarque : au premier return rencontr\u00e9 l'ex\u00e9cution de la fonction est stopp\u00e9e : si on veut renvoyer plusieurs valeurs on ne peut pas utiliser plusieurs return ; il faut s\u00e9parer les valeurs \u00e0 renvoyer par des virgules ; Par exemple, si on veut une fonction qui renvoie la somme et le produit de deux nombres, on ne peut pas \u00e9crire def somme_et_produit ( a , b ): return a + b # fonction stopp\u00e9e apr\u00e8s cette ligne (premier return rencontr\u00e9) return a * b # ne sera pas ex\u00e9cut\u00e9 ! mais il faudrait \u00e9crire cela : def somme_et_produit ( a , b ): return a + b , a * b # les deux valeurs seront bien renvoy\u00e9es On peut facilement v\u00e9rifier : def somme_et_produit ( a , b ): return a + b # fonction stopp\u00e9e apr\u00e8s cette ligne (premier return rencontr\u00e9) return a * b # ne sera pas ex\u00e9cut\u00e9 ! somme_et_produit ( 2 , 5 ) 7 def somme_et_produit ( a , b ): return a + b , a * b # les deux valeurs seront bien renvoy\u00e9es somme_et_produit ( 2 , 5 ) (7, 10) \u270f\ufe0f Faire les exercices 14, 15, 16. VI. Les entr\u00e9es en Python \u2693\ufe0e Pour que l'utilisateur puisse saisir des valeurs au clavier, on utilise la fonction input . Elle d\u00e9clenche l\u2019ouverture d\u2019une bo\u00eete de dialogue dans laquelle on peut saisir la valeur souhait\u00e9e. nom_utilisateur = input ( \"Veuillez saisir votre nom : \" ) age_utilisateur = input ( \"Veuillez saisir votre \u00e2ge : \" ) print ( f \"Vous vous appelez { nom_utilisateur } et vous avez { age_utilisateur } ans.\" ) print ( type ( age_utilisateur )) # OBSERVEZ BIEN LE TYPE !! Veuillez saisir votre nom : Test Veuillez saisir votre \u00e2ge : 18 Vous vous appelez Test et vous avez 18 ans. <class 'str'> ATTENTION : Par d\u00e9faut, en Python, les variables saisies au clavier et r\u00e9cup\u00e9r\u00e9es par la fonction input sont des cha\u00eenes de caract\u00e8res. Cela peut cr\u00e9er des erreurs : age_utilisateur = input ( \"Veuillez saisir votre \u00e2ge : \" ) age_utilisateur = age_utilisateur + 2 Veuillez saisir votre \u00e2ge : 65 --------------------------------------------------------------------------- TypeError Traceback (most recent call last) <ipython-input-15-8ae97b43fbf4> in <module> 1 age_utilisateur = input(\"Veuillez saisir votre \u00e2ge : \") ----> 2 age_utilisateur = age_utilisateur + 2 TypeError: can only concatenate str (not \"int\") to str L'erreur se situe ligne 2 comme l'indique la fl\u00e8che verte. Le message d'erreur TypeError: can only concatenate str (not \"int\") to str indique que Python ne peut concat\u00e9ner une cha\u00eene de caract\u00e8res qu'avec une autre cha\u00eene de caract\u00e8res (mais pas avec un entier). En effet, la variable age_utilisateur \u00e9tant de type str , le symbole + qui suit est le symbole de concat\u00e9nation, qui ne peut pas s'appliquer \u00e0 l'entier 2 situ\u00e9 apr\u00e8s car celui-ci est de type int . R\u00c8GLE D'USAGE IMPORTANTE : pour \u00e9viter ces probl\u00e8mes, il suffit de pr\u00e9ciser le type de variable que l'utilisateur doit saisir avant la fonction input comme indiqu\u00e9 ci-dessous : pour saisir un entier : nom_variable = int(input(\"message \u00e0 afficher\")) pour saisir un flottant : nom_variable = float(input(\"message \u00e0 afficher\")) pour saisir un bool\u00e9en : nom_variable = bool(input(\"message \u00e0 afficher\")) pour saisir un entier long : nom_variable = long(input(\"message \u00e0 afficher\")) Ainsi, pour r\u00e9gler le probl\u00e8me pr\u00e9c\u00e9dent, il suffit d'\u00e9crire : age_utilisateur = int ( input ( \"Veuillez saisir votre \u00e2ge :\" )) print ( f \"Dans deux ans, vous aurez { age_utilisateur + 2 } ans\" ) Veuillez saisir votre \u00e2ge : 15 Dans deux ans, vous aurez 17 ans Nous n'utiliserons les instructions d'entr\u00e9e en Python que dans les cas o\u00f9 cela s'av\u00e8re n\u00e9cessaire, par exemple si une interaction est n\u00e9cessaire avec l'utilisateur. Dans les autres cas, on privil\u00e9giera les appels de fonctions en modifiant leurs arguments.","title":"TP 04 - Les bases en Python"},{"location":"BasesPython/TP05_BasesPythonExercices-Corrige/","text":"TP 05 : Les bases en Python Th\u00e8me 4 : Langages et Programmation EXERCICES Lien Capytale Objectif L'objectif final est que sachiez \u00e9crire les structures de bases (affectations, instructions conditionnelles, boucles for , boucle while , fonctions) dans le langage Python. Pour cela, une grande partie des exerciec ci-dessous consistent \u00e0 \u00e9crire dans le langage Python, des algorithmes \u00e9crits en langage naturel dans la partie 1 sur Les bases de l'algorithmique . N'h\u00e9sitez surtout pas \u00e0 revoir le notebook de cours sur les bases de Python, faites des allers-retours entre le cours et les exercices ! I. Variables et affectations en Python \u2693\ufe0e Exercice 1 \u2693\ufe0e Exercice n\u00b01 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 1 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses en affichant ce qu'il faut avec Python . Que valent N et P apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ? N \u2190 2 P \u2190 3 N \u2190 P + 1 P \u2190 N N = 2 P = 3 N = P + 1 P = N print ( f \"N : { N } et P : { P } \" ) Exercice 2 \u2693\ufe0e Exercice n\u00b02 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 2 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses en affichant ce qu'il faut avec Python . Que vaut B apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ? A \u2190 8 B \u2190 (A \u2265 10) A = 8 B = ( A >= 10 ) print ( B ) ## pour voir la valeur de B Exercice 3 \u2693\ufe0e Exercice n\u00b03 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 3 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . Supposons que N vaut 2 ; que vaut P apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ? P \u2190 N mod 5 P \u2190 N div P N = 2 # initialisation de N P = N % 5 P = N // P print ( P ) # pour voir la valeur de P II. Instructions conditionnelles : if , elif et else \u2693\ufe0e Exercice 4 \u2693\ufe0e Exercice n\u00b04 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 5 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . Supposons que A vaut 1 au d\u00e9but ; que vaut-il apr\u00e8s l\u2019ex\u00e9cution de cet algorithme ? si A \u2265 0 alors A \u2190 A - 1 sinon A \u2190 A + 1 fin si A = 1 ## valeur intiale de A if A >= 0 : A = A - 1 else : A = A + 1 print ( A ) # pour voir la valeur finale de A Exercice 5 \u2693\ufe0e Exercice n\u00b05 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 6 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . L'algorithme ci-dessous est-il \u00e9quivalent (au sens ou une m\u00eame valeur de A initiale induit une m\u00eame valeur de A apr\u00e8s leur ex\u00e9cution) \u00e0 celui pr\u00e9sent\u00e9 dans l'exercice 5 ? si A \u2265 0 alors A \u2190 A - 1 fin si si A < 0 alors A \u2190 A + 1 finsi A = 0 ## valeur initiale de test if A >= 0 : A = A - 1 if A < 0 : A = A + 1 print ( A ) ## pour voir la valeur finale III. Boucles born\u00e9es : boucles for \u2693\ufe0e Exercice 6 \u2693\ufe0e Exercice n\u00b06 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 9 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . Supposons que A vaut initialement 10 ; combien vaut-il apr\u00e8s l'ex\u00e9cution de cet algorithme ? pour i de 2 \u00e0 5 faire A \u2190 A + i fin pour A = 10 for i in range ( 2 , 6 ): ## Attention : 6 ! A = A + i print ( A ) ## pour voir la valeur finale de A Exercice 7 \u2693\ufe0e Exercice n\u00b07 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 10 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . Supposons que V vaut 0 initialement ; combien vaut-il apr\u00e8s l'ex\u00e9cution de cet algorithme ? pour I de 1 \u00e0 4 par pas de 1 faire si I est pair alors V \u2190 V + I*I fin si fin pour V = 0 for I in range ( 1 , 5 ): if I % 2 == 0 : ## si i est divisible par 2 V = V + I * I print ( V ) ## pour voir la valeur finale de V Exercice 8 \u2693\ufe0e Exercice n\u00b08 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 12 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . Supposons que A vaut 1 initialement ; combien vaut-il apr\u00e8s l'ex\u00e9cution de cet algorithme ? pour i de 0 \u00e0 3 faire pour j de 0 \u00e0 2 faire A \u2190 A + i*j fin pour fin pour A = 1 # initialisation de A for i in range ( 4 ): ## ou range(0, 4) for j in range ( 3 ): A = A + i * j print ( A ) # pour voir la valeur finale de A Exercice 9 \u2693\ufe0e Exercice n\u00b09 : Enonce Solution Q1 : Quelles sont les valeurs affich\u00e9es dans la console lors de l'ex\u00e9cution de chacun des programmes ci-dessous ? Attention, il faut r\u00e9pondre sans ex\u00e9cuter le code ! * Programme 1 : for i in range ( 10 ): print ( i ) * Programme 2 : for k in range ( 2 , 10 ): print ( k ) * Programme 3 : for ind in range ( 2 , 10 , 3 ): print ( ind ) Q2 : V\u00e9rifiez en r\u00e9\u00e9crivant et en ex\u00e9cutant chacun de ces programmes. Programme 1 : 0, 1, 2, ..., 9 Programme 2 : 2, 3, 4, ..., 9 Programme 3 : 2, 5, 8 Exercice 10 \u2693\ufe0e Exercice n\u00b010 : Enonce Solution On consid\u00e8re le programme Python suivant : chaine = 'peace and love' compteur = 0 for caractere in chaine : if caractere == 'e' : compteur = compteur + 1 Q1 : Quelle est le r\u00f4le de ce code. Quelle est la valeur finale de la variable compteur ? R\u00e9ponse (\u00e0 compl\u00e9ter) : Q2 : Recopiez ce code et v\u00e9rifiez la r\u00e9ponse \u00e0 la question pr\u00e9c\u00e9dente. # \u00e0 vous de jouer ! Q3 : Modifiez le code pour compter le nombre de 'a' . # \u00e0 vous de jouer ! Q1 : Il compte le nombre d'apparition du caract\u00e8re 'e' dans chaine. La variable finale de compteur est donc 3. Q2 : Il n'y qu'\u00e0 recopier Q3 : Il suffit de remplacer 'e' par 'a' dans l'instruction conditionnelle \u00e0 la ligne 4 IV. Boucles non born\u00e9es : boucles while \u2693\ufe0e Exercice 11 \u2693\ufe0e Exercice n\u00b011 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 13 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . Supposons que D vaut 7 initialement ; que vaut-il apr\u00e8s l'ex\u00e9cution de cet algorithme ? ``` tant que D > 3 faire D \u2190 D - 3 fin tant que ```python # \u00e9crivez le programme Python correspondant D = 7 ## valeur initiale de D while D > 3 : D = D - 3 print ( D ) ## pour voir la valeur finale de D Exercice 12 \u2693\ufe0e Exercice n\u00b012 : Enonce Solution Reprenez le programme Python de l'exercice pr\u00e9c\u00e9dent et ajoutez-y une variable qui compte le nombre d'it\u00e9rations dans la boucle while . Cela pour permettra de v\u00e9rifier la question 2 de l'exercice 14 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . On consid\u00e8re l'algorithme pr\u00e9c\u00e9dent. 1. Supposons que D vaut 2 apr\u00e8s l'ex\u00e9cution de cet algorithme. Quelles valeurs parmi celles propos\u00e9es ci-dessous pouvait-il avoir initialement ? -2 ; 2 ; 6 ; 14 ; 25. 2. Supposons que D vaut 25 initialement ; combien d'it\u00e9rations (c'est-\u00e0-dire de passages dans la r\u00e9p\u00e9titive) ont lieu avant que l'ex\u00e9cution de cet algorithme ne se termine ? # ajoutez une variable qui compte le nombre d'it\u00e9rations dans la r\u00e9p\u00e9titive tant que On ajoute la variable iter qui vaut 0 au d\u00e9part et que l'on augmente de 1 \u00e0 chaque tour de boucle. On remplace aussi la valeur intiale de D par 25. D = 25 # valeur initiale de D iter = 0 while D > 3 : iter = iter + 1 D = D - 3 print ( iter , D ) # pour voir le nombre total d'it\u00e9rations Exercice 13 \u2693\ufe0e Exercice n\u00b013 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 15 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . Proposez un algorithme qui utilise une boucle Tant que qui a pour but d'afficher le quotient de la division enti\u00e8re d'un entier naturel A par un entier naturel B. # \u00e9crivez le programme Python correspondant L'id\u00e9e est la suivante : avec une boucle Tant que, on retranche B \u00e0 A jusqu'\u00e0 obtenir un nombre < B. Le nombre de fois que l'on a pu faire cela est le quotient cherch\u00e9, c'est donc le nombre de passages dans la boucle Tant que. On utilise une variable q qui compte le nombre de passages comme dans l'exercice pr\u00e9c\u00e9dent. # valeurs pour tester A = 25 B = 3 # algorithme q = 0 while A >= B : q = q + 1 A = A - B # pour voir le quotient print ( q ) V. Les fonctions \u2693\ufe0e Exercice 14 \u2693\ufe0e Exercice n\u00b014 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 16 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . Proposez le pseudo-code d'une fonction minimum qui renvoie le minimum des deux nombres donn\u00e9s en param\u00e8tres. # \u00e9crivez la fonction en Python def minimum ( a , b ): if a < b : m = a else : m = b return m ou def minimum ( a , b ): if a < b : return a else : return b Exercice 15 \u2693\ufe0e Exercice n\u00b015 : Enonce Solution \u00c9crivez le programme Python correspondant \u00e0 l'algorithme de l'exercice 17 sur les bases de l'algorithmique dont on rappelle l'\u00e9nonc\u00e9 ci-dessous. Vous v\u00e9rifiez \u00e9galement vos r\u00e9ponses avec Python . Proposez le pseudo-code d'une fonction minimum4 qui renvoie le minimum des 4 nombres donn\u00e9s en param\u00e8tres. Contrainte : vous devez faire appel \u00e0 la fonction minimum ! # \u00e9crivez la fonction en Python def minimum4 ( a , b , c , d ): m1 = minimum ( a , b ) m2 = minimum ( c , d ) m = minimum ( m1 , m2 ) return m Exercice 16 \u2693\ufe0e Exercice n\u00b016 : Enonce Solution Adaptez le code de l'exercice 10 pour \u00e9crire une fonction compte_caractere(c, chaine) qui renvoie le nombre de fois o\u00f9 appara\u00eet le caract\u00e8re c dans la cha\u00eene de caract\u00e8res chaine (on parle du nombre d'occurrences de c ). Exemple : l'appel compte_caractere('e', 'peace and love') doit renvoyer la valeur 3, ce que l'on \u00e9crit : >>> compte_caractere ( 'e' , 'peace and love' ) 3 # \u00e0 vous de jouer ! def compte_caractere ( c , chaine ): compteur = 0 for caractere in chaine : if caractere == c : compteur = compteur + 1 return compteur","title":"TP 05 - Les bases en Python/Exercices"},{"location":"Devoirs/DS03_Tableau/","text":"Devoir Surveill\u00e9 n\u00b03 : Parcours s\u00e9quentielle d'un tableau Th\u00e8me 4 : Langage et programmation DEVOIR Exercice n\u00b01 : \u00c9crire une fonction recherche qui prend en param\u00e8tres un tableau tab de nombres entiers tri\u00e9s par ordre croissant et un nombre entier n, et qui effectue une recherche dichotomique du nombre entier n dans le tableau non vide tab. Cette fonction doit renvoyer un indice correspondant au nombre cherch\u00e9 s\u2019il est dans le tableau, -1 sinon. Exemples : >>> recherche ([ 2 , 3 , 4 , 5 , 6 ], 5 ) 3 >>> recherche ([ 2 , 3 , 4 , 6 , 7 ], 5 ) - 1 assert recherche ([ 2 , 3 , 4 , 5 , 6 ], 5 ) == 3 assert recherche ([ 2 , 3 , 4 , 6 , 7 ], 5 ) ==- 1 Exercice n\u00b02 : \u00c9crire une fonction qui prend en param\u00e8tre un tableau d'entiers non vide et qui renvoie la moyenne de ces entiers. La fonction est sp\u00e9cifi\u00e9e ci-apr\u00e8s et doit passer les assertions fournies. def moyenne ( tab ): ''' moyenne(list) -> float Entr\u00e9e : un tableau non vide d'entiers Sortie : nombre de type float Correspondant \u00e0 la moyenne des valeurs pr\u00e9sentes dans le tableau ''' assert moyenne ([ 1 ]) == 1 assert moyenne ([ 1 , 2 , 3 , 4 , 5 , 6 , 7 ] == 4 assert moyenne ([ 1 , 2 ]) == 1.5 Exercice 3 : Moyenne coefficient\u00e9e On dispose ici de deux tableaux de m\u00eame longueur : un tableau de notes (sur 20) et un tableau de coefficients. Il s'agit de calculer la moyenne coefficient\u00e9e correspondante. Par exemple avec : notes = [ 12 , 15 , 14 , 18 ] coeffs = [ 1 , 2 , 1 , 4 ] la moyenne sera calcul\u00e9e ainsi : ( 12 * 1 + 15 * 2 + 14 * 1 + 18 * 4 ) / ( 1 + 2 + 1 + 4 ) Dans la fonction ci-dessous on appelle num (pour num \u00e9rateur) ce qui correspond \u00e0 (12*1 + 15*2 + 14*1 + 18*4) et denom (pour d\u00e9nom inateur) ce qui correspond \u00e0 (1 + 2 + 1 + 4) . Compl\u00e9ter la fonction moyenne_coefficientee ci-dessous qui prend en param\u00e8tre deux tableaux non vides notes et coeffs et renvoie la moyenne coefficient\u00e9e correspondante. def moyenne_coefficientee ( notes , coeffs ): pass Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous. notes = [ 10 , 10 , 20 ] coeffs = [ 1 , 3 , 1 ] assert moyenne_coefficientee ( notes , coeffs ) == 12.0 notes = [ 15 , 17 , 13 , 19 , 15 , 11 ] coeffs = [ 2 , 3 , 5 , 5 , 3 , 8 ] assert moyenne_coefficientee ( notes , coeffs ) == 14.384615384615385 notes = [ 8 , 8 , 8 , 8 , 12 ] coeffs = [ 1 , 1 , 1 , 1 , 4 ] assert moyenne_coefficientee ( notes , coeffs ) == 10.0 Exercice n\u00b04 : Tableaux et extremums : plus grand d\u00e9nivel\u00e9 En randonn\u00e9e cycliste, p\u00e9destre ou \u00e0 skis, on diff\u00e9rencie les d\u00e9nivel\u00e9s positif et n\u00e9gatif . Ici nous ne ferons pas la diff\u00e9rence. Par exemple avec ce tableau : [ 7 , 4 , 3 , 6 , 7 , 4 , 3 , 1 , 8 ] on rencontre huit d\u00e9nivel\u00e9s lors de son parcours -3, -1, 3, 1, -3, -1, -2, 7. Plus formellement, dans un tableau tab de taille n le d\u00e9nivel\u00e9 \u00e0 l'indice i est \u00e9gal \u00e0 tab[i+1] - tab[i] (\u00e0 condition que l'indice i+1 existe). Voici le sch\u00e9ma d'un tableau tab de taille n : --------------------------------------------- | indices | 0 | 1 | 2 | 3 | ... | n-2 | n-1 | --------------------------------------------- | valeurs | . | . | . | . | ... | . | . | --------------------------------------------- Le plus grand indice possible est donc n-1 . Compl\u00e9ter la fonction plus_grand_denivele ci-dessous qui prend en param\u00e8tre un tableau tab de plus de deux nombres et renvoie le plus grand d\u00e9nivel\u00e9 qui existe dans ce tableau. def plus_grand_denivele ( tab ): pass Tester votre fonction en utilisant le jeu de tests ci-dessous. assert plus_grand_denivele ([ 2 , 5 , 8 , 3 , - 2 , 13 , 17 , 18 , 16 , 13 , 11 , 5 ]) == 15 assert plus_grand_denivele ([ 17 , 18 , 16 , 13 , 11 , 5 , 2 , - 1 , - 14 , - 15 ]) == 1 assert plus_grand_denivele ([ 22 , 16 , 13 , 11 , 5 , 2 , - 1 , - 14 , - 19 ]) == - 2 assert plus_grand_denivele ([ 22 , 28 ]) == 6","title":"DS 3 Groupe 1"},{"location":"Devoirs/DS_TP_Reseaux/","text":"Devoir Surveill\u00e9 : Construction et param\u00e9trage d'un r\u00e9seau Th\u00e8me 3 : Architecture mat\u00e9rielle DEVOIR Premier r\u00e9seau local \u2693\ufe0e Q1 Cr\u00e9er le r\u00e9seau local ci-dessous : Q2 Param\u00e9trer les marchine B et C pour qu'elles apartiennent au m\u00eame r\u00e9seau que la machine A sachant que son adresse IP est 192.168.0.1 et son masque de sous r\u00e9seau est 255.255.255.0 Q3 V\u00e9rifier que vos 3 machines communiquent bien. Ecrire sur votre copie la commande permettant de faire se test. Un deuxi\u00e8me sous-r\u00e9seau \u2693\ufe0e Q3 Rajouter un deuxi\u00e8me sous-r\u00e9seau de la mani\u00e8re suivante (penser \u00e0 bien renommer les switchs) comme ci-dessous : Q4 Param\u00e9trer toutes les machines pr\u00e9sentes sur ce sous-r\u00e9seau sachant que la machine D a pour adresse IP 192.168.1.1 et pour masque de sous-r\u00e9seau 255.255.255.0 V\u00e9rifier que les machines communiquent entre-elles On rajoute un routeur R1 comme ci-dessous : Q5 Param\u00e9trer le routeur R1 correctement afin de cr\u00e9er une passerelle entre les deux sous-r\u00e9seaux. Dans l'onglet g\u00e9n\u00e9ral, s\u00e9lectionner \u00ab Routage automatique \u00bb. Q6 Tester que vos divers machines communiquent bien entre elles et entre les sous-r\u00e9seaux.. Rajout d'un serveur WEB et d'un serveur DNS \u2693\ufe0e On rajoute un serveur web et un serveur DNS comme ci-dessous : Q7 Connecter un ordinateur au Switch A Param\u00e9trer ce serveur Installer dessus un Serveur web et d\u00e9marrer-le. Tester votre param\u00e9trage Q8 Rajouter un serveur DNS minimal, qui n'aura dans son annuaire un seul site. Il faut pour cela raccorder une nouvelle machine, et installer dessus un serveur DNS. Parametrer ce serveur Sur ce serveur DNS, associons l'adresse http://www.vivelansi.fr \u00e0 l'adresse IP du serveur web. Q9 : Question de cours Donner la diff\u00e9rence entre un hub et un switch Q10 : Question de cours On consid\u00e9re trois machines A, B, C d'IP respectives 192.168.129.10 , 192.168.135.200 et 192.168.145.1 , configur\u00e9es avec un masque de sous-r\u00e9seau \u00e9gal \u00e0 255.255.248.0 . machine A machine B machine C IP 192.168.129.10 192.168.145.1 192.168.135.200 M 255.255.248.0 255.255.248.0 255.255.248.0 Adresse r\u00e9seau :IP & M D\u00e9terminer quelles machines sont sur le m\u00eame r\u00e9seau.","title":"DS r\u00e9seau"},{"location":"Devoirs/DS_TP_Reseaux/#premier-reseau-local","text":"Q1 Cr\u00e9er le r\u00e9seau local ci-dessous : Q2 Param\u00e9trer les marchine B et C pour qu'elles apartiennent au m\u00eame r\u00e9seau que la machine A sachant que son adresse IP est 192.168.0.1 et son masque de sous r\u00e9seau est 255.255.255.0 Q3 V\u00e9rifier que vos 3 machines communiquent bien. Ecrire sur votre copie la commande permettant de faire se test.","title":"Premier r\u00e9seau local"},{"location":"Devoirs/DS_TP_Reseaux/#un-deuxieme-sous-reseau","text":"Q3 Rajouter un deuxi\u00e8me sous-r\u00e9seau de la mani\u00e8re suivante (penser \u00e0 bien renommer les switchs) comme ci-dessous : Q4 Param\u00e9trer toutes les machines pr\u00e9sentes sur ce sous-r\u00e9seau sachant que la machine D a pour adresse IP 192.168.1.1 et pour masque de sous-r\u00e9seau 255.255.255.0 V\u00e9rifier que les machines communiquent entre-elles On rajoute un routeur R1 comme ci-dessous : Q5 Param\u00e9trer le routeur R1 correctement afin de cr\u00e9er une passerelle entre les deux sous-r\u00e9seaux. Dans l'onglet g\u00e9n\u00e9ral, s\u00e9lectionner \u00ab Routage automatique \u00bb. Q6 Tester que vos divers machines communiquent bien entre elles et entre les sous-r\u00e9seaux..","title":"Un deuxi\u00e8me sous-r\u00e9seau"},{"location":"Devoirs/DS_TP_Reseaux/#rajout-dun-serveur-web-et-dun-serveur-dns","text":"On rajoute un serveur web et un serveur DNS comme ci-dessous : Q7 Connecter un ordinateur au Switch A Param\u00e9trer ce serveur Installer dessus un Serveur web et d\u00e9marrer-le. Tester votre param\u00e9trage Q8 Rajouter un serveur DNS minimal, qui n'aura dans son annuaire un seul site. Il faut pour cela raccorder une nouvelle machine, et installer dessus un serveur DNS. Parametrer ce serveur Sur ce serveur DNS, associons l'adresse http://www.vivelansi.fr \u00e0 l'adresse IP du serveur web. Q9 : Question de cours Donner la diff\u00e9rence entre un hub et un switch Q10 : Question de cours On consid\u00e9re trois machines A, B, C d'IP respectives 192.168.129.10 , 192.168.135.200 et 192.168.145.1 , configur\u00e9es avec un masque de sous-r\u00e9seau \u00e9gal \u00e0 255.255.248.0 . machine A machine B machine C IP 192.168.129.10 192.168.145.1 192.168.135.200 M 255.255.248.0 255.255.248.0 255.255.248.0 Adresse r\u00e9seau :IP & M D\u00e9terminer quelles machines sont sur le m\u00eame r\u00e9seau.","title":"Rajout d'un serveur WEB et d'un serveur DNS"},{"location":"Dictionnaire/TP15_Dictionnaire_Diapo/","text":":root { --color-background: #101010 !important; --color-foreground: #FFFFFF !important; font-size: 1.25rem; } blockquote { background: #C3B091; border-left: 15px solid #CC0000; margin: 1.5em 10px; color: black; padding: 0.5em 10px; } TD n\u00b015 : Structures de donn\u00e9es - Les Dictionnaires \u2693\ufe0e I. Introduction : n\u00e9cessit\u00e9 d'un dictionnaire \u2693\ufe0e Prenons l'exemple d'un r\u00e9pertoire t\u00e9l\u00e9honique. Nous pouvons le m\u00e9moriser simplement comme un tableau (ou liste) de tableaux [nom,num\u00e9ro] liste_tel = [[ \"Paul\" , '0650523454' ], [ \"Emile\" , '0684515345' ], [ \"Victor\" , '0651355186' ], [ \"Rose\" , '0611245678' ], [ \"H\u00e9l\u00e8ne\" , '0774845432' ]] Si nous voulons appeler Rose , nous avons deux possibilit\u00e9s avec un tel tableau : * soit il faut savoir que les informations la concernant sont dans le quatri\u00e8me \u00e9l\u00e9ment de la liste (ce qui ne semble pas tr\u00e8s pratique et r\u00e9aliste) print ( liste_tel [ 3 ][ 1 ]) # il faut savoir que l'index de Rose est 3 \u2693\ufe0e soit nous cherchons dans le tableau en partant du premier \u00e9l\u00e9ment de la liste jusqu'\u00e0 ce que nous trouvions Rose (ce qui revient \u00e0 feuilleter son r\u00e9pertoire) : cela n\u00e9cessite d'utiliser une boucle pour parcourir le tableau. for element in liste_tel : if element [ 0 ] == 'Rose' : print ( element [ 1 ]) Vous conviendrez que ce n'est pas pratique pour acc\u00e9der \u00e0 son num\u00e9ro de t\u00e9l\u00e9phone. De m\u00eame, la modification ou l'ajout d'un information n\u00e9cessiterait de devoir feuilleter tout le r\u00e9pertoire. Il semblerait plus pratique d'associer un nom \u00e0 un num\u00e9ro, autrement dit d'associer \u00e0 une information \u00e0 une cl\u00e9 . C'est ce que les dictionnaires permettent ! II. Les dictionnaires en Python \u2693\ufe0e II.1 D\u00e9finitions et premiers exemples \u2693\ufe0e \ud83d\udc9c Un dictionnaire, de type dict en Python, est un ensemble non ordonn\u00e9 de paires (cl\u00e9, valeur) avec un acc\u00e8s tr\u00e8s rapide \u00e0 la valeur \u00e0 partir de la cl\u00e9. C'est un type de conteneur comme les list et les tuple mais ce n'est pas une s\u00e9quence. Au sens o\u00f9 les valeurs des tableaux ne sont pas index\u00e9s par des entiers. Dans un dictionnaire, chaque \u00e9l\u00e9ment est accessible par une cl\u00e9 qui n'est plus forc\u00e9ment un nombre, une chaine de caract\u00e8re, un nombre, ou autre chose, peut \u00eatre une cl\u00e9. \ud83d\udd8b Exemple n\u00b01 : Reprenons la probl\u00e9matique de d\u00e9part : un r\u00e9pertoire t\u00e9l\u00e9honique. Nous pouvons le m\u00e9moriser comme un dictionnaire [nom:num\u00e9ro] >>> repertoire = { \"Paul\" : '0650523454' , \"Emile\" : '0684515345' , \"Victor\" : '0651355186' , \"Rose\" : '0611245678' , \"H\u00e9l\u00e8ne\" : '0774845432' } L'acc\u00e8s \u00e0 Rose se fera par : >>> repertoire [ \"Rose\" ] '0611245678' On dit que \"Rose\" est la cl\u00e9 et que '0611245678' est la valeur associ\u00e9e \u00e0 la cl\u00e9. Un dictionnaire est un ensemble cl\u00e9s / valeurs. \ud83d\udd8b A vous n\u00b01 : Imaginons que je fasse l'inventaire de mon dressing : habits quantit\u00e9 pantalons 3 pulls 4 tee-shirts 8 Question 1 : Cr\u00e9er le dictionnaire repr\u00e9sentant mon dressing. Question 2 : Donner le script permettant d'acc\u00e9der au nombre de pulls pr\u00e9sent dans mon dressing. II.2. D\u00e9finitions et propri\u00e9t\u00e9s d'un dictionnaire \u2693\ufe0e II.2.1 D\u00e9finitions \u2693\ufe0e \ud83d\udcd8 D\u00e9finition Un dictionnaire est une donn\u00e9e composite qui n'est pas ordonn\u00e9e (\u00e0 la diff\u00e9rence des listes !) Il fonctionne par un syst\u00e8me de cl\u00e9:valeur . Les cl\u00e9s, comme les valeurs, peuvent \u00eatre de types diff\u00e9rents. Un dictionnaire est d\u00e9limit\u00e9 par des accolades. Rappel : crochets [ ] -> listes parenth\u00e8ses ( ) -> tuples accolades { } -> dictionnaires II.2.2 M\u00e9thodes .keys() et .values() \u2693\ufe0e \ud83d\udcce Exemple n\u00b02 : Pour lister les cl\u00e9s d'un dictionnaire : >>> repertoire . keys () dict_keys ([ \"Paul\" , \"Emile\" , \"Victor\" , \"Rose\" , \"H\u00e9l\u00e8ne\" ]) Pour lister les valeurs d'un dictionnaire : >>> repertoire . values () dict_values ( '0650523454' , '0684515345' , '0651355186' , '0611245678' , '0774845432' ) \ud83d\udd8b A vous n\u00b02 : Question 1 Lister les cl\u00e9s du dictionnaire dressing. Question 2 Lister les valeurs du dictionnaire dressing. II.2.3 Parcours d'un dictionnaire : \u2693\ufe0e Il est possible de parcourir un dictionnaire de trois mani\u00e8res : parcourir l'ensemble des cl\u00e9s avec la m\u00e9thode keys() ; parcourir l'ensemble des valeurs avec la m\u00e9thode values() ; parcourir l'ensemble des paires cl\u00e9s-valeurs avec la m\u00e9thode items() . On peut it\u00e9rer sur un dictionnaire gr\u00e2ce \u00e0 l'une de ces m\u00e9thodes. \ud83d\udcce Exemple n\u00b03 : par les cl\u00e9s (idem tableau) >>> for nom in repertoire : print ( repertoire [ nom ]) 0650523454 0684515345 0651355186 0611245678 0774845432 Par cette m\u00e9thode, on obtient les valeurs associ\u00e9es aux cl\u00e9s. \ud83d\udcce Exemple n\u00b04 : par les cl\u00e9s avec la m\u00e9thode keys() . >>> for nom in repertoire . keys (): print ( nom ) Paul Emile Victor Rose H\u00e9l\u00e8ne Par cette m\u00e9thodes, on extrait les cl\u00e9s. ou >>> for nom in repertoire . keys (): print ( repertoire [ nom ]) 0650523454 0684515345 0651355186 0611245678 0774845432 Par cette m\u00e9thode, on obtient les valeurs associ\u00e9es aux cl\u00e9s. \ud83d\udcce Exemple n\u00b05 : par les valeurs avec la m\u00e9thode values() . >>> for numero in repertoire . values (): print ( numero ) 0650523454 0684515345 0651355186 0611245678 0774845432 Par cette m\u00e9thodes, on extrait les valeurs pr\u00e9sentes dans le dictionnaires. \ud83d\udcce Exemple n\u00b06 : par les cl\u00e9s et les valeurs avec la m\u00e9thode items() . >>> for cle , valeur in repertoire . items (): print ( cle , valeur ) Paul 0650523454 Emile 0684515345 Victor 0651355186 Rose 0611245678 H\u00e9l\u00e8ne 0774845432 Par cette m\u00e9thodes, on extrait les valeurs et les cl\u00e9s du dictionnaires. \ud83d\udcce Exemple n\u00b07 : un dictionnaire dans un dictionnaire. sportifs = { \"Mike\" : { \"taille\" : 1.75 , \"poids\" : 68 }, \"John\" : { \"taille\" : 1.89 , \"poids\" : 93 }, \"Kate\" : { \"taille\" : 1.67 , \"poids\" : 62 }} Pour acc\u00e9der \u00e0 la taille de Kate dans le dictionnaire sportifs , on utiliser : sportifs [ \"Kate\" ][ \"taille\" ] 1.67 \u2693\ufe0e II.2.4 Ajout / Modification d'un \u00e9l\u00e9ment dans un dictionnaire \u2693\ufe0e \ud83d\udcce Exemple n\u00b08 : Pas besoin d'une m\u00e9thode append() , il suffit de rajouter une paire cl\u00e9 : valeur >>> repertoire [ \"Bob\" ] = '0684574615' On peut aussi modifier un dictionnaire existant. repertoire [ \"Rose\" ] = '0708484850' >>> repertoire { \"Paul\" : '0650523454' , \"Emile\" : '0684515345' , \"Victor\" : '0651355186' , \"Rose\" : '0708484850' , \"H\u00e9l\u00e8ne\" : '0774845432' , \"Bob\" : '0684574615' } \ud83d\udd8b A vous n\u00b08 : Reprenons le dictionnaire dressing \"Question 1\" Rajouter la cat\u00e9gorie chemises avec une quantit\u00e9 de 6. Question 2 Modifier la cat\u00e9gorie pantalons avec une quantit\u00e9 de 5. II.2.5 Suppression d'une valeur \u2693\ufe0e \ud83d\udcce Exemple n\u00b09 : On utilise l'instruction del (d\u00e9j\u00e0 rencontr\u00e9e pour les listes) pour supprimer une association cl\u00e9/valeur del repertoire [ \"Paul\" ] II.3. Exercices : \u2693\ufe0e \ud83d\udd8b A vous n\u00b09 : Cr\u00e9er une fonction qui permet de rajouter un nom et un num\u00e9ro au repertoire pr\u00e9c\u00e9dent. def ( nom , numero , repertoire ): pass \ud83d\udd8b A vous n\u00b09 bis : Reprenons notre dictionnaire dressing : dressing = { \"pantalons\" : 3 , \"pulls\" : 4 , \"tee-shirts\" : 8 } Cr\u00e9er une fonction achat(vetement,quantite) qui augmente de quantite le nombre de v\u00e9tment (pantalon, pull ou tee-shirt) de mon dressing. Remarque : Petit probl\u00e8me si on essaie d'acheter un v\u00eatement pour la 1\u00e8re fois >>> achat ( \"chemises\" , 2 ) --------------------------------------------------------------------------- KeyError Traceback ( most recent call last ) < ipython - input - 28 - fd9d1ac5f62d > in < module > ----> 1 achat ( \"chemises\" , 2 ) < ipython - input - 27 - feb173444189 > in achat ( habit ) 1 def achat ( vetement , quantite ): ----> 2 dressing [ vetement ] = dressing [ vetement ] + quantite KeyError : 'chemises' Nous allons r\u00e9soudre ce probl\u00e8me gr\u00e2ce \u00e0 : II.4 Test d'appartenance \u00e0 un dictionnaire \u2693\ufe0e \ud83d\udcce Exemple n\u00b010 : Le mot in permet de tester l'appartenance d'une cl\u00e9 \u00e0 un dictionnaire. Un bool\u00e9en est renvoy\u00e9. >>> \"Jean\" in repertoire False >>> \"Jean\" in repertoire . keys () False >>> \"Rose\" in repertoire . keys () True >>> '0684515345' in repertoire . values () True \ud83d\udd8b A vous n\u00b010 : Am\u00e9liorer la fonction achat(vetement,quantite) en y incluant un test pour prendre en compte les nouveaux habits. II.5. Cr\u00e9ation d'un dictionnaire \u2693\ufe0e Plusieurs m\u00e9thodes permettent de cr\u00e9er soit un dictionnaire vide, soit de le noter en extension, soit par compr\u00e9hension. \ud83d\udcce Exemple n\u00b011 : d1 = {} # Cr\u00e9ation d'un dictionnaire vide d2 = dict () # Cr\u00e9ation d'un dictionnaire vide (autre m\u00e9thode) d3 = { 'poires' : 5 , 'bananes' : 7 , 'abricots' : 12 } # cr\u00e9ation d'un dictionnaire par extension d4 = { k : k ** 2 for k in range ( 1 , 10 )} # cr\u00e9ation d'un dictionnaire par compr\u00e9hension print ( d4 ) { 1 : 1 , 2 : 4 , 3 : 9 , 4 : 16 , 5 : 25 , 6 : 36 , 7 : 49 , 8 : 64 , 9 : 81 } Il est m\u00eame possible de cr\u00e9er un dictionnaire \u00e0 partir d'une liste de couples. liste = [( 'cle1' , 'valeur1' ),( 'cle2' , 'valeur2' )] d5 = dict ( liste ) liste_tel = [[ \"Paul\" , 5234 ], [ \"Emile\" , 5345 ], [ \"Victor\" , 5186 ], [ \"Rose\" , 5678 ], [ \"H\u00e9l\u00e8ne\" , 5432 ]] d6 = dict ( liste_tel ) print ( \"d5 =>\" , d5 ) print ( \"d6 =>\" , d6 ) \u2693\ufe0e \ud83d\udc9c Important : Vous aurez not\u00e9 que les dictionnaires Python se repr\u00e9sentent entre accolades {} . Les diff\u00e9rentes paires sont s\u00e9par\u00e9es par des virgules et sont de la forme cl\u00e9: valeur . \ud83d\udd8b A vous n\u00b011 : Question Cr\u00e9ez un dictionnaire appel\u00e9 notes qui contient les paires (mati\u00e8res, moyenne) de vos trois sp\u00e9cialit\u00e9s. Affichez ensuite ce dictionnaire. II.6. Taille d'un dictionnaire \u2693\ufe0e \ud83d\udc9c La fonction len renvoie la taille d'un dictionnaire. len ( dressing ) 5 \u2693\ufe0e III. Les dictionnaires : EXERCICES \u2693\ufe0e Exercice 1 On reprend le dictionnaire notes . notes = { 'NSI' : 18 , 'Maths' : 15 , 'PC' : 14 } Affichez la moyenne de NSI. Modifiez votre moyenne de NSI qui a gagn\u00e9 2 points. Affichez le dictionnaire. Ajoutez la mati\u00e8re Anglais avec sa moyenne. Affichez le dictionnaire. Affichez la taille du dictionnaire. Supprimez une des trois sp\u00e9cialit\u00e9s ainsi que l'Anglais et affichez le dictionnaire. Exercice 2 On consid\u00e8re le dictionnaire dressing . Affichez tous les v\u00e9tements du dressing. Ecrivez un programme permettant d'obtenir l'affichage suivant. Le dressing comporte : 3 pantalons 4 pulls 8 tee - shirts \u2693\ufe0e Exercice 3 On consid\u00e8re le dictionnaire suivant qui contient diff\u00e9rents fruits ainsi que leurs quantit\u00e9s. fruits = { \"pommes\" : 8 , \"melons\" : 3 , \"poires\" : 6 } Quelle instruction permet d'acc\u00e9der au nombre de melons ? On a achet\u00e9 16 cl\u00e9mentines et utilis\u00e9 4 pommes pour faire une tarte. Ecrire une fonction ajout(fruit) permettant d'ajouter un fruit dans le dictionnaire fruits ainsi qu'une fonction miseajourquantite(fruit,quantite) . Tester avec l'exemple donn\u00e9. Exercice 4 On dispose d\u2019un dictionnaire associant \u00e0 des noms de commerciaux d\u2019une soci\u00e9t\u00e9 le nombre de ventes qu\u2019ils ont r\u00e9alis\u00e9es. Par exemple : ventes={\"Dupont\":14, \"Hervy\":19, \"Geoffroy\":15, \"Layec\":21} 1. \u00c9crivez une fonction qui prend en entr\u00e9e un tel dictionnaire et renvoie le nombre total de ventes dans la soci\u00e9t\u00e9. 2. \u00c9crivez une fonction qui prend en entr\u00e9e un tel dictionnaire et renvoie le nom du vendeur ayant r\u00e9alis\u00e9 le plus de ventes. Si plusieurs vendeurs sont ex-aequo sur ce crit\u00e8re, la fonction devra retourner le nom de l\u2019un d\u2019entre eux. 3. Modifier la fonction pr\u00e9c\u00e9dente pour que : - si plusieurs vendeurs sont ex-aequo sur ce crit\u00e8re, la fonction devra retourner tous les noms. ```ventes={\"Dupont\":14, \"Hervy\":19, \"Geoffroy\":15, \"Layec\":21,\"Jean\":21}``` Exercice 5 Le Scrabble est un jeu de soci\u00e9t\u00e9 o\u00f9 l'on doit former des mots avec tirage al\u00e9atoire de lettres, chaque lettre valant un certain nombre de points. Le dictionnaire scrabble contient cette association entre une lettre et son nombre de points. scrabble = { 'A' : 1 , 'B' : 3 , 'C' : 3 , 'D' : 2 , 'E' : 1 , 'F' : 4 , 'G' : 2 , 'H' : 4 , 'I' : 1 , 'J' : 8 , 'K' : 10 , 'L' : 1 , 'M' : 2 , 'N' : 1 , 'O' : 1 , 'P' : 3 , 'Q' : 8 , 'R' : 1 , 'S' : 1 , 'T' : 1 , 'U' : 1 , 'V' : 4 , 'W' : 10 , 'X' : 10 , 'Y' : 10 , 'Z' : 10 } Ecrivez une fonction points(mot) qui renvoie le nombre de points au scrabble de mot , qui est une cha\u00eene de caract\u00e8res majuscules. Par exemple, le mot \"ARBRE\" doit rapporter 7 points, le mot \"XYLOPHONE\" doit rapporter 32 points . Exercice 6 Au zoo de Beauval, il y a 5 \u00e9l\u00e9phants d\u2019Asie, 17 \u00e9cureuils d\u2019Asie, 2 pandas d\u2019Asie... On repr\u00e9sente cet inventaire \u00e0 l\u2019aide d\u2019un dictionnaire, de la fa\u00e7on suivante : zoo_beauval = { 'elephant' : { \"continent\" : 'Asie' , \"nombre\" : 5 }, '\u00e9cureuil' : { \"continent\" : 'Asie' , \"nombre\" : 17 }, 'panda' : { \"continent\" : 'Asie' , \"nombre\" : 2 } , 'hippopotame' : { \"continent\" : 'Afrique' , \"nombre\" : 7 }, 'girafe' : { \"continent\" : 'Afrique' , \"nombre\" : 4 }} On repr\u00e9sente de la m\u00eame fa\u00e7on le zoo de la Fl\u00eache : zoo_la_fleche = { 'ours' : { \"continent\" : 'Europe' , \"nombre\" : 4 }, 'tigre' : { \"continent\" : 'Asie' , \"nombre\" : 7 }, 'girafe' : { \"continent\" : 'Afrique' , \"nombre\" : 11 }, 'hippopotame' : { \"continent\" : 'Afrique' , \"nombre\" : 3 }} 1. On souhaite se doner d\u2019une fonction plus_grand_nombre qui prend un zoo en param\u00e8tre et qui renvoie le nom de l\u2019animal le plus repr\u00e9sent\u00e9 dans ce zoo. Par exemple : assert plus_grand_nombre ( zoo_la_fleche ) == 'girafe' assert plus_grand_nombre ( zoo_beauval ) == '\u00e9cureuil' \u00c9crire le code de cette fonction. On souhaite se doter d\u2019une fonction nombre_total qui prend un zoo en param\u00e8tre ainsi que le nom d\u2019un continent, et qui renvoie le nombre d\u2019animaux originaires de ce continent dans le zoo. Par exemple : assert nombre_total ( zoo_beauval , 'Asie' ) == 24 assert nombre_total ( zoo_la_fleche , 'Afrique' ) == 14 \u00c9crire le code de cette fonction. On souhaite se doter d\u2019une fonction nombre qui prend un zoo en param\u00e8tre ainsi que le nom d\u2019un animal, et qui renvoie le nombre de repr\u00e9sentants de cet animal dans le zoo. Par exemple : assert nombre ( zoo_la_fleche , 'panda' ) == 0 assert nombre ( zoo_beauval , 'panda' ) == 2 \u00c9crire le code de cette fonction. Exercice 7 On consid\u00e8re le dictionnaire suivant qui contient le nom des \u00e9l\u00e8ves et leur note : dico_eleves = { 'Pierre' : 17 , 'Chlo\u00e9' : 18 , 'Simon' : 11 , 'Titouan' : 7 , 'Raphael' : 16 , 'Diwan' : 6 , 'Ethann' : 8 , 'Cl\u00e9ment' : 16 , 'Noa' : 17 , 'Solan' : 5 , 'Matheo' : 17 , 'Martin' : 10 , 'Valentin' : 11 , 'Zo\u00e9' : 7 , 'Antonin' : 18 , 'Sacha' : 9 , 'Emma' : 15 , 'Tidane' : 13 , 'Tristan' : 7 , 'Tifenn' : 20 , 'Soren' : 14 , 'Marjorie' : 15 , 'Maxime' : 7 , 'Liam' : 8 , 'Adrien' : 18 , 'Mathieu' : 16 , 'Lucas' : 8 , 'Louis' : 16 , 'Romane' : 19 } 1. Cr\u00e9er une fonction audessus(dico) qui affiche les \u00e9l\u00e8ves ayant au dessous de la moyenne (10). 2. Cr\u00e9er une fonction moyenne(dico) qui renvoie la moyenne de la classe. 3. Cr\u00e9er \u00e0 partir du dictionnaire dico_eleves un dictionnaire dessous_moyenne qui va contenir les \u00e9l\u00e8ves ayant au dessous de 10 (au sens large) avec leur moyenne et un dictionnaire dessus_moyenne qui va contenir les \u00e9l\u00e8ves ayant en dessous (au sens strict) de l a moyenne avec leur note. ! Exercice 8 Voici une citation c\u00e9l\u00e8bre de Gandhi : La vie est un myst\u00e8re qu'il faut vivre, et non un probl\u00e8me \u00e0 r\u00e9soudre. Cr\u00e9er un dictionnaire qui associe \u00e0 chaque lettre (cl\u00e9) son occurrence (valeur) * Par exemple la lettre 'a' apparait deux fois. Par exemple dico= {'a':2, .........} Exercice 9 : Gestion d'une biblioth\u00e8que On consid\u00e8re la base de donn\u00e9es suivante : global Livres_BD Livres_BD = { 'Les mis\u00e9rables' :{ 'Auteur' : 'Victor Hugo' , 'Stock' : 5 }, 'Le dernier des Mohicans' :{ 'Auteur' : 'James F. Cooper' , 'Stock' : 2 }, 'Un animal dou\u00e9 de raison' :{ 'Auteur' : 'Robert Merle' , 'Stock' : 6 }, 'Notre-dame de Paris' :{ 'Auteur' : 'Victor Hugo' , 'Stock' : 4 }, 'Les comtemplations' :{ 'Auteur' : 'Victor Hugo' , 'Stock' : 1 }, 'Da Vinci Code' :{ 'Auteur' : 'Dan Brown' , 'Stock' : 3 }, 'Anges et d\u00e9mons5' :{ 'Auteur' : 'Dan Brown' , 'Stock' : 3 }} Ecrire une fonction stock(livre) permettant d'afficher le stock d'un livre ainsi que son auteur. Ecrire une fonction titres_base(LivresBD) qui renvoie la liste des titres des livres de la base. Ecrire une fonction auteurs_base(LivresBD) qui retourne l'ensemble des noms d'auteurs de cette base dans un tableau. Ecrire une fonction auteur(nom) qui renvoie un dictionnaire qui a pour cl\u00e9 le nom de l'auteur et pour cl\u00e9 les titres des livres de cet auteur. auteur('Victor Hugo') {'Les mis\u00e9rables':5,'Notre-dame de Paris':4,'Les comtemplations':1} Ecrire une fonction est_present(livre) qui renvoie True si le livre est pr\u00e9sent ou False s'il n'est pas pr\u00e9sent. Ecrire une fonction ajoute_base(titre,auteur,stock) qui rajoute \u00e0 la base LivreBD les donn\u00e9es n\u00e9cessaires pour un nouveau livre apr\u00e9s avoir v\u00e9rifi\u00e9 qu'il ne soit pas pr\u00e9sent dans la base. Ecrire une fonction ajoute_stock(livre) qui ajoute 1 au stock du livre concern\u00e9 et qui affiche la nouvelle base de donn\u00e9es. Ecrire une fonction enleve_stock(livre) qui soustrait 1 au stock du livre concern\u00e9 et qui affiche la nouvelle base de donn\u00e9es. Ecrire une fonction titres_empruntables(LivresBD) qui retourne l'ensemble des livres empruntables. Exercice 9 : QCM de NSI Les r\u00e9ponses correctes d'un QCM de NSI sont stock\u00e9es dans un dictionnaire nomm\u00e9 reponses_valides. Les cl\u00e9s sont des cha\u00eenes de caract\u00e8res de la forme \"Q1\". Les valeurs possibles sont des cha\u00eenes de caract\u00e8res correspondant aux quatre r\u00e9ponses \"a\",\"b\",\"c\",\"d\". Exemple : reponses_valides = {\"Q1\":\"c\",\"Q2\":\"a\",\"Q3\":\"d\",\"Q4\":\"c\",\"Q5\":\"b\"} Les r\u00e9ponses donn\u00e9es par Alice sont stock\u00e9es dans le dictionnaire reponses_Alice dont voici un exemple possible : reponses_Alice = {\"Q1\":\"b\",\"Q2\":\"a\",\"Q3\":\"d\",\"Q5\":\"a\"} Lorsqu'Alice n'a pas r\u00e9pondu \u00e0 une question, il n'y a pas de clef correspondant au nom de l'exercice. La notation d'un QCM de NSI est la suivante : 3 points par r\u00e9ponse correcte, -1 point par r\u00e9ponse incorrecte et 0 si l'on n'a pas r\u00e9pondu Compl\u00e9ter la fonction correction_QCM_Alice(reponses_Alice,reponses_valides) qui, \u00e0 partir des dictionnaires reponses_Alice et reponses_valides pass\u00e9es en param\u00e8tres renvoie le nombre de points obtenus au QCM par Alice. def correction_QCM_Alice ( reponses_Alice , reponses_valides ): \u00b2 pass Exercice 10 : L'application Contacts de vos smartphones L'objectif de cette activit\u00e9 est de programmer deux des fonctionnalit\u00e9s importantes des smartphones actuels : Ajouter un contact au r\u00e9pertoire ; Rechercher un contact dans le r\u00e9pertoire. On suppose pour simplifier que le repertoire t\u00e9l\u00e9phonique est m\u00e9moris\u00e9 dans le smartphone sous la forme d'un dictionnaire et que chaque \u00e9l\u00e9ment du dictionnaire est une paire (prenom, numero) o\u00f9 prenom est la cl\u00e9 et numero la valeur associ\u00e9e. Etape 1 : Ajouter un contact \u2693\ufe0e On consid\u00e8re que le r\u00e9pertoire t\u00e9l\u00e9phonique est m\u00e9moris\u00e9 dans le dictionnaire repertoire . Quelques contacts sont d\u00e9j\u00e0 enregistr\u00e9s dans ce r\u00e9pertoire. repertoire = { 'David' : 1010 , 'M\u00e9lanie' : 1111 , 'Alain' : 121212 } Question 1 : Ecrivez une fonction ajout_contact(repertoire) qui demande \u00e0 l'utilisateur de saisir les donn\u00e9es (pr\u00e9nom et num\u00e9ro de t\u00e9l\u00e9phone) d'un contact et qui ajoute ce contact \u00e0 repertoire . Question 2 : On veut maintenant cr\u00e9er une fonction remplissage qui permet d'ajouter des contacts au r\u00e9pertoire autant de fois que l'on souhaite. Plus pr\u00e9cis\u00e9ment, une fois qu'un contact a \u00e9t\u00e9 saisi on demande \u00e0 l'utilisateur s'il souhaite ajouter un autre contact. Compl\u00e9tez la fonction remplissage en cons\u00e9quence. Vous utiliserez la fonction ajout_contact \u00e9crite \u00e0 la question pr\u00e9c\u00e9dente. def remplissage ( repertoire ): encore = True # \u00e0 compl\u00e9ter \u2693\ufe0e Etape 2 : Rechercher un contact \u2693\ufe0e On souhaite maintenant \u00e9crire une fonction numero_de(prenom, repertoire) qui renvoie le num\u00e9ro de prenom si prenom est bien dans repertoire et qui renvoie un message sinon. Question 3 : Si prenom est pr\u00e9sent dans repertoire , quelle instruction permet d'afficher le num\u00e9ro associ\u00e9 \u00e0 prenom ? Question 4 : Compl\u00e9tez la fonction numero_de(prenom, repertoire) qui renvoie le num\u00e9ro de t\u00e9l\u00e9phone associ\u00e9 dans l'affirmative et un message d'erreur sinon. def numero_de ( prenom , repertoire ): '''prenom est une chaine de caract\u00e8res et repertoire est un dictionnaire''' # \u00e0 compl\u00e9ter Exercice 11 Quel est le mot de 6 lettres le plus pr\u00e9sent dans Le tour du monde en 80 jours de Jules Verne ?\" Le fichier texte de l'oeuvre de Jules Verne, intitul\u00e9 ltdme80j.txt , a \u00e9t\u00e9 plac\u00e9 dans le dossier data du r\u00e9pertoire de ce notebook. Par souci de simplification, le texte ne contient aucun signe de ponctuation. De mani\u00e8re g\u00e9n\u00e9rale, le site du Projet Gutenberg permet de r\u00e9cup\u00e9rer librement le texte de plusieurs milliers d'oeuvres du domaine public : https://www.gutenberg.org . Etape 1 : Lecture du contenu du fichier \u2693\ufe0e On peut ouvrir et m\u00e9moriser dans une variable texte le contenu du fichier texte. Pour cela, il suffit d'ouvrir le fichier puis en lire le contenu sous la forme d'une unique cha\u00eene de caract\u00e8res avec la m\u00e9thode read() . On ferme ensuit le flux de lecture du fichier. # Ouverture du fichier ('r' pour read = lecture, 'utf-8' pour l'encodage des caract\u00e8res) fichier = open ( \"ltdme80j.txt\" , mode = \"r\" , encoding = \"utf-8\" ) # M\u00e9morisation du texte de l'oeuvre dans une cha\u00eene de caract\u00e8res appel\u00e9e texte texte = fichier . read () # Fermeture du flux de lecture fichier . close () print ( texte ) \u2693\ufe0e Etape 2 : Conversion en un tableau de mots \u2693\ufe0e On peut ensuite convertir la cha\u00eene texte en un tableau contenant les diff\u00e9rents mots de l'oeuvre. Pour cela, on peut utiliser la m\u00e9thode split() des cha\u00eenes de caract\u00e8res. tab = texte . split () print ( tab ) Etape 3 : Compter le nombre d'occurrences de chaque mot \u2693\ufe0e Un cas d\u2019utilisation typique des dictionnaires consiste \u00e0 compter les occurrences des \u00e9l\u00e9ments d\u2019un tableau. Consid\u00e9rons par exemple le tableau suivant : ['b', 'c', 'e', 'b', 'c', 'j', 'd', 'b', 'j', 'a', 'b'] Dans cette liste le caract\u00e8re 'b' est par exemple r\u00e9p\u00e9t\u00e9 quatre fois, et le 'j' deux fois, etc. L'objectif est de d\u00e9finir une fonction occurrences(t) qui renvoie un dictionnaire avec le nombre d'occurences de chaque \u00e9l\u00e9ment du tableau t entr\u00e9e en param\u00e8tre. Par exemple, la fonction occurences appliqu\u00e9e au tableau pr\u00e9c\u00e9dent occurrences(['b', 'c', 'e', 'b', 'c', 'j', 'd', 'b', 'j', 'a', 'b']) doit renvoyer le dictionnaire : {'b': 4, 'a': 1, 'c': 2, 'e': 1, 'j': 2, 'd': 1} Question 1 : Ecrivez la fonction occurrences(t) et testez-la sur un tableau de caract\u00e8res. Question 2 : Appliquez la fonction occurences \u00e0 ce tableau pour r\u00e9cup\u00e9rer un dictionnaire d du nombre d'occurences de chaque mot. Etape 4 : Trouver le mot de 6 lettres le plus pr\u00e9sent \u2693\ufe0e Question 3 : Ecrivez une fonction mot_6_lettres_plus_frequent(d) qui renvoie le mot de 6 lettres les plus fr\u00e9quent dans l'oeuvre de Jules Verne ainsi que son nombre d'occurence. (r\u00e9ponse : 'heures' avec 243 occurrences) R\u00e9ponse : cela revient \u00e0 effectuer une recherche de maximum sur les occurences des mots de 6 lettres. On parcourt donc toutes les cl\u00e9s du dictionnaire d (les cl\u00e9s sont les mots) et parmi les mots de 6 lettres on regarde si son nombre d'occurence est le nouveau maximum. Dans l'affirmative, ce mot devient le mot le plus fr\u00e9quent (provisoire) et sa valeur dans le dictionnaire le nombre d'occurrences maximum (provisoire). Question BONUS : Ecrire une fonction mot_plus_frequent(d, k) qui renvoie le mot de k lettres le plus pr\u00e9sent dans le dictionnaire d . Affichez ensuite le mot le plus fr\u00e9quent d'une lettre, de deux lettres, etc. Exercice 12 : gestion de commandes Compl\u00e9ter les fonction pour r\u00e9pondre aux docstring global commandes commandes = { '0' : { 'numero' : 'EMA70495' , 'nom' : 'Ada Lovelace' , 'adresse' : '64 rue Jocelyne Troccaz' , 'ville' : 'Tours' , 'etat' : 'En cours' }, '1' : { 'numero' : 'VWD74550' , 'nom' : 'Dorothy Vaughan' , 'adresse' : '33 rue Al-Kindi' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '2' : { 'numero' : 'SWK65993' , 'nom' : 'Gilles Kahn' , 'adresse' : '53 rue Ingrid Daubechies' , 'ville' : 'Lille' , 'etat' : 'En cours' }, '3' : { 'numero' : 'NKR34542' , 'nom' : 'Ada Lovelace' , 'adresse' : '98 rue Jules C\u00e9sar' , 'ville' : 'Bordeaux' , 'etat' : 'Livr\u00e9e' }, '4' : { 'numero' : 'GEG58414' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '84 rue Al-Kindi' , 'ville' : 'Rennes' , 'etat' : 'Retour' }, '5' : { 'numero' : 'FZA36963' , 'nom' : 'Al-Khwarizmi' , 'adresse' : '73 rue Adi Shamir' , 'ville' : 'Marseille' , 'etat' : 'En cours' }, '6' : { 'numero' : 'QWE58690' , 'nom' : 'Alonzo Church' , 'adresse' : '47 rue Jules C\u00e9sar' , 'ville' : 'Paris' , 'etat' : 'Retour' }, '7' : { 'numero' : 'NLY90647' , 'nom' : 'Hypatie d\u2019Alexandrie' , 'adresse' : '51 rue Whitfield Diffie' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '8' : { 'numero' : 'VVL26047' , 'nom' : 'Alonzo Church' , 'adresse' : '6: rue Adi Shamir' , 'ville' : 'Montpellier' , 'etat' : 'En cours' }, '9' : { 'numero' : 'CXO07384' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '30 rue Whitfield Diffie' , 'ville' : 'Paris' , 'etat' : 'Livr\u00e9e' } } def afficher_commande_numero ( numero_commande ): ''' affiche la commande correspondant au numero : numero : str : return : print ''' >>> afficher_commande_numero ( 'NLY90647' ) commande : NLY90647 Nom : Hypatie d \u2019 Alexandrie Adresse : 51 rue Whitfield Diffie Ville : Bordeaux Etat : En cours >>> afficher_commande_numero ( 'NLY90687' ) NLY90687 : numero commande non enregistr\u00e9 def recherche_par_nom ( nom ): ''' recherche les commandes correspondantes au nom : nom : str : return : un tuple contenant les commandes >>> print(recherche_par_nom(\"Ada Lovelace\")) ({'numero': 'EMA70495', 'nom': 'Ada Lovelace', 'adresse': '64 rue Jocelyne Troccaz', 'ville': 'Tours', 'etat': 'En cours'}, {'numero': 'NKR34542', 'nom': 'Ada Lovelace', 'adresse': '98 rue Jules C\u00e9sar', 'ville': 'Bordeaux', 'etat': 'Livr\u00e9e'}) >>>print(recherche_par_nom(\"Alan Turing\")) () ''' \u2693\ufe0e def ajouter_commande ( numero , nom , adresse , ville , etat ): ''' ajoute une commande : numero,nom,adresse,ville,etat : str : return : le dict commande modifi\u00e9 global commandes ''' >>> commandes = { '0' : { 'numero' : 'EMA70495' , 'nom' : 'Ada Lovelace' , 'adresse' : '64 rue Jocelyne Troccaz' , 'ville' : 'Tours' , 'etat' : 'En cours' }, '1' : { 'numero' : 'VWD74550' , 'nom' : 'Dorothy Vaughan' , 'adresse' : '33 rue Al-Kindi' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '2' : { 'numero' : 'SWK65993' , 'nom' : 'Gilles Kahn' , 'adresse' : '53 rue Ingrid Daubechies' , 'ville' : 'Lille' , 'etat' : 'En cours' }, '3' : { 'numero' : 'NKR34542' , 'nom' : 'Ada Lovelace' , 'adresse' : '98 rue Jules C\u00e9sar' , 'ville' : 'Bordeaux' , 'etat' : 'Livr\u00e9e' }, '4' : { 'numero' : 'GEG58414' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '84 rue Al-Kindi' , 'ville' : 'Rennes' , 'etat' : 'Retour' }, '5' : { 'numero' : 'FZA36963' , 'nom' : 'Al-Khwarizmi' , 'adresse' : '73 rue Adi Shamir' , 'ville' : 'Marseille' , 'etat' : 'En cours' }, '6' : { 'numero' : 'QWE58690' , 'nom' : 'Alonzo Church' , 'adresse' : '47 rue Jules C\u00e9sar' , 'ville' : 'Paris' , 'etat' : 'Retour' }, '7' : { 'numero' : 'NLY90647' , 'nom' : 'Hypatie d\u2019Alexandrie' , 'adresse' : '51 rue Whitfield Diffie' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '8' : { 'numero' : 'VVL26047' , 'nom' : 'Alonzo Church' , 'adresse' : '6: rue Adi Shamir' , 'ville' : 'Montpellier' , 'etat' : 'En cours' }, '9' : { 'numero' : 'CXO07384' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '30 rue Whitfield Diffie' , 'ville' : 'Paris' , 'etat' : 'Livr\u00e9e' } } --- >>> ajouter_commande ( \"AZE1029\" , \"Alan Turin\" , \"314 rue d'Enigma\" , \"Londres\" , \"En cours\" ) >>> print ( commandes ) { '0' : { 'numero' : 'EMA70495' , 'nom' : 'Ada Lovelace' , 'adresse' : '64 rue Jocelyne Troccaz' , 'ville' : 'Tours' , 'etat' : 'En cours' }, '1' : { 'numero' : 'VWD74550' , 'nom' : 'Dorothy Vaughan' , 'adresse' : '33 rue Al-Kindi' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '2' : { 'numero' : 'SWK65993' , 'nom' : 'Gilles Kahn' , 'adresse' : '53 rue Ingrid Daubechies' , 'ville' : 'Lille' , 'etat' : 'En cours' }, '3' : { 'numero' : 'NKR34542' , 'nom' : 'Ada Lovelace' , 'adresse' : '98 rue Jules C\u00e9sar' , 'ville' : 'Bordeaux' , 'etat' : 'Livr\u00e9e' }, '4' : { 'numero' : 'GEG58414' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '84 rue Al-Kindi' , 'ville' : 'Rennes' , 'etat' : 'Retour' }, '5' : { 'numero' : 'FZA36963' , 'nom' : 'Al-Khwarizmi' , 'adresse' : '73 rue Adi Shamir' , 'ville' : 'Marseille' , 'etat' : 'En cours' }, '6' : { 'numero' : 'QWE58690' , 'nom' : 'Alonzo Church' , 'adresse' : '47 rue Jules C\u00e9sar' , 'ville' : 'Paris' , 'etat' : 'Retour' }, '7' : { 'numero' : 'NLY90647' , 'nom' : 'Hypatie d\u2019Alexandrie' , 'adresse' : '51 rue Whitfield Diffie' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '8' : { 'numero' : 'VVL26047' , 'nom' : 'Alonzo Church' , 'adresse' : '6: rue Adi Shamir' , 'ville' : 'Montpellier' , 'etat' : 'En cours' }, '9' : { 'numero' : 'CXO07384' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '30 rue Whitfield Diffie' , 'ville' : 'Paris' , 'etat' : 'Livr\u00e9e' } '11' : { 'numero' : 'AZE1029' , 'nom' : 'Alan Turin' , 'adresse' : \"314 rue d'Enigma\" , 'ville' : 'Londres' , 'etat' : 'En cours' } } \u2693\ufe0e def supprimer_commande ( numero ): ''' supprime la commande correspondant au n\u00b0 : numero : str : return : le dict commandes ''' >>> supprimer_commande ( 'EMA70495' ) >>> print ( commandes ) { '1' : { 'numero' : 'VWD74550' , 'nom' : 'Dorothy Vaughan' , 'adresse' : '33 rue Al-Kindi' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '2' : { 'numero' : 'SWK65993' , 'nom' : 'Gilles Kahn' , 'adresse' : '53 rue Ingrid Daubechies' , 'ville' : 'Lille' , 'etat' : 'En cours' }, '3' : { 'numero' : 'NKR34542' , 'nom' : 'Ada Lovelace' , 'adresse' : '98 rue Jules C\u00e9sar' , 'ville' : 'Bordeaux' , 'etat' : 'Livr\u00e9e' }, '4' : { 'numero' : 'GEG58414' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '84 rue Al-Kindi' , 'ville' : 'Rennes' , 'etat' : 'Retour' }, '5' : { 'numero' : 'FZA36963' , 'nom' : 'Al-Khwarizmi' , 'adresse' : '73 rue Adi Shamir' , 'ville' : 'Marseille' , 'etat' : 'En cours' }, '6' : { 'numero' : 'QWE58690' , 'nom' : 'Alonzo Church' , 'adresse' : '47 rue Jules C\u00e9sar' , 'ville' : 'Paris' , 'etat' : 'Retour' }, '7' : { 'numero' : 'NLY90647' , 'nom' : 'Hypatie d\u2019Alexandrie' , 'adresse' : '51 rue Whitfield Diffie' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '8' : { 'numero' : 'VVL26047' , 'nom' : 'Alonzo Church' , 'adresse' : '6: rue Adi Shamir' , 'ville' : 'Montpellier' , 'etat' : 'En cours' }, '9' : { 'numero' : 'CXO07384' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '30 rue Whitfield Diffie' , 'ville' : 'Paris' , 'etat' : 'Livr\u00e9e' }} >>> supprimer_commande ( 'EMA70895' ) numero de commande non existant \u2693\ufe0e Exercice 13 : reconnaissance de la langue utilis\u00e9e Cette \u00e9tude ne prendra en compte que les lettres de notre alphabet pour simplifier le probl\u00e8me mais peut-\u00eatre g\u00e9n\u00e9ralis\u00e9e. extrait1 = \"Si je vous ai racont\u00e9 ces d\u00e9tails sur l\u2019ast\u00e9ro\u00efde B 612 et si je vous ai confi\u00e9 son num\u00e9ro, c\u2019est \u00e0 cause des grandes personnes. Les grandes personnes aiment les chiffres. Quand vous leur parlez d\u2019un nouvel ami, elles ne vous questionnent jamais sur l\u2019essentiel. Elles ne vous disent jamais : \u00abQuel est le son de sa voix? Quels sont les jeux qu\u2019il pr\u00e9f\u00e8re? Est-ce qu\u2019il collectionne les papillons?\u00bb Elles vous demandent: \u00abQuel \u00e2ge a-t-il? Combien a-t-il de fr\u00e8res? Combien p\u00e8se-t-il? Combien gagne son p\u00e8re?\u00bb Alors seulement elles croient le conna\u00eetre. Si vous dites aux grandes personnes : \u00abJ\u2019ai vu une belle maison en briques roses, avec des g\u00e9raniums aux fen\u00eatres et des colombes sur le toit...\u00bb, elles ne parviennent pas \u00e0 s\u2019imaginer cette maison. Il faut leur dire : \u00abJ\u2019ai vu une maison de cent mille francs.\u00bb Alors elles s\u2019\u00e9crient : \u00abComme c\u2019est joli!\u00bb\" extrait2 = 'If I have told you these details about the asteroid, and made a note of its number for you, it is on account of the grown-ups and their ways. When you tell them that you have made a new friend, they never ask you any questions about essential matters. They never say to you, \u201cWhat does his voice sound like? What games does he love best? Does he collect butterflies?\u201d Instead, they demand: \u201cHow old is he? How many brothers has he? How much does he weigh? How much money does his father make? Only from these figures do they think they have learned anything about him. If you were to say to the grown-ups: \u201cI saw a beautiful house made of rosy brick, with geraniums in the windows and doves on the roof,\u201d they would not be able to get any idea of that house at all. You would have to say to them: \u201cI saw a house that cost $ 20,000.\u201d Then they would exclaim: \u201cOh, what a pretty house that is!\u201d ' Ecrire une fonction analyse_lettre(extrait) qui renvoie un dictionnaire avec le nombre d'apparition de chacune des lettres dans le texte. Exemple : Lettre Extrait1 Extrait2 A 40 55 B 7 11 C 22 10 D 18 28 e 22 86 ... ... ... Ecrire une fonction analyse(extrait) qui renvoie un tableau avec le nombre d'apparitions des lettres (mais unique les nombres) Exemple : Pour l'extrait1 : la fonction doit renvoyer le tableau [40,7,22,18,105,8,8,1,44,8,0,49,19,56,40,11,8,34,76,33,34,13,0,4,0,1] Pour pouvoir faire l'analyse du texte, on va utiliser une analyse fr\u00e9quentielle. De plus on va utiliser une notion de distance, pour cela on va utiliser la librairie maths de python. from math import * On va \u00e9galement utiliser les apparition des divers lettres dans les divers pays \u00e9tudi\u00e9s. LANGUES = [ 'FR' , 'ANG' , 'ALL' , 'ESP' , 'POR' , 'ITA' ] #Effectif des lettres dans les langues respectives du tableau LANGUES EFF = [[ 763 , 90 , 326 , 366 , 1471 , 106 , 86 , 73 , 752 , 54 , 4 , 545 , 296 , 709 , 537 , 302 , 136 , 655 , 794 , 724 , 631 , 162 , 11 , 38 , 30 , 13 ], [ 816 , 149 , 278 , 425 , 1270 , 222 , 201 , 609 , 696 , 15 , 77 , 402 , 240 , 674 , 750 , 192 , 9 , 598 , 632 , 905 , 275 , 97 , 236 , 15 , 197 , 7 ], [ 651 , 189 , 306 , 508 , 1740 , 166 , 301 , 476 , 755 , 27 , 121 , 344 , 253 , 978 , 251 , 79 , 2 , 700 , 727 , 615 , 435 , 67 , 189 , 3 , 4 , 113 ], [ 1253 , 142 , 468 , 586 , 1368 , 69 , 101 , 70 , 625 , 44 , 1 , 497 , 315 , 671 , 868 , 251 , 88 , 687 , 798 , 463 , 393 , 90 , 2 , 22 , 90 , 52 ], [ 1463 , 104 , 388 , 499 , 1257 , 102 , 130 , 128 , 618 , 40 , 2 , 278 , 474 , 505 , 1073 , 252 , 120 , 653 , 781 , 474 , 463 , 167 , 1 , 21 , 1 , 47 ], [ 1174 , 92 , 450 , 373 , 1179 , 95 , 164 , 154 , 1128 , 0 , 0 , 651 , 251 , 688 , 983 , 305 , 51 , 637 , 498 , 562 , 301 , 210 , 0 , 0 , 0 , 49 ] ] \u2693\ufe0e On utilisera la fonction suivante : def distance ( liste1 , liste2 ): s1 = sum ( liste1 ) #somme des elements de la premiere liste s2 = sum ( liste2 ) #somme des \u00e9l\u00e9ments de la seconde liste. dist = 0 #on va calculer la somme des carr\u00e9 des diff\u00e9rences des fr\u00e9quences pour chaque lettre for i in range ( 26 ): dist += ( liste1 [ i ] / s1 - liste2 [ i ] / s2 ) ** 2 #liste1[i]/s1 correspond \u00e0 la fr\u00e9quence de l'\u00e9l\u00e9ment \u00e0 la position i dans la liste return sqrt ( dist ) #pour avoir la distance, il faut maintenant prendre la racine de ce nombre dist Un exemple : comparaison de deux tableaux Liste1 = [ 40 , 7 , 22 , 18 , 105 , 8 , 8 , 1 , 44 , 8 , 0 , 49 , 19 , 56 , 40 , 11 , 8 , 34 , 76 , 33 , 34 , 13 , 0 , 4 , 0 , 1 ] Liste2 = [ 763 , 90 , 326 , 366 , 1471 , 106 , 86 , 73 , 752 , 54 , 4 , 545 , 296 , 709 , 537 , 302 , 136 , 655 , 794 , 724 , 631 , 162 , 11 , 38 , 30 , 13 ] distance ( Liste1 , Liste2 ) 0.06197049246150164 Maintenant calcuer la distance entre le tableau extrait d'un texte (ici extrait1 et extrait2) avec le tableau correspondant \u00e0 chacune des langues pr\u00e9sentes dans le tableau LANGUES. Pour cela cr\u00e9er une fonction langue(extrait) qui calcule la distance entre chaque langue et l'extrait test\u00e9. def langue ( extrait ): e = analyse ( extrait ) numero_langue = 0 #au initialise \u00e0 0 ce qui correspond au fran\u00e7ais for tab in EFF : # cette m\u00e9thode permet de parcourir le tableau EFF pass Compl\u00e9ter la fonction afin d'obtenir le r\u00e9sultat suivant avec l'extrait 1 print ( langue ( extrait1 ) FR 0.061940492 ..... #distance la plus faible donc la langue est le fran\u00e7ais. ANG 0.119750 ..... ALL 0.10130 .... ESP 0.0999 ... POR 0.13131 .... ITA 0.12394 ... #Test avec de l'espagnol extrait3 = 'Si les he contado estos detalles sobre el asteroide B 612 y si les revel\u00e9 su n\u00famero, es a causa de los adultos. A los adultos les gustan los n\u00fameros. Cuando uno les habla de un nuevo amigo, nunca preguntan sobre lo esencial. Nunca te dicen: \"C\u00f3mo es el sonido de su voz ? Cu\u00e1les son los juegos que prefiere ? Colecciona mariposas ?\" Te preguntan: \"Qu\u00e9 edad tiene ? Cu\u00e1ntos hermanos tiene ? Cu\u00e1nto pesa ? Cu\u00e1nto gana su padre ?\" S\u00f3lo entonces creen conocerlo. Si uno dice a los adultos: \"Vi una bella casa de ladrillos rosas, con geranios en las ventanas y palomas en el techo...\" no logran imagin\u00e1rsela. Hay que decirles: \"Vi una casa de cien mil francos.\" Entonces exclaman: \"Qu\u00e9 lindo !\"' #Texte en italien extrait4 = '''Be , loro alzeranno le spalle, e vi tratteranno come un bambino. Ma se voi invece gli dite: \"Il pianeta da dove veniva e l'asteroide B 612\" allora ne sono subito convinti e vi lasciano in pace con le domande. Sono fatti cosi. Non c'e da prendersela. I bambini devono essere indulgenti coi grandi. Ma certo, noi che comprendiamo la vita, noi ce ne infischiamo dei numeri! Mi sarebbe piaciuto cominciare questo racconto come una storia di fate. Mi sarebbe piaciuto dire: \"C'era una volta un piccolo principe che viveva su di un pineta poco piu grande di lui e aveva bisogno di un amico\u2026\"''' #Test avec un texte en allemand extrait5 = \"Wenn ich euch dieses nebens\u00e4chliche Drum und Dran \u00fcber den Planeten B 612 erz\u00e4hle und euch sogar seine Nummer anvertraue, so geschieht das der gro\u00dfen Leute wegen. Die gro\u00dfen Leute haben eine Vorliebe f\u00fcr Zahlen. Wenn ihr ihnen von einem neuen Freund erz\u00e4hlt, befragen sie euch nie \u00fcber das Wesentliche. Sie fragen euch nie: Wie ist der Klang seiner Stimme? Welche Spiele liebt er am meisten? Sammelt er Schmetterlinge? Sie fragen euch: Wie alt ist er? Wieviele Br\u00fcder hat er? Wieviel wiegt er? Wieviel verdient sein Vater? Dann erst glauben sie, ihn zu kennen. Wenn ihr zu den gro\u00dfen Leute sagt:\" Faire de m\u00eame avec chacun des extraits","title":"TP15 Dictionnaire Diapo"},{"location":"Dictionnaire/TP15_Dictionnaire_Diapo/#td-n15-structures-de-donnees-les-dictionnaires","text":"","title":"TD n\u00b015 : Structures de donn\u00e9es - Les Dictionnaires"},{"location":"Dictionnaire/TP15_Dictionnaire_Diapo/#i-introduction-necessite-dun-dictionnaire","text":"Prenons l'exemple d'un r\u00e9pertoire t\u00e9l\u00e9honique. Nous pouvons le m\u00e9moriser simplement comme un tableau (ou liste) de tableaux [nom,num\u00e9ro] liste_tel = [[ \"Paul\" , '0650523454' ], [ \"Emile\" , '0684515345' ], [ \"Victor\" , '0651355186' ], [ \"Rose\" , '0611245678' ], [ \"H\u00e9l\u00e8ne\" , '0774845432' ]] Si nous voulons appeler Rose , nous avons deux possibilit\u00e9s avec un tel tableau : * soit il faut savoir que les informations la concernant sont dans le quatri\u00e8me \u00e9l\u00e9ment de la liste (ce qui ne semble pas tr\u00e8s pratique et r\u00e9aliste)","title":"I. Introduction : n\u00e9cessit\u00e9 d'un dictionnaire"},{"location":"Dictionnaire/TP15_Dictionnaire_Diapo/#ii-les-dictionnaires-en-python","text":"","title":"II. Les dictionnaires en Python"},{"location":"Dictionnaire/TP15_Dictionnaire_Diapo/#iii-les-dictionnaires-exercices","text":"Exercice 1 On reprend le dictionnaire notes . notes = { 'NSI' : 18 , 'Maths' : 15 , 'PC' : 14 } Affichez la moyenne de NSI. Modifiez votre moyenne de NSI qui a gagn\u00e9 2 points. Affichez le dictionnaire. Ajoutez la mati\u00e8re Anglais avec sa moyenne. Affichez le dictionnaire. Affichez la taille du dictionnaire. Supprimez une des trois sp\u00e9cialit\u00e9s ainsi que l'Anglais et affichez le dictionnaire. Exercice 2 On consid\u00e8re le dictionnaire dressing . Affichez tous les v\u00e9tements du dressing. Ecrivez un programme permettant d'obtenir l'affichage suivant.","title":"III. Les dictionnaires : EXERCICES"},{"location":"Dictionnaire/TP15_Dictionnaires/","text":"TD n\u00b015 : Structures de donn\u00e9es - Les Dictionnaires Th\u00e8me 1 : Structures de donn\u00e9es COURS et EXERCICES Introduction : n\u00e9cessit\u00e9 d'un dictionnaire \u2693\ufe0e Prenons l'exemple d'un r\u00e9pertoire t\u00e9l\u00e9honique. Nous pouvons le m\u00e9moriser simplement comme un tableau (ou liste) de tableaux [nom,num\u00e9ro] liste_tel = [[ \"Paul\" , '0650523454' ], [ \"Emile\" , '0684515345' ], [ \"Victor\" , '0651355186' ], [ \"Rose\" , '0611245678' ], [ \"H\u00e9l\u00e8ne\" , '0774845432' ]] Si nous voulons appeler Rose , nous avons deux possibilit\u00e9s avec un tel tableau : * soit il faut savoir que les informations la concernant sont dans le quatri\u00e8me \u00e9l\u00e9ment de la liste (ce qui ne semble pas tr\u00e8s pratique et r\u00e9aliste) print ( liste_tel [ 3 ][ 1 ]) # il faut savoir que l'index de Rose est 3 soit nous cherchons dans le tableau en partant du premier \u00e9l\u00e9ment de la liste jusqu'\u00e0 ce que nous trouvions Rose (ce qui revient \u00e0 feuilleter son r\u00e9pertoire) : cela n\u00e9cessite d'utiliser une boucle pour parcourir le tableau. for element in liste_tel : if element [ 0 ] == 'Rose' : print ( element [ 1 ]) Vous conviendrez que ce n'est pas pratique pour acc\u00e9der \u00e0 son num\u00e9ro de t\u00e9l\u00e9phone. De m\u00eame, la modification ou l'ajout d'un information n\u00e9cessiterait de devoir feuilleter tout le r\u00e9pertoire. Il semblerait plus pratique d'associer un nom \u00e0 un num\u00e9ro, autrement dit d'associer \u00e0 une information \u00e0 une cl\u00e9 . C'est ce que les dictionnaires permettent ! II. Les dictionnaires en Python \u2693\ufe0e D\u00e9finitions et premiers exemples \u2693\ufe0e \ud83d\udc9c Un dictionnaire, de type dict en Python, est un ensemble non ordonn\u00e9 de paires (cl\u00e9, valeur) avec un acc\u00e8s tr\u00e8s rapide \u00e0 la valeur \u00e0 partir de la cl\u00e9. C'est un type de conteneur comme les list et les tuple mais ce n'est pas une s\u00e9quence. Au sens o\u00f9 les valeurs des tableaux ne sont pas index\u00e9s par des entiers. Dans un dictionnaire, chaque \u00e9l\u00e9ment est accessible par une cl\u00e9 qui n'est plus forc\u00e9ment un nombre, une chaine de caract\u00e8re, un nombre, ou autre chose, peut \u00eatre une cl\u00e9. \ud83d\udd8b Exemple n\u00b01 : Reprenons la probl\u00e9matique de d\u00e9part : un r\u00e9pertoire t\u00e9l\u00e9honique. Nous pouvons le m\u00e9moriser comme un dictionnaire [nom:num\u00e9ro] >>> repertoire = { \"Paul\" : '0650523454' , \"Emile\" : '0684515345' , \"Victor\" : '0651355186' , \"Rose\" : '0611245678' , \"H\u00e9l\u00e8ne\" : '0774845432' } L'acc\u00e8s \u00e0 Rose se fera par : >>> repertoire [ \"Rose\" ] '0611245678' On dit que \"Rose\" est la cl\u00e9 et que '0611245678' est la valeur associ\u00e9e \u00e0 la cl\u00e9. Un dictionnaire est un ensemble cl\u00e9s / valeurs. \ud83d\udd8b A vous n\u00b01 : Imaginons que je fasse l'inventaire de mon dressing : habits quantit\u00e9 pantalons 3 pulls 4 tee-shirts 8 Question 1 : Cr\u00e9er le dictionnaire repr\u00e9sentant mon dressing. Question 2 : Donner le script permettant d'acc\u00e9der au nombre de pulls pr\u00e9sent dans mon dressing. D\u00e9finitions et propri\u00e9t\u00e9s d'un dictionnaire \u2693\ufe0e D\u00e9finitions \u2693\ufe0e \ud83d\udcd8 D\u00e9finition Un dictionnaire est une donn\u00e9e composite qui n'est pas ordonn\u00e9e (\u00e0 la diff\u00e9rence des listes !) Il fonctionne par un syst\u00e8me de cl\u00e9:valeur . Les cl\u00e9s, comme les valeurs, peuvent \u00eatre de types diff\u00e9rents. Un dictionnaire est d\u00e9limit\u00e9 par des accolades. Rappel : crochets [ ] -> listes parenth\u00e8ses ( ) -> tuples accolades { } -> dictionnaires M\u00e9thodes .keys() et .values() \u2693\ufe0e \ud83d\udcce Exemple n\u00b02 : Pour lister les cl\u00e9s d'un dictionnaire : >>> repertoire . keys () dict_keys ([ \"Paul\" , \"Emile\" , \"Victor\" , \"Rose\" , \"H\u00e9l\u00e8ne\" ]) Pour lister les valeurs d'un dictionnaire : >>> repertoire . values () dict_values ( '0650523454' , '0684515345' , '0651355186' , '0611245678' , '0774845432' ) \ud83d\udd8b A vous n\u00b02 : Question 1 Lister les cl\u00e9s du dictionnaire dressing. Question 2 Lister les valeurs du dictionnaire dressing. Parcours d'un dictionnaire : \u2693\ufe0e Il est possible de parcourir un dictionnaire de trois mani\u00e8res : parcourir l'ensemble des cl\u00e9s avec la m\u00e9thode keys() ; parcourir l'ensemble des valeurs avec la m\u00e9thode values() ; parcourir l'ensemble des paires cl\u00e9s-valeurs avec la m\u00e9thode items() . On peut it\u00e9rer sur un dictionnaire gr\u00e2ce \u00e0 l'une de ces m\u00e9thodes. \ud83d\udcce Exemple n\u00b03 : par les cl\u00e9s (idem tableau) >>> for nom in repertoire : print ( repertoire [ nom ]) 0650523454 0684515345 0651355186 0611245678 0774845432 Par cette m\u00e9thode, on obtient les valeurs associ\u00e9es aux cl\u00e9s. \ud83d\udcce Exemple n\u00b04 : par les cl\u00e9s avec la m\u00e9thode keys() . >>> for nom in repertoire . keys (): print ( nom ) Paul Emile Victor Rose H\u00e9l\u00e8ne Par cette m\u00e9thodes, on extrait les cl\u00e9s. ou >>> for nom in repertoire . keys (): print ( repertoire [ nom ]) 0650523454 0684515345 0651355186 0611245678 0774845432 Par cette m\u00e9thode, on obtient les valeurs associ\u00e9es aux cl\u00e9s. \ud83d\udcce Exemple n\u00b05 : par les valeurs avec la m\u00e9thode values() . >>> for numero in repertoire . values (): print ( numero ) 0650523454 0684515345 0651355186 0611245678 0774845432 Par cette m\u00e9thodes, on extrait les valeurs pr\u00e9sentes dans le dictionnaires. \ud83d\udcce Exemple n\u00b06 : par les cl\u00e9s et les valeurs avec la m\u00e9thode items() . >>> for cle , valeur in repertoire . items (): print ( cle , valeur ) Paul 0650523454 Emile 0684515345 Victor 0651355186 Rose 0611245678 H\u00e9l\u00e8ne 0774845432 Par cette m\u00e9thodes, on extrait les valeurs et les cl\u00e9s du dictionnaires. \ud83d\udcce Exemple n\u00b07 : un dictionnaire dans un dictionnaire. sportifs = { \"Mike\" : { \"taille\" : 1.75 , \"poids\" : 68 }, \"John\" : { \"taille\" : 1.89 , \"poids\" : 93 }, \"Kate\" : { \"taille\" : 1.67 , \"poids\" : 62 }} Pour acc\u00e9der \u00e0 la taille de Kate dans le dictionnaire sportifs , on utiliser : sportifs [ \"Kate\" ][ \"taille\" ] 1.67 Ajout / Modification d'un \u00e9l\u00e9ment dans un dictionnaire \u2693\ufe0e \ud83d\udcce Exemple n\u00b08 : Pas besoin d'une m\u00e9thode append() , il suffit de rajouter une paire cl\u00e9 : valeur >>> repertoire [ \"Bob\" ] = '0684574615' On peut aussi modifier un dictionnaire existant. repertoire [ \"Rose\" ] = '0708484850' >>> repertoire { \"Paul\" : '0650523454' , \"Emile\" : '0684515345' , \"Victor\" : '0651355186' , \"Rose\" : '0708484850' , \"H\u00e9l\u00e8ne\" : '0774845432' , \"Bob\" : '0684574615' } \ud83d\udd8b A vous n\u00b08 : Reprenons le dictionnaire dressing Question 1 Rajouter la cat\u00e9gorie chemises avec une quantit\u00e9 de 6. Question 2 Modifier la cat\u00e9gorie pantalons avec une quantit\u00e9 de 5. Suppression d'une valeur \u2693\ufe0e \ud83d\udcce Exemple n\u00b09 : On utilise l'instruction del (d\u00e9j\u00e0 rencontr\u00e9e pour les listes) pour supprimer une association cl\u00e9/valeur del repertoire [ \"Paul\" ] Exercices : \u2693\ufe0e \ud83d\udd8b A vous n\u00b09 : Cr\u00e9er une fonction qui permet de rajouter un nom et un num\u00e9ro au repertoire pr\u00e9c\u00e9dent. def ( nom , numero , repertoire ): pass \ud83d\udd8b A vous n\u00b09 bis : Reprenons notre dictionnaire dressing : dressing = { \"pantalons\" : 3 , \"pulls\" : 4 , \"tee-shirts\" : 8 } Cr\u00e9er une fonction achat(vetement,quantite) qui augmente de quantite le nombre de v\u00e9tment (pantalon, pull ou tee-shirt) de mon dressing. Remarque : Petit probl\u00e8me si on essaie d'acheter un v\u00eatement pour la 1\u00e8re fois >>> achat ( \"chemises\" , 2 ) --------------------------------------------------------------------------- KeyError Traceback ( most recent call last ) < ipython - input - 28 - fd9d1ac5f62d > in < module > ----> 1 achat ( \"chemises\" , 2 ) < ipython - input - 27 - feb173444189 > in achat ( habit ) 1 def achat ( vetement , quantite ): ----> 2 dressing [ vetement ] = dressing [ vetement ] + quantite KeyError : 'chemises' Nous allons r\u00e9soudre ce probl\u00e8me gr\u00e2ce \u00e0 : Test d'appartenance \u00e0 un dictionnaire \u2693\ufe0e \ud83d\udcce Exemple n\u00b010 : Le mot in permet de tester l'appartenance d'une cl\u00e9 \u00e0 un dictionnaire. Un bool\u00e9en est renvoy\u00e9. >>> \"Jean\" in repertoire False >>> \"Jean\" in repertoire . keys () False >>> \"Rose\" in repertoire . keys () True >>> '0684515345' in repertoire . values () True \ud83d\udd8b A vous n\u00b010 : Am\u00e9liorer la fonction achat(vetement,quantite) en y incluant un test pour prendre en compte les nouveaux habits. Cr\u00e9ation d'un dictionnaire \u2693\ufe0e Plusieurs m\u00e9thodes permettent de cr\u00e9er soit un dictionnaire vide, soit de le noter en extension, soit par compr\u00e9hension. \ud83d\udcce Exemple n\u00b011 : d1 = {} # Cr\u00e9ation d'un dictionnaire vide d2 = dict () # Cr\u00e9ation d'un dictionnaire vide (autre m\u00e9thode) d3 = { 'poires' : 5 , 'bananes' : 7 , 'abricots' : 12 } # cr\u00e9ation d'un dictionnaire par extension d4 = { k : k ** 2 for k in range ( 1 , 10 )} # cr\u00e9ation d'un dictionnaire par compr\u00e9hension print ( d4 ) { 1 : 1 , 2 : 4 , 3 : 9 , 4 : 16 , 5 : 25 , 6 : 36 , 7 : 49 , 8 : 64 , 9 : 81 } Il est m\u00eame possible de cr\u00e9er un dictionnaire \u00e0 partir d'une liste de couples. liste = [( 'cle1' , 'valeur1' ),( 'cle2' , 'valeur2' )] d5 = dict ( liste ) liste_tel = [[ \"Paul\" , 5234 ], [ \"Emile\" , 5345 ], [ \"Victor\" , 5186 ], [ \"Rose\" , 5678 ], [ \"H\u00e9l\u00e8ne\" , 5432 ]] d6 = dict ( liste_tel ) print ( \"d5 =>\" , d5 ) print ( \"d6 =>\" , d6 ) \ud83d\udc9c Important : Vous aurez not\u00e9 que les dictionnaires Python se repr\u00e9sentent entre accolades {} . Les diff\u00e9rentes paires sont s\u00e9par\u00e9es par des virgules et sont de la forme cl\u00e9: valeur . \ud83d\udd8b A vous n\u00b011 : Question Cr\u00e9ez un dictionnaire appel\u00e9 notes qui contient les paires (mati\u00e8res, moyenne) de vos trois sp\u00e9cialit\u00e9s. Affichez ensuite ce dictionnaire. Taille d'un dictionnaire \u2693\ufe0e \ud83d\udc9c La fonction len renvoie la taille d'un dictionnaire. len ( dressing ) 5 Les dictionnaires : EXERCICES \u2693\ufe0e Exercice 1 On reprend le dictionnaire notes . notes = { 'NSI' : 18 , 'Maths' : 15 , 'PC' : 14 } Affichez la moyenne de NSI. Modifiez votre moyenne de NSI qui a gagn\u00e9 2 points. Affichez le dictionnaire. Ajoutez la mati\u00e8re Anglais avec sa moyenne. Affichez le dictionnaire. Affichez la taille du dictionnaire. Supprimez une des trois sp\u00e9cialit\u00e9s ainsi que l'Anglais et affichez le dictionnaire. Exercice 2 On consid\u00e8re le dictionnaire dressing . Affichez tous les v\u00e9tements du dressing. Ecrivez un programme permettant d'obtenir l'affichage suivant. Le dressing comporte : 3 pantalons 4 pulls 8 tee - shirts Exercice 3 On consid\u00e8re le dictionnaire suivant qui contient diff\u00e9rents fruits ainsi que leurs quantit\u00e9s. fruits = { \"pommes\" : 8 , \"melons\" : 3 , \"poires\" : 6 } Quelle instruction permet d'acc\u00e9der au nombre de melons ? On a achet\u00e9 16 cl\u00e9mentines et utilis\u00e9 4 pommes pour faire une tarte. Ecrire une fonction ajout(fruit) permettant d'ajouter un fruit dans le dictionnaire fruits ainsi qu'une fonction miseajourquantite(fruit,quantite) . Tester avec l'exemple donn\u00e9. Exercice 4 On dispose d\u2019un dictionnaire associant \u00e0 des noms de commerciaux d\u2019une soci\u00e9t\u00e9 le nombre de ventes qu\u2019ils ont r\u00e9alis\u00e9es. Par exemple : ventes={\"Dupont\":14, \"Hervy\":19, \"Geoffroy\":15, \"Layec\":21} 1. \u00c9crivez une fonction qui prend en entr\u00e9e un tel dictionnaire et renvoie le nombre total de ventes dans la soci\u00e9t\u00e9. 2. \u00c9crivez une fonction qui prend en entr\u00e9e un tel dictionnaire et renvoie le nom du vendeur ayant r\u00e9alis\u00e9 le plus de ventes. Si plusieurs vendeurs sont ex-aequo sur ce crit\u00e8re, la fonction devra retourner le nom de l\u2019un d\u2019entre eux. 3. Modifier la fonction pr\u00e9c\u00e9dente pour que : si plusieurs vendeurs sont ex-aequo sur ce crit\u00e8re, la fonction devra retourner tous les noms. ventes={\"Dupont\":14, \"Hervy\":19, \"Geoffroy\":15, \"Layec\":21,\"Jean\":21} Exercice 5 Le Scrabble est un jeu de soci\u00e9t\u00e9 o\u00f9 l'on doit former des mots avec tirage al\u00e9atoire de lettres, chaque lettre valant un certain nombre de points. Le dictionnaire scrabble contient cette association entre une lettre et son nombre de points. scrabble = { 'A' : 1 , 'B' : 3 , 'C' : 3 , 'D' : 2 , 'E' : 1 , 'F' : 4 , 'G' : 2 , 'H' : 4 , 'I' : 1 , 'J' : 8 , 'K' : 10 , 'L' : 1 , 'M' : 2 , 'N' : 1 , 'O' : 1 , 'P' : 3 , 'Q' : 8 , 'R' : 1 , 'S' : 1 , 'T' : 1 , 'U' : 1 , 'V' : 4 , 'W' : 10 , 'X' : 10 , 'Y' : 10 , 'Z' : 10 } Ecrivez une fonction points(mot) qui renvoie le nombre de points au scrabble de mot , qui est une cha\u00eene de caract\u00e8res majuscules. Par exemple, le mot \"ARBRE\" doit rapporter 7 points, le mot \"XYLOPHONE\" doit rapporter 32 points . Exercice 6 Au zoo de Beauval, il y a 5 \u00e9l\u00e9phants d\u2019Asie, 17 \u00e9cureuils d\u2019Asie, 2 pandas d\u2019Asie... On repr\u00e9sente cet inventaire \u00e0 l\u2019aide d\u2019un dictionnaire, de la fa\u00e7on suivante : zoo_beauval = { 'elephant' : { \"continent\" : 'Asie' , \"nombre\" : 5 }, '\u00e9cureuil' : { \"continent\" : 'Asie' , \"nombre\" : 17 }, 'panda' : { \"continent\" : 'Asie' , \"nombre\" : 2 } , 'hippopotame' : { \"continent\" : 'Afrique' , \"nombre\" : 7 }, 'girafe' : { \"continent\" : 'Afrique' , \"nombre\" : 4 }} On repr\u00e9sente de la m\u00eame fa\u00e7on le zoo de la Fl\u00eache : zoo_la_fleche = { 'ours' : { \"continent\" : 'Europe' , \"nombre\" : 4 }, 'tigre' : { \"continent\" : 'Asie' , \"nombre\" : 7 }, 'girafe' : { \"continent\" : 'Afrique' , \"nombre\" : 11 }, 'hippopotame' : { \"continent\" : 'Afrique' , \"nombre\" : 3 }} 1. On souhaite se doner d\u2019une fonction plus_grand_nombre qui prend un zoo en param\u00e8tre et qui renvoie le nom de l\u2019animal le plus repr\u00e9sent\u00e9 dans ce zoo. Par exemple : assert plus_grand_nombre ( zoo_la_fleche ) == 'girafe' assert plus_grand_nombre ( zoo_beauval ) == '\u00e9cureuil' \u00c9crire le code de cette fonction. 2. On souhaite se doter d\u2019une fonction nombre_total qui prend un zoo en param\u00e8tre ainsi que le nom d\u2019un continent, et qui renvoie le nombre d\u2019animaux originaires de ce continent dans le zoo. Par exemple : assert nombre_total ( zoo_beauval , 'Asie' ) == 24 assert nombre_total ( zoo_la_fleche , 'Afrique' ) == 14 \u00c9crire le code de cette fonction. 3. On souhaite se doter d\u2019une fonction nombre qui prend un zoo en param\u00e8tre ainsi que le nom d\u2019un animal, et qui renvoie le nombre de repr\u00e9sentants de cet animal dans le zoo. Par exemple : assert nombre ( zoo_la_fleche , 'panda' ) == 0 assert nombre ( zoo_beauval , 'panda' ) == 2 \u00c9crire le code de cette fonction. Exercice 7 On consid\u00e8re le dictionnaire suivant qui contient le nom des \u00e9l\u00e8ves et leur note : dico_eleves = { 'Pierre' : 17 , 'Chlo\u00e9' : 18 , 'Simon' : 11 , 'Titouan' : 7 , 'Raphael' : 16 , 'Diwan' : 6 , 'Ethann' : 8 , 'Cl\u00e9ment' : 16 , 'Noa' : 17 , 'Solan' : 5 , 'Matheo' : 17 , 'Martin' : 10 , 'Valentin' : 11 , 'Zo\u00e9' : 7 , 'Antonin' : 18 , 'Sacha' : 9 , 'Emma' : 15 , 'Tidane' : 13 , 'Tristan' : 7 , 'Tifenn' : 20 , 'Soren' : 14 , 'Marjorie' : 15 , 'Maxime' : 7 , 'Liam' : 8 , 'Adrien' : 18 , 'Mathieu' : 16 , 'Lucas' : 8 , 'Louis' : 16 , 'Romane' : 19 } 1. Cr\u00e9er une fonction audessus(dico) qui affiche les \u00e9l\u00e8ves ayant au dessous de la moyenne (10). 2. Cr\u00e9er une fonction moyenne(dico) qui renvoie la moyenne de la classe. 3. Cr\u00e9er \u00e0 partir du dictionnaire dico_eleves un dictionnaire dessous_moyenne qui va contenir les \u00e9l\u00e8ves ayant au dessous de 10 (au sens large) avec leur moyenne et un dictionnaire dessus_moyenne qui va contenir les \u00e9l\u00e8ves ayant en dessous (au sens strict) de l a moyenne avec leur note. Exercice 8 Voici une citation c\u00e9l\u00e8bre de Gandhi : La vie est un myst\u00e8re qu'il faut vivre, et non un probl\u00e8me \u00e0 r\u00e9soudre. Cr\u00e9er un dictionnaire qui associe \u00e0 chaque lettre (cl\u00e9) son occurrence (valeur) * Par exemple la lettre 'a' apparait deux fois. Par exemple dico= {'a':2, .........} Exercice 8 : Gestion d'une biblioth\u00e8que On consid\u00e8re la base de donn\u00e9es suivante : global Livres_BD Livres_BD = { 'Les mis\u00e9rables' :{ 'Auteur' : 'Victor Hugo' , 'Stock' : 5 }, 'Le dernier des Mohicans' :{ 'Auteur' : 'James F. Cooper' , 'Stock' : 2 }, 'Un animal dou\u00e9 de raison' :{ 'Auteur' : 'Robert Merle' , 'Stock' : 6 }, 'Notre-dame de Paris' :{ 'Auteur' : 'Victor Hugo' , 'Stock' : 4 }, 'Les comtemplations' :{ 'Auteur' : 'Victor Hugo' , 'Stock' : 1 }, 'Da Vinci Code' :{ 'Auteur' : 'Dan Brown' , 'Stock' : 3 }, 'Anges et d\u00e9mons5' :{ 'Auteur' : 'Dan Brown' , 'Stock' : 3 }} Ecrire une fonction stock(livre) permettant d'afficher le stock d'un livre ainsi que son auteur. Ecrire une fonction titres_base(LivresBD) qui renvoie la liste des titres des livres de la base. Ecrire une fonction auteurs_base(LivresBD) qui retourne l'ensemble des noms d'auteurs de cette base dans un tableau. Ecrire une fonction auteur(nom) qui renvoie un dictionnaire qui a pour cl\u00e9 le nom de l'auteur et pour cl\u00e9 les titres des livres de cet auteur. auteur('Victor Hugo') {'Les mis\u00e9rables':5,'Notre-dame de Paris':4,'Les comtemplations':1} Ecrire une fonction est_present(livre) qui renvoie True si le livre est pr\u00e9sent ou False s'il n'est pas pr\u00e9sent. Ecrire une fonction ajoute_base(titre,auteur,stock) qui rajoute \u00e0 la base LivreBD les donn\u00e9es n\u00e9cessaires pour un nouveau livre apr\u00e9s avoir v\u00e9rifi\u00e9 qu'il ne soit pas pr\u00e9sent dans la base. Ecrire une fonction ajoute_stock(livre) qui ajoute 1 au stock du livre concern\u00e9 et qui affiche la nouvelle base de donn\u00e9es. Ecrire une fonction enleve_stock(livre) qui soustrait 1 au stock du livre concern\u00e9 et qui affiche la nouvelle base de donn\u00e9es. Ecrire une fonction titres_empruntables(LivresBD) qui retourne l'ensemble des livres empruntables. Exercice 9 : QCM de NSI Les r\u00e9ponses correctes d'un QCM de NSI sont stock\u00e9es dans un dictionnaire nomm\u00e9 reponses_valides. Les cl\u00e9s sont des cha\u00eenes de caract\u00e8res de la forme \"Q1\". Les valeurs possibles sont des cha\u00eenes de caract\u00e8res correspondant aux quatre r\u00e9ponses \"a\",\"b\",\"c\",\"d\". Exemple : reponses_valides = {\"Q1\":\"c\",\"Q2\":\"a\",\"Q3\":\"d\",\"Q4\":\"c\",\"Q5\":\"b\"} Les r\u00e9ponses donn\u00e9es par Alice sont stock\u00e9es dans le dictionnaire reponses_Alice dont voici un exemple possible : reponses_Alice = {\"Q1\":\"b\",\"Q2\":\"a\",\"Q3\":\"d\",\"Q5\":\"a\"} Lorsqu'Alice n'a pas r\u00e9pondu \u00e0 une question, il n'y a pas de clef correspondant au nom de l'exercice. La notation d'un QCM de NSI est la suivante : 3 points par r\u00e9ponse correcte, -1 point par r\u00e9ponse incorrecte et 0 si l'on n'a pas r\u00e9pondu Compl\u00e9ter la fonction correction_QCM_Alice(reponses_Alice,reponses_valides) qui, \u00e0 partir des dictionnaires reponses_Alice et reponses_valides pass\u00e9es en param\u00e8tres renvoie le nombre de points obtenus au QCM par Alice. def correction_QCM_Alice ( reponses_Alice , reponses_valides ): pass Exercice 10 : L'application Contacts de vos smartphones L'objectif de cette activit\u00e9 est de programmer deux des fonctionnalit\u00e9s importantes des smartphones actuels : Ajouter un contact au r\u00e9pertoire ; Rechercher un contact dans le r\u00e9pertoire. On suppose pour simplifier que le repertoire t\u00e9l\u00e9phonique est m\u00e9moris\u00e9 dans le smartphone sous la forme d'un dictionnaire et que chaque \u00e9l\u00e9ment du dictionnaire est une paire (prenom, numero) o\u00f9 prenom est la cl\u00e9 et numero la valeur associ\u00e9e. Etape 1 : Ajouter un contact \u2693\ufe0e On consid\u00e8re que le r\u00e9pertoire t\u00e9l\u00e9phonique est m\u00e9moris\u00e9 dans le dictionnaire repertoire . Quelques contacts sont d\u00e9j\u00e0 enregistr\u00e9s dans ce r\u00e9pertoire. repertoire = { 'David' : 1010 , 'M\u00e9lanie' : 1111 , 'Alain' : 121212 } Question 1 : Ecrivez une fonction ajout_contact(repertoire) qui demande \u00e0 l'utilisateur de saisir les donn\u00e9es (pr\u00e9nom et num\u00e9ro de t\u00e9l\u00e9phone) d'un contact et qui ajoute ce contact \u00e0 repertoire . Question 2 : On veut maintenant cr\u00e9er une fonction remplissage qui permet d'ajouter des contacts au r\u00e9pertoire autant de fois que l'on souhaite. Plus pr\u00e9cis\u00e9ment, une fois qu'un contact a \u00e9t\u00e9 saisi on demande \u00e0 l'utilisateur s'il souhaite ajouter un autre contact. Compl\u00e9tez la fonction remplissage en cons\u00e9quence. Vous utiliserez la fonction ajout_contact \u00e9crite \u00e0 la question pr\u00e9c\u00e9dente. def remplissage ( repertoire ): encore = True # \u00e0 compl\u00e9ter Etape 2 : Rechercher un contact \u2693\ufe0e On souhaite maintenant \u00e9crire une fonction numero_de(prenom, repertoire) qui renvoie le num\u00e9ro de prenom si prenom est bien dans repertoire et qui renvoie un message sinon. Question 3 : Si prenom est pr\u00e9sent dans repertoire , quelle instruction permet d'afficher le num\u00e9ro associ\u00e9 \u00e0 prenom ? Question 4 : Compl\u00e9tez la fonction numero_de(prenom, repertoire) qui renvoie le num\u00e9ro de t\u00e9l\u00e9phone associ\u00e9 dans l'affirmative et un message d'erreur sinon. def numero_de ( prenom , repertoire ): '''prenom est une chaine de caract\u00e8res et repertoire est un dictionnaire''' # \u00e0 compl\u00e9ter Exercice 11 : Quel est le mot de 6 lettres le plus pr\u00e9sent dans Le tour du monde en 80 jours de Jules Verne ? Le fichier texte de l'oeuvre de Jules Verne, intitul\u00e9 ltdme80j.txt , a \u00e9t\u00e9 plac\u00e9 dans le dossier data du r\u00e9pertoire de ce notebook. Par souci de simplification, le texte ne contient aucun signe de ponctuation. De mani\u00e8re g\u00e9n\u00e9rale, le site du Projet Gutenberg permet de r\u00e9cup\u00e9rer librement le texte de plusieurs milliers d'oeuvres du domaine public : https://www.gutenberg.org . Etape 1 : Lecture du contenu du fichier \u2693\ufe0e On peut ouvrir et m\u00e9moriser dans une variable texte le contenu du fichier texte. Pour cela, il suffit d'ouvrir le fichier puis en lire le contenu sous la forme d'une unique cha\u00eene de caract\u00e8res avec la m\u00e9thode read() . On ferme ensuit le flux de lecture du fichier. # Ouverture du fichier ('r' pour read = lecture, 'utf-8' pour l'encodage des caract\u00e8res) fichier = open ( \"ltdme80j.txt\" , mode = \"r\" , encoding = \"utf-8\" ) # M\u00e9morisation du texte de l'oeuvre dans une cha\u00eene de caract\u00e8res appel\u00e9e texte texte = fichier . read () # Fermeture du flux de lecture fichier . close () print ( texte ) Etape 2 : Conversion en un tableau de mots \u2693\ufe0e On peut ensuite convertir la cha\u00eene texte en un tableau contenant les diff\u00e9rents mots de l'oeuvre. Pour cela, on peut utiliser la m\u00e9thode split() des cha\u00eenes de caract\u00e8res. tab = texte . split () print ( tab ) Etape 3 : Compter le nombre d'occurrences de chaque mot \u2693\ufe0e Un cas d\u2019utilisation typique des dictionnaires consiste \u00e0 compter les occurrences des \u00e9l\u00e9ments d\u2019un tableau. Consid\u00e9rons par exemple le tableau suivant : ['b', 'c', 'e', 'b', 'c', 'j', 'd', 'b', 'j', 'a', 'b'] Dans cette liste le caract\u00e8re 'b' est par exemple r\u00e9p\u00e9t\u00e9 quatre fois, et le 'j' deux fois, etc. L'objectif est de d\u00e9finir une fonction occurrences(t) qui renvoie un dictionnaire avec le nombre d'occurences de chaque \u00e9l\u00e9ment du tableau t entr\u00e9e en param\u00e8tre. Par exemple, la fonction occurences appliqu\u00e9e au tableau pr\u00e9c\u00e9dent occurrences(['b', 'c', 'e', 'b', 'c', 'j', 'd', 'b', 'j', 'a', 'b']) doit renvoyer le dictionnaire : {'b': 4, 'a': 1, 'c': 2, 'e': 1, 'j': 2, 'd': 1} Question 1 : Ecrivez la fonction occurrences(t) et testez-la sur un tableau de caract\u00e8res. Question 2 : Appliquez la fonction occurences \u00e0 ce tableau pour r\u00e9cup\u00e9rer un dictionnaire d du nombre d'occurences de chaque mot. Etape 4 : Trouver le mot de 6 lettres le plus pr\u00e9sent \u2693\ufe0e Question 3 : Ecrivez une fonction mot_6_lettres_plus_frequent(d) qui renvoie le mot de 6 lettres les plus fr\u00e9quent dans l'oeuvre de Jules Verne ainsi que son nombre d'occurence. (r\u00e9ponse : 'heures' avec 243 occurrences) R\u00e9ponse : cela revient \u00e0 effectuer une recherche de maximum sur les occurences des mots de 6 lettres. On parcourt donc toutes les cl\u00e9s du dictionnaire d (les cl\u00e9s sont les mots) et parmi les mots de 6 lettres on regarde si son nombre d'occurence est le nouveau maximum. Dans l'affirmative, ce mot devient le mot le plus fr\u00e9quent (provisoire) et sa valeur dans le dictionnaire le nombre d'occurrences maximum (provisoire). Question BONUS : Ecrire une fonction mot_plus_frequent(d, k) qui renvoie le mot de k lettres le plus pr\u00e9sent dans le dictionnaire d . Affichez ensuite le mot le plus fr\u00e9quent d'une lettre, de deux lettres, etc. Exercice 12 : gestion de commandes Compl\u00e9ter les fonction pour r\u00e9pondre aux docstring global commandes commandes = { '0' : { 'numero' : 'EMA70495' , 'nom' : 'Ada Lovelace' , 'adresse' : '64 rue Jocelyne Troccaz' , 'ville' : 'Tours' , 'etat' : 'En cours' }, '1' : { 'numero' : 'VWD74550' , 'nom' : 'Dorothy Vaughan' , 'adresse' : '33 rue Al-Kindi' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '2' : { 'numero' : 'SWK65993' , 'nom' : 'Gilles Kahn' , 'adresse' : '53 rue Ingrid Daubechies' , 'ville' : 'Lille' , 'etat' : 'En cours' }, '3' : { 'numero' : 'NKR34542' , 'nom' : 'Ada Lovelace' , 'adresse' : '98 rue Jules C\u00e9sar' , 'ville' : 'Bordeaux' , 'etat' : 'Livr\u00e9e' }, '4' : { 'numero' : 'GEG58414' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '84 rue Al-Kindi' , 'ville' : 'Rennes' , 'etat' : 'Retour' }, '5' : { 'numero' : 'FZA36963' , 'nom' : 'Al-Khwarizmi' , 'adresse' : '73 rue Adi Shamir' , 'ville' : 'Marseille' , 'etat' : 'En cours' }, '6' : { 'numero' : 'QWE58690' , 'nom' : 'Alonzo Church' , 'adresse' : '47 rue Jules C\u00e9sar' , 'ville' : 'Paris' , 'etat' : 'Retour' }, '7' : { 'numero' : 'NLY90647' , 'nom' : 'Hypatie d\u2019Alexandrie' , 'adresse' : '51 rue Whitfield Diffie' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '8' : { 'numero' : 'VVL26047' , 'nom' : 'Alonzo Church' , 'adresse' : '6: rue Adi Shamir' , 'ville' : 'Montpellier' , 'etat' : 'En cours' }, '9' : { 'numero' : 'CXO07384' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '30 rue Whitfield Diffie' , 'ville' : 'Paris' , 'etat' : 'Livr\u00e9e' } } def afficher_commande_numero ( numero_commande ): ''' affiche la commande correspondant au numero : numero : str : return : print ''' ``` python >>> afficher_commande_numero ( 'NLY90647' ) commande : NLY90647 Nom : Hypatie d \u2019 Alexandrie Adresse : 51 rue Whitfield Diffie Ville : Bordeaux Etat : En cours >>> afficher_commande_numero ( 'NLY90687' ) NLY90687 : numero commande non enregistr\u00e9 def recherche_par_nom ( nom ): ''' recherche les commandes correspondantes au nom : nom : str : return : un tuple contenant les commandes >>> print(recherche_par_nom(\"Ada Lovelace\")) ({'numero': 'EMA70495', 'nom': 'Ada Lovelace', 'adresse': '64 rue Jocelyne Troccaz', 'ville': 'Tours', 'etat': 'En cours'}, {'numero': 'NKR34542', 'nom': 'Ada Lovelace', 'adresse': '98 rue Jules C\u00e9sar', 'ville': 'Bordeaux', 'etat': 'Livr\u00e9e'}) >>>print(recherche_par_nom(\"Alan Turing\")) () ''' global commandes def ajouter_commande ( numero , nom , adresse , ville , etat ): ''' ajoute une commande : numero,nom,adresse,ville,etat : str : return : le dict commande modifi\u00e9 global commandes ''' >>> commandes = { '0' : { 'numero' : 'EMA70495' , 'nom' : 'Ada Lovelace' , 'adresse' : '64 rue Jocelyne Troccaz' , 'ville' : 'Tours' , 'etat' : 'En cours' }, '1' : { 'numero' : 'VWD74550' , 'nom' : 'Dorothy Vaughan' , 'adresse' : '33 rue Al-Kindi' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '2' : { 'numero' : 'SWK65993' , 'nom' : 'Gilles Kahn' , 'adresse' : '53 rue Ingrid Daubechies' , 'ville' : 'Lille' , 'etat' : 'En cours' }, '3' : { 'numero' : 'NKR34542' , 'nom' : 'Ada Lovelace' , 'adresse' : '98 rue Jules C\u00e9sar' , 'ville' : 'Bordeaux' , 'etat' : 'Livr\u00e9e' }, '4' : { 'numero' : 'GEG58414' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '84 rue Al-Kindi' , 'ville' : 'Rennes' , 'etat' : 'Retour' }, '5' : { 'numero' : 'FZA36963' , 'nom' : 'Al-Khwarizmi' , 'adresse' : '73 rue Adi Shamir' , 'ville' : 'Marseille' , 'etat' : 'En cours' }, '6' : { 'numero' : 'QWE58690' , 'nom' : 'Alonzo Church' , 'adresse' : '47 rue Jules C\u00e9sar' , 'ville' : 'Paris' , 'etat' : 'Retour' }, '7' : { 'numero' : 'NLY90647' , 'nom' : 'Hypatie d\u2019Alexandrie' , 'adresse' : '51 rue Whitfield Diffie' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '8' : { 'numero' : 'VVL26047' , 'nom' : 'Alonzo Church' , 'adresse' : '6: rue Adi Shamir' , 'ville' : 'Montpellier' , 'etat' : 'En cours' }, '9' : { 'numero' : 'CXO07384' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '30 rue Whitfield Diffie' , 'ville' : 'Paris' , 'etat' : 'Livr\u00e9e' } } >>> ajouter_commande ( \"AZE1029\" , \"Alan Turin\" , \"314 rue d'Enigma\" , \"Londres\" , \"En cours\" ) >>> print ( commandes ) { '0' : { 'numero' : 'EMA70495' , 'nom' : 'Ada Lovelace' , 'adresse' : '64 rue Jocelyne Troccaz' , 'ville' : 'Tours' , 'etat' : 'En cours' }, '1' : { 'numero' : 'VWD74550' , 'nom' : 'Dorothy Vaughan' , 'adresse' : '33 rue Al-Kindi' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '2' : { 'numero' : 'SWK65993' , 'nom' : 'Gilles Kahn' , 'adresse' : '53 rue Ingrid Daubechies' , 'ville' : 'Lille' , 'etat' : 'En cours' }, '3' : { 'numero' : 'NKR34542' , 'nom' : 'Ada Lovelace' , 'adresse' : '98 rue Jules C\u00e9sar' , 'ville' : 'Bordeaux' , 'etat' : 'Livr\u00e9e' }, '4' : { 'numero' : 'GEG58414' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '84 rue Al-Kindi' , 'ville' : 'Rennes' , 'etat' : 'Retour' }, '5' : { 'numero' : 'FZA36963' , 'nom' : 'Al-Khwarizmi' , 'adresse' : '73 rue Adi Shamir' , 'ville' : 'Marseille' , 'etat' : 'En cours' }, '6' : { 'numero' : 'QWE58690' , 'nom' : 'Alonzo Church' , 'adresse' : '47 rue Jules C\u00e9sar' , 'ville' : 'Paris' , 'etat' : 'Retour' }, '7' : { 'numero' : 'NLY90647' , 'nom' : 'Hypatie d\u2019Alexandrie' , 'adresse' : '51 rue Whitfield Diffie' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '8' : { 'numero' : 'VVL26047' , 'nom' : 'Alonzo Church' , 'adresse' : '6: rue Adi Shamir' , 'ville' : 'Montpellier' , 'etat' : 'En cours' }, '9' : { 'numero' : 'CXO07384' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '30 rue Whitfield Diffie' , 'ville' : 'Paris' , 'etat' : 'Livr\u00e9e' } '11' : { 'numero' : 'AZE1029' , 'nom' : 'Alan Turin' , 'adresse' : \"314 rue d'Enigma\" , 'ville' : 'Londres' , 'etat' : 'En cours' } } def supprimer_commande ( numero ): ''' supprime la commande correspondant au n\u00b0 : numero : str : return : le dict commandes ''' >>> supprimer_commande ( 'EMA70495' ) >>> print ( commandes ) { '1' : { 'numero' : 'VWD74550' , 'nom' : 'Dorothy Vaughan' , 'adresse' : '33 rue Al-Kindi' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '2' : { 'numero' : 'SWK65993' , 'nom' : 'Gilles Kahn' , 'adresse' : '53 rue Ingrid Daubechies' , 'ville' : 'Lille' , 'etat' : 'En cours' }, '3' : { 'numero' : 'NKR34542' , 'nom' : 'Ada Lovelace' , 'adresse' : '98 rue Jules C\u00e9sar' , 'ville' : 'Bordeaux' , 'etat' : 'Livr\u00e9e' }, '4' : { 'numero' : 'GEG58414' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '84 rue Al-Kindi' , 'ville' : 'Rennes' , 'etat' : 'Retour' }, '5' : { 'numero' : 'FZA36963' , 'nom' : 'Al-Khwarizmi' , 'adresse' : '73 rue Adi Shamir' , 'ville' : 'Marseille' , 'etat' : 'En cours' }, '6' : { 'numero' : 'QWE58690' , 'nom' : 'Alonzo Church' , 'adresse' : '47 rue Jules C\u00e9sar' , 'ville' : 'Paris' , 'etat' : 'Retour' }, '7' : { 'numero' : 'NLY90647' , 'nom' : 'Hypatie d\u2019Alexandrie' , 'adresse' : '51 rue Whitfield Diffie' , 'ville' : 'Bordeaux' , 'etat' : 'En cours' }, '8' : { 'numero' : 'VVL26047' , 'nom' : 'Alonzo Church' , 'adresse' : '6: rue Adi Shamir' , 'ville' : 'Montpellier' , 'etat' : 'En cours' }, '9' : { 'numero' : 'CXO07384' , 'nom' : 'Jacques-Louis Lions' , 'adresse' : '30 rue Whitfield Diffie' , 'ville' : 'Paris' , 'etat' : 'Livr\u00e9e' }} >>> supprimer_commande ( 'EMA70895' ) numero de commande non existant Exercice 13 : reconnaissance de la langue utilis\u00e9e Cette \u00e9tude ne prendra en compte que les lettres de notre alphabet pour simplifier le probl\u00e8me mais peut-\u00eatre g\u00e9n\u00e9ralis\u00e9e. extrait1 = \"Si je vous ai racont\u00e9 ces d\u00e9tails sur l\u2019ast\u00e9ro\u00efde B 612 et si je vous ai confi\u00e9 son num\u00e9ro, c\u2019est \u00e0 cause des grandes personnes. Les grandes personnes aiment les chiffres. Quand vous leur parlez d\u2019un nouvel ami, elles ne vous questionnent jamais sur l\u2019essentiel. Elles ne vous disent jamais : \u00abQuel est le son de sa voix? Quels sont les jeux qu\u2019il pr\u00e9f\u00e8re? Est-ce qu\u2019il collectionne les papillons?\u00bb Elles vous demandent: \u00abQuel \u00e2ge a-t-il? Combien a-t-il de fr\u00e8res? Combien p\u00e8se-t-il? Combien gagne son p\u00e8re?\u00bb Alors seulement elles croient le conna\u00eetre. Si vous dites aux grandes personnes : \u00abJ\u2019ai vu une belle maison en briques roses, avec des g\u00e9raniums aux fen\u00eatres et des colombes sur le toit...\u00bb, elles ne parviennent pas \u00e0 s\u2019imaginer cette maison. Il faut leur dire : \u00abJ\u2019ai vu une maison de cent mille francs.\u00bb Alors elles s\u2019\u00e9crient : \u00abComme c\u2019est joli!\u00bb\" extrait2 = 'If I have told you these details about the asteroid, and made a note of its number for you, it is on account of the grown-ups and their ways. When you tell them that you have made a new friend, they never ask you any questions about essential matters. They never say to you, \u201cWhat does his voice sound like? What games does he love best? Does he collect butterflies?\u201d Instead, they demand: \u201cHow old is he? How many brothers has he? How much does he weigh? How much money does his father make? Only from these figures do they think they have learned anything about him. If you were to say to the grown-ups: \u201cI saw a beautiful house made of rosy brick, with geraniums in the windows and doves on the roof,\u201d they would not be able to get any idea of that house at all. You would have to say to them: \u201cI saw a house that cost $ 20,000.\u201d Then they would exclaim: \u201cOh, what a pretty house that is!\u201d ' Ecrire une fonction analyse_lettre(extrait) qui renvoie un dictionnaire avec le nombre d'apparition de chacune des lettres dans le texte. Exemple : Lettre Extrait1 Extrait2 A 40 55 B 7 11 C 22 10 D 18 28 e 22 86 ... ... ... Ecrire une fonction analyse(extrait) qui renvoie un tableau avec le nombre d'apparitions des lettres (mais unique les nombres) Exemple : Pour l'extrait1 : la fonction doit renvoyer le tableau [40,7,22,18,105,8,8,1,44,8,0,49,19,56,40,11,8,34,76,33,34,13,0,4,0,1] Pour pouvoir faire l'analyse du texte, on va utiliser une analyse fr\u00e9quentielle. De plus on va utiliser une notion de distance, pour cela on va utiliser la librairie maths de python. from math import * On va \u00e9galement utiliser les apparition des divers lettres dans les divers pays \u00e9tudi\u00e9s. LANGUES = [ 'FR' , 'ANG' , 'ALL' , 'ESP' , 'POR' , 'ITA' ] #Effectif des lettres dans les langues respectives du tableau LANGUES EFF = [[ 763 , 90 , 326 , 366 , 1471 , 106 , 86 , 73 , 752 , 54 , 4 , 545 , 296 , 709 , 537 , 302 , 136 , 655 , 794 , 724 , 631 , 162 , 11 , 38 , 30 , 13 ], [ 816 , 149 , 278 , 425 , 1270 , 222 , 201 , 609 , 696 , 15 , 77 , 402 , 240 , 674 , 750 , 192 , 9 , 598 , 632 , 905 , 275 , 97 , 236 , 15 , 197 , 7 ], [ 651 , 189 , 306 , 508 , 1740 , 166 , 301 , 476 , 755 , 27 , 121 , 344 , 253 , 978 , 251 , 79 , 2 , 700 , 727 , 615 , 435 , 67 , 189 , 3 , 4 , 113 ], [ 1253 , 142 , 468 , 586 , 1368 , 69 , 101 , 70 , 625 , 44 , 1 , 497 , 315 , 671 , 868 , 251 , 88 , 687 , 798 , 463 , 393 , 90 , 2 , 22 , 90 , 52 ], [ 1463 , 104 , 388 , 499 , 1257 , 102 , 130 , 128 , 618 , 40 , 2 , 278 , 474 , 505 , 1073 , 252 , 120 , 653 , 781 , 474 , 463 , 167 , 1 , 21 , 1 , 47 ], [ 1174 , 92 , 450 , 373 , 1179 , 95 , 164 , 154 , 1128 , 0 , 0 , 651 , 251 , 688 , 983 , 305 , 51 , 637 , 498 , 562 , 301 , 210 , 0 , 0 , 0 , 49 ] ] On utilisera la fonction suivante : def distance ( liste1 , liste2 ): s1 = sum ( liste1 ) #somme des elements de la premiere liste s2 = sum ( liste2 ) #somme des \u00e9l\u00e9ments de la seconde liste. dist = 0 #on va calculer la somme des carr\u00e9 des diff\u00e9rences des fr\u00e9quences pour chaque lettre for i in range ( 26 ): dist += ( liste1 [ i ] / s1 - liste2 [ i ] / s2 ) ** 2 #liste1[i]/s1 correspond \u00e0 la fr\u00e9quence de l'\u00e9l\u00e9ment \u00e0 la position i dans la liste return sqrt ( dist ) #pour avoir la distance, il faut maintenant prendre la racine de ce nombre dist Un exemple : comparaison de deux tableaux Liste1 = [ 40 , 7 , 22 , 18 , 105 , 8 , 8 , 1 , 44 , 8 , 0 , 49 , 19 , 56 , 40 , 11 , 8 , 34 , 76 , 33 , 34 , 13 , 0 , 4 , 0 , 1 ] Liste2 = [ 763 , 90 , 326 , 366 , 1471 , 106 , 86 , 73 , 752 , 54 , 4 , 545 , 296 , 709 , 537 , 302 , 136 , 655 , 794 , 724 , 631 , 162 , 11 , 38 , 30 , 13 ] distance ( Liste1 , Liste2 ) 0.06197049246150164 Maintenant calcuer la distance entre le tableau extrait d'un texte (ici extrait1 et extrait2) avec le tableau correspondant \u00e0 chacune des langues pr\u00e9sentes dans le tableau LANGUES. Pour cela cr\u00e9er une fonction langue(extrait) qui calcule la distance entre chaque langue et l'extrait test\u00e9. def langue ( extrait ): e = analyse ( extrait ) numero_langue = 0 #au initialise \u00e0 0 ce qui correspond au fran\u00e7ais for tab in EFF : # cette m\u00e9thode permet de parcourir le tableau EFF pass Compl\u00e9ter la fonction afin d'obtenir le r\u00e9sultat suivant avec l'extrait 1 print ( langue ( extrait1 ) FR 0.061940492 ..... #distance la plus faible donc la langue est le fran\u00e7ais. ANG 0.119750 ..... ALL 0.10130 .... ESP 0.0999 ... POR 0.13131 .... ITA 0.12394 ... #Test avec de l'espagnol extrait3 = 'Si les he contado estos detalles sobre el asteroide B 612 y si les revel\u00e9 su n\u00famero, es a causa de los adultos. A los adultos les gustan los n\u00fameros. Cuando uno les habla de un nuevo amigo, nunca preguntan sobre lo esencial. Nunca te dicen: \"C\u00f3mo es el sonido de su voz ? Cu\u00e1les son los juegos que prefiere ? Colecciona mariposas ?\" Te preguntan: \"Qu\u00e9 edad tiene ? Cu\u00e1ntos hermanos tiene ? Cu\u00e1nto pesa ? Cu\u00e1nto gana su padre ?\" S\u00f3lo entonces creen conocerlo. Si uno dice a los adultos: \"Vi una bella casa de ladrillos rosas, con geranios en las ventanas y palomas en el techo...\" no logran imagin\u00e1rsela. Hay que decirles: \"Vi una casa de cien mil francos.\" Entonces exclaman: \"Qu\u00e9 lindo !\"' #Texte en italien extrait4 = '''Be , loro alzeranno le spalle, e vi tratteranno come un bambino. Ma se voi invece gli dite: \"Il pianeta da dove veniva e l'asteroide B 612\" allora ne sono subito convinti e vi lasciano in pace con le domande. Sono fatti cosi. Non c'e da prendersela. I bambini devono essere indulgenti coi grandi. Ma certo, noi che comprendiamo la vita, noi ce ne infischiamo dei numeri! Mi sarebbe piaciuto cominciare questo racconto come una storia di fate. Mi sarebbe piaciuto dire: \"C'era una volta un piccolo principe che viveva su di un pineta poco piu grande di lui e aveva bisogno di un amico\u2026\"''' #Test avec un texte en allemand extrait5 = \"Wenn ich euch dieses nebens\u00e4chliche Drum und Dran \u00fcber den Planeten B 612 erz\u00e4hle und euch sogar seine Nummer anvertraue, so geschieht das der gro\u00dfen Leute wegen. Die gro\u00dfen Leute haben eine Vorliebe f\u00fcr Zahlen. Wenn ihr ihnen von einem neuen Freund erz\u00e4hlt, befragen sie euch nie \u00fcber das Wesentliche. Sie fragen euch nie: Wie ist der Klang seiner Stimme? Welche Spiele liebt er am meisten? Sammelt er Schmetterlinge? Sie fragen euch: Wie alt ist er? Wieviele Br\u00fcder hat er? Wieviel wiegt er? Wieviel verdient sein Vater? Dann erst glauben sie, ihn zu kennen. Wenn ihr zu den gro\u00dfen Leute sagt:\" Faire de m\u00eame avec chacun des extraits","title":"TP 15 Les Dictionnaires"},{"location":"Dictionnaire/TP15_Dictionnaires/#introduction-necessite-dun-dictionnaire","text":"Prenons l'exemple d'un r\u00e9pertoire t\u00e9l\u00e9honique. Nous pouvons le m\u00e9moriser simplement comme un tableau (ou liste) de tableaux [nom,num\u00e9ro] liste_tel = [[ \"Paul\" , '0650523454' ], [ \"Emile\" , '0684515345' ], [ \"Victor\" , '0651355186' ], [ \"Rose\" , '0611245678' ], [ \"H\u00e9l\u00e8ne\" , '0774845432' ]] Si nous voulons appeler Rose , nous avons deux possibilit\u00e9s avec un tel tableau : * soit il faut savoir que les informations la concernant sont dans le quatri\u00e8me \u00e9l\u00e9ment de la liste (ce qui ne semble pas tr\u00e8s pratique et r\u00e9aliste) print ( liste_tel [ 3 ][ 1 ]) # il faut savoir que l'index de Rose est 3 soit nous cherchons dans le tableau en partant du premier \u00e9l\u00e9ment de la liste jusqu'\u00e0 ce que nous trouvions Rose (ce qui revient \u00e0 feuilleter son r\u00e9pertoire) : cela n\u00e9cessite d'utiliser une boucle pour parcourir le tableau. for element in liste_tel : if element [ 0 ] == 'Rose' : print ( element [ 1 ]) Vous conviendrez que ce n'est pas pratique pour acc\u00e9der \u00e0 son num\u00e9ro de t\u00e9l\u00e9phone. De m\u00eame, la modification ou l'ajout d'un information n\u00e9cessiterait de devoir feuilleter tout le r\u00e9pertoire. Il semblerait plus pratique d'associer un nom \u00e0 un num\u00e9ro, autrement dit d'associer \u00e0 une information \u00e0 une cl\u00e9 . C'est ce que les dictionnaires permettent !","title":"Introduction : n\u00e9cessit\u00e9 d'un dictionnaire"},{"location":"Dictionnaire/TP15_Dictionnaires/#ii-les-dictionnaires-en-python","text":"","title":"II. Les dictionnaires en Python"},{"location":"Dictionnaire/TP15_Dictionnaires/#les-dictionnaires-exercices","text":"Exercice 1 On reprend le dictionnaire notes . notes = { 'NSI' : 18 , 'Maths' : 15 , 'PC' : 14 } Affichez la moyenne de NSI. Modifiez votre moyenne de NSI qui a gagn\u00e9 2 points. Affichez le dictionnaire. Ajoutez la mati\u00e8re Anglais avec sa moyenne. Affichez le dictionnaire. Affichez la taille du dictionnaire. Supprimez une des trois sp\u00e9cialit\u00e9s ainsi que l'Anglais et affichez le dictionnaire. Exercice 2 On consid\u00e8re le dictionnaire dressing . Affichez tous les v\u00e9tements du dressing. Ecrivez un programme permettant d'obtenir l'affichage suivant. Le dressing comporte : 3 pantalons 4 pulls 8 tee - shirts Exercice 3 On consid\u00e8re le dictionnaire suivant qui contient diff\u00e9rents fruits ainsi que leurs quantit\u00e9s. fruits = { \"pommes\" : 8 , \"melons\" : 3 , \"poires\" : 6 } Quelle instruction permet d'acc\u00e9der au nombre de melons ? On a achet\u00e9 16 cl\u00e9mentines et utilis\u00e9 4 pommes pour faire une tarte. Ecrire une fonction ajout(fruit) permettant d'ajouter un fruit dans le dictionnaire fruits ainsi qu'une fonction miseajourquantite(fruit,quantite) . Tester avec l'exemple donn\u00e9. Exercice 4 On dispose d\u2019un dictionnaire associant \u00e0 des noms de commerciaux d\u2019une soci\u00e9t\u00e9 le nombre de ventes qu\u2019ils ont r\u00e9alis\u00e9es. Par exemple : ventes={\"Dupont\":14, \"Hervy\":19, \"Geoffroy\":15, \"Layec\":21} 1. \u00c9crivez une fonction qui prend en entr\u00e9e un tel dictionnaire et renvoie le nombre total de ventes dans la soci\u00e9t\u00e9. 2. \u00c9crivez une fonction qui prend en entr\u00e9e un tel dictionnaire et renvoie le nom du vendeur ayant r\u00e9alis\u00e9 le plus de ventes. Si plusieurs vendeurs sont ex-aequo sur ce crit\u00e8re, la fonction devra retourner le nom de l\u2019un d\u2019entre eux. 3. Modifier la fonction pr\u00e9c\u00e9dente pour que : si plusieurs vendeurs sont ex-aequo sur ce crit\u00e8re, la fonction devra retourner tous les noms. ventes={\"Dupont\":14, \"Hervy\":19, \"Geoffroy\":15, \"Layec\":21,\"Jean\":21} Exercice 5 Le Scrabble est un jeu de soci\u00e9t\u00e9 o\u00f9 l'on doit former des mots avec tirage al\u00e9atoire de lettres, chaque lettre valant un certain nombre de points. Le dictionnaire scrabble contient cette association entre une lettre et son nombre de points. scrabble = { 'A' : 1 , 'B' : 3 , 'C' : 3 , 'D' : 2 , 'E' : 1 , 'F' : 4 , 'G' : 2 , 'H' : 4 , 'I' : 1 , 'J' : 8 , 'K' : 10 , 'L' : 1 , 'M' : 2 , 'N' : 1 , 'O' : 1 , 'P' : 3 , 'Q' : 8 , 'R' : 1 , 'S' : 1 , 'T' : 1 , 'U' : 1 , 'V' : 4 , 'W' : 10 , 'X' : 10 , 'Y' : 10 , 'Z' : 10 } Ecrivez une fonction points(mot) qui renvoie le nombre de points au scrabble de mot , qui est une cha\u00eene de caract\u00e8res majuscules. Par exemple, le mot \"ARBRE\" doit rapporter 7 points, le mot \"XYLOPHONE\" doit rapporter 32 points . Exercice 6 Au zoo de Beauval, il y a 5 \u00e9l\u00e9phants d\u2019Asie, 17 \u00e9cureuils d\u2019Asie, 2 pandas d\u2019Asie... On repr\u00e9sente cet inventaire \u00e0 l\u2019aide d\u2019un dictionnaire, de la fa\u00e7on suivante : zoo_beauval = { 'elephant' : { \"continent\" : 'Asie' , \"nombre\" : 5 }, '\u00e9cureuil' : { \"continent\" : 'Asie' , \"nombre\" : 17 }, 'panda' : { \"continent\" : 'Asie' , \"nombre\" : 2 } , 'hippopotame' : { \"continent\" : 'Afrique' , \"nombre\" : 7 }, 'girafe' : { \"continent\" : 'Afrique' , \"nombre\" : 4 }} On repr\u00e9sente de la m\u00eame fa\u00e7on le zoo de la Fl\u00eache : zoo_la_fleche = { 'ours' : { \"continent\" : 'Europe' , \"nombre\" : 4 }, 'tigre' : { \"continent\" : 'Asie' , \"nombre\" : 7 }, 'girafe' : { \"continent\" : 'Afrique' , \"nombre\" : 11 }, 'hippopotame' : { \"continent\" : 'Afrique' , \"nombre\" : 3 }} 1. On souhaite se doner d\u2019une fonction plus_grand_nombre qui prend un zoo en param\u00e8tre et qui renvoie le nom de l\u2019animal le plus repr\u00e9sent\u00e9 dans ce zoo. Par exemple : assert plus_grand_nombre ( zoo_la_fleche ) == 'girafe' assert plus_grand_nombre ( zoo_beauval ) == '\u00e9cureuil' \u00c9crire le code de cette fonction. 2. On souhaite se doter d\u2019une fonction nombre_total qui prend un zoo en param\u00e8tre ainsi que le nom d\u2019un continent, et qui renvoie le nombre d\u2019animaux originaires de ce continent dans le zoo. Par exemple : assert nombre_total ( zoo_beauval , 'Asie' ) == 24 assert nombre_total ( zoo_la_fleche , 'Afrique' ) == 14 \u00c9crire le code de cette fonction. 3. On souhaite se doter d\u2019une fonction nombre qui prend un zoo en param\u00e8tre ainsi que le nom d\u2019un animal, et qui renvoie le nombre de repr\u00e9sentants de cet animal dans le zoo. Par exemple : assert nombre ( zoo_la_fleche , 'panda' ) == 0 assert nombre ( zoo_beauval , 'panda' ) == 2 \u00c9crire le code de cette fonction. Exercice 7 On consid\u00e8re le dictionnaire suivant qui contient le nom des \u00e9l\u00e8ves et leur note : dico_eleves = { 'Pierre' : 17 , 'Chlo\u00e9' : 18 , 'Simon' : 11 , 'Titouan' : 7 , 'Raphael' : 16 , 'Diwan' : 6 , 'Ethann' : 8 , 'Cl\u00e9ment' : 16 , 'Noa' : 17 , 'Solan' : 5 , 'Matheo' : 17 , 'Martin' : 10 , 'Valentin' : 11 , 'Zo\u00e9' : 7 , 'Antonin' : 18 , 'Sacha' : 9 , 'Emma' : 15 , 'Tidane' : 13 , 'Tristan' : 7 , 'Tifenn' : 20 , 'Soren' : 14 , 'Marjorie' : 15 , 'Maxime' : 7 , 'Liam' : 8 , 'Adrien' : 18 , 'Mathieu' : 16 , 'Lucas' : 8 , 'Louis' : 16 , 'Romane' : 19 } 1. Cr\u00e9er une fonction audessus(dico) qui affiche les \u00e9l\u00e8ves ayant au dessous de la moyenne (10). 2. Cr\u00e9er une fonction moyenne(dico) qui renvoie la moyenne de la classe. 3. Cr\u00e9er \u00e0 partir du dictionnaire dico_eleves un dictionnaire dessous_moyenne qui va contenir les \u00e9l\u00e8ves ayant au dessous de 10 (au sens large) avec leur moyenne et un dictionnaire dessus_moyenne qui va contenir les \u00e9l\u00e8ves ayant en dessous (au sens strict) de l a moyenne avec leur note. Exercice 8 Voici une citation c\u00e9l\u00e8bre de Gandhi : La vie est un myst\u00e8re qu'il faut vivre, et non un probl\u00e8me \u00e0 r\u00e9soudre. Cr\u00e9er un dictionnaire qui associe \u00e0 chaque lettre (cl\u00e9) son occurrence (valeur) * Par exemple la lettre 'a' apparait deux fois. Par exemple dico= {'a':2, .........} Exercice 8 : Gestion d'une biblioth\u00e8que On consid\u00e8re la base de donn\u00e9es suivante : global Livres_BD Livres_BD = { 'Les mis\u00e9rables' :{ 'Auteur' : 'Victor Hugo' , 'Stock' : 5 }, 'Le dernier des Mohicans' :{ 'Auteur' : 'James F. Cooper' , 'Stock' : 2 }, 'Un animal dou\u00e9 de raison' :{ 'Auteur' : 'Robert Merle' , 'Stock' : 6 }, 'Notre-dame de Paris' :{ 'Auteur' : 'Victor Hugo' , 'Stock' : 4 }, 'Les comtemplations' :{ 'Auteur' : 'Victor Hugo' , 'Stock' : 1 }, 'Da Vinci Code' :{ 'Auteur' : 'Dan Brown' , 'Stock' : 3 }, 'Anges et d\u00e9mons5' :{ 'Auteur' : 'Dan Brown' , 'Stock' : 3 }} Ecrire une fonction stock(livre) permettant d'afficher le stock d'un livre ainsi que son auteur. Ecrire une fonction titres_base(LivresBD) qui renvoie la liste des titres des livres de la base. Ecrire une fonction auteurs_base(LivresBD) qui retourne l'ensemble des noms d'auteurs de cette base dans un tableau. Ecrire une fonction auteur(nom) qui renvoie un dictionnaire qui a pour cl\u00e9 le nom de l'auteur et pour cl\u00e9 les titres des livres de cet auteur. auteur('Victor Hugo') {'Les mis\u00e9rables':5,'Notre-dame de Paris':4,'Les comtemplations':1} Ecrire une fonction est_present(livre) qui renvoie True si le livre est pr\u00e9sent ou False s'il n'est pas pr\u00e9sent. Ecrire une fonction ajoute_base(titre,auteur,stock) qui rajoute \u00e0 la base LivreBD les donn\u00e9es n\u00e9cessaires pour un nouveau livre apr\u00e9s avoir v\u00e9rifi\u00e9 qu'il ne soit pas pr\u00e9sent dans la base. Ecrire une fonction ajoute_stock(livre) qui ajoute 1 au stock du livre concern\u00e9 et qui affiche la nouvelle base de donn\u00e9es. Ecrire une fonction enleve_stock(livre) qui soustrait 1 au stock du livre concern\u00e9 et qui affiche la nouvelle base de donn\u00e9es. Ecrire une fonction titres_empruntables(LivresBD) qui retourne l'ensemble des livres empruntables. Exercice 9 : QCM de NSI Les r\u00e9ponses correctes d'un QCM de NSI sont stock\u00e9es dans un dictionnaire nomm\u00e9 reponses_valides. Les cl\u00e9s sont des cha\u00eenes de caract\u00e8res de la forme \"Q1\". Les valeurs possibles sont des cha\u00eenes de caract\u00e8res correspondant aux quatre r\u00e9ponses \"a\",\"b\",\"c\",\"d\". Exemple : reponses_valides = {\"Q1\":\"c\",\"Q2\":\"a\",\"Q3\":\"d\",\"Q4\":\"c\",\"Q5\":\"b\"} Les r\u00e9ponses donn\u00e9es par Alice sont stock\u00e9es dans le dictionnaire reponses_Alice dont voici un exemple possible : reponses_Alice = {\"Q1\":\"b\",\"Q2\":\"a\",\"Q3\":\"d\",\"Q5\":\"a\"} Lorsqu'Alice n'a pas r\u00e9pondu \u00e0 une question, il n'y a pas de clef correspondant au nom de l'exercice. La notation d'un QCM de NSI est la suivante : 3 points par r\u00e9ponse correcte, -1 point par r\u00e9ponse incorrecte et 0 si l'on n'a pas r\u00e9pondu Compl\u00e9ter la fonction correction_QCM_Alice(reponses_Alice,reponses_valides) qui, \u00e0 partir des dictionnaires reponses_Alice et reponses_valides pass\u00e9es en param\u00e8tres renvoie le nombre de points obtenus au QCM par Alice. def correction_QCM_Alice ( reponses_Alice , reponses_valides ): pass Exercice 10 : L'application Contacts de vos smartphones L'objectif de cette activit\u00e9 est de programmer deux des fonctionnalit\u00e9s importantes des smartphones actuels : Ajouter un contact au r\u00e9pertoire ; Rechercher un contact dans le r\u00e9pertoire. On suppose pour simplifier que le repertoire t\u00e9l\u00e9phonique est m\u00e9moris\u00e9 dans le smartphone sous la forme d'un dictionnaire et que chaque \u00e9l\u00e9ment du dictionnaire est une paire (prenom, numero) o\u00f9 prenom est la cl\u00e9 et numero la valeur associ\u00e9e.","title":"Les dictionnaires : EXERCICES"},{"location":"Dictionnaire/cours/","text":"2.3 Dictionnaires \u2693\ufe0e 1. Les dictionnaires : premiers exemples \u2693\ufe0e Une liste est un ensemble d'\u00e9l\u00e9ments accessibles par leur indice . Cet indice est en quelque sorte la \u00abplace\u00bb de l'\u00e9l\u00e9ment dans la liste. On peut dire que cet indice est la cl\u00e9 qui permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment. Dans un dictionnaire, chaque \u00e9l\u00e9ment est accessible par une cl\u00e9 qui n'est plus forc\u00e9ment un nombre : une chaine de caract\u00e8re, un nombre, ou autre chose, peut \u00eatre une cl\u00e9. Imaginons que je fasse l'inventaire de mon dressing : habits quantit\u00e9 pantalons 3 pulls 4 tee-shirts 8 Exemple fondateur n\u00b01 La cr\u00e9ation du dictionnaire repr\u00e9sentant mon dressing se fera par : >>> dressing = { \"pantalons\" : 3 , \"pulls\" : 4 , \"tee-shirts\" : 8 } L'acc\u00e8s \u00e0 une valeur se fera par : >>> dressing [ \"pulls\" ] 4 On dit que \"pulls\" est la cl\u00e9 et que 4 est la valeur associ\u00e9e \u00e0 la cl\u00e9. Un dictionnaire est un ensemble cl\u00e9s / valeurs. Attention : une cl\u00e9 peut aussi \u00eatre un nombre : >>> myst = { 9 : 4 , 1 : 2 , 6 : 3 , 7 : 4 } Que vaudrait myst[2] ? r\u00e9ponse myst associe \u00e0 chaque nombre le nombre de lettre de son \u00e9criture en fran\u00e7ais. Donc myst[2] = 4 car deux s'\u00e9crit avec 4 lettres. 2. D\u00e9finitions et propri\u00e9t\u00e9s d'un dictionnaire \u2693\ufe0e 2.1 D\u00e9finitions \u2693\ufe0e D\u00e9finition Un dictionnaire est une donn\u00e9e composite qui n'est pas ordonn\u00e9e (\u00e0 la diff\u00e9rence des listes !) Il fonctionne par un syst\u00e8me de cl\u00e9:valeur . Les cl\u00e9s, comme les valeurs, peuvent \u00eatre de types diff\u00e9rents. Un dictionnaire est d\u00e9limit\u00e9 par des accolades. Rappel : crochets [ ] -> listes parenth\u00e8ses ( ) -> tuples accolades { } -> dictionnaires 2.2 M\u00e9thodes .keys() et .values() \u2693\ufe0e Exemples fondateurs n\u00b02 Pour lister les cl\u00e9s d'un dictionnaire : >>> dressing . keys () dict_keys ([ 'pantalons' , 'pulls' , 'tee-shirts' ]) Pour lister les valeurs d'un dictionnaire : >>> dressing . values () dict_values ([ 3 , 4 , 8 ]) 2.3 Parcours d'un dictionnaire \u2693\ufe0e Exemple fondateur n\u00b03 >>> for habit in dressing : print ( dressing [ habit ]) 3 4 8 2.4 Cr\u00e9ation d'un dictionnaire vide \u2693\ufe0e Exemple fondateur n\u00b04 Deux m\u00e9thodes existent pour cr\u00e9er un dictionnaire : dict() et {} >>> mondico = dict () >>> mondico {} >>> mondico [ 'john' ] = 12 >>> mondico { 'john' : 12 } >>> contacts = {} >>> contacts [ 'bob' ] = '06 12 17 21 32' 2.5 Ajout / Modification d'un \u00e9l\u00e9ment dans un dictionnaire \u2693\ufe0e Exemple fondateur n\u00b05 Pas besoin d'une m\u00e9thode append() , il suffit de rajouter une paire cl\u00e9 : valeur >>> dressing [ \"chaussettes\" ] = 12 On peut aussi modifier un dictionnaire existant. dressing [ \"chaussettes\" ] = 11 2.6 Suppression d'une valeur \u2693\ufe0e Exemple fondateur n\u00b06 On utilise l'instruction del (d\u00e9j\u00e0 rencontr\u00e9e pour les listes) del dressing [ \"chaussettes\" ] {{ initexo(0)}} {{ exercice() }} \u00c9nonc\u00e9 Correction Reprenons notre dictionnaire dressing : dressing = { \"pantalons\" : 3 , \"pulls\" : 4 , \"tee-shirts\" : 8 } Cr\u00e9er une fonction achat(habit) qui augmente de 1 le nombre d'habits (pantalon, pull ou tee-shirt) de mon dressing. {{ correction(True, \" \" ) }} Remarque : Petit probl\u00e8me si on essaie d'acheter un v\u00eatement pour la 1\u00e8re fois >>> achat ( \"chemises\" ) --------------------------------------------------------------------------- KeyError Traceback ( most recent call last ) < ipython - input - 28 - fd9d1ac5f62d > in < module > ----> 1 achat ( \"chemises\" ) < ipython - input - 27 - feb173444189 > in achat ( habit ) 1 def achat ( habit ): ----> 2 dressing [ habit ] = dressing [ habit ] + 1 KeyError : 'chemises' Nous allons r\u00e9soudre ce probl\u00e8me gr\u00e2ce \u00e0 : 2.7 Test d'appartenance \u00e0 un dictionnaire \u2693\ufe0e Exemple fondateur n\u00b07 Le mot in permet de tester l'appartenance d'une cl\u00e9 \u00e0 un dictionnaire. Un bool\u00e9en est renvoy\u00e9. >>> \"cravates\" in dressing False {{ exercice() }} \u00c9nonc\u00e9 Correction Am\u00e9liorer la fonction achat(habit) en y incluant un test pour prendre en compte les nouveaux habits. {{ correction(True, \" \" ) }} {{ exercice() }} \u00c9nonc\u00e9 Correction On consid\u00e8re la liste suivante : lst = ['5717', '1133', '5545', '4031', '6398', '2734', '3070', '1346', '7849', '7288', '7587', '6217', '8240', '5733', '6466', '7972', '7341', '6616', '5061', '2441', '2571', '4496', '4831', '5395', '8584', '3033', '6266', '2452', '6909', '3021', '5404', '3799', '5053', '8096', '2488', '8519', '6896', '7300', '5914', '7464', '5068', '1386', '9898', '8313', '1072', '1441', '7333', '5691', '6987', '5255'] Quel est le chiffre qui revient le plus fr\u00e9quemment dans cette liste ? {{ correction(True, \" \" ) }}","title":"TD n\u00b015 - Structures de donn\u00e9es - Les Dictionnaires"},{"location":"Dictionnaire/cours/#23-dictionnaires","text":"","title":"2.3 Dictionnaires"},{"location":"Dictionnaire/cours/#1-les-dictionnaires-premiers-exemples","text":"Une liste est un ensemble d'\u00e9l\u00e9ments accessibles par leur indice . Cet indice est en quelque sorte la \u00abplace\u00bb de l'\u00e9l\u00e9ment dans la liste. On peut dire que cet indice est la cl\u00e9 qui permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment. Dans un dictionnaire, chaque \u00e9l\u00e9ment est accessible par une cl\u00e9 qui n'est plus forc\u00e9ment un nombre : une chaine de caract\u00e8re, un nombre, ou autre chose, peut \u00eatre une cl\u00e9. Imaginons que je fasse l'inventaire de mon dressing : habits quantit\u00e9 pantalons 3 pulls 4 tee-shirts 8 Exemple fondateur n\u00b01 La cr\u00e9ation du dictionnaire repr\u00e9sentant mon dressing se fera par : >>> dressing = { \"pantalons\" : 3 , \"pulls\" : 4 , \"tee-shirts\" : 8 } L'acc\u00e8s \u00e0 une valeur se fera par : >>> dressing [ \"pulls\" ] 4 On dit que \"pulls\" est la cl\u00e9 et que 4 est la valeur associ\u00e9e \u00e0 la cl\u00e9. Un dictionnaire est un ensemble cl\u00e9s / valeurs. Attention : une cl\u00e9 peut aussi \u00eatre un nombre : >>> myst = { 9 : 4 , 1 : 2 , 6 : 3 , 7 : 4 } Que vaudrait myst[2] ? r\u00e9ponse myst associe \u00e0 chaque nombre le nombre de lettre de son \u00e9criture en fran\u00e7ais. Donc myst[2] = 4 car deux s'\u00e9crit avec 4 lettres.","title":"1. Les dictionnaires : premiers exemples"},{"location":"Dictionnaire/test/","text":"\u2693\ufe0e Slide 1 \u2693\ufe0e Texte avec liste : un deux un deux trois Slide 2 \u2693\ufe0e Slide avec deux cadres et une pause entre les deux : cadre un \u2693\ufe0e avec du texte . . . cadre deux \u2693\ufe0e avec du texte Slide 3 sans bandeau, avec un saut de ligne et avec une image r\u00c3\u00a9duite \u00c3 50 %","title":"Titre"},{"location":"Dictionnaire/test/#_1","text":"","title":""},{"location":"Dictionnaire/test/#slide-1","text":"Texte avec liste : un deux un deux trois","title":"Slide 1"},{"location":"Dictionnaire/test/#slide-2","text":"Slide avec deux cadres et une pause entre les deux :","title":"Slide 2"},{"location":"Divers/Liens_utiles/","text":"Liens utiles \u2693\ufe0e \u00c0 propos de la sp\u00e9cialit\u00e9 NSI \u2693\ufe0e Le site Eduscol \u00c0 propos de la culture des sciences de l'informatique \u2693\ufe0e Interstices Inria \u00c0 propos de l'orientation \u2693\ufe0e Talents du num\u00e9rique Une brochure int\u00e9ressante. Pour se creuser la t\u00eate \u2693\ufe0e Quelques sites de challenges/\u00e9nigmes/d\u00e9fis de programmation: PyD\u00e9fis Advent of Code MicroContest Hackinscience Pour se former en autonomie \u2693\ufe0e Au cas o\u00f9 vous vous ennuieriez... France-IOI CheckIO CodinGame","title":"Liens Utiles"},{"location":"Divers/Liens_utiles/#liens-utiles","text":"","title":"Liens utiles"},{"location":"Tableaux/TD08_Les_Tableaux_Corrige/","text":"TD n\u00b08 : Les types construits : tuples et tableaux Th\u00e8me 4 : Langages et Programmation EXERCICES Exercices \u2693\ufe0e Exercice 8.1 Enonc\u00e9 Solution On consid\u00e8re la variable repertoire suivante. repertoire = [( 'Michel' , '0210101010' ), ( 'Marjorie' , '0211111111' ), ( 'Perrine' , '0212121212' )] Quel est le type de la variable repertoire ? Quel est le type de la variable repertoire[0] ? Qu'affiche l'instruction repertoire[1][1] ? Quelle instruction permet d'acc\u00e9der au num\u00e9ro de t\u00e9l\u00e9phone de Michel ? Quel est le type de la variable repertoire[2][0] ? La variable repertoire est de type list La variable repertoire[0] est de type tuple L'instruction repertoire[1][1] affiche 0211111111 Pour acc\u00e9der au num\u00e9ro de t\u00e9l\u00e9phone de Michel, il faut utiliser l'instruction repertoire[0][1] La variable repertoire[2][0] est de type str Exercice 5.2 \u2693\ufe0e R\u00e9pondez aux questions suivantes puis ex\u00e9cutez la cellule pour v\u00e9rifier. Quel est le tableau construit par les instructions suivantes ? t1 = [ 0 ] * 10 for i in range ( 10 ): t1 [ i ] = i t1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] Quel est le tableau construit par les instructions suivantes ? t2 = [ i + 1 for i in range ( 8 )] t2 [1, 2, 3, 4, 5, 6, 7, 8] Quel est le tableau construit par les instructions suivantes ? t3 = [ i * i for i in range ( 5 , 10 )] t3 [25, 36, 49, 64, 81] Quel est le tableau construit par les instructions suivantes ? t4 = [ 0 ] * 50 for i in range ( len ( t4 )): t4 [ i ] = i % 2 t4 [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1] Exercice 5.3 \u2693\ufe0e Compl\u00e9tez la fonction suivante pour qu'elle \u00e9change les valeurs d'index i et j du tableau tab . Exemple T = [ 3 , 8 , 12 , 9 , 56 , 14 , 22 , 7 , 13 , 41 ] echange ( T , 2 , 4 ) T [ 3 , 8 , 56 , 9 , 12 , 14 , 22 , 7 , 13 , 41 ] def echange ( tab , i , j ): pass return tab # Tests T = [ 3 , 8 , 12 , 9 , 56 , 14 , 22 , 7 , 13 , 41 ] echange ( T , 2 , 4 ) T Solution def echange ( tab , i , j ): temp = tab [ j ] tab [ j ] = tab [ i ] tab [ i ] = temp return tab Exercice 5.4 \u2693\ufe0e On consid\u00e8re le tableau t suivant. t = [ 0 , 2 , 4 , 6 , 8 , 10 ] Ecrivez un programme qui parcourt par indice le tableau et affiche tous ses \u00e9l\u00e9ments. Ecrivez un programme qui parcourt par valeur le tableau et affiche ses \u00e9l\u00e9ments. Ecrire un programme qui calcule la somme des \u00e9l\u00e8ments du tableau. Solution 1. Parcours par indice ```python for indice in range(len(t)): print(t[indice]) 2. Parcours par valeur ```python for elt in t: print(elt) 3. Calcul de la somme des termes d'une suite ```python somme=0 for valeur in t: somme=somme+valeur # ou somme+=valeur </div> </details> ## Exercice 5.5 : On consid\u00e8re le tableau d\u00e9fini par compr\u00e9hension suivant. ```python T = [i for i in range(15)] 1. Que contient le tableau `T` ? T 2. Ecrivez un programme qui parcourt le tableau `T` et qui affiche uniquement les multiples de 2 qu'il contient. Solution for valeur in T : if valeur % 2 == 0 : #on teste si valeur est pair que montrant que le reste de la division euclidienne par 2 vaut 0 print ( valeur ) ## Exercice 5.6 : On rappelle que l'on peut construire un tableau en utilisant une boucle `for` (en ayant au pr\u00e9alable cr\u00e9\u00e9 un tableau de la bonne taille avec une valeur arbitraire) ou en le d\u00e9finissant par compr\u00e9hension. Utilisez les deux m\u00e9thodes pour construire les tableaux demand\u00e9s. 1. Un tableau qui contient tous les entiers compris entre 0 et 1000. 2. Un tableau qui contient tous les entiers compris entre 5 et 15. 3. Un tableau qui contient tous les nombres pairs compris entre 0 et 50. 4. Un tableau qui contient les carr\u00e9s de tous les entiers compris entre 1 et 100 (c'est-\u00e0-dire 1, 4, 9, 16, etc.) # Q1 avec m\u00e9thode 1 # Q1 avec m\u00e9thode 2 # Q2 avec m\u00e9thode 1 # Q2 avec m\u00e9thode 2 # Q3 avec m\u00e9thode 1 # Q3 avec m\u00e9thode 2 # Q4 avec m\u00e9thode 1 # Q4 avec m\u00e9thode 2 Solution #Q1 M\u00e9thode 1 tab1 = [] #initialisation for k in range ( 0 , 1001 ): tab1 . append ( k ) #Q1 M\u00e9thode 2 par compr\u00e9hension tab1 = [ k for k in range ( 0 , 1001 )] #Q2 M\u00e9thode 1 tab2 = [] #initialisation for k in range ( 5 , 16 ): tab2 . append ( k ) #Q2 M\u00e9thode 2 par compr\u00e9hension tab2 = [ k for k in range ( 5 , 16 )] #Q3 M\u00e9thode 1 tab3 = [] #initialisation for k in range ( 0 , 51 , 2 ): tab3 . append ( k ) #Q3 M\u00e9thode 2 par compr\u00e9hension tab3 = [ k for k in range ( 0 , 51 , 2 )] ou #Q3 M\u00e9thode 2 par compr\u00e9hension tab3 = [ k for k in range ( 51 ) if k % 2 == 0 ] #Q4 M\u00e9thode 1 tab4 = [] #initialisation for k in range ( 1 , 101 ): tab4 . append ( k ** 2 ) #Q4 M\u00e9thode 2 par compr\u00e9hension tab4 = [ k ** 2 for k in range ( 1 , 101 )] ## Exercice 5.7 : Moyenne annuelle Compl\u00e9ter la fonction moyenne qui prend en argument un tableau de notes et qui renvoie la moyenne de ce tableau. notes = [ 12 , 10 , 15 , 18 , 8 ] moyenne ( notes ) >>> 12.6 def moyenne ( notes ): ... ... ... Solution def moyenne ( notes ): somme = 0 nb_notes = len ( notes ) for note in notes : somme += note moy = somme / nb_notes return moy ## Exercice 5.8 : Moyenne coefficient\u00e9e Voici les premi\u00e8res notes de l'ann\u00e9e obtenues par un \u00e9l\u00e8ve en NSI : | **Note** | **coefficient** | | ----------- | ------------ | | 15 | 1 | | 13 | 2 | | 8 | 1 | | 18 | 1 | 1. Ces notes et coefficients sont d'abord stock\u00e9es dans deux tableaux comme ci-dessous. a. Quelle instruction permet d'acc\u00e9der la troisi\u00e8me note ? b. Quelle instruction permet d'acc\u00e9der au coefficient de la deuxi\u00e8me note ? notes = [ 15 , 13 , 8 , 18 ] coeff = [ 1 , 2 , 1 , 1 ] R\u00e9ponse : 2. Ecrire une fonction moyenneCoeff(notes,coeffs) qui prend en param\u00e8tres deux tableaux et qui renvoie la moyenne coefficient\u00e9e correspondante. def moyenneCoeff ( notes , coeffs ): sommenotes = 0 sommecoeffs = 0 for i in range ( ... ): ... Solution def moyenne ( notes , coeffs ): sommenotes = 0 sommecoeffs = 0 nb2notes = len ( notes ) for indice in range ( nb2notes ): sommenotes += notes [ indice ] sommecoeffs += coeffs [ indice ] moy = sommenotes / sommecoeffs return moy 3. Ces notes et coefficient sont maintenant stock\u00e9es dans un tableau de tableaux. Quelle instruction permet d'acc\u00e9der \u00e0 la troisi\u00e8me paire note-coefficient ? Quelle instruction permet d'acc\u00e9der la troisi\u00e8me note ? Quelle instruction permet d'acc\u00e9der au coefficient de la deuxi\u00e8me note ? notes_coeff = [[ 15 , 1 ], [ 13 , 2 ], [ 8 , 1 ], [ 18 , 1 ]] R\u00e9ponse : 4. Ecrire une fonction moyenneCoeff(tab) qui prend en param\u00e8tre un tableau et qui renvoie la moyenne coefficient\u00e9e correspondante. Solution def moyenneCoeff ( tab ): sommenotes = 0 sommecoeffs = 0 nb2notes = len ( tab ) for indice in range ( nb2notes ): sommenotes += tab [ indice ][ 0 ] * tab [ indice ][ 1 ] #les notes ont toujours pour position 0 dans le tableau extrait et les coeffs ont pour position1 sommecoeffs += tab [ indice ][ 1 ] moy = sommenotes / sommecoeffs return moy ## Exercice 5.9 : R\u00e9pondez aux questions suivantes **puis** ex\u00e9cutez la cellule pour v\u00e9rifier. 1. Quel est le tableau construit par compr\u00e9hension de la fa\u00e7on suivante ? tab = [[ j ** 2 for j in range ( 5 )] for i in range ( 3 )] tab 2. Quel est le tableau construit par compr\u00e9hension de la fa\u00e7on suivante ? tab = [[ 2 * i + j for j in range ( 2 )] for i in range ( 4 )] tab ## Exercice 5.10 : On a m\u00e9morise dans le tableau `grille` l'\u00e9tat d'un jeu de morpion. Voici le contenu du jeu apr\u00e8s deux tours. grille = [[ 'X' , '.' , 'O' ], [ '.' , '.' , 'O' ], [ '.' , '.' , 'X' ]] 1. C'est au joueur \u00ab O \u00bb de jouer et il compte mettre un `'O'` au centre de la grille. Quelle instruction faut-il \u00e9crire ? V\u00e9rifiez. Solution grille [ 1 ][ 1 ] 2. Vous avez du constater qu'en affichant le tableau, celui ne s'affiche pas comme on souhaiterait (comme la grille du jeu). Pour pallier \u00e0 ce souci, il suffit de parcourir le tableau ligne par ligne et afficher cette ligne. Ecrivez le programme correspondant. Solution for ligne in grille : print ( ligne ) 3. **Approfondissement** Pour ceux qui le d\u00e9sire, \u00e9crire un programme permettant de joueur au morpion. ## Parcours tableaux \u00e0 plusieurs dimensions ## Exercice 5.11 : Ecrire une fonction ajoutNumero(rep,nom,numero) qui prend pour param\u00e8tre un r\u00e9pertoire, un nomn et un numero de t\u00e9l\u00e9phone et qui permet d'enregistrer un nouveau nom ainsi que son num\u00e9ro dans le r\u00e9pertoire repertoire = [[ 'Michel' , '0210101010' ], [ 'Marjorie' , '0211111111' ], [ 'Perrine' , '0212121212' ]] Solution def ajoutNumero ( rep , nom , numero ): rep . append ([ nom , numero ]] return rep ## Exercice 5.12 : Ecrivez une fonction `somme(t)` qui renvoie la somme des \u00e9l\u00e9ments du tableau d'entiers `t`. Exemple : t = [ 1 , 2 , 3 , 5 , 7 , 10 ] somme ( t ) >>> 28 Solution def somme ( t ): s = 0 for elt in t : s += elt return s ## Exercice 5.13 : cadavre exquis Le [cadavre exquis](https://fr.wikipedia.org/wiki/Cadavre_exquis) est un \u00ab jeu qui consiste \u00e0 faire composer une phrase, ou un dessin, par plusieurs personnes sans qu'aucune d'elles ne puisse tenir compte de la collaboration ou des collaborations pr\u00e9c\u00e9dentes.\u00bb *Remarque :* la m\u00e9thode `choice` du module `random` permet de tirer au sort un \u00e9l\u00e9ment dans un it\u00e9rable non vide (et donc dans un tableau non vide). Vous pouvez ex\u00e9cuter plusieurs fois la cellule de code ci-dessous pour tester : from random import choice tab = [ 'chat' , 'chien' , 'cheval' , 'vache' , 'cochon' ] animal = choice ( tab ) animal 'chat' Compl\u00e9ter la fonction `cadavre_exquis` ci-dessous qui prend en argument : - un tableau de noms non vide, - un tableau de verbes non vide, - un tableau de compl\u00e9ments non vide, et qui renvoie une phrase al\u00e9atoire construite selon le principe du cadavre exquis : en piochant un nom dans le tableau de noms, puis en piochant un verbe dans le tableau de verbes et enfin en piochant un compl\u00e9ment dans le tableau de compl\u00e9ments. from random import choice def cadavre_exquis ( noms , verbes , complements ): nom = ... verbe = ... complement = ... phrase = ... return ... Solution from random import choice def cadavre_exquis ( noms , verbes , complements ): nom = noms verbe = verbes complement = complements phrase = choice ( nom ) + choice ( verbe ) + choice ( complement ) return phrase *Question 2 :* Tester votre fonction en compl\u00e9tant l'exemple ci-dessous. n = [ 'Le chasseur ' , 'La pr\u00e9sidente ' , 'Le lapin ' , 'Pikachu ' , 'La com\u00e8te ' , 'La licorne ' ] v = [ 'mange ' , 'cherche ' , 'entretient ' , 'admire ' , 'v\u00e9n\u00e8re ' , 'admoneste ' ] c = [ 'la saucisse.' , 'la for\u00eat.' , 'la casquette.' , 'la bicyclette.' , 'le micro-processeur.' ] cadavre_exquis ( n , v , c ) 'La licorne mange la casquette.' ## Exercice 5.14 : Travail sur les listes en compr\u00e9hension **Cr\u00e9ez une liste `Liste1` de 15 entiers al\u00e9atoires compris entre 0 et 20 \u00e0 l'aide d'une boucle.** *Aide :* Nous allons utiliser le module random qui g\u00e9n\u00e8re des nombres pseudo-al\u00e9toires. Commencez par importer la fonction `randint` du module avec l'instruction : `from random import randint` \u00e0 placer en d\u00e9but de cellule. L'instruction `randint(a,b)` retournera un entier al\u00e9toire compris entre a et b (bornes comprises) [Vers la documentation du module](https://docs.python.org/fr/3/library/random.html) #un exemple : from random import randint Liste1 = [] for k in range ( 15 ): alea = randint ( 0 , 20 ) Liste1 . append ( alea ) print ( Liste1 ) [12, 4, 1, 19, 12, 7, 4, 14, 0, 20, 2, 10, 13, 3, 16] **Cr\u00e9ez une liste `Liste2` de 30 entiers al\u00e9atoires compris entre 0 et 20 \u00e0 l'aide d'une compr\u00e9hension de liste.** Liste2 = # Votre code ici print ( Liste2 ) Solution from random import randint liste2 = [ randint ( 0 , 20 ) for k in range ( 30 )] **Cr\u00e9ez une fonction `moyenne` qui prend en param\u00e8tre une liste de nombres et qui renvoie la moyenne de cette liste.** Testez votre fonction \u00e0 l'aide des `assert` de la cellule suivante. def moyenne ( liste ): pass return moyenne Solution def moyenne ( liste ): somme = 0 for elt in liste : somme += elt moy = somme / len ( liste ) return moy # M\u00e9thode de TEST assert moyenne ( Liste1 ) == sum ( Liste1 ) / len ( Liste1 ) assert moyenne ( Liste2 ) == sum ( Liste2 ) / len ( Liste2 ) Un m\u00e9chant professeur veut baisser le notes de ses \u00e9l\u00e8ves de 10 % **Cr\u00e9ez une liste `Liste3` obtenue en diminuant de 10 % les nombres de la liste `Liste1` avec une compr\u00e9hension de liste** Testez votre fonction \u00e0 l'aide des `assert` de la cellule suivante. Liste3 = # Votre code ici Liste3 Solution from random import randint Liste3 = [ elt * 0.9 for elt in Liste1 ] for index in range ( len ( Liste1 )): assert Liste3 [ index ] == Liste1 [ index ] * 0.9 Le m\u00eame professeur cherche \u00e0 \u00e9crire des appr\u00e9ciation automatiques en fonction de la note. Il souhaite voir \u00e9crit \"Pas terrible\" si la note est inf\u00e9rieure ou \u00e9gale \u00e0 10 et \"Pas mal\" sinon. **Cr\u00e9ez une liste `Appreciations` \u00e0 partir de la liste `Liste1` \u00e0 l'aide d'une comprehension de liste** *Aide* : `[ if else for in ]` Appreciations = # Votre code ici Appreciations = [ 'insuffisant' if elt < 10 else 'convenable' for elt in Liste1 ] print ( Appreciations ) ['convenable', 'insuffisant', 'insuffisant', 'convenable', 'convenable', 'insuffisant', 'insuffisant', 'convenable', 'insuffisant', 'convenable', 'insuffisant', 'convenable', 'convenable', 'insuffisant', 'convenable'] Solution Appreciations = [ 'Pas terrible' if elt < 10 else 'Pas mal' for elt in Liste1 ] print ( Liste1 ) print ( Appreciations ) Le professeur souhaite maintenant cr\u00e9er une fonction `app2` qui prend en param\u00e8tre un nombre et qui renvoie un tuple constitu\u00e9 de ce nombre et d'une appr\u00e9ciation. L'appr\u00e9ciation sera : - \"Bon travail\" si la note est sup\u00e9rieure ou \u00e9gale \u00e0 15; - \"Fais encore des efforts\" si la note est entre 10 et 15 (non compris); - \"Au travail !\" si la note est inf\u00e9rieure ou \u00e9gale \u00e0 10. **Ecrivez la fonction ci-dessous** def app2 ( nombre ): pass # Votre code ici Solution def app2 ( nombre ): if nombre <= 10 : return ( nombre , 'Au travail !' elif nombre >= 15 : return ( nombre , 'Bon travail' ) else : return ( nombre , 'Fais encore des efforts' ) Cr\u00e9ez une liste Appreciations2 \u00e0 partir de la liste Liste2 contenant les notes et les appr\u00e9ciation \u00e0 l'aide d'une compr\u00e9hension de liste Appreciations2 = [ app2 ( nb ) for nb in Liste2 ] print ( Appreciations2 ) ## Exercice 5.15 : Travail sur les listes de listes. Les carr\u00e9s magiques : prolongement de l'exercice vu dans la le\u00e7on. **Premi\u00e8re \u00e9tape - Cr\u00e9er une fonction `Gen_carre` qui prend en param\u00e8tre un entier naturel non nul $n$, et qui renvoie un tableau carr\u00e9 (liste de liste) contenant les entiers de 1 \u00e0 $n^2$ entiers \"m\u00e9lang\u00e9s\"** Par exemple : `Gen_carre(3)` porra retourner `[[2,7,6], [9,5,1], [4,3,8]]` Vous allez utiliser le module `random` et en particulier la fonction `shuffle` qui prend en param\u00e8tre une liste et qui la m\u00e9lange \"sur place\". Par exemple `liste = [0,1,2,3]` suivi de `shuffle(liste)` va m\u00e9langer les \u00e9l\u00e9ments de liste et, par exemple, on obtiendra `liste = [3,0,1,2]`. from random import shuffle , randint def Gen_carre ( n ): carre3 = Gen_carre ( 3 ) print ( carre3 ) **Deuxi\u00e8me \u00e9tape : Ecrire une fonction `somme_ligne` qui prend en param\u00e8tres un tableau carr\u00e9 d'entiers et un entier $n$ et qui retourne la somme de la ligne d'index $n$** def somme_ligne ( carre : list , n : int ): # Tests de la fonction somme_ligne carre3 = [[ 2 , 7 , 6 ], [ 9 , 5 , 1 ], [ 4 , 3 , 8 ]] carre4 = [[ 4 , 5 , 11 , 14 ], [ 15 , 10 , 8 , 1 ], [ 7 , 3 , 13 , 12 ], [ 9 , 16 , 2 , 6 ]] assert somme_ligne ( carre3 , 0 ) == 15 assert somme_ligne ( carre3 , 1 ) == 15 assert somme_ligne ( carre3 , 2 ) == 15 assert somme_ligne ( carre4 , 0 ) == 34 assert somme_ligne ( carre4 , 3 ) == 33 **Troisi\u00e8me \u00e9tape : Ecrire une fonction `verif_lignes` qui prend en param\u00e8tres un tableau carr\u00e9 d'entiers et qui retourne un bool\u00e9en indiquant si toutes les lignes ont la m\u00eame somme.** def verif_lignes ( carre : list ): # Tests de la fonction verif_lignes assert verif_lignes ( carre3 ) == True assert verif_lignes ( carre4 ) == False **Quatri\u00e8me \u00e9tape : Faire de m\u00eame avec les colonnes.** Vous avez la libert\u00e9 pour construire les fonctions que vous souhaitez, ajoutez des docstrings et des tests \u00e0 vos fonctions. def somme_colonne ( carre : list , index_colonne : int ): assert somme_colonne ( carre3 , 0 ) == 15 assert somme_colonne ( carre3 , 1 ) == 15 assert somme_colonne ( carre3 , 2 ) == 15 assert somme_colonne ( carre4 , 0 ) == 35 assert somme_colonne ( carre4 , 1 ) == 34 def verif_colonnes ( carre : list ): assert verif_colonnes ( carre3 ) == True assert verif_colonnes ( carre4 ) == False **Cinqui\u00e8me \u00e9tape : V\u00e9rifier de m\u00eame les deux diagonales** def verif_diag ( carre : list ): assert verif_diag ( carre3 ) == True assert verif_diag ( carre4 ) == False **Derni\u00e8re \u00e9tape : Ecrire une fonction qui prend en param\u00e8tre un tableau carr\u00e9 d'entiers et qui retourne un bool\u00e9en indiquant si le carr\u00e9 est magique** def verif_carre ( carre ): assert verif_carre ( carre3 ) == True assert verif_carre ( carre4 ) == False **Bonus : \u00e0 l'aide de votre fonction `Gen_carre`, trouvez des carr\u00e9s magiques d'ordre 3, puis 4.** *Conseil : soyez patient !* # Voici une exemple de solution (Aucune inqui\u00e9tude, je ne demandais pas de trouver ce type de programme mais d'essayer \u00e0 la main def carre_magique_ordre3 (): carre_magique_ordre3 ()","title":"TD08 Les Tableaux Corrige"},{"location":"Tableaux/TD08_Les_Tableaux_Corrige/#exercices","text":"Exercice 8.1 Enonc\u00e9 Solution On consid\u00e8re la variable repertoire suivante. repertoire = [( 'Michel' , '0210101010' ), ( 'Marjorie' , '0211111111' ), ( 'Perrine' , '0212121212' )] Quel est le type de la variable repertoire ? Quel est le type de la variable repertoire[0] ? Qu'affiche l'instruction repertoire[1][1] ? Quelle instruction permet d'acc\u00e9der au num\u00e9ro de t\u00e9l\u00e9phone de Michel ? Quel est le type de la variable repertoire[2][0] ? La variable repertoire est de type list La variable repertoire[0] est de type tuple L'instruction repertoire[1][1] affiche 0211111111 Pour acc\u00e9der au num\u00e9ro de t\u00e9l\u00e9phone de Michel, il faut utiliser l'instruction repertoire[0][1] La variable repertoire[2][0] est de type str","title":"Exercices"},{"location":"Tableaux/TD09_Parcours_Sequentiel_Tableaux_Corrige/","text":"TD n\u00b09 : Parcours s\u00e9quentiel d'un tableau Th\u00e8me 4 : Langages et Programmation EXERCICES TYPE EPREUVE PRATIQUE en Terminale EXERCICES Lein Capytale Exercice 9.1 : Enonc\u00e9 Solution Ecrire une fonction qui prend en param\u00e8tre un tableau d'entiers non vide et qui renvoie la moyenne de ces entiers. La fonction est sp\u00e9cifi\u00e9e ci-apr\u00e8s et doit passer les assertions fournies. def moyenne ( tab ): ''' moyenne(list) -> float Entr\u00e9e : un tableau non vide d'entiers Sortie : nombre de type float Correspondant \u00e0 la moyenne des valeurs pr\u00e9sentes dans le tableau ''' def moyenne ( tab ): ''' moyenne(list) -> float Entr\u00e9e : un tableau non vide d'entiers Sortie : nombre de type float Correspondant \u00e0 la moyenne des valeurs pr\u00e9sentes dans le tableau ''' somme = 0 for elt in tab : somme += elt moy = somme / len ( tab ) return moy #Jeu de tests - A ne pas modifier assert moyenne ([ 1 ]) == 1 assert moyenne ([ 1 , 2 , 3 , 4 , 5 , 6 , 7 ]) == 4 assert moyenne ([ 1 , 2 ]) == 1.5 Exercice 9.2 : Enonc\u00e9 Solution \u00c9crire une fonction recherche qui prend en param\u00e8tres elt un nombre et tab un tableau de nombres, et qui renvoie le tableau des indices de elt dans tab si elt est dans tab et le tableau vide [] sinon. Exemples : >>> recherche ( 3 , [ 3 , 2 , 1 , 3 , 2 , 1 ]) [ 0 , 3 ] >>> recherche ( 4 , [ 1 , 2 , 3 ]) [] def recherche ( elt , tab ): reponse = [] for indice in range ( len ( tab )): if elt == tab [ indice ]: reponse . append ( indice ) return reponse recherche ( 3 , [ 3 , 2 , 1 , 3 , 2 , 1 ]) recherche ( 4 , [ 1 , 2 , 3 ]) Exercice 9.3 : Enonc\u00e9 Solution On a relev\u00e9 les valeurs moyennes annuelles des temp\u00e9ratures \u00e0 Paris pour la p\u00e9riode allant de 2013 \u00e0 2019. Les r\u00e9sultats ont \u00e9t\u00e9 r\u00e9cup\u00e9r\u00e9s sous la forme de deux listes : l\u2019une pour les temp\u00e9ratures, t_moy = [14.9, 13.3, 13.1, 12.5, 13.0, 13.6, 13.7] l\u2019autre pour les ann\u00e9es : annees = [2013, 2014, 2015, 2016, 2017, 2018, 2019] \u00c9crire la fonction mini qui prend en param\u00e8tres le tableau releve des relev\u00e9s et le tableau date des dates et qui renvoie la plus petite valeur relev\u00e9e au cours de la p\u00e9riode et l\u2019ann\u00e9e correspondante. Exemple : >>> mini ( t_moy , annees ) 12.5 , 2016 def mini ( t1 , t2 ): minimum = t1 [ 0 ] indicemini = 0 for indice in range ( len ( t1 )): if t1 [ indice ] < minimum : minimum = t1 [ indice ] indicemini = indice return minimum , t2 [ indicemini ] t_moy = [ 14.9 , 13.3 , 13.1 , 12.5 , 13.0 , 13.6 , 13.7 ] annees = [ 2013 , 2014 , 2015 , 2016 , 2017 , 2018 , 2019 ] mini ( t_moy , annees ) (12.5, 2016) Exercice 9.4 : Enonc\u00e9 Solution \u00c9crire une fonction maxi qui prend en param\u00e8tre une liste tab de nombres entiers et renvoie un couple donnant le plus grand \u00e9l\u00e9ment de cette liste, ainsi que l\u2019indice de la premi\u00e8re apparition de ce maximum dans la liste. Exemple : >>> maxi ([ 1 , 5 , 6 , 9 , 1 , 2 , 3 , 7 , 9 , 8 ]) ( 9 , 3 ) def maxi ( tab ): maximum = tab [ 0 ] indicemaxi = 0 for indice in range ( len ( tab )): if tab [ indice ] > maximum : maximum = tab [ indice ] indicemaxi = indice return ( maximum , indicemaxi ) maxi ([ 1 , 5 , 6 , 9 , 1 , 2 , 3 , 7 , 9 , 8 ]) ( 9 , 3 ) Exercice 9.5 : Enonc\u00e9 Solution Version 1 Solution Version 2 \u00c9crire une fonction RechercheMinMax qui prend en param\u00e8tre un tableau de nombres non tri\u00e9s tab, et qui renvoie la plus petite et la plus grande valeur du tableau sous la forme d\u2019un dictionnaire \u00e0 deux cl\u00e9s \u2018min\u2019 et \u2018max\u2019. Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python. Exemples : >>> tableau = [ 0 , 1 , 4 , 2 , - 2 , 9 , 3 , 1 , 7 , 1 ] >>> resultat = rechercheMinMax ( tableau ) >>> resultat [ - 2 , 9 ] >>> tableau = [] >>> resultat = rechercheMinMax ( tableau ) >>> resultat [ None , None ] def RechercheMinMax ( tab ): if len ( tab ) == 0 : return [ None , None ] else : minimum = tab [ 0 ] maximum = tab [ 0 ] for elt in tab : if elt > maximum : maximum = elt if elt < minimum : minimum = elt return [ minimum , maximum ] tableau = [ 0 , 1 , 4 , 2 , - 2 , 9 , 3 , 1 , 7 , 1 ] RechercheMinMax ( tableau ) [ - 2 , 9 ] def maxi ( tab ): if len ( tab ) == 0 : return None else : maximum = tab [ 0 ] for elt in tab : if elt > maximum : maximum = elt return maximum def mini ( tab ): if len ( tab ) == 0 : return None else : minimum = tab [ 0 ] for elt in tab : if elt < minimum : minimum = elt return minimum def rechercheMinMaxbis ( tab ): return [ mini ( tab ), maxi ( tab )] tableau = [ 0 , 1 , 4 , 2 , - 2 , 9 , 3 , 1 , 7 , 1 ] RechercheMinMax ( tableau ) [ - 2 , 9 ] Exercice 9.6 : Enonc\u00e9 Solution \u00c9crire une fonction RechercheMin qui prend en param\u00e8tre un tableau de nombres non tri\u00e9 tab, et qui renvoie le minimum et l'indice de la premi\u00e8re occurrence du minimum de ce tableau. Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python. Exemples : >>> indice_du_min ([ 5 ]) ( 5 , 0 ) >>> indice_du_min ([ 2 , 4 , 1 ]) ( 1 , 2 ) >>> indice_du_min ([ 5 , 3 , 2 , 2 , 4 ]) ( 2 , 2 ) def RechercheMin ( tab ): if len ( tab ) == 0 : return None else : minimum = tab [ 0 ] indicemini = 0 for indice in range ( len ( tab )): if tab [ indice ] < minimum : minimum = tab [ indice ] indicemini = indice return ( minimum , indicemini ) RechercheMin ([ 2 , 4 , 1 ]) ( 1 , 2 ) Exercice 9.7 : Enonc\u00e9 Solution \u00c9crire une fonction occurrence_max prenant en param\u00e8tres une cha\u00eene de caract\u00e8res chaine et qui renvoie le caract\u00e8re le plus fr\u00e9quent de la cha\u00eene. La chaine ne contient que des lettres en minuscules sans accent. On pourra s\u2019aider du tableau alphabet = [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' , 'g' , 'h' , 'i' , 'j' , 'k' , 'l' , 'm' , 'n' , 'o,' , 'p' , 'q' , 'r' , 's' , 't' , 'u' , 'v' , 'w' , 'x' , 'y' , 'z' ] et du tableau occurrence de 26 \u00e9l\u00e9ments o\u00f9 l\u2019on mettra dans occurrence[i] le nombre d\u2019apparitions de alphabet[i] dans la chaine. Puis on calculera l\u2019indice k d\u2019un maximum du tableau occurrence et on affichera alphabet[k]. Exemple : >>> ch = 'je suis en terminale et je passe le bac et je souhaite poursuivre des etudes pour devenir expert en informatique\u2019 >>> occurrence_max ( ch ) \u2018 e \u2019 def occurrence_max ( ch ): alphabet = [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' , 'g' , 'h' , 'i' , 'j' , 'k' , 'l' , 'm' , 'n' , 'o,' , 'p' , 'q' , 'r' , 's' , 't' , 'u' , 'v' , 'w' , 'x' , 'y' , 'z' ] lettremax = '' maxi = 0 for lettre in alphabet : compteur = 0 for caract in ch : if lettre == caract : compteur += 1 if compteur > maxi : maxi = compteur lettremax = lettre return lettremax , maxi ch = 'je suis en terminale et je passe le bac et je souhaite poursuivre des etudes pour devenir expert en informatique' occurrence_max ( ch ) ( 'e' , 21 )","title":"TP 09 - Parcours s\u00e9quentiel d'un tableau"},{"location":"Tableaux/TD10_Parcours_Sequentiel_Tableaux_Corrige/","text":"TD n\u00b010 : Parcours s\u00e9quentiel d'un tableau bis Th\u00e8me 4 : Langages et Programmation EXERCICES TYPE EPREUVE PRATIQUE en Terminale EXERCICES Lien Capytale Exercice n\u00b01 : Tableaux et extremums - plus grand \u00e9cart \u2693\ufe0e Exercice n\u00b01 : Enonc\u00e9 Solution On appelle ici plus grand \u00e9cart d'un tableau de nombres, la plus grande diff\u00e9rence que l'on peut trouver entre deux valeurs pas forc\u00e9ment cons\u00e9cutives . Par exemple avec ce tableau : [ 7 , 4 , 3 , 6 , - 2 , 4 , 3 , 1 , 8 ] le plus grand \u00e9cart est 10 qui correspond \u00e0 la diff\u00e9rence entre -2 et 8. Et avec ce tableau : [ 7 , 4 , 3 , 16 , 8 , 4 , 3 , 1 , - 3 , - 7 , - 20 , 5 , 7 ] le plus grand \u00e9cart est 36 qui correspond \u00e0 l'\u00e9cart entre -20 et 16. Cr\u00e9er la fonction plus_grand_ecart ci-dessous qui prend en param\u00e8tre un tableau de nombres non vide tab et renvoie le plus grand \u00e9cart de ce tableau. def maxi ( tab ): if len ( tab ) == 0 : return None else : maximum = tab [ 0 ] for elt in tab : if elt > maximum : maximum = elt return maximum def mini ( tab ): if len ( tab ) == 0 : return None else : minimum = tab [ 0 ] for elt in tab : if elt < minimum : minimum = elt return minimum def plus_grand_ecart ( tab ): return maxi ( tab ) - mini ( tab ) Tester votre fonction en utilisant le jeu de tests ci-dessous. assert plus_grand_ecart ([ 7 , 4 , 3 , 6 , - 2 , 4 , 3 , 1 , 8 ]) == 10 assert plus_grand_ecart ([ 7 , 4 , 3 , 16 , 8 , 4 , 3 , 1 , - 3 , - 7 , - 20 , 5 , 7 ]) == 36 assert plus_grand_ecart ([ 6 , 6 , 6 , 6 , 6 ]) == 0 assert plus_grand_ecart ([ 7 ]) == 0 Exercice n\u00b02 : Tableaux et extremums : plus grande puissance \u2693\ufe0e Exxercice n\u00b02 : Enonc\u00e9 Solution : On dispose de tableaux de taille paire dont les valeurs correspondent \u00e0 des mesures effectu\u00e9es aux bornes d'une r\u00e9sistance. Plus pr\u00e9cis\u00e9ment : les valeurs d'indices pairs correspondent \u00e0 la tension U , les valeurs d'indices impairs correspondent \u00e0 l'intensit\u00e9 I . Par exemple avec ce tableau de six valeurs : [ 19 , 6 , 23 , 5 , 20 , 4 ] on dispose de trois mesures : la premi\u00e8re avec une tension de 19 V et une intensit\u00e9 de 6 A (soit une puissance de 19 * 6 = 114 Watts), la seconde avec une tension de 23 V et une intensit\u00e9 de 5 A (soit une puissance de 23 * 5 = 115 Watts), la troisi\u00e8me avec une tension de 20 V et une intensit\u00e9 de 4 A (soit une puissance de 20 * 4 = 80 Watts). On cherche \u00e0 d\u00e9terminer la puissance maximale pr\u00e9sente dans les tableaux de mesures, c'est \u00e0 dire la plus grande valeur tab[i] * tab[i+1] avec l'indice i pair. Compl\u00e9ter la fonction plus_grand_produit ci-dessous qui : prend en param\u00e8tre un tableau de nombres mesures de taille paire non nulle, qui renvoie le plus grand produit de la forme mesures[i] * mesures[i+1] avec l'indice i pair. def plus_grand_produit ( mesures ): pmax = mesures [ ... ] * mesures [ ... ] for i in range ( ... , ... , ... ) : if ... * ... > ... : pmax = ... * ... return ... plus_grand_produit ([ 7 , 4 , 6 , 5 , 7 , 5 , 6 , 4 , 5 , 5 ]) def plus_grand_produit ( mesures ): pmax = mesures [ 0 ] * mesures [ 1 ] for i in range ( 0 , len ( mesures ), 2 ) : if mesures [ i ] * mesures [ i + 1 ] > pmax : pmax = mesures [ i ] * mesures [ i + 1 ] return pmax plus_grand_produit ([ 7 , 4 , 6 , 5 , 7 , 5 , 6 , 4 , 5 , 5 ]) 35 Tester votre fonction en utilisant le jeu de tests ci-dessous. assert plus_grand_produit ([ 7 , 4 , 6 , 5 , 7 , 5 , 6 , 4 , 5 , 5 ]) == 35 assert plus_grand_produit ([ 10 , 3 , 9 , 3 , 10 , 4 , 9 , 5 , 8 , 5 ]) == 45 assert plus_grand_produit ([ 6 , 8 , 6 , 8 , 12 , 5 ]) == 60 assert plus_grand_produit ([ 8 , 8 , 6 , 8 , 12 , 5 ]) == 64 assert plus_grand_produit ([ 2 , 1 ]) == 2 Exercice n\u00b03 : tableaux d\u00e9finis en compr\u00e9hension : bonus sur les notes \u2693\ufe0e Exercice n\u00b03 : Enonc\u00e9 Solution On dispose d'un tableau de notes comprises entre 0 et 20 et on souhaite augmenter les notes de tout le monde de deux points (en ne d\u00e9passant pas 20). Compl\u00e9ter la fonction bonus ci-dessous qui prend en param\u00e8tre tab un tableau de notes et renvoie un nouveau tableau nv_tab dont les \u00e9l\u00e9ments sont les notes augment\u00e9es de 2 points (sans toutefois d\u00e9passer 20).* def bonus ( tab ): nv_tab = [] return nv_tab def bonus ( tab ): nv_tab = [] for note in tab : if note < 18 : nv_tab . append ( note + 2 ) else : nv_tab . append ( 20 ) return nv_tab t = [ 12 , 8 , 5 , 18 , 19 , 20 , 14 , 12 , 11 , 9 ] bonus ( t ) [14, 10, 7, 20, 20, 20, 16, 14, 13, 11] Exercice n\u00b04 : tableaux et accumulation : produit des valeurs \u2693\ufe0e Exercice n\u00b04 : Enonc\u00e9 Solution Il s'agit ici de faire le produit (la multiplication) de tous les nombres pr\u00e9sents dans le tableau. Compl\u00e9ter la fonction produit ci-dessous qui prend en param\u00e8tre un tableau tab et renvoie le produit de tous les nombres pr\u00e9sents dans le tableau tab . Par convention, si le tableau est vide on consid\u00e9rera que le produit est \u00e9gal \u00e0 1. On r\u00e9fl\u00e9chira \u00e0 la valeur initiale de la variable produit . def produit ( tab ): pass def produit ( tab ): produit = 1 for elt in tab : produit *= elt return produit Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous. tab = [ 2 , 3 , 2 ] assert produit ( tab ) == 12 tab = [ 1 , 2 , 3 , 4 , 5 , 6 ] assert produit ( tab ) == 720 tab = [ 1 , 1 , 1 , 1 , 1 , 1 ] assert produit ( tab ) == 1 tab = [ 1 , 14 , 32 , 0 , 15 , 6 ] assert produit ( tab ) == 0 tab = [] assert produit ( tab ) == 1 tab = [ 7 ] assert produit ( tab ) == 7 tab = [ 12 , 11 , 3 , 21 , 5 , 41 , 4 , 6 , 4 , 7 ] assert produit ( tab ) == 1145612160 Exercice n\u00b05 : tableaux et accumulation : compter les sauts en hauteur \u2693\ufe0e Exercice n\u00b05 Enonc\u00e9 Solution On dit que dans un tableau de nombres, il y a un \u00absaut en hauteur\u00bb lorsqu'une valeur est sup\u00e9rieure \u00e0 la valeur pr\u00e9c\u00e9dente. Par exemple dans le tableau suivant : [ 7 , 4 , 3 , 6 , 7 , 4 , 3 , 1 , 8 , 8 ] il y a trois sauts en hauteur : entre les indices 2 et 3 (pour passer de la valeur 3 \u00e0 la valeur 6), entre les indices 3 et 4 (pour passer de la valeur 6 \u00e0 la valeur 7), et entre les indices 7 et 8 (pour passer de la valeur 1 \u00e0 la valeur 8). Plus formellement, dans un tableau tab de taille n on dit qu'il y a un saut en hauteur \u00e0 l'indice i lorsque tab[i] < tab[i+1] . Voici le sch\u00e9ma d'un tableau tab de taille n : --------------------------------------------- | indices | 0 | 1 | 2 | 3 | ... | n-2 | n-1 | --------------------------------------------- | valeurs | . | . | . | . | ... | . | . | --------------------------------------------- Le plus grand indice possible est donc n-1 . Pour avoir le droit d'\u00e9crire tab[i] < tab[i+1] avec un tableau tab de taille n , quelle est alors la plus grande valeur de i possible : n-2 , n-1 , n ou n+1 ? Compl\u00e9ter la fonction compter_sauts_en_hauteur ci-dessous qui prend en param\u00e8tre un tableau tab de nombres et renvoie le nombre de sauts en hauteur pr\u00e9sents dans le tableau tab . Le parcours de tab sera fait par indice. def compter_sauts_en_hauteur ( tab ): compteur = 0 for i in range ( ... ): if ... : ... = ... + ... return ... def compter_sauts_en_hauteur ( tab ): compteur = 0 for i in range ( len ( tab ) - 1 ): if tab [ i ] < tab [ i + 1 ] : compteur = compteur + 1 return compteur Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous. tab = [ 7 , 4 , 3 , 6 , 7 , 4 , 3 , 1 , 8 ] assert compter_sauts_en_hauteur ( tab ) == 3 tab = [ 7 , 4 , 3 , 6 , 7 , 4 , 3 , 1 , 8 , 2 , 5 , 6 , 5 , 8 , 1 , 9 , 0 , 1 , 5 , 6 , 3 , 7 , 8 , 3 , 3 , 4 , 5 , 5 , 2 ] assert compter_sauts_en_hauteur ( tab ) == 14 tab = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] assert compter_sauts_en_hauteur ( tab ) == 8 tab = [] assert compter_sauts_en_hauteur ( tab ) == 0 tab = [ 1 ] assert compter_sauts_en_hauteur ( tab ) == 0 tab = [ 7 , 7 , 7 , 7 ] assert compter_sauts_en_hauteur ( tab ) == 0 Exercice n\u00b06 : tableaux et accumulation : compter les diff\u00e9rences \u2693\ufe0e Exercice n\u00b06 : Enonc\u00e9 Solution On dispose ici de deux tableaux de m\u00eame longueur. Il s'agit de calculer le nombre de diff\u00e9rences entre les deux tableaux. Par exemple avec : tab_1 = [ 'a' , 'g' , 'u' , 'u' , 'c' , 'o' , 'p' , 'l' , 'm' , 'v' , 'p' ] tab_2 = [ 'a' , 'g' , 's' , 'u' , 'c' , 'k' , 'p' , 'l' , 't' , 'v' , 'p' ] il y a trois diff\u00e9rences entre les deux tableaux : aux indices 2, 5 et 8 . Compl\u00e9ter la fonction compter_differences ci-dessous qui prend en param\u00e8tre deux tableaux tab_1 et tab_2 de m\u00eame longueur et renvoie le nombre de diff\u00e9rences entre les deux tableaux. def compter_differences ( tab_1 , tab_2 ): compteur = ... for ... in range ( ... ) : if ... != ... : compteur = ... + ... return ... def compter_differences ( tab_1 , tab_2 ): compteur = 0 for i in range ( len ( tab_1 )) : if tab_1 [ i ] != tab_2 [ i ]: compteur = compteur + 1 return compteur Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous. tab_1 = [ 'a' , 'g' , 'u' , 'u' , 'c' , 'o' , 'p' , 'l' , 'm' , 'v' , 'p' ] tab_2 = [ 'a' , 'g' , 's' , 'u' , 'c' , 'k' , 'p' , 'l' , 't' , 'v' , 'p' ] assert compter_differences ( tab_1 , tab_2 ) == 3 tab_1 = [ 'a' , 'g' , 'u' , 'u' , 'c' , 'o' , 'p' , 'l' , 'm' , 'v' , 'p' ] tab_2 = [ 'a' , 'g' , 'u' , 'u' , 'c' , 'o' , 'p' , 'l' , 'm' , 'v' , 'p' ] assert compter_differences ( tab_1 , tab_2 ) == 0 tab_1 = [ 'a' , 'g' , 'u' , 'u' , 'c' , 'o' , 'p' , 'l' , 'm' , 'v' , 'p' ] tab_2 = [ 'g' , 'u' , 'u' , 'c' , 'o' , 'p' , 'l' , 'm' , 'v' , 'p' , 'a' ] assert compter_differences ( tab_1 , tab_2 ) == 10 tab_1 = [ 'a' ] tab_2 = [ 'b' ] assert compter_differences ( tab_1 , tab_2 ) == 1 tab_1 = [] tab_2 = [] assert compter_differences ( tab_1 , tab_2 ) == 0 Exercice n\u00b07 : tableaux : frais de gestion \u2693\ufe0e Exercice n\u00b07 : Enonc\u00e9 Solution Un site de petites annonces prend des frais sur les mises en vente. Si le prix net vendeur est inf\u00e9rieur ou \u00e9gal \u00e0 15 euros, l'acheteur doit payer 0,50 euro de frais de gestion en plus. si le prix net vendeur est strictement sup\u00e9rieur \u00e0 15 euros, l'acheteur doit payer 1 euro de frais de gestion en plus. Compl\u00e9ter la fonction prix_acheteurs ci-dessous qui prend en param\u00e8tre un tableau pnv de prix nets vendeur et renvoie un nouveau tableau correspondant aux prix pay\u00e9s par les acheteurs. def prix_acheteurs ( pnv ): pass def prix_acheteurs ( pnv ): t = [] for elt in pnv : if elt <= 15 : t . append ( elt + 0.5 ) else : t . append ( elt + 1 ) return t Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous. assert prix_acheteurs ([ 14 , 11 , 19.99 , 13.99 , 7.50 , 2 , 19 , 35.50 ]) == [ 14.5 , 11.5 , 20.99 , 14.49 , 8.0 , 2.5 , 20 , 36.5 ] assert prix_acheteurs ([ 30 , 110 , 230 , 350 , 210 ]) == [ 31 , 111 , 231 , 351 , 211 ] assert prix_acheteurs ([ 3 , 6 , 1 , 7 , 9 ]) == [ 3.5 , 6.5 , 1.5 , 7.5 , 9.5 ] assert prix_acheteurs ([]) == [] assert prix_acheteurs ([ 15 ]) == [ 15.5 ] Exercice n\u00b08 : Tableaux et extremums : solde maximal \u2693\ufe0e Exercice n\u00b08 : Enonc\u00e9 Solution On dispose d'un montant m de d\u00e9part (par exemple m = 17 ) et d'un tableau op donnant les op\u00e9rations bancaires successives r\u00e9alis\u00e9es sur un compte en banque, par exemple : op = [ 150 , - 40 , 18 , - 132 , - 7 , - 1 , 29 , 105 ] qui correspond \u00e0 un d\u00e9p\u00f4t de 150 \u20ac puis \u00e0 une d\u00e9pense de 40 \u20ac puis \u00e0 un d\u00e9p\u00f4t de 18 \u20ac puis \u00e0 trois d\u00e9penses de 132 \u20ac, 7 \u20ac et 1\u20ac puis \u00e0 deux d\u00e9p\u00f4ts de 29 \u20ac et 105 \u20ac. Avec l'exemple pr\u00e9c\u00e9dent les soldes (le \u00absolde\u00bb d'un compte bancaire est le montant pr\u00e9sent sur le compte) successifs sont : 17 --> 167 --> 127 --> 145 --> 13 --> 6 --> 5 --> 34 --> 139 Ce qui correspond au tableau tab_soldes suivant : [ 17 , 167 , 127 , 145 , 13 , 6 , 5 , 34 , 139 ] On cherche, \u00e0 partir de m et op \u00e0 obtenir le solde maximal pr\u00e9sent sur le compte (sur cet exemple 167 euros). Compl\u00e9ter la fonction solde_maximal ci-dessous qui prend en param\u00e8tres un montant m de d\u00e9part ainsi qu'un tableau op donnant les op\u00e9rations bancaires successives et qui renvoie solde maximal pr\u00e9sent sur le compte. Remarque : Ici on proc\u00e8de comme pour un calcul de somme. On calcule le solde final du compte (variable solde ) en v\u00e9rifiant au passage si on d\u00e9passe la maximum en m\u00e9moire. solde = m ---> Max = m solde = solde + op [ 0 ] ---> sup\u00e9rieur au Max en m\u00e9moire ? si oui ... solde = solde + op [ 1 ] ---> sup\u00e9rieur au Max en m\u00e9moire ? si oui ... solde = solde + op [ 2 ] ---> sup\u00e9rieur au Max en m\u00e9moire ? si oui ... solde = solde + op [ 3 ] ---> sup\u00e9rieur au Max en m\u00e9moire ? si oui ... solde = solde + op [ 4 ] ---> sup\u00e9rieur au Max en m\u00e9moire ? si oui ... ... def solde_maximal ( m , op ): solde = m solde_max = m for operation in op : ... = ... + ... if ... > ... : ... = ... return solde_max def solde_maximal ( m , op ): solde = m solde_max = m for operation in op : solde = solde + operation if solde > solde_max : solde_max = solde return solde_max Tester votre fonction en utilisant le jeu de tests ci-dessous. assert solde_maximal ( 17 , [ 150 , - 40 , 18 , - 132 , - 7 , - 1 , 29 , 105 ]) == 167 assert solde_maximal ( 1875 , [ 150 , - 140 , 148 , - 12 , - 75 , - 778 , 290 , - 105 ]) == 2033 assert solde_maximal ( 19 , [ 150 , - 140 , 148 , - 105 , 150 , - 140 , 148 , - 12 , - 75 , 778 , - 290 , - 105 , - 12 , - 75 , - 278 , 290 ]) == 921 assert solde_maximal ( 777 , []) == 777","title":"TP 10 - Parcours s\u00e9quentiel d'un tableau bis"},{"location":"Tableaux/TD11_Parcours_Sequentiel_Tableaux_Ter/","text":"TD n\u00b011 : Parcours s\u00e9quentiel d'un tableau ter Th\u00e8me 4 : Langages et Programmation EXERCICES TYPE EPREUVE PRATIQUE en Terminale EXERCICES Exercice n\u00b01 : Enonc\u00e9 Solution Compl\u00e9ter la fonction prem_match ci-dessous qui prend en param\u00e8tres deux tableaux tab_a et tab_b de m\u00eame longueur et qui : renvoie le plus petit indice i pour lequel tab_a[i] == tab_b[i] si cet indice existe, renvoie -1 sinon. def match ( tab_a , tab_b ): pass def match ( tab_a , tab_b ): for i in range ( len ( tab_a )): if tab_a [ i ] == tab_b [ i ] : return i return - 1 Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous. assert match ([ 77 , 5 , 8 , 9 , 3 , 9 ], [ 77 , 1 , 9 , 8 , 5 , 6 ]) == 0 assert match ([ 1 , 77 , 8 , 9 , 3 , 9 ], [ 2 , 77 , 9 , 8 , 5 , 6 ]) == 1 assert match ([ 3 , 9 , 7 , 2 , 5 , 4 ], [ 33 , 99 , 77 , 2 , 5 , 4 ]) == 3 assert match ([ 3 , 9 , 7 , 2 , 5 , 4 ], [ 33 , 99 , 77 , 22 , 55 , 4 ]) == 5 assert match ([ 1 , 5 , 8 , 9 , 3 , 9 , 7 , 12 , 5 , 4 ], [ 5 , 1 , 9 , 8 , 5 , 6 , 3 , 2 , 1 , 4 ]) == 9 assert match ([ 6 , 7 , 8 , 9 ], [ 1 , 2 , 3 , 4 ]) == - 1 assert match ([], []) == - 1 Exercice n\u00b02 : Tableaux et extremums : plus grand d\u00e9nivel\u00e9 Enonc\u00e9 Solution En randonn\u00e9e cycliste, p\u00e9destre ou \u00e0 skis, on diff\u00e9rencie les d\u00e9nivel\u00e9s positif et n\u00e9gatif . Ici nous ne ferons pas la diff\u00e9rence. Par exemple avec ce tableau : [ 7 , 4 , 3 , 6 , 7 , 4 , 3 , 1 , 8 ] on rencontre huit d\u00e9nivel\u00e9s lors de son parcours -3, -1, 3, 1, -3, -1, -2, 7. Plus formellement, dans un tableau tab de taille n le d\u00e9nivel\u00e9 \u00e0 l'indice i est \u00e9gal \u00e0 tab[i+1] - tab[i] (\u00e0 condition que l'indice i+1 existe). Voici le sch\u00e9ma d'un tableau tab de taille n : --------------------------------------------- | indices | 0 | 1 | 2 | 3 | ... | n-2 | n-1 | --------------------------------------------- | valeurs | . | . | . | . | ... | . | . | --------------------------------------------- Le plus grand indice possible est donc n-1 . Pour avoir le droit d'\u00e9crire tab[i+1] - tab[i] avec un tableau tab de taille n , quelle est alors la plus grande valeur de i possible : n-2 , n-1 , n ou n+1 ? Compl\u00e9ter la fonction plus_grand_denivele ci-dessous qui prend en param\u00e8tre un tableau tab de plus de deux nombres et renvoie le plus grand d\u00e9nivel\u00e9 qui existe dans ce tableau. def plus_grand_denivele ( tab ): pass Tester votre fonction en utilisant le jeu de tests ci-dessous. assert plus_grand_denivele ([ 2 , 5 , 8 , 3 , - 2 , 13 , 17 , 18 , 16 , 13 , 11 , 5 ]) == 15 assert plus_grand_denivele ([ 17 , 18 , 16 , 13 , 11 , 5 , 2 , - 1 , - 14 , - 15 ]) == 1 assert plus_grand_denivele ([ 22 , 16 , 13 , 11 , 5 , 2 , - 1 , - 14 , - 19 ]) == - 2 assert plus_grand_denivele ([ 22 , 28 ]) == 6 Compl\u00e9ter la fonction plus_petit_denivele ci-dessous qui prend en param\u00e8tre un tableau tab de plus de deux nombres et renvoie le plus petit d\u00e9nivel\u00e9 qui existe dans ce tableau. def plus_petit_denivele ( tab ): assert len ( tab ) >= 2 , \"Le tableau doit contenir au moins deux valeurs.\" pass Tester votre fonction modifi\u00e9e en utilisant le jeu de tests ci-dessous. assert plus_petit_denivele ([ 2 , 5 , 8 , 3 , - 2 , 13 , 17 , 18 , 16 , 13 , 11 , 5 ]) == - 6 assert plus_petit_denivele ([ 17 , 18 , 16 , 13 , 11 , 5 , 2 , - 1 , - 14 , - 15 ]) == - 13 assert plus_petit_denivele ([ 5 , 28 , 54 , 103 , 187 , 218 ]) == 23 assert plus_petit_denivele ([ 22 , 28 ]) == 6 def plus_grand_denivele ( tab ): denivele_max = tab [ 1 ] - tab [ 0 ] for i in range ( 1 , len ( tab ) - 1 ) : if tab [ i + 1 ] - tab [ i ] > denivele_max : denivele_max = tab [ i + 1 ] - tab [ i ] return denivele_max def plus_petit_denivele ( tab ): assert len ( tab ) >= 2 , \"Le tableau doit contenir au moins deux valeurs.\" denivele_min = tab [ 1 ] - tab [ 0 ] for i in range ( 1 , len ( tab ) - 1 ) : if tab [ i + 1 ] - tab [ i ] < denivele_min : denivele_min = tab [ i + 1 ] - tab [ i ] return denivele_min Exercice n\u00b03 : tableaux et accumulation : d\u00e9nivel\u00e9s Enonc\u00e9 Solution En randonn\u00e9e cycliste, p\u00e9destre ou \u00e0 skis, on diff\u00e9rencie les d\u00e9nivel\u00e9s positif et n\u00e9gatif cumul\u00e9s : - le d\u00e9nivel\u00e9 positif cumul\u00e9 correspond au \u00abnombre de m\u00e8tres en hauteur\u00bb qui ont \u00e9t\u00e9 mont\u00e9s du d\u00e9but \u00e0 la fin du parcours, - le d\u00e9nivel\u00e9 n\u00e9gatif cumul\u00e9 correspond au \u00abnombre de m\u00e8tres en hauteur\u00bb qui ont \u00e9t\u00e9 descendus du d\u00e9but \u00e0 la fin du parcours. On peut faire la m\u00eame chose avec un tableau de nombres. Par exemple avec ce tableau : [ 7 , 4 , 3 , 6 , 7 , 4 , 3 , 1 , 8 ] on rencontre trois d\u00e9nivel\u00e9s positifs lors de son parcours : - +3 pour passer de la valeur 3 \u00e0 la valeur 6, - +1 pour passer de la valeur 6 \u00e0 la valeur 7, - +7 pour passer de la valeur 1 \u00e0 la valeur 8; soit un d\u00e9nivel\u00e9 positif cumul\u00e9 de +11. Et le d\u00e9nivel\u00e9 n\u00e9gatif cumul\u00e9 vaut quant \u00e0 lui : -3-1-3-1-2 = -10. Plus formellement, dans un tableau tab de taille n le d\u00e9nivel\u00e9 \u00e0 l'indice i est \u00e9gal \u00e0 tab[i+1] - tab[i] (\u00e0 condition que l'indice i+1 existe). Remarque : on consid\u00e9rera que dans un tableau vide ou de taille 1, le d\u00e9nivel\u00e9 cumul\u00e9 est \u00e9gal \u00e0 z\u00e9ro. Voici le sch\u00e9ma d'un tableau tab de taille n : --------------------------------------------- | indices | 0 | 1 | 2 | 3 | ... | n-2 | n-1 | --------------------------------------------- | valeurs | . | . | . | . | ... | . | . | --------------------------------------------- Le plus grand indice possible est donc n-1 . Pour avoir le droit d'\u00e9crire tab[i+1] - tab[i] avec un tableau tab de taille n , quelle est alors la plus grande valeur de i possible : n-2 , n-1 , n ou n+1 ? Compl\u00e9ter la fonction compter_deniveles ci-dessous qui prend en param\u00e8tre un tableau tab de nombres et renvoie un 2-uplet des d\u00e9nivel\u00e9s positif cumul\u00e9 et n\u00e9gatif cumul\u00e9. Le parcours de tab sera fait par indice. def compter_deniveles ( tab ): cumul_plus = ... cumul_moins = ... pass Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous. tab = [ 1 , 2 , 3 , 4 , 5 ] assert compter_deniveles ( tab ) == ( 4 , 0 ) tab = [ 5 , 4 , 3 , 2 , 1 ] assert compter_deniveles ( tab ) == ( 0 , - 4 ) tab = [ 0 , 10 , 0 , 10 ] assert compter_deniveles ( tab ) == ( 20 , - 10 ) tab = [ 0 , 10 , 0 , 10 , 10 , 10 , 10 , 0 ] assert compter_deniveles ( tab ) == ( 20 , - 20 ) tab = [ 3 , 7 , 8 , 9 , 1 , 0 , 7 , 8 , 9 , 3 , 7 , 8 , 9 , 4 , 6 , 1 , 0 , 0 , 9 , 5 , 7 , 34 , 4 , 5 , 6 , 7 , 8 , 9 ] assert compter_deniveles ( tab ) == ( 66 , - 60 ) tab = [] assert compter_deniveles ( tab ) == ( 0 , 0 ) tab = [ 5 ] assert compter_deniveles ( tab ) == ( 0 , 0 ) def compter_deniveles ( tab ): cumul_plus = 0 cumul_moins = 0 for i in range ( len ( tab ) - 1 ): denivele = tab [ i + 1 ] - tab [ i ] if denivele > 0 : cumul_plus = cumul_plus + denivele else : cumul_moins = cumul_moins + denivele return cumul_plus , cumul_moins Exercice n\u00b04 : tableaux et accumulation : moyenne coefficient\u00e9e Enonc\u00e9 Solution On dispose ici de deux tableaux de m\u00eame longueur : un tableau de notes (sur 20) et un tableau de coefficients. Il s'agit de calculer la moyenne coefficient\u00e9e correspondante. Par exemple avec : notes = [ 12 , 15 , 14 , 18 ] coeffs = [ 1 , 2 , 1 , 4 ] la moyenne sera calcul\u00e9e ainsi : ( 12 * 1 + 15 * 2 + 14 * 1 + 18 * 4 ) / ( 1 + 2 + 1 + 4 ) Dans la fonction ci-dessous on appelle num (pour num \u00e9rateur) ce qui correspond \u00e0 (12*1 + 15*2 + 14*1 + 18*4) et denom (pour d\u00e9nom inateur) ce qui correspond \u00e0 (1 + 2 + 1 + 4) . Compl\u00e9ter la fonction moyenne_coefficientee ci-dessous qui prend en param\u00e8tre deux tableaux non vides notes et coeffs et renvoie la moyenne coefficient\u00e9e correspondante. def moyenne_coefficientee ( notes , coeffs ): pass Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous. notes = [ 10 , 10 , 20 ] coeffs = [ 1 , 3 , 1 ] assert moyenne_coefficientee ( notes , coeffs ) == 12.0 notes = [ 15 , 17 , 13 , 19 , 15 , 11 ] coeffs = [ 2 , 3 , 5 , 5 , 3 , 8 ] assert moyenne_coefficientee ( notes , coeffs ) == 14.384615384615385 notes = [ 8 , 8 , 8 , 8 , 12 ] coeffs = [ 1 , 1 , 1 , 1 , 4 ] assert moyenne_coefficientee ( notes , coeffs ) == 10.0 def moyenne_coefficientee ( notes , coeffs ): num = 0 denom = 0 for i in range ( len ( notes )) : num = num + coeffs [ i ] * notes [ i ] denom = denom + coeffs [ i ] moyenne = num / denom return moyenne Exercice n\u00b05 : tableaux et accumulation : produit des valeurs Enonc\u00e9 Solution Il s'agit ici de faire le produit (la multiplication) de tous les nombres pr\u00e9sents dans le tableau. Compl\u00e9ter la fonction produit ci-dessous qui prend en param\u00e8tre un tableau tab et renvoie le produit de tous les nombres pr\u00e9sents dans le tableau tab . Par convention, si le tableau est vide on consid\u00e9rera que le produit est \u00e9gal \u00e0 1. On r\u00e9fl\u00e9chira \u00e0 la valeur initiale de la variable produit . def produit ( tab ): pass Tester votre fonction gr\u00e2ce au jeu de tests ci-dessous. tab = [ 2 , 3 , 2 ] assert produit ( tab ) == 12 tab = [ 1 , 2 , 3 , 4 , 5 , 6 ] assert produit ( tab ) == 720 tab = [ 1 , 1 , 1 , 1 , 1 , 1 ] assert produit ( tab ) == 1 tab = [ 1 , 14 , 32 , 0 , 15 , 6 ] assert produit ( tab ) == 0 tab = [] assert produit ( tab ) == 1 tab = [ 7 ] assert produit ( tab ) == 7 tab = [ 12 , 11 , 3 , 21 , 5 , 41 , 4 , 6 , 4 , 7 ] assert produit ( tab ) == 1145612160 def produit ( tab ): prod = 1 for elt in tab : prod = prod * elt return prod Exercice n\u00b06 : Enonc\u00e9 Solution \u00c9crire une fonction Python smul \u00e0 deux param\u00e8tres, un nombre et une liste de nombres, qui multiplie chaque \u00e9l\u00e9ment de la liste par le nombre et renvoie une nouvelle liste : >>> smul ( 2 , [ 1 , 2 , 3 ]) [ 2 , 4 , 6 ] def smul ( n , tab ): nv_tab = [] for elt in tab : nv_tab . append ( n * elt ) return nv_tab Exercice n\u00b07 : Enonc\u00e9 Solution \u00c9crire une fonction Python vsom qui prend en param\u00e8tre deux listes de nombres de m\u00eame longueur et qui renvoie une nouvelle liste constitu\u00e9e de la somme terme \u00e0 terme de ces deux listes : >>> vsom ([ 1 , 2 , 3 ], [ 4 , 5 , 6 ]) [ 5 , 7 , 9 ] def vsom ( tab1 , tab2 ): nv_tab = [] for indice in range ( len ( tab1 )): nv_tab . append ( tab1 [ indice ] + tab2 [ indice ]) return nv_tab Exercice n\u00b08 : tableaux et mutations : \u00e9cr\u00eatage Enonc\u00e9 Solution On dit qu'on \u00e9cr\u00eate un signal lorsqu'on limite l'amplitude du signal entre deux valeurs a et b . On peut \u00e9galement appliquer cela \u00e0 des tableaux de valeurs. Voici par exemple un tableau tab que l'on a \u00e9cr\u00eat\u00e9 entre - 150 et 150 pour donner le tableau tab_ec : tab = [ 34 , 56 , 89 , 134 , 152 , 250 , 87 , - 34 , - 187 , - 310 ] tab_ec = [ 34 , 56 , 89 , 134 , 150 , 150 , 87 , - 34 , - 150 , - 150 ] L'\u00e9cr\u00eatage consiste \u00e0 : Soit un nombre entier n ainsi que deux entiers a et b avec a <= b : n si n est compris entre a et b , a si n est plus petit que a , b si n est plus grand que b . Ecrire une fonction ecrete_v2 qui prend en param\u00e8tres un tableau d'entiers tab de longueur quelconque ainsi que deux entiers a et b avec a <= b et renvoie un nouveau tableau nv_tab correspondant \u00e0 tab avec toutes ses valeurs \u00e9cr\u00eat\u00e9es entre a et b def ecrete ( tab ): pass Tester votre fonction en utilisant le jeu de tests ci-dessous. assert ecrete ([ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 ], 5 , 10 ) == [ 5 , 5 , 5 , 5 , 5 , 5 , 6 , 7 , 8 , 9 , 10 , 10 , 10 , 10 ] assert ecrete ([ - 13 , - 4 , 6 , 5 , 8 , - 3 , - 12 , - 3 , 0 , 6 , 7 ], - 10 , - 5 ) == [ - 10 , - 5 , - 5 , - 5 , - 5 , - 5 , - 10 , - 5 , - 5 , - 5 , - 5 ] assert ecrete ([ 7 , 8 , 3 , 9 , 8 , 7 , 2 , 4 , 8 , 9 , 0 , 1 , 5 , 8 , 8 , 8 , 4 , 5 , 4 , 5 ], 0 , 10 ) == [ 7 , 8 , 3 , 9 , 8 , 7 , 2 , 4 , 8 , 9 , 0 , 1 , 5 , 8 , 8 , 8 , 4 , 5 , 4 , 5 ] assert ecrete ([], 0 , 10 ) == [] def ecrete ( tab , a , b ): for i in range ( len ( tab )): if tab [ i ] < a : tab [ i ] = a elif tab [ i ] > b : tab [ i ] = b return tab","title":"TP 11 - Parcours s\u00e9quentiel d'un tableau ter"},{"location":"Tableaux/TD12_Les_Images/","text":"TD n\u00b012 : Les IMAGES - INTRODUCTION Th\u00e8me : Transversal COURS et EXERCICES I. Notion d'images \u23e9 VOCABULAIRE \u2693\ufe0e Un carr\u00e9 est appel\u00e9 pixel (abr\u00e9viation de picture element, \u00e9l\u00e9ment d\u2019image). Chaque pixel est rep\u00e9r\u00e9 par ses coordonn\u00e9es dans un rep\u00e8re dont l\u2019origine est en haut \u00e0 gauche de l\u2019image : Plus la densit\u00e9 de pixels (r\u00e9solution de l\u2019image) sera \u00e9lev\u00e9e, plus l\u2019image sera de bonne qualit\u00e9 mais plus le poids de cette image en octet sera important. La taille de l\u2019image indique le nombre de pixels dispos\u00e9s sur la largeur et sur la hauteur. Le format de l\u2019image correspond au standard utilis\u00e9 pour coder l\u2019image. Parmi les formats d\u2019images bitmap les plus connus, on trouve .jpg, .png ou encore .gif. II. Couleurs d'une image A chaque pixel est associ\u00e9e une couleur, repr\u00e9sent\u00e9e sous la forme d\u2019un code chiffr\u00e9 : on dit que l\u2019image est num\u00e9ris\u00e9e. Parmi les diff\u00e9rents encodages de couleur, on distinguera : Le noir et blanc avec un encodage binaire : 0 ou 1 ; Le monochrome (aussi appel\u00e9 \u00ab nuances de gris \u00bb) avec un encodage sur une \u00e9chelle de valeurs de 0 \u00e0 \\(n\\) (g\u00e9n\u00e9ralement \\(n = 255\\) pour coder une nuance sur un octet) ; La couleur (sans transparence) \u00e0 partir d\u2019un m\u00e9lange des trois couleurs Red, Green, Blue (g\u00e9n\u00e9ralement abr\u00e9g\u00e9 RGB). Dans ce cas, chacune des trois composantes peut prendre des valeurs de 0 \u00e0 255 ce qui permet d\u2019obtenir plus de 16 millions de couleurs (256 x 256 x 256). III. Matricielle vs Vectorielle Matricielle Comme indiqu\u00e9e ci-dessus, une image cr\u00e9\u00e9e pixel par pixel est appel\u00e9e image bitmap ou ma- tricielle. Avantage : c\u2019est ainsi qu\u2019un appareil photo ou que l\u2019oeil humain voit l\u2019image. Inconv\u00e9nient : zoomer sur l\u2019image revient \u00e0 grossir la taille des pixels et donc \u00e0 voir apparaitre des carr\u00e9s. Vectorielle Une image cr\u00e9\u00e9e \u00e0 l\u2019aide d\u2019une description g\u00e9om\u00e9trique des \u00e9l\u00e9ments qui la composent est appel\u00e9e image vectorielle. Le format .svg est un format usuel d\u2019image vectorielle. Avantage : zoomer sur l\u2019image revient \u00e0 changer d\u2019\u00e9chelle pour la repr\u00e9sentation des \u00e9l\u00e9ments qui la composent sans corrompre l\u2019esth\u00e9tique. Inconv\u00e9nient : il est difficile de mod\u00e9liser math\u00e9matiquement une photo issue de la r\u00e9alit\u00e9. IV. Cr\u00e9er une nouvelle image avec le module PIL Le module PIL permet de manipuler un grand nombre de formats d\u2019image. Ce module n\u2019est pas inclus d\u2019office dans Python, il faut t\u00e9l\u00e9charger puis installer la biblioth\u00e8que pillow si on ne travaille pas dans le noteboook capytale. Pour plus d\u2019informations sur les possibilit\u00e9s de ce module, on pourra consulter Le site de r\u00e9f\u00e9rence. Cette page pr\u00e9sente comment concevoir une nouvelle image avec PIL en construisant ligne par ligne un programme. On commence par importer le module en en-t\u00eate du fichier : from PIL import Image On pourra sauvegarder les images souhait\u00e9es en rajoutant en d\u00e9but de programme : import basthon et en fin de programme basthon . download ( \"nom de l'image\" ) \u23e9 Mise en pratique du module PIL \u2693\ufe0e Exercice n\u00b01 : Le module PIL permet de cr\u00e9er tr\u00e8s facilement l\u2019image repr\u00e9sent\u00e9e ci-contre qui est un rectangle de 100 pixels de largeur et 256 pixels de hauteur, de couleur d\u00e9grad\u00e9e du noir (en haut) vers le rouge. Pour cr\u00e9er une nouvelle image, il faut indiquer : le nom de la variable qui \u00ab contiendra \u00bb cette image ; l\u2019encodage des couleurs de cette image \u2019RGBA\u2019 : couleurs avec gestion de la transparence (4 octets) \u2019RGB\u2019 : couleurs sans gestion de la transparence \u2019L\u2019 : nuances de gris \u20191\u2019 : noir et blanc les dimensions en pixels (largeur et hauteur) de cette image (sous forme de tuple - liste non modifiable). Question Lancez la celulle suivante. Quelle remarque peut-on faire ? ##-- - - - Importation des modules - - - - -## from PIL import Image ##-- - - - Variables et constantes - - - - -## largeur = 100 hauteur = 256 couleur = 'RGB' ##-- - - - - Nouvelle image - - - - - -## im = Image . new ( couleur , ( largeur , hauteur )) ##-- - - - Fermeture et affichage - - - - -## im . save ( 'Degrade.jpg' ) im . show () Exercice n\u00b02 : Le module PIL permet \u00abd\u2019atteindre\u00bb et de modifier directement n\u2019importe quel pixel de l\u2019image gr\u00e2ce \u00e0 ses coordonn\u00e9es. Les coordonn\u00e9es d\u2019un pixel de l\u2019image sont sous la forme d\u2019un tuple \\((x, y)\\) . Selon l\u2019encodage des couleurs du fichier, il faudra saisir une valeur enti\u00e8re diff\u00e9rente pour le pixel correspondant : \u2019RGBA\u2019 : un quadruplet (r, g, b, a) de valeurs comprises entre 0 et 255 \u2019RGB\u2019 : un triplet (r, g, b) de valeurs comprises entre 0 et 255 \u2019L\u2019 : une valeur g comprise entre 0 et 255 1\u2019 : une valeur nb comprise entre 0 et 1 Question : Compl\u00e9ter le programme pr\u00e9c\u00e9dent afin d\u2019obtenir l\u2019image d\u2019un rectangle de 100 pixels de largeur et 256 pixels de hauteur, de couleur d\u00e9grad\u00e9e du noir (en haut) vers le rouge. ##-- - - - Importation des modules - - - - -## from PIL import Image ##-- - - - Variables et constantes - - - - -## largeur = 100 hauteur = 256 couleur = 'RGB' ##-- - - - - Nouvelle image - - - - - -## im = Image . new ( couleur , ( largeur , hauteur )) for x in range ( ...... ): for y in range ( ....... ): im . putpixel (( x , y ), ( ..... , ..... , .... )) # Composante R en fonction de la hauteur ##-- - - - Fermeture et affichage - - - - -## im . save ( 'Degrade.jpg' ) im . show () Exercice n\u00b03 : Cr\u00e9er une image repr\u00e9sentant le drapeaux suivant : ##-- - - - Importation des modules - - - - -## from PIL import Image ##-- - - - Variables et constantes - - - - -## largeur = 500 hauteur = 250 couleur = 'RGB' ##-- - - - - Nouvelle image - - - - - -## im = Image . new ( couleur , ( largeur , hauteur ),( 255 , 255 , 0 )) # on cr\u00e9e une image jaune for x in range ( ...... ): for y in range ( ....... ): im . putpixel (( x , y ), ( ..... , ..... , .... )) for x in range ( ...... ): for y in range ( ....... ): im . putpixel (( x , y ), ( ..... , ..... , .... )) ##-- - - - Fermeture et affichage - - - - -## im . save ( 'image1.jpg' ) im . show () Exercice n\u00b04 : \u00c9crire un code Python pour dessiner le drapeau de la Norv\u00e8ge. Exercice n\u00b05 : Avec des maths - Approfondissement Vous allez tracer le drapeu de l'Union Jack Dessiner en diagonale import matplotlib.pyplot as plt from PIL import Image #Creation d'une image blanche RGB 10x10 dessin5 = Image . new ( \"RGB\" ,( 600 , 400 ),( 0 , 0 , 102 )) # Definitions des couleurs blanc = ( 255 , 255 , 255 ) #On parcourt tous les pixels de l'image: for col in range ( 0 , 600 ): for ligne in range ( 0 , 400 ): if ligne >= 0.67 * col - 50 and ligne <= 0.67 * col + 50 : dessin5 . putpixel (( col , ligne ), blanc ) plt . imshow ( dessin5 ) plt . show () plt . close () dessin5 . show () Explication : Sur le graphique, placer les points A(0; 0) et B(600; 400). Calculer le coefficient directeur de la droite (AB) : Combien vaut son ordonn\u00e9e \u00e0 l\u2019origine? En d\u00e9duire une \u00e9quation de la droite (AB) : Tracer en vert la droite d\u2019\u00e9quation : \\(y = 0,67x \u2212 50\\) Tracer en vert la droite d\u2019\u00e9quation : \\(y = 0,67x + 50\\) Vous l\u2019avez remarqu\u00e9 ! Les ordonn\u00e9es vont de haut en bas ici . Ce n\u2019est pas le cas en Maths! \u00c9tude de la seconde diagonale : Sur le r\u00e9sultat, placer les points C(0; 400) et D(600; 0). Calculer le coefficient directeur de la droite (CD). Combien vaut son ordonn\u00e9e \u00e0 l\u2019origine ? En d\u00e9duire une \u00e9quation de la droite (CD). Quelles sont les conditions pour dessiner la deuxi\u00e8me bande blanche entourant la seconde diagonale : if ligne >= ............. and ligne <= ................. : dessin5 . putpixel (( col , ligne ), blanc ) Compl\u00e9ter le code Python pour dessiner l\u2019Union Jack. (Commencer par les bandes en diagonale) 7 Pour les plus rapides, dessiner en Python le drapeau des Seychelles : (Commencer par d\u00e9terminer les \u00e9quations des droites en jeu.) V. Modifier des images avec le module PIL \u23e9 Ouvrir un fichier image \u2693\ufe0e Pour ouvrir un fichier image au format .jpg (par exemple) situ\u00e9e dans le r\u00e9pertoire courant, on utilise : im = Image . open ( 'perroquetmulticolore.jpg' ) Afin d\u2019\u00eatre \u201cmanipul\u00e9e\u201d, cette image est affect\u00e9e \u00e0 la variable nomm\u00e9e im dans le programme. \u23e9 Obtenir des informations sur cette image \u2693\ufe0e Une fois le fichier ouvert, on peut conna\u00eetre et utiliser : L\u2019encodage des couleurs du fichier : \u2019RGBA\u2019 (couleurs avec gestion de la transparence), \u2019RGB\u2019, \u2019L\u2019 (gris) ou \u20191\u2019 (noir et blanc). couleur = im . mode print ( \"L'encodage des couleurs est \" , couleur ) Les dimensions de l\u2019image (en pixels) sous forme d\u2019un tuple (liste non modifiable (largeur, hauteur)) : l , h = im . size print ( f 'largeur : { l } et hauteur : { h } ' ) Les composantes couleur du pixel de coordonn\u00e9es (x, y) dans l\u2019image. L\u2019illustration ci-dessous pr\u00e9sente comment PIL \u00ab lit \u00bb une image. Les coordonn\u00e9es du pixel rouge de cette image sont donc (3, 1) : \u00e0 nouveau, c\u2019est un tuple (il doit \u00eatre entour\u00e9 de parenth\u00e8ses...). x , y = 120 , 120 # Coordonn\u00e9es choisies au hasard triplet = im . getpixel (( x , y )) print ( \"Ce pixel a pour composantes : \" , triplet ) Remarque importante Dans le cas d\u2019une image encod\u00e9e en \u2019RGB\u2019, triplet prend pour valeur le triplet d\u2019entier (r, v, b) correspondant aux composantes couleurs du pixels de coordonn\u00e9es x en colonne et y en ligne. Par cons\u00e9quent, Ou bien on r\u00e9cup\u00e8re l\u2019int\u00e9gralit\u00e9 du triplet puis on r\u00e9cup\u00e8re les composantes r,v,b une \u00e0 une avec les instructions triplet = im . getpixel (( x , y )) r = triplet [ 0 ] v = triplet [ 1 ] b = triplet [ 2 ] Ou bien on r\u00e9cup\u00e8re directement composante par composante avec l\u2019instruction r , v , b = im . getpixel (( x , y )) from PIL import Image issoire = Image . open ( 'issoire_tour_horloge.jpg' ) couleur = issoire . mode print ( f \"L'encodage des couleurs est { couleur } \" ) l , h = issoire . size print ( f 'largeur : { l } et hauteur : { h } ' ) issoire . show () \u23e9 Pour \u00e9claircir une image, on peut augmenter de 50% les composantes couleurs de chaque pixel. \u2693\ufe0e def eclaircissement ( im_originale ): \"\"\" fonction qui renvoie l'image im_originale \u00e9claircie \"\"\" # r\u00e9cup\u00e9ration des dimensions de l'image originale L , H = im_originale . size # cr\u00e9ation d'une image vierge, de m\u00eame format et m\u00eame dimension que l'image initiale im_modifiee = Image . new ( mode = im_originale . mode , size = ( L , H ) ) # ouverture de l'acc\u00e8s aux pixels des deux images pix_origine = im_originale . load () pix_modifie = im_modifiee . load () # on parcourt tous les pixels des images for x in range ( L ): for y in range ( H ): R , G , B = pix_origine [ x , y ] #r\u00e9cup\u00e9ration des composantes R,G,B du pixel original R = int ( R * 1.5 ) G = int ( G * 1.5 ) B = int ( B * 1.5 ) pix_modifie [ x , y ] = R , G , B #\u00e9criture des composantes R,G,B du pixel modifi\u00e9 # on renvoie l'image modifi\u00e9e return im_modifiee eclaircissement ( issoire ) \u23e9 Pour assombrir une image, on peut diminuer de 50% les composantes couleurs de l'image d'origine. \u2693\ufe0e Question 1 : \u00c9crire une fonction Python assombrissement qui permet d'assombrir une image, puis tester cette fonction. Aide On pourra commencer par effectuer un copier/coller de la fonction eclaircissement puis l'adapter. # Ecrire ici la fonction assombrissement # Tester ici un appel \u00e0 la fonction assombrissement \u23e9 Filtre \u2693\ufe0e Le principe du filtre rouge consiste \u00e0 conserver les composantes rouges des pixels de l'image et \u00e0 remplacer les autres par \\(0\\) . Question 2 a. \u00c9crire une fonction Python filtre_R qui applique le filtre rouge \u00e0 une image, puis tester cette fonction. # \u00c9crire ici la fonction filtre_R # Tester ici un appel \u00e0 la fonction filtre_R b. \u00c9crire sur le m\u00eame principe des fonctions Python filtre_G et filtre_B pour les filtres vert et bleu. # \u00c9crire ici la fonction filtre_G # Tester ici un appel \u00e0 la fonction filtre_G # \u00c9crire ici la fonction filtre_B # Tester ici un appel \u00e0 la fonction filtre_B Question 3 : Niveau de gris Dans cette question, on souhaite convertir une image couleur en image en niveau de gris. En RGB, on obtient un pixel en niveau de gris lorsque ses 3 composantes couleur sont \u00e9gales. a. Une premi\u00e8re m\u00e9thode consiste \u00e0 remplacer chacune des composantes couleur d'un pixel par la moyenne des trois composantes initiales. \u00c9crire une fonction Python gris_rapide qui effectue cette conversion. Tester cette fonction. # \u00c9crire ici la fonction gris_rapide # Tester ici un appel \u00e0 la fonction gris_rapide b. La perception des composantes couleur par l'oeil humain diff\u00e8re selon ces couleurs. Ainsi, l'organisme CIE (Commission Internationale de l'\u00c9clairage) pr\u00e9conise la m\u00e9thode suivante pour convertir une image en niveau de gris : Conversion en niveau de gris : On attribue \u00e0 chaque composante couleur la valeur obtenue en additionnant : 21,25% de la valeur de la composante rouge initiale; 71,54% de la valeur de la composante verte; 7,21% de la valeur de la composante bleue. \u00c9crire une fonction Python gris_precis qui r\u00e9alise cette conversion. # \u00c9crire ici la fonction gris_precis # Tester ici un appel \u00e0 la fonction gris_precis Question 4. Pour obtenir le n\u00e9gatif d'une image, on remplace chaque composante de chaque pixel par la diff\u00e9rence entre 255 et cette composante initiale. \u00c9crire une fonction Python negatif qui renvoie le n\u00e9gatif d'une image. # \u00c9crire ici la fonction negatif # Tester ici un appel \u00e0 la fonction negatif Question 5 Dans cette question, on souhaite convertir l'image en noir et blanc (sans niveaux de gris). a. Rappeler les codes R,G,B correspondant respectivement au noir et au blanc. b. On d\u00e9cide qu'un pixel sera blanc si et seulement si la moyenne de ses composantes initiales est sup\u00e9rieure ou \u00e9gale \u00e0 128. Ecrire une fonction Python NB qui r\u00e9alise cette transformation. # \u00c9crire ici la fonction NB # Tester ici un appel \u00e0 la fonction NB Question 6. Pourriez vous \u00e9crire un programme qui change la couleur du rouge \u00e0 l\u00e8vre de cette dame. from PIL import Image red = Image . open ( 'redn.jpg' ) couleur = red . mode print ( f \"L'encodage des couleurs est { couleur } \" ) l , h = red . size print ( f 'largeur : { l } et hauteur : { h } ' ) red . show () L'encodage des couleurs est RGB largeur : 400 et hauteur : 239 VI. Incrustation sur fond vert Le proc\u00e9d\u00e9 d\u2019incrustation sur fond vert consiste \u00e0 remplacer tous les pixels de l\u2019image sur fond vert dont la composante verte est \u00ab dominante \u00bb par rapport aux deux autres par les pixels de l\u2019image du fond \u00e0 incruster. \u23e9 On souhaite r\u00e9aliser l'incrustation sur fond vert de la fa\u00e7on suivante : \u2693\ufe0e On fixe des coefficients de seuils \\(C_R=1,3\\) et \\(C_B=1,3\\) . Pour chaque pixel de l\u2019image sur fond vert, si ses composantes \\(R\\) , \\(G\\) , \\(B\\) v\u00e9rifient \\(G>C_R\\times R\\) et \\(G>C_B\\times B\\) , alors on r\u00e9cup\u00e8re le pixel du paysage, sinon on conserve le pixel de l'image sur fond vert. Incrustation a. \u00c9crire la fonction Python incrustation qui convient. On utilisera les images : - personnage_test.jpg - paysage_test.jpg # \u00c9crire ici la fonction incrustation b. Tester la fonction incrustation avec les photos suivantes : personnage_test.jpg et paysage_test.jpg. Si n\u00e9cessaire, on pourra modifier les valeurs des coefficients de seuil \\(C_R\\) et \\(C_B\\) . # Tester ici la fonction incrustation VII. R\u00e9aliser des montages et transformations d'images \u23e9 Exercice : Bordure \u2693\ufe0e Bordure Programmer une fonction def bordure(im,coul) qui cr\u00e9e une bordure de couleur autour de votre image. \u23e9 Exercice : Andy Warhol \u2693\ufe0e Andy Warhol Maintenant testez le code qui permet de coller l\u2019image de pomme dans une image de fond : from PIL.Image import * # On ouvre l ' image de pomme im = open ( \"pomme.jpg\" ) # On r\u00e9cup\u00e8re la d\u00e9 finition de l ' image de pomme ( L , H ) = im . size couleur = im . mode # Je cr\u00e9e une nouvelle image pouvant contenir 4 fois l ' image de pomme fond = new ( couleur , ( L * 2 , H * 2 )) # Je colle l ' image en (0, 0) ( coin en haut \u00e0 gauche) fond . paste ( image , ( 0 , 0 )) fond . save ( \"resultat2.jpg\" , \"JPEG\" ) fond . show () Maintenant modifiez ce code pour obtenir l\u2019image suivante : puis en r\u00e9utilisant tout ce que vous avez vu dans ce TP, \u00e9crivez un programme permettant d\u2019obtenir l\u2019image suivante : \u23e9 Exercice : Sym\u00e9trie \u2693\ufe0e Sym\u00e9trie Cr\u00e9er une fonction qui affiche une image ou la partie de droite est remplac\u00e9e par sa sym\u00e9trie. (A tester avec une photo d\u2019identit\u00e9 pour voir la sym\u00e9trie de votre visage) - > \u23e9 A vous de jouer \u2693\ufe0e A vous de jouer Voici quelques exemples de transformation possibles :","title":"TP 12 - Les images"},{"location":"Tableaux/TP07_TuplesTableauxCours/","text":"TD n\u00b07 : Les types construits : tuples et tableaux Th\u00e8me 4 : Langages et Programmation COURS Lien Capytale Les s\u00e9quences en Python \u2693\ufe0e S\u00e9quences nous avons parl\u00e9 de s\u00e9quences d'instructions , quand on ex\u00e9cute l'une apr\u00e8s l'autre les instructions \u00e9crites sur des lignes successives en Python, par exemple. Ici, c'est diff\u00e9rent. Les s\u00e9quences dont on va parler sont des types particuliers, plus \u00e9volu\u00e9s que les types simples abord\u00e9es jusque l\u00e0 comme les entiers, flottants, bool\u00e9ens...* Il est possible de \u00abstocker\u00bb plusieurs grandeurs dans une m\u00eame structure, ce type de structure est appel\u00e9 une s\u00e9quence . De fa\u00e7on plus pr\u00e9cise, nous d\u00e9finirons une s\u00e9quence comme un ensemble fini et ordonn\u00e9 d'\u00e9l\u00e9ments indic\u00e9s de \\(0\\) \u00e0 \\(n-1\\) (si cette s\u00e9quence comporte \\(n\\) \u00e9l\u00e9ments). Rassurez-vous, nous reviendrons ci-dessous sur cette d\u00e9finition. Nous allons \u00e9tudier plus particuli\u00e8rement 2 types de s\u00e9quences : les tuples et les tableaux ( il en existe d'autres que nous n'\u00e9voquerons pas ici ). I. Les tuples en Python \u2693\ufe0e Comme d\u00e9j\u00e0 dit ci-dessus, un tuple est une s\u00e9quence. Voici un exemple tr\u00e8s simple : mon_tuple = ( 5 , 8 , 6 , 9 ) mon_tuple (5, 8, 6, 9) Dans le code ci-dessus, la variable mon_tuple r\u00e9f\u00e9rence un tuple, ce tuple est constitu\u00e9 des entiers 5, 8, 6 et 9. Comme indiqu\u00e9 dans la d\u00e9finition, chaque \u00e9l\u00e9ment du tuple est indic\u00e9 (il poss\u00e8de un indice) : le premier \u00e9l\u00e9ment du tuple (l'entier 5) poss\u00e8de l' indice 0 le deuxi\u00e8me \u00e9l\u00e9ment du tuple (l'entier 8) poss\u00e8de l'indice 1 le troisi\u00e8me \u00e9l\u00e9ment du tuple (l'entier 6) poss\u00e8de l'indice 2 le quatri\u00e8me \u00e9l\u00e9ment du tuple (l'entier 9) poss\u00e8de l'indice 3 Comment acc\u00e9der \u00e0 l'\u00e9l\u00e9ment d'indice \\(i\\) dans un tuple qui correspond \u00e0 mon \\((i+1)^{\u00e8me}\\) \u00e9l\u00e9ment)? Simplement en utilisant la \u00abnotation entre crochets\u00bb : mon_tuple [ i ] \u00c0 vous 1 Testez le code suivant (tentez de r\u00e9pondre aux questions qui suivent avant !) mon_tuple = ( 5 , 8 , 6 , 9 ) a = mon_tuple [ 2 ] Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable a ? La variable mon_tuple r\u00e9f\u00e9rence le tuple (5, 8, 6, 9) , la variable a r\u00e9f\u00e9rence l'entier 6 car cet entier 6 est bien le troisi\u00e8me \u00e9l\u00e9ment du tuple, il poss\u00e8de donc l'indice 2 ATTENTION : dans les s\u00e9quences les indices commencent toujours \u00e0 0 (le premier \u00e9l\u00e9ment de la s\u00e9quence a pour indice 0), oublier cette particularit\u00e9 est une source d'erreur \u00abclassique\u00bb. \u00c0 vous 2 Compl\u00e9tez le code ci-dessous (en rempla\u00e7ant les ..) afin qu'apr\u00e8s l'ex\u00e9cution de ce programme la variable a r\u00e9f\u00e9rence l'entier 8. mon_tuple = ( 5 , 8 , 6 , 9 ) a = mon_tuple [ .. ] a Un tuple ne contient pas forc\u00e9ment des nombres entiers, il peut aussi contenir des nombres d\u00e9cimaux, des cha\u00eenes de caract\u00e8res, des bool\u00e9ens... \u00c0 vous 3 Quel est le r\u00e9sultat attendu apr\u00e8s l'ex\u00e9cution du programme suivant ? V\u00e9rifiez votre hypoth\u00e8se en testant ce programme. mon_tuple = ( \"le\" , \"monde\" , \"bonjour\" ) print ( mon_tuple [ 2 ] + \" \" + mon_tuple [ 0 ] + \" \" + mon_tuple [ 1 ] + \"!\" ) Gr\u00e2ce au tuple, une fonction peut renvoyer plusieurs valeurs : \u00c0 vous 4 Analysez puis testez le code suivant : def add ( a , b ): c = a + b return ( a , b , c ) mon_tuple = add ( 5 , 8 ) print ( f \" { mon_tuple [ 0 ] } + { mon_tuple [ 1 ] } = { mon_tuple [ 2 ] } \" ) Il faut bien comprendre dans l'exemple ci-dessus que la variable mon_tuple r\u00e9f\u00e9rence un tuple (puisque la fonction add renvoie un tuple), d'o\u00f9 la \u00abnotation entre crochets\u00bb utilis\u00e9e avec mon_tuple ( mon_tuple[1] ...) Lorsqu'on utilise une fonction qui renvoie plusieurs valeurs : \u2693\ufe0e def somme_et_produit ( a , b ): somme = a + b produit = a * b return somme , produit somme_et_produit ( 5 , 3 ) (8, 15) On voit que la fonction renvoie ici un 2-uplet mais qu'on peut r\u00e9cup\u00e9rer les deux valeurs s\u00e9par\u00e9ment : s , p = somme_et_produit ( 5 , 3 ) print ( f 's a pour valeur { s } et p a pour valeur { p } ' ) s a pour valeur 8 et p a pour valeur 15 A retenir Il n'est pas possible de modifier un tuple apr\u00e8s sa cr\u00e9ation (on parle d' objet immutable ), si vous essayez de modifier un tuple existant, l'interpr\u00e9teur Python vous renverra une erreur. mon_tuple = ( 5 , 8 , 6 , 9 ) mon_tuple [ 0 ] = 3 mon_tuple Traceback (most recent call last): File \"<input>\", line 2, in <module> TypeError: 'tuple' object does not support item assignment II. Les tableaux en Python \u2693\ufe0e ATTENTION : Dans la suite nous allons employer le terme \u00ab tableau \u00bb. Pour parler de ces \u00abtableaux\u00bb les concepteurs de Python ont choisi d'utiliser le terme de \u00ab list \u00bb (\u00abliste\u00bb en fran\u00e7ais). Pour \u00e9viter toute confusion, notamment par rapport \u00e0 des notions qui seront abord\u00e9es en terminale, le choix a \u00e9t\u00e9 fait d'employer \u00abtableau\u00bb \u00e0 la place de \u00abliste\u00bb (dans la documentation vous rencontrerez le terme \u00ablist\u00bb, cela ne devra pas vous pertuber) Les tableaux sont, comme les tuples, des s\u00e9quences, mais \u00e0 la diff\u00e9rence des tuples, ils sont modifiables (on parle d' objets \u00abmutables\u00bb ). Pour cr\u00e9er un tableau, il existe diff\u00e9rentes m\u00e9thodes : une de ces m\u00e9thodes ressemble beaucoup \u00e0 la cr\u00e9ation d'un tuple : mon_tab = [ 5 , 8 , 6 , 9 ] mon_tab Notez la pr\u00e9sence des crochets \u00e0 la place des parenth\u00e8ses. Un tableau est une s\u00e9quence, il est donc possible de \u00abr\u00e9cup\u00e9rer\u00bb un \u00e9l\u00e9ment d'un tableau \u00e0 l'aide de son indice (de la m\u00eame mani\u00e8re que pour un tuple). Acc\u00e9der \u00e0 un \u00e9l\u00e9ment d'un tableau \u00e0 partir de son indice (l'indexation commence \u00e0 z\u00e9ro) \u2693\ufe0e \u00c0 vous 5 Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable ma_variable apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? mon_tab = [ 5 , 8 , 6 , 9 ] ma_variable = mon_tab [ 2 ] ma_variable N.B. Il est possible de saisir directement mon_tab[2] dans la cellule sans passer par l'interm\u00e9diaire de la variable ma_variable . Il est possible de modifier un tableau \u00e0 l'aide de la \u00abnotation entre crochets\u00bb : \u00c0 vous 6 Quel est le contenu du tableau r\u00e9f\u00e9renc\u00e9 par la variable mon_tab apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? (V\u00e9rification en ex\u00e9cutant la cellule comme pr\u00e9c\u00e9demment) mon_tab = [ 5 , 8 , 6 , 9 ] mon_tab [ 2 ] = 15 mon_tab Comme vous pouvez le constater avec l'exemple ci-dessus, l'\u00e9l\u00e9ment d'indice 2 (le nombre entier 6) a bien \u00e9t\u00e9 remplac\u00e9 par le nombre entier 15. Il est important de savoir qu'on peut num\u00e9roter \u00aben partant de la fin\u00bb. Le dernier \u00e9l\u00e9ment du tableau correspond ainsi \u00e0 l'indice -1, l'avant dernier \u00e9l\u00e9ment \u00e0 l'indice - 2 etc... mon_tab [ - 1 ] mon_tab [ - 3 ] Ajout d'un \u00e9l\u00e9ment dans un tableau Il est aussi possible d'ajouter un \u00e9l\u00e9ment en fin de tableau \u00e0 l'aide de la m\u00e9thode append : \u00c0 vous 7 Quel est le contenu du tableau r\u00e9f\u00e9renc\u00e9 par la variable mon_tab apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? (V\u00e9rification sur place comme pr\u00e9c\u00e9demment, on ne le r\u00e9p\u00e8tera plus...) mon_tab = [ 5 , 8 , 6 , 9 ] mon_tab . append ( 15 ) mon_tab [5, 8, 6, 9, 15] Suppression d'un \u00e9l\u00e9ment dans un tablau L' instruction del permet de supprimer un \u00e9l\u00e9ment d'un tableau en utilisant son index : \u00c0 vous 8 Quel est le contenu du tableau r\u00e9f\u00e9renc\u00e9 par la variable mon_tab apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? del mon_tab [ 1 ] mon_tab Longueur d'un tableau La fonction len permet de connaitre le nombre d\u2019\u00e9l\u00e9ments pr\u00e9sents dans une s\u00e9quence (tableau et tuple) \u00c0 vous 9 Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable nb_elements apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? mon_tab = [ 5 , 8 , 6 , 9 ] nb_elements = len ( mon_tab ) nb_elements 4 Parcourir un tableau : La boucle for permet de parcourir tous les \u00e9l\u00e9ments d'une s\u00e9quence . En utilisant range() on a vu que l'on peut parcourir une s\u00e9quence de nombres. Quelques explications : comme son nom l'indique, la boucle for est une boucle ! Nous \u00absortirons\u00bb de la boucle une fois que tous les \u00e9l\u00e9ments du tableau mon_tab auront \u00e9t\u00e9 parcourus. element est une variable qui va : au premier tour de boucle, r\u00e9f\u00e9rencer le premier \u00e9l\u00e9ment du tableau (l'entier 5) au deuxi\u00e8me tour de boucle, r\u00e9f\u00e9rencer le deuxi\u00e8me \u00e9l\u00e9ment du tableau (l'entier 8) au troisi\u00e8me tour de boucle, r\u00e9f\u00e9rencer le troisi\u00e8me \u00e9l\u00e9ment du tableau (l'entier 6) au quatri\u00e8me tour de boucle, r\u00e9f\u00e9rencer le quatri\u00e8me \u00e9l\u00e9ment de le tableau (l'entier 9) Remarque : Une chose importante \u00e0 bien comprendre : le choix du nom de la variable qui va r\u00e9f\u00e9rencer les \u00e9l\u00e9ments du tableau les uns apr\u00e8s les autres (element) est totalement arbitraire, il est possible de choisir un autre nom sans aucun probl\u00e8me. Il se trouve que les cha\u00eenes de caract\u00e8res sont \u00e9galement des s\u00e9quences ... de caract\u00e8res. On peut donc aussi les parcourir tr\u00e8s simplement avec une boucle for , de deux mani\u00e8res diff\u00e9rentes. Par ses \u00e9l\u00e9ments \u2693\ufe0e On peut parcourir une cha\u00eene directement par ses \u00e9l\u00e9ments : mon_tab = [ 5 , 8 , 6 , 9 ] for nombre in mon_tab : print ( nombre ) 5 8 6 9 Par l'indice de ses \u00e9l\u00e9ments \u2693\ufe0e On peut aussi utiliser la fonction range() pour parcourir les \u00e9l\u00e9mens par leurs indices. for indice in range ( len ( mon_tab )): print ( mon_tab [ indice ]) 5 8 6 9 ATTENTION : si vous avez dans un programme range(a,b) , a est la borne inf\u00e9rieure et b a borne sup\u00e9rieure. Vous ne devez surtout pas perdre de vu que la borne inf\u00e9rieure est incluse , mais que la borne sup\u00e9rieure est exclue . Cr\u00e9ation d'un tableau Il est possible d'utiliser la m\u00e9thode range pour remplir un tableau : \u00c0 vous 10 Quel est le contenu du tableau r\u00e9f\u00e9renc\u00e9 par la variable mon_tab apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? mon_tab = [] for element in range ( 0 , 9 ): mon_tab . append ( element ) mon_tab [0, 1, 2, 3, 4, 5, 6, 7, 8] Cr\u00e9er un tableau par compr\u00e9hension Nous avons vu qu'il \u00e9tait possible de \u00abremplir\u00bb un tableau en renseignant les \u00e9l\u00e9ments du tableau les uns apr\u00e8s les autres : mon_tab = [ 5 , 8 , 6 , 9 ] ou encore \u00e0 l'aide de la m\u00e9thode append (voir \u00ab\u00c0 vous 10\u00bb). Il est aussi possible d'obtenir exactement le m\u00eame r\u00e9sultat qu'au \u00ab\u00c0 vous 10\u00bb en une seule ligne gr\u00e2ce \u00e0 la compr\u00e9hension de tableau : \u00c0 vous 11 Quel est le contenu du tableau r\u00e9f\u00e9renc\u00e9e par la variable mon_tab apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? mon_tab = [ p for p in range ( 0 , 9 )] mon_tab [0, 1, 2, 3, 4, 5, 6, 7, 8] Les compr\u00e9hensions de tableau permettent de rajouter une condition ( if ) : \u00c0 vous 12 Quel est le contenu du tableau r\u00e9f\u00e9renc\u00e9 par la variable mon_tab apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? tab1 = [ 1 , 7 , 9 , 15 , 5 , 20 , 10 , 8 ] mon_tab = [ p for p in tab1 if p > 10 ] mon_tab [15, 20] Autre possibilit\u00e9, utiliser des composants \u00abarithm\u00e9tiques\u00bb : \u00c0 vous 13 Quel est le contenu du tableau r\u00e9f\u00e9renc\u00e9 par la variable mon_tab apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? tab1 = [ 1 , 7 , 9 , 15 , 5 , 20 , 10 , 8 ] mon_tab = [ p ** 2 for p in tab1 if p < 10 ] mon_tab [1, 49, 81, 25, 64] Rappel : p**2 permet d\u2019obtenir la valeur de p \u00e9lev\u00e9e au carr\u00e9e ( \\(p^2\\) ). Comme vous pouvez le remarquer, nous obtenons un tableau mon_tab qui contient tous les \u00e9l\u00e9ments du tableau tab1 \u00e9lev\u00e9s au carr\u00e9 \u00e0 condition que ces \u00e9l\u00e9ments de tab1 soient inf\u00e9rieurs \u00e0 10. Comme vous pouvez le constater, la compr\u00e9hension de tableau permet d'obtenir des combinaisons relativement complexes. III. Travailler sur des \"tableaux de tableaux\" \u2693\ufe0e Chaque \u00e9l\u00e9ment d'un tableau peut \u00eatre un tableau, on parle de tableau de tableau. Voici un exemple de tableau de tableau : m = [[ 1 , 3 , 4 ], [ 5 , 6 , 8 ], [ 2 , 1 , 3 ], [ 7 , 8 , 15 ]] Le premier \u00e9l\u00e9ment du tableau ci-dessus est bien un tableau ( [1, 3, 4] ), le deuxi\u00e8me \u00e9l\u00e9ment est aussi un tableau ( [5, 6, 8] )... Il est souvent plus pratique de pr\u00e9senter ces \u00abtableaux de tableaux\u00bb comme suit : m = [[ 1 , 3 , 4 ], [ 5 , 6 , 8 ], [ 2 , 1 , 3 ], [ 7 , 8 , 15 ]] Nous obtenons ainsi quelque chose qui ressemble beaucoup \u00e0 un \"objet math\u00e9matique\" tr\u00e8s utilis\u00e9 : une matrice . Il est \u00e9videmment possible d'utiliser les indices de position avec ces \u00abtableaux de tableaux\u00bb. Pour cela nous allons consid\u00e9rer notre tableau de tableaux comme une matrice, c'est \u00e0 dire en utilisant les notions de \u00abligne\u00bb et de \u00abcolonne\u00bb. Dans la matrice ci-dessus : En ce qui concerne les lignes : 1, 3, 4 constituent la premi\u00e8re ligne 5, 6, 8 constituent la deuxi\u00e8me ligne 2, 1, 3 constituent la troisi\u00e8me ligne 7, 8, 15 constituent la quatri\u00e8me ligne En ce qui concerne les colonnes : 1, 5, 2, 7 constituent la premi\u00e8re colonne 3, 6, 1, 8 constituent la deuxi\u00e8me colonne 4, 8, 3, 15 constituent la troisi\u00e8me colonne Pour cibler un \u00e9l\u00e9ment particulier de la matrice, on utilise la notation avec \u00abdoubles crochets\u00bb : m[ligne][colonne] (sans perdre de vu que la premi\u00e8re ligne et la premi\u00e8re colonne ont pour indice 0 ) \u00c0 vous 14 Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable a apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? m = [[ 1 , 3 , 4 ], [ 5 , 6 , 8 ], [ 2 , 1 , 3 ], [ 7 , 8 , 15 ]] a = m [ 1 ][ 2 ] a 8 Comme vous pouvez le constater, la variable a r\u00e9f\u00e9rence bien l'entier situ\u00e9 \u00e0 la 2e ligne (indice 1) et \u00e0 la 3e colonne (indice 2), c'est-\u00e0-dire 8. \u00c0 vous 15 Quel est le contenu du tableau r\u00e9f\u00e9renc\u00e9 par la variable mm apr\u00e8s l'ex\u00e9cution du programme ci-dessous ( si n\u00e9cessaire, affichez d'abord la valeur de mm sans ex\u00e9cuter la derni\u00e8re ligne, pour bien comprendre ) ? m = [ 1 , 2 , 3 ] mm = [ m , m , m ] print ( mm ) m [ 0 ] = 100 mm [[100, 2, 3], [100, 2, 3], [100, 2, 3]] Comme vous pouvez le constater, la modification du tableau r\u00e9f\u00e9renc\u00e9 par la variable m entraine la modification du tableau r\u00e9f\u00e9renc\u00e9 par la variable mm (alors que nous n'avons pas directement modifi\u00e9 le tableau r\u00e9f\u00e9renc\u00e9 par mm ). Il faut donc \u00eatre tr\u00e8s prudent lors de ce genre de manipulation afin d'\u00e9viter des modifications non d\u00e9sir\u00e9es. Il est possible de parcourir l'ensemble des \u00e9l\u00e9ments d'une matrice \u00e0 l'aide d'une \u00abdouble boucle for \u00bb : \u00c0 vous 16 Analysez puis testez le code suivant : m = [[ 1 , 3 , 4 ], [ 5 , 6 , 8 ], [ 2 , 1 , 3 ], [ 7 , 8 , 15 ]] nb_colonne = 3 nb_ligne = 4 for i in range ( 0 , nb_ligne ): for j in range ( 0 , nb_colonne ): a = m [ i ][ j ] print ( a )","title":"TP 07 Les tableaux Cours"},{"location":"Tableaux/TP07_TuplesTableauxCours/#les-sequences-en-python","text":"S\u00e9quences nous avons parl\u00e9 de s\u00e9quences d'instructions , quand on ex\u00e9cute l'une apr\u00e8s l'autre les instructions \u00e9crites sur des lignes successives en Python, par exemple. Ici, c'est diff\u00e9rent. Les s\u00e9quences dont on va parler sont des types particuliers, plus \u00e9volu\u00e9s que les types simples abord\u00e9es jusque l\u00e0 comme les entiers, flottants, bool\u00e9ens...* Il est possible de \u00abstocker\u00bb plusieurs grandeurs dans une m\u00eame structure, ce type de structure est appel\u00e9 une s\u00e9quence . De fa\u00e7on plus pr\u00e9cise, nous d\u00e9finirons une s\u00e9quence comme un ensemble fini et ordonn\u00e9 d'\u00e9l\u00e9ments indic\u00e9s de \\(0\\) \u00e0 \\(n-1\\) (si cette s\u00e9quence comporte \\(n\\) \u00e9l\u00e9ments). Rassurez-vous, nous reviendrons ci-dessous sur cette d\u00e9finition. Nous allons \u00e9tudier plus particuli\u00e8rement 2 types de s\u00e9quences : les tuples et les tableaux ( il en existe d'autres que nous n'\u00e9voquerons pas ici ).","title":"Les s\u00e9quences en Python"},{"location":"Tableaux/TP07_TuplesTableauxCours/#i-les-tuples-en-python","text":"Comme d\u00e9j\u00e0 dit ci-dessus, un tuple est une s\u00e9quence. Voici un exemple tr\u00e8s simple : mon_tuple = ( 5 , 8 , 6 , 9 ) mon_tuple (5, 8, 6, 9) Dans le code ci-dessus, la variable mon_tuple r\u00e9f\u00e9rence un tuple, ce tuple est constitu\u00e9 des entiers 5, 8, 6 et 9. Comme indiqu\u00e9 dans la d\u00e9finition, chaque \u00e9l\u00e9ment du tuple est indic\u00e9 (il poss\u00e8de un indice) : le premier \u00e9l\u00e9ment du tuple (l'entier 5) poss\u00e8de l' indice 0 le deuxi\u00e8me \u00e9l\u00e9ment du tuple (l'entier 8) poss\u00e8de l'indice 1 le troisi\u00e8me \u00e9l\u00e9ment du tuple (l'entier 6) poss\u00e8de l'indice 2 le quatri\u00e8me \u00e9l\u00e9ment du tuple (l'entier 9) poss\u00e8de l'indice 3 Comment acc\u00e9der \u00e0 l'\u00e9l\u00e9ment d'indice \\(i\\) dans un tuple qui correspond \u00e0 mon \\((i+1)^{\u00e8me}\\) \u00e9l\u00e9ment)? Simplement en utilisant la \u00abnotation entre crochets\u00bb : mon_tuple [ i ] \u00c0 vous 1 Testez le code suivant (tentez de r\u00e9pondre aux questions qui suivent avant !) mon_tuple = ( 5 , 8 , 6 , 9 ) a = mon_tuple [ 2 ] Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable a ? La variable mon_tuple r\u00e9f\u00e9rence le tuple (5, 8, 6, 9) , la variable a r\u00e9f\u00e9rence l'entier 6 car cet entier 6 est bien le troisi\u00e8me \u00e9l\u00e9ment du tuple, il poss\u00e8de donc l'indice 2 ATTENTION : dans les s\u00e9quences les indices commencent toujours \u00e0 0 (le premier \u00e9l\u00e9ment de la s\u00e9quence a pour indice 0), oublier cette particularit\u00e9 est une source d'erreur \u00abclassique\u00bb. \u00c0 vous 2 Compl\u00e9tez le code ci-dessous (en rempla\u00e7ant les ..) afin qu'apr\u00e8s l'ex\u00e9cution de ce programme la variable a r\u00e9f\u00e9rence l'entier 8. mon_tuple = ( 5 , 8 , 6 , 9 ) a = mon_tuple [ .. ] a Un tuple ne contient pas forc\u00e9ment des nombres entiers, il peut aussi contenir des nombres d\u00e9cimaux, des cha\u00eenes de caract\u00e8res, des bool\u00e9ens... \u00c0 vous 3 Quel est le r\u00e9sultat attendu apr\u00e8s l'ex\u00e9cution du programme suivant ? V\u00e9rifiez votre hypoth\u00e8se en testant ce programme. mon_tuple = ( \"le\" , \"monde\" , \"bonjour\" ) print ( mon_tuple [ 2 ] + \" \" + mon_tuple [ 0 ] + \" \" + mon_tuple [ 1 ] + \"!\" ) Gr\u00e2ce au tuple, une fonction peut renvoyer plusieurs valeurs : \u00c0 vous 4 Analysez puis testez le code suivant : def add ( a , b ): c = a + b return ( a , b , c ) mon_tuple = add ( 5 , 8 ) print ( f \" { mon_tuple [ 0 ] } + { mon_tuple [ 1 ] } = { mon_tuple [ 2 ] } \" ) Il faut bien comprendre dans l'exemple ci-dessus que la variable mon_tuple r\u00e9f\u00e9rence un tuple (puisque la fonction add renvoie un tuple), d'o\u00f9 la \u00abnotation entre crochets\u00bb utilis\u00e9e avec mon_tuple ( mon_tuple[1] ...)","title":"I. Les tuples en Python"},{"location":"Tableaux/TP07_TuplesTableauxCours/#ii-les-tableaux-en-python","text":"ATTENTION : Dans la suite nous allons employer le terme \u00ab tableau \u00bb. Pour parler de ces \u00abtableaux\u00bb les concepteurs de Python ont choisi d'utiliser le terme de \u00ab list \u00bb (\u00abliste\u00bb en fran\u00e7ais). Pour \u00e9viter toute confusion, notamment par rapport \u00e0 des notions qui seront abord\u00e9es en terminale, le choix a \u00e9t\u00e9 fait d'employer \u00abtableau\u00bb \u00e0 la place de \u00abliste\u00bb (dans la documentation vous rencontrerez le terme \u00ablist\u00bb, cela ne devra pas vous pertuber) Les tableaux sont, comme les tuples, des s\u00e9quences, mais \u00e0 la diff\u00e9rence des tuples, ils sont modifiables (on parle d' objets \u00abmutables\u00bb ). Pour cr\u00e9er un tableau, il existe diff\u00e9rentes m\u00e9thodes : une de ces m\u00e9thodes ressemble beaucoup \u00e0 la cr\u00e9ation d'un tuple : mon_tab = [ 5 , 8 , 6 , 9 ] mon_tab Notez la pr\u00e9sence des crochets \u00e0 la place des parenth\u00e8ses. Un tableau est une s\u00e9quence, il est donc possible de \u00abr\u00e9cup\u00e9rer\u00bb un \u00e9l\u00e9ment d'un tableau \u00e0 l'aide de son indice (de la m\u00eame mani\u00e8re que pour un tuple).","title":"II. Les tableaux en Python"},{"location":"Tableaux/TP07_TuplesTableauxCours/#iii-travailler-sur-des-tableaux-de-tableaux","text":"Chaque \u00e9l\u00e9ment d'un tableau peut \u00eatre un tableau, on parle de tableau de tableau. Voici un exemple de tableau de tableau : m = [[ 1 , 3 , 4 ], [ 5 , 6 , 8 ], [ 2 , 1 , 3 ], [ 7 , 8 , 15 ]] Le premier \u00e9l\u00e9ment du tableau ci-dessus est bien un tableau ( [1, 3, 4] ), le deuxi\u00e8me \u00e9l\u00e9ment est aussi un tableau ( [5, 6, 8] )... Il est souvent plus pratique de pr\u00e9senter ces \u00abtableaux de tableaux\u00bb comme suit : m = [[ 1 , 3 , 4 ], [ 5 , 6 , 8 ], [ 2 , 1 , 3 ], [ 7 , 8 , 15 ]] Nous obtenons ainsi quelque chose qui ressemble beaucoup \u00e0 un \"objet math\u00e9matique\" tr\u00e8s utilis\u00e9 : une matrice . Il est \u00e9videmment possible d'utiliser les indices de position avec ces \u00abtableaux de tableaux\u00bb. Pour cela nous allons consid\u00e9rer notre tableau de tableaux comme une matrice, c'est \u00e0 dire en utilisant les notions de \u00abligne\u00bb et de \u00abcolonne\u00bb. Dans la matrice ci-dessus : En ce qui concerne les lignes : 1, 3, 4 constituent la premi\u00e8re ligne 5, 6, 8 constituent la deuxi\u00e8me ligne 2, 1, 3 constituent la troisi\u00e8me ligne 7, 8, 15 constituent la quatri\u00e8me ligne En ce qui concerne les colonnes : 1, 5, 2, 7 constituent la premi\u00e8re colonne 3, 6, 1, 8 constituent la deuxi\u00e8me colonne 4, 8, 3, 15 constituent la troisi\u00e8me colonne Pour cibler un \u00e9l\u00e9ment particulier de la matrice, on utilise la notation avec \u00abdoubles crochets\u00bb : m[ligne][colonne] (sans perdre de vu que la premi\u00e8re ligne et la premi\u00e8re colonne ont pour indice 0 ) \u00c0 vous 14 Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable a apr\u00e8s l'ex\u00e9cution du programme ci-dessous ? m = [[ 1 , 3 , 4 ], [ 5 , 6 , 8 ], [ 2 , 1 , 3 ], [ 7 , 8 , 15 ]] a = m [ 1 ][ 2 ] a 8 Comme vous pouvez le constater, la variable a r\u00e9f\u00e9rence bien l'entier situ\u00e9 \u00e0 la 2e ligne (indice 1) et \u00e0 la 3e colonne (indice 2), c'est-\u00e0-dire 8. \u00c0 vous 15 Quel est le contenu du tableau r\u00e9f\u00e9renc\u00e9 par la variable mm apr\u00e8s l'ex\u00e9cution du programme ci-dessous ( si n\u00e9cessaire, affichez d'abord la valeur de mm sans ex\u00e9cuter la derni\u00e8re ligne, pour bien comprendre ) ? m = [ 1 , 2 , 3 ] mm = [ m , m , m ] print ( mm ) m [ 0 ] = 100 mm [[100, 2, 3], [100, 2, 3], [100, 2, 3]] Comme vous pouvez le constater, la modification du tableau r\u00e9f\u00e9renc\u00e9 par la variable m entraine la modification du tableau r\u00e9f\u00e9renc\u00e9 par la variable mm (alors que nous n'avons pas directement modifi\u00e9 le tableau r\u00e9f\u00e9renc\u00e9 par mm ). Il faut donc \u00eatre tr\u00e8s prudent lors de ce genre de manipulation afin d'\u00e9viter des modifications non d\u00e9sir\u00e9es. Il est possible de parcourir l'ensemble des \u00e9l\u00e9ments d'une matrice \u00e0 l'aide d'une \u00abdouble boucle for \u00bb : \u00c0 vous 16 Analysez puis testez le code suivant : m = [[ 1 , 3 , 4 ], [ 5 , 6 , 8 ], [ 2 , 1 , 3 ], [ 7 , 8 , 15 ]] nb_colonne = 3 nb_ligne = 4 for i in range ( 0 , nb_ligne ): for j in range ( 0 , nb_colonne ): a = m [ i ][ j ] print ( a )","title":"III. Travailler sur des \"tableaux de tableaux\""},{"location":"Tableaux/TP08_TuplesTableauxExercicesCorrige/","text":"TD n\u00b08 : Les types construits : tuples et tableaux Th\u00e8me 4 : Langages et Programmation EXERCICES Lien Capytale Exercice 8.1 Enonc\u00e9 Solution On consid\u00e8re la variable repertoire suivante. repertoire = [( 'Michel' , '0210101010' ), ( 'Marjorie' , '0211111111' ), ( 'Perrine' , '0212121212' )] Quel est le type de la variable repertoire ? Quel est le type de la variable repertoire[0] ? Qu'affiche l'instruction repertoire[1][1] ? Quelle instruction permet d'acc\u00e9der au num\u00e9ro de t\u00e9l\u00e9phone de Michel ? Quel est le type de la variable repertoire[2][0] ? La variable repertoire est de type list La variable repertoire[0] est de type tuple L'instruction repertoire[1][1] affiche 0211111111 Pour acc\u00e9der au num\u00e9ro de t\u00e9l\u00e9phone de Michel, il faut utiliser l'instruction repertoire[0][1] La variable repertoire[2][0] est de type str Exercice 8.2 R\u00e9pondez aux questions suivantes puis ex\u00e9cutez la cellule pour v\u00e9rifier. Quel est le tableau construit par les instructions suivantes ? t1 = [ 0 ] * 10 for i in range ( 10 ): t1 [ i ] = i Quel est le tableau construit par les instructions suivantes ? t2 = [ i + 1 for i in range ( 8 )] Quel est le tableau construit par les instructions suivantes ? t3 = [ i * i for i in range ( 5 , 10 )] Quel est le tableau construit par les instructions suivantes ? t4 = [ 0 ] * 50 for i in range ( len ( t4 )): t4 [ i ] = i % 2 Exercice 8.3 Enonc\u00e9 Solution Compl\u00e9tez la fonction suivante pour qu'elle \u00e9change les valeurs d'index i et j du tableau tab . Exemple T = [ 3 , 8 , 12 , 9 , 56 , 14 , 22 , 7 , 13 , 41 ] echange ( T , 2 , 4 ) T [ 3 , 8 , 56 , 9 , 12 , 14 , 22 , 7 , 13 , 41 ] def echange ( tab , i , j ): pass return tab # Tests T = [ 3 , 8 , 12 , 9 , 56 , 14 , 22 , 7 , 13 , 41 ] echange ( T , 2 , 4 ) T def echange ( tab , i , j ): temp = tab [ j ] tab [ j ] = tab [ i ] tab [ i ] = temp return tab Exercice 8.4 Enonc\u00e9 Solution On consid\u00e8re le tableau t suivant. t = [ 0 , 2 , 4 , 6 , 8 , 10 ] Ecrivez un programme qui parcourt par indice le tableau et affiche tous ses \u00e9l\u00e9ments. Ecrivez un programme qui parcourt par valeur le tableau et affiche ses \u00e9l\u00e9ments. Ecrire un programme qui calcule la somme des \u00e9l\u00e8ments du tableau. Parcours par indice for indice in range ( len ( t )): print ( t [ indice ]) Parcours par valeur for elt in t : print ( elt ) Calcul de la somme des termes d'une suite somme = 0 for valeur in t : somme = somme + valeur # ou somme+=valeur Exercice 8.5 : Enonc\u00e9 Solution On consid\u00e8re le tableau d\u00e9fini par compr\u00e9hension suivant. T = [ i for i in range ( 15 )] Que contient le tableau T ? Ecrivez un programme qui parcourt le tableau T et qui affiche uniquement les multiples de 2 qu'il contient. for valeur in T : if valeur % 2 == 0 : #on teste si valeur est pair que montrant que le reste de la division euclidienne par 2 vaut 0 print ( valeur ) Exercice 8.6 : Enonc\u00e9 Solution On rappelle que l'on peut construire un tableau en utilisant une boucle for (en ayant au pr\u00e9alable cr\u00e9\u00e9 un tableau de la bonne taille avec une valeur arbitraire) ou en le d\u00e9finissant par compr\u00e9hension. Utilisez les deux m\u00e9thodes pour construire les tableaux demand\u00e9s. Un tableau qui contient tous les entiers compris entre 0 et 1000. Un tableau qui contient tous les entiers compris entre 5 et 15. Un tableau qui contient tous les nombres pairs compris entre 0 et 50. Un tableau qui contient les carr\u00e9s de tous les entiers compris entre 1 et 100 (c'est-\u00e0-dire 1, 4, 9, 16, etc.) # Q1 avec m\u00e9thode 1 # Q1 avec m\u00e9thode 2 # Q2 avec m\u00e9thode 1 # Q2 avec m\u00e9thode 2 # Q3 avec m\u00e9thode 1 # Q3 avec m\u00e9thode 2 # Q4 avec m\u00e9thode 1 # Q4 avec m\u00e9thode 2 #Q1 M\u00e9thode 1 tab1 = [] #initialisation for k in range ( 0 , 1001 ): tab1 . append ( k ) #Q1 M\u00e9thode 2 par compr\u00e9hension tab1 = [ k for k in range ( 0 , 1001 )] #Q2 M\u00e9thode 1 tab2 = [] #initialisation for k in range ( 5 , 16 ): tab2 . append ( k ) #Q2 M\u00e9thode 2 par compr\u00e9hension tab2 = [ k for k in range ( 5 , 16 )] #Q3 M\u00e9thode 1 tab3 = [] #initialisation for k in range ( 0 , 51 , 2 ): tab3 . append ( k ) #Q3 M\u00e9thode 2 par compr\u00e9hension tab3 = [ k for k in range ( 0 , 51 , 2 )] ou #Q3 M\u00e9thode 2 par compr\u00e9hension tab3 = [ k for k in range ( 51 ) if k % 2 == 0 ] #Q4 M\u00e9thode 1 tab4 = [] #initialisation for k in range ( 1 , 101 ): tab4 . append ( k ** 2 ) #Q4 M\u00e9thode 2 par compr\u00e9hension tab4 = [ k ** 2 for k in range ( 1 , 101 )] Exercice 8.7 : Moyenne annuelle Enonc\u00e9 Solution Compl\u00e9ter la fonction moyenne qui prend en argument un tableau de notes et qui renvoie la moyenne de ce tableau. notes = [ 12 , 10 , 15 , 18 , 8 ] moyenne ( notes ) >>> 12.6 def moyenne ( notes ): ... ... ... def moyenne ( notes ): somme = 0 nb_notes = len ( notes ) for note in notes : somme += note moy = somme / nb_notes return moy Exercice 8.8 : Moyenne coefficient\u00e9e Enonc\u00e9 Solution Voici les premi\u00e8res notes de l'ann\u00e9e obtenues par un \u00e9l\u00e8ve en NSI : Note coefficient 15 1 13 2 8 1 18 1 Ces notes et coefficients sont d'abord stock\u00e9es dans deux tableaux comme ci-dessous. a. Quelle instruction permet d'acc\u00e9der la troisi\u00e8me note ? b. Quelle instruction permet d'acc\u00e9der au coefficient de la deuxi\u00e8me note ? notes = [ 15 , 13 , 8 , 18 ] coeff = [ 1 , 2 , 1 , 1 ] 2.Ecrire une fonction moyenneCoeff(notes,coeffs) qui prend en param\u00e8tres deux tableaux et qui renvoie la moyenne coefficient\u00e9e correspondante. def moyenneCoeff ( notes , coeffs ): sommenotes = 0 sommecoeffs = 0 for i in range ( ... ): ... 3. Ces notes et coefficient sont maintenant stock\u00e9es dans un tableau de tableaux. Quelle instruction permet d'acc\u00e9der \u00e0 la troisi\u00e8me paire note-coefficient ? Quelle instruction permet d'acc\u00e9der la troisi\u00e8me note ? Quelle instruction permet d'acc\u00e9der au coefficient de la deuxi\u00e8me note ? notes_coeff = [[ 15 , 1 ], [ 13 , 2 ], [ 8 , 1 ], [ 18 , 1 ]] 4.Ecrire une fonction moyenneCoeff(tab) qui prend en param\u00e8tre un tableau et qui renvoie la moyenne coefficient\u00e9e correspondante. def moyenne ( notes , coeffs ): sommenotes = 0 sommecoeffs = 0 nb2notes = len ( notes ) for indice in range ( nb2notes ): sommenotes += notes [ indice ] sommecoeffs += coeffs [ indice ] moy = sommenotes / sommecoeffs return moy def moyenneCoeff ( tab ): sommenotes = 0 sommecoeffs = 0 nb2notes = len ( tab ) for indice in range ( nb2notes ): sommenotes += tab [ indice ][ 0 ] * tab [ indice ][ 1 ] #les notes ont toujours pour position 0 dans le tableau extrait et les coeffs ont pour position1 sommecoeffs += tab [ indice ][ 1 ] moy = sommenotes / sommecoeffs return moy Exercice 5.9 : Enonc\u00e9 R\u00e9pondez aux questions suivantes puis ex\u00e9cutez la cellule pour v\u00e9rifier. Quel est le tableau construit par compr\u00e9hension de la fa\u00e7on suivante ? tab = [[ j ** 2 for j in range ( 5 )] for i in range ( 3 )] tab Quel est le tableau construit par compr\u00e9hension de la fa\u00e7on suivante ? tab = [[ 2 * i + j for j in range ( 2 )] for i in range ( 4 )] tab Exercice 8.10 : Enonc\u00e9 Solution On a m\u00e9morise dans le tableau grille l'\u00e9tat d'un jeu de morpion. Voici le contenu du jeu apr\u00e8s deux tours. grille = [[ 'X' , '.' , 'O' ], [ '.' , '.' , 'O' ], [ '.' , '.' , 'X' ]] C'est au joueur \u00ab O \u00bb de jouer et il compte mettre un 'O' au centre de la grille. Quelle instruction faut-il \u00e9crire ? V\u00e9rifiez. Vous avez du constater qu'en affichant le tableau, celui ne s'affiche pas comme on souhaiterait (comme la grille du jeu). Pour pallier \u00e0 ce souci, il suffit de parcourir le tableau ligne par ligne et afficher cette ligne. Ecrivez le programme correspondant. Approfondissement Pour ceux qui le d\u00e9sire, \u00e9crire un programme permettant de joueur au morpion. grille [ 1 ][ 1 ] for ligne in grille : print ( ligne ) Parcours tableaux \u00e0 plusieurs dimensions \u2693\ufe0e Exercice 8.11 : Enonc\u00e9 Solution Ecrire une fonction ajoutNumero(rep,nom,numero) qui prend pour param\u00e8tre un r\u00e9pertoire, un nomn et un numero de t\u00e9l\u00e9phone et qui permet d'enregistrer un nouveau nom ainsi que son num\u00e9ro dans le r\u00e9pertoire repertoire = [[ 'Michel' , '0210101010' ], [ 'Marjorie' , '0211111111' ], [ 'Perrine' , '0212121212' ]] def ajoutNumero ( rep , nom , numero ): rep . append ([ nom , numero ]] return rep Exercice 8.12 : Enonc\u00e9 Solution Ecrivez une fonction somme(t) qui renvoie la somme des \u00e9l\u00e9ments du tableau d'entiers t . Exemple : t = [ 1 , 2 , 3 , 5 , 7 , 10 ] somme ( t ) >>> 28 def ajoutNumero ( rep , nom , numero ): rep . append ([ nom , numero ]] return rep Exercice 8.13 : cadavre exquis Enonc\u00e9 Solution Le cadavre exquis est un \u00ab jeu qui consiste \u00e0 faire composer une phrase, ou un dessin, par plusieurs personnes sans qu'aucune d'elles ne puisse tenir compte de la collaboration ou des collaborations pr\u00e9c\u00e9dentes.\u00bb Remarque : la m\u00e9thode choice du module random permet de tirer au sort un \u00e9l\u00e9ment dans un it\u00e9rable non vide (et donc dans un tableau non vide). Vous pouvez ex\u00e9cuter plusieurs fois la cellule de code ci-dessous pour tester : from random import choice tab = [ 'chat' , 'chien' , 'cheval' , 'vache' , 'cochon' ] animal = choice ( tab ) animal Compl\u00e9ter la fonction cadavre_exquis ci-dessous qui prend en argument : - un tableau de noms non vide, - un tableau de verbes non vide, - un tableau de compl\u00e9ments non vide, et qui renvoie une phrase al\u00e9atoire construite selon le principe du cadavre exquis : en piochant un nom dans le tableau de noms, puis en piochant un verbe dans le tableau de verbes et enfin en piochant un compl\u00e9ment dans le tableau de compl\u00e9ments. from random import choice def cadavre_exquis ( noms , verbes , complements ): nom = ... verbe = ... complement = ... phrase = ... return ... from random import choice def cadavre_exquis ( noms , verbes , complements ): nom = noms verbe = verbes complement = complements phrase = choice ( nom ) + choice ( verbe ) + choice ( complement ) return phrase Tester votre fonction en compl\u00e9tant l'exemple ci-dessous. n = [ 'Le chasseur ' , 'La pr\u00e9sidente ' , 'Le lapin ' , 'Pikachu ' , 'La com\u00e8te ' , 'La licorne ' ] v = [ 'mange ' , 'cherche ' , 'entretient ' , 'admire ' , 'v\u00e9n\u00e8re ' , 'admoneste ' ] c = [ 'la saucisse.' , 'la for\u00eat.' , 'la casquette.' , 'la bicyclette.' , 'le micro-processeur.' ] cadavre_exquis ( n , c , v ) Exercice 8.14 : Travail sur les listes en compr\u00e9hension Enonc\u00e9 Solution Cr\u00e9ez une liste Liste1 de 15 entiers al\u00e9atoires compris entre 0 et 20 \u00e0 l'aide d'une boucle. Aide : Nous allons utiliser le module random qui g\u00e9n\u00e8re des nombres pseudo-al\u00e9toires. Commencez par importer la fonction randint du module avec l'instruction : from random import randint \u00e0 placer en d\u00e9but de cellule. L'instruction randint(a,b) retournera un entier al\u00e9toire compris entre a et b (bornes comprises) Vers la documentation du module #un exemple : from random import randint Liste1 = [] for k in range ( 15 ): alea = randint ( 0 , 20 ) Liste1 . append ( alea ) print ( Liste1 ) Cr\u00e9ez une liste Liste2 de 30 entiers al\u00e9atoires compris entre 0 et 20 \u00e0 l'aide d'une compr\u00e9hension de liste. Liste2 = # Votre code ici print ( Liste2 ) Cr\u00e9ez une fonction moyenne qui prend en param\u00e8tre une liste de nombres et qui renvoie la moyenne de cette liste. Testez votre fonction \u00e0 l'aide des assert de la cellule suivante. def moyenne ( liste ): pass return moyenne # M\u00e9thode de TEST assert moyenne ( Liste1 ) == sum ( Liste1 ) / len ( Liste1 ) assert moyenne ( Liste2 ) == sum ( Liste2 ) / len ( Liste2 ) Un m\u00e9chant professeur veut baisser le notes de ses \u00e9l\u00e8ves de 10 % Cr\u00e9ez une liste Liste3 obtenue en diminuant de 10 % les nombres de la liste Liste1 avec une compr\u00e9hension de liste Testez votre fonction \u00e0 l'aide des assert de la cellule suivante. Liste3 = # Votre code ici Liste3 for index in range ( len ( Liste1 )): assert Liste3 [ index ] == Liste1 [ index ] * 0.9 Le m\u00eame professeur cherche \u00e0 \u00e9crire des appr\u00e9ciation automatiques en fonction de la note. Il souhaite voir \u00e9crit \"Pas terrible\" si la note est inf\u00e9rieure ou \u00e9gale \u00e0 10 et \"Pas mal\" sinon. Cr\u00e9ez une liste Appreciations \u00e0 partir de la liste Liste1 \u00e0 l'aide d'une comprehension de liste Aide : [<expression> if <condition> else <autre_expression> for <element> in <iterable>] Appreciations = # Votre code ici print ( Liste1 ) print ( Appreciations ) Le professeur souhaite maintenant cr\u00e9er une fonction app2 qui prend en param\u00e8tre un nombre et qui renvoie un tuple constitu\u00e9 de ce nombre et d'une appr\u00e9ciation. L'appr\u00e9ciation sera : - \"Bon travail\" si la note est sup\u00e9rieure ou \u00e9gale \u00e0 15; - \"Fais encore des efforts\" si la note est entre 10 et 15 (non compris); - \"Au travail !\" si la note est inf\u00e9rieure ou \u00e9gale \u00e0 10. Ecrivez la fonction ci-dessous def app2 ( nombre ): pass # Votre code ici Cr\u00e9ez une liste Appreciations2 \u00e0 partir de la liste Liste2 contenant les notes et les appr\u00e9ciation \u00e0 l'aide d'une compr\u00e9hension de liste Appreciations2 = [ app2 ( nb ) for nb in Liste2 ] print ( Appreciations2 ) from random import randint liste2 = [ randint ( 0 , 20 ) for k in range ( 30 )] def moyenne ( liste ): somme = 0 for elt in liste : somme += elt moy = somme / len ( liste ) return moy Appreciations = [ 'Pas terrible' if elt < 10 else 'Pas mal' for elt in Liste1 ] def app2 ( nombre ): if nombre <= 10 : return ( nombre , 'Au travail !' elif nombre >= 15 : return ( nombre , 'Bon travail' ) else : return ( nombre , 'Fais encore des efforts' ) Exercice 8.15 : Travail sur les listes de listes. Les carr\u00e9s magiques : prolongement de l'exercice vu dans la le\u00e7on. Premi\u00e8re \u00e9tape - Cr\u00e9er une fonction Gen_carre qui prend en param\u00e8tre un entier naturel non nul \\(n\\) , et qui renvoie un tableau carr\u00e9 (liste de liste) contenant les entiers de 1 \u00e0 \\(n^2\\) entiers \"m\u00e9lang\u00e9s\" Par exemple : Gen_carre(3) porra retourner [[2,7,6], [9,5,1], [4,3,8]] Vous allez utiliser le module random et en particulier la fonction shuffle qui prend en param\u00e8tre une liste et qui la m\u00e9lange \"sur place\". Par exemple liste = [0,1,2,3] suivi de shuffle(liste) va m\u00e9langer les \u00e9l\u00e9ments de liste et, par exemple, on obtiendra liste = [3,0,1,2] . from random import shuffle , randint def Gen_carre ( n ): carre3 = Gen_carre ( 3 ) print ( carre3 ) Deuxi\u00e8me \u00e9tape : Ecrire une fonction somme_ligne qui prend en param\u00e8tres un tableau carr\u00e9 d'entiers et un entier \\(n\\) et qui retourne la somme de la ligne d'index \\(n\\) def somme_ligne ( carre : list , n : int ): # Tests de la fonction somme_ligne carre3 = [[ 2 , 7 , 6 ], [ 9 , 5 , 1 ], [ 4 , 3 , 8 ]] carre4 = [[ 4 , 5 , 11 , 14 ], [ 15 , 10 , 8 , 1 ], [ 7 , 3 , 13 , 12 ], [ 9 , 16 , 2 , 6 ]] assert somme_ligne ( carre3 , 0 ) == 15 assert somme_ligne ( carre3 , 1 ) == 15 assert somme_ligne ( carre3 , 2 ) == 15 assert somme_ligne ( carre4 , 0 ) == 34 assert somme_ligne ( carre4 , 3 ) == 33 Troisi\u00e8me \u00e9tape : Ecrire une fonction verif_lignes qui prend en param\u00e8tres un tableau carr\u00e9 d'entiers et qui retourne un bool\u00e9en indiquant si toutes les lignes ont la m\u00eame somme. def verif_lignes ( carre : list ): # Tests de la fonction verif_lignes assert verif_lignes ( carre3 ) == True assert verif_lignes ( carre4 ) == False Quatri\u00e8me \u00e9tape : Faire de m\u00eame avec les colonnes. Vous avez la libert\u00e9 pour construire les fonctions que vous souhaitez, ajoutez des docstrings et des tests \u00e0 vos fonctions. def somme_colonne ( carre : list , index_colonne : int ): assert somme_colonne ( carre3 , 0 ) == 15 assert somme_colonne ( carre3 , 1 ) == 15 assert somme_colonne ( carre3 , 2 ) == 15 assert somme_colonne ( carre4 , 0 ) == 35 assert somme_colonne ( carre4 , 1 ) == 34 def verif_colonnes ( carre : list ): assert verif_colonnes ( carre3 ) == True assert verif_colonnes ( carre4 ) == False Cinqui\u00e8me \u00e9tape : V\u00e9rifier de m\u00eame les deux diagonales def verif_diag ( carre : list ): assert verif_diag ( carre3 ) == True assert verif_diag ( carre4 ) == False Derni\u00e8re \u00e9tape : Ecrire une fonction qui prend en param\u00e8tre un tableau carr\u00e9 d'entiers et qui retourne un bool\u00e9en indiquant si le carr\u00e9 est magique def verif_carre ( carre ): assert verif_carre ( carre3 ) == True assert verif_carre ( carre4 ) == False Bonus : \u00e0 l'aide de votre fonction Gen_carre , trouvez des carr\u00e9s magiques d'ordre 3, puis 4. Conseil : soyez patient ! # Voici une exemple de solution (Aucune inqui\u00e9tude, je ne demandais pas de trouver ce type de programme mais d'essayer \u00e0 la main def carre_magique_ordre3 (): carre_magique_ordre3 ()","title":"TP 08 Les tableaux Exercices"},{"location":"WEB/HTML_CSS/","text":"TD n\u00b011 : HTML et CSS Th\u00e8me : INTERACTIONS ENTRE HOMME ET LA MACHINE COURS Les langages informatique HTML et CSS sont les langages des pages Web. Ce sont deux langages compl\u00e9mentaires compris par les navigateurs. Ce ne sont pas des langages de programmation mais des langages de description. Je vous mets \u00e0 disposition des vid\u00e9os de cours disponible en ligne, ainsi qu'un r\u00e9sum\u00e9 du cours fait en classe (Les bases de SNT de seconde) Une vid\u00e9o r\u00e9sumant l'essentiel du html et du css (18min29) \u2693\ufe0e Vid\u00e9o NSI4NOOBS Cours : Apprenez \u00e0 cr\u00e9er votre site web avec HTML5 et CSS3 \u2693\ufe0e Openclassroom : Apprenez \u00e0 cr\u00e9er votre site web avec HTML5 et CSS3 Cours complet en vid\u00e9os du HTML et CSS en 3 parties de Pierre Giraud et son format web : \u2693\ufe0e Cours html - css de Pierre Giraud Partie 1 : (1h23) \u2693\ufe0e Vid\u00e9o Partie 1 Partie 2 : (1h15) \u2693\ufe0e Vid\u00e9o partie 2 Partie 3 : (1h42) \u2693\ufe0e Vid\u00e9o partie 3 Un site avec toutes les possibilit\u00e9s pour le HTML et le CSS \u2693\ufe0e Tutoriel HTML Tutoriel CSS I. Qu'est ce que le HTML ? \u2693\ufe0e Quand on consulte un site web, notre ordinateur se connecte \u00e0 un serveur distant et celui-ci lui envoie une page web, que le navigateur va pouvoir afficher. En g\u00e9n\u00e9ral la page est constitu\u00e9e de plusieurs fichiers : un fichier HTML (il existe d\u2019autres formats qui seront \u00e9tudi\u00e9s plus tard : php, jsp, asp, ...) un fichier CSS un fichier JS des images, du sons, ... Le format HTML (de l\u2019anglais HyperText Markup Language, ou \u00ab langage de balisage hypertexte \u00bb) est un format textuel qui permet de d\u00e9crire le contenu et la structure d\u2019une page Web. Plusieurs versions du langage HTML se sont succ\u00e9d\u00e9es depuis la premi\u00e8re en 1992, celle utilis\u00e9e actuellement est HTML5. Un peu d\u2019histoire : TimBerners-Lee est consid\u00e9r\u00e9 comme l\u2019inventeur du HTML en1992. C\u2019est un informaticien britannique, qui a aussi invent\u00e9 le Web (World Wide Web ou WWW) en 1989 lors de ses travaux au CERN. En juillet 2004, il est fait chevalier par la reine \u00c9lisa- beth II pour ce travail et son nom officiel devient Sir Timothy John Berners-Lee. Depuis 1994, il pr\u00e9side le World Wide Web Consortium (W3C), organisme qu\u2019il a fond\u00e9 et qui est en charge de promouvoir la compatibilit\u00e9 des technologies du Web. Il est \u00e9galement laur\u00e9at du prix Turing 2016. Le Langage HTML et CSS La description du contenu et de la structure d\u2019une page Cette description se fait en utilisant ce qu\u2019on appelle des balises. Ce sont ces balises qui vont indiquer si telle partie du document est un titre, oubien un paragraphe, ou bien une image, ... Les balises Une balise est un mot-clef permettant d\u2019indiquer au navigateur ce qu\u2019il doit faire avec le contenu. Les balises contr\u00f4lent tout. Elles permettent de g\u00e9rer la structure, les images, les liens, la police d\u2019affichage utilis\u00e9e, les titres, ... On \u00e9crit pour ouvrir une balise (appel\u00e9e balise ouvrante ) et pour la fermer appel\u00e9e balisefermante ). De mani\u00e8re g\u00e9n\u00e9rale, toute balise ouverte doit \u00eatre ferm\u00e9e. Voici la structure minimale (squelette) de toute page HTML : <!DOCTYPE html> <!-- langage utilis\u00e9, html pour html5 --> < html lang = \"fr\" > <!-- d\u00e9but de la page web --> < head > <!-- En t\u00eate de la page, la balise n ' est pas affich\u00e9, mais elle permet ,! de donner des informations telles que le titre de la page ou la police de ,! caract\u00e8res utilis\u00e9e --> < title > Le html en 1\u00e8re NSI </ title > < meta charset = \"utf-8\" /> </ head > < body > <!-- Corps de la page, c'est ici que l'on \u00e9crit tout ce qui doit \u00eatre affich\u00e9 --> < h1 > COURS de NSI </ h1 > <!-- balise de titre de niveau 1, il y 6 niveaux possibles--> < p > Bienvenue en cours de NSI. </ p > </ body > </ html > On retrouve toujours : une premi\u00e8re ligne <!DOCTYPE html> qui indique que le fichier texte qui suit et \u00e9crit dans le langage HTML La balise <html> </html> , qui est la balise principale du code , elle englobe tout le contenu \u00e9crit en HTML du fichier. Dans cette balise, on distingue deux partie diff\u00e9rentes : La balise <head></head> qui est la balise d\u2019en-t\u00eate du document et qui donne les informations g\u00e9n\u00e9rales sur la page Web : on peut y idiquer son titre, l\u2019encodage des caract\u00e8res, les mots-cl\u00e9s, son auteur, etc. La balise <body></body> qui est la balise du corps de la page : elle encadre tout le contenu que le navigateur doit affihcer \u00e0 l\u2019\u00e9cran. Ces balises sont obligatoires dans tout document HTML. On peut remarquer que certaines balises particuli\u00e8res ne se ferment pas (comme la balise <meta/> ). Dans ce cas il y a un \u201c/\u201d avant le \u201c>\u201d. \ud83d\udd8b D\u00e9finition : Le nom d\u2019une balise s\u2019appelle un \u00e9l\u00e9ment (exemple ici body, p ou meta). Certains \u00e9l\u00e9ments peuvent avoir des attributs pour d\u00e9finir des param\u00e8tres. Dans ce cas les attributs sont toujours donn\u00e9s entre guillemets \" \" ou apostrophes \u2018 \u2019. De plus des balises peuvent \u00eatre imbriqu\u00e9es les une dans les autres mais pas se chevaucher ! \u27a1 Remarque Les commentaires sont d\u00e9limit\u00e9s par les caract\u00e8res , ils ne sont pas interpr\u00e9t\u00e9s par le navigateur et servent \u00e0 l\u2019auteur pour \u00e9crire des notes (destin\u00e9es \u00e0 lui-m\u00eame ou \u00e0 d\u2019autres personnes). Exemple : < p > Bienvenue en < em > cours </ em > de NSI. < br /> Ici les balises sont correctement imbriqu\u00e9es </ p > < p > Bienvenue en < em > cours de NSI. < br /> Probl\u00e8me, la balise em est ferm\u00e9 apr\u00e8s la balise p !! </ p ></ em > III. Block / Inline \u2693\ufe0e Voici les \u00e9l\u00e9ments les plus courants mais il en existe d\u2019autres. Ils peuvent \u00eatre regroup\u00e9es en deux cat\u00e9gories : les \u00e9l\u00e9ments de bloc ( block en anglais) qui s\u2019affichent comme un bloc ( saut de ligne avant et apr\u00e8s automatiquement), les \u00e9l\u00e9ments en ligne ( inline en anglais) qui s\u2019affichent dans la ligne courante. Un \u00e9l\u00e9ment inline doit obligatoirement \u00eatre \u00e0 l\u2019int\u00e9rieur d\u2019un bloc. \u25b6 Balises de type block : < body > < p > Un paragraphe </ p > < h1 > Un titre de premier niveau </ h1 > < h2 > Un titre de niveau 2 </ h2 > < ul > <!-- une liste \u00e0 puce (Unordered List) --> < li > Premier \u00e9l\u00e9ment de la liste \u00e0 puce </ li > < li > Deuxi\u00e8me \u00e9l\u00e9ment de la liste \u00e0 puce </ li > </ ul > < ol > <!-- une liste num\u00e9rot\u00e9e (Ordered List) --> < li > Premier \u00e9l\u00e9ment de la liste num\u00e9rot\u00e9e </ li > < li > Deuxi\u00e8me \u00e9l\u00e9ment de la liste num\u00e9rot\u00e9e </ li > </ ol > < div > Un bloc quelconque, utile pour la mise en forme </ div > </ body > </ html > \u25b6 Balises type inline : Balise Fonction Attributs utiles <br/> Retour \u00e0 la ligne <img/> Permet d\u2019ins\u00e9rer une image - src = \u2019emplacement de l\u2019image\u2019 - alt = \u2019texte \u00e0 afficher si probl\u00e8me\u2019 <a> Ancre, permet de cr\u00e9er un lien - name = \u2019nom de l\u2019ancre\u2019 \u2003- href = \u2019lien\u2019 Exemple : < body > < h1 > Un exemple avec des \u00e9l\u00e9ments inline </ h1 > < p > Voici un paragraphe. Pas d'\u00e9l\u00e9ment br donc pas de retour \u00e0 la ligne. < br /> Apr\u00e8s la balise une nouvelle ligne commence. < br /> Une ligne avec une image : < img src = ' adresse image ' alt = ' Mon image' />< br /> Et maintenant un lien vers un autre site : < a href = ' url souhait\u00e9e ' > Le site du prof ! </ a > </ p > </ body > </ html > IV. Et le CSS alors ? \u2693\ufe0e \ud83d\udd8b Langage CSS Le format CSS (de l\u2019anglais Cascading Style Sheets,ou \u00abfeuilles de styles en cascade\u00bb) est un format textuel qui permet de d\u00e9crire la mise en forme des documents HTML (et XML). La premi\u00e8re version du langage CSS date de 1996. Celui-ci est pris en charge par tous les navigateurs depuis les ann\u00e9es 2000. La version utilis\u00e9e actuellement est CSS3. \ud83d\udd8b Un langage de style Le langage CSS permet de d\u00e9finir les propri\u00e9t\u00e9s graphiques des \u00e9l\u00e9ments HTML constituant une page Web : les polices utilis\u00e9es, leurs tailles, les couleurs utilis\u00e9es, la position des \u00e9l\u00e9ments dans la page, etc. Ce langage permet de s\u00e9parer le contenu (d\u00e9crit en HTML) de la forme (d\u00e9crit en CSS) d\u2019une page Web. En pratique, le fichier CSS sera associ\u00e9 au fichier HTML et le navigateur pourra alors savoir comment il doit mettre en forme le contenu de la page Web. Le fichier \u2018.css\u2019 (cascading style sheet) qui accompagne souvent une page html sert \u00e0 d\u00e9finir tout ce qui concernelaformedudocument(l\u00e0 o\u00f9 la partie HTML s\u2019occupe plut\u00f4t du contenu). Il g\u00e8re donc la taille de la police, la couleur, le positionnement des blocs, des images, ... Exemple d'utilisation Exemple de page internet sans CSS et avec CSS. Un fichier contenant du code CSS permet de donner des informations sur la forme que doit avoir une page internet (couleur de la police, position et taille des images, fond de page, menus, ...). Ce fichier peutavoirlenomquel\u2019onsouhaite(onutiliseran\u00e9anmoinspr\u00e9f\u00e9remmentl\u2019extension.css). Dansnotre exemple ce fichier s\u2019appellera \u201cstyle.css\u201d. \ud83d\udd8b Ce qu\u2019il faut retenir Modifications \u00e0 apporter dans le fichier HTML : - il faut donner le nom (et le chemin si n\u00e9cessaire) du(des) fichier(s) CSS \u00e0 utiliser. Cela se fait \u00e0 l\u2019aide de la balise suivante dans l\u2019en-t\u00eate : ` on peut maintenant utiliser 2 nouveaux attributs dans les balises HTML, id=\"nomUnique\" : permet de donner un nom unique \u00e0 un \u00e9l\u00e9ment pour lui appliquer un style particulier, class=\"nom\" : permet de donner le m\u00eame nom \u00e0 un ensemble d\u2019\u00e9l\u00e9ments auxquels on veut appliquer le m\u00eame style. Dans le fichier CSS on peut maintenant cr\u00e9er un ensemble de r\u00e8gles \u00e0 appliquer. Une r\u00e8gle est compos\u00e9e d\u2019un s\u00e9lecteur (l\u2019objet auquel la r\u00e8gle doit s\u2019appliquer) et de d\u00e9clarations de propri\u00e9t\u00e9s. Les d\u00e9clarations se trouvent entre accolades et les propri\u00e9t\u00e9s sont s\u00e9par\u00e9es par des points-virgules. Il y a beaucoup de s\u00e9lecteurs diff\u00e9rents, les plus courants sont : le nom d\u2019un type d\u2019\u00e9l\u00e9ments (ex: html, p, body, h1, img, ... ): la r\u00e8gle s\u2019applique \u00e0 tous les \u00e9l\u00e9ments de la page de ce type, le nom d\u2019un id pr\u00e9c\u00e9d\u00e9 d\u2019un # : la r\u00e8gle s\u2019applique au seul \u00e9l\u00e9ment ayant cet id, le nom d\u2019une classe pr\u00e9c\u00e9d\u00e9 d\u2019un point : la r\u00e8gle s\u2019applique \u00e0 tous les \u00e9l\u00e9ments ayant cette classe, qu\u2019importe le type. On peut m\u00e9langer plusieurs s\u00e9lecteurs pour une m\u00eame r\u00e8gle. Il existe une tr\u00e8s grande vari\u00e9t\u00e9 de propri\u00e9t\u00e9s, la liste d\u00e9pendant du s\u00e9lecteur choisi ! Exemple : fichier HTML <!DOCTYPE html> <!-- langage utilis\u00e9, html pour html5 --> < html lang = \"fr\" > <!-- d\u00e9but de la page web --> < head > <!-- En t\u00eate de la page, la balise n ' est pas affich\u00e9, mais ,! elle permet de donner des informations telles que le titre de la page ou ,! la police de caract\u00e8res utilis\u00e9e --> < title > Le CSS en 1\u00e8re NSI </ title > < meta charset = \"utf-8\" /> < link rel = \"stylesheet\" href = \"style.css\" > <!-- import le CSS de la page cible --> </ head > < body > < h1 > Un joli titre centr\u00e9e, en rouge et en italique. </ h1 > < p > Un beau paragraphe g\u00e9n\u00e9rique. </ p > < p class = \"important\" > Un paragraphe de la classe \"important\" que je vais faire apparaitre en gras. ,! </ p > < p > Un paragraphe normal dans lequel < a href = \"adresse de la page web\" class = \"important\" > le ,! lien est important </ a > . </ p > < p id = \"fin\" > Un paragraphe unique avec le texte en bleu. </ p > < img src = 'adresse de mon image' style = ' height: 150px ' alt = ' image mac ,! ' id = ' logo ' /> </ body > </ html > fichier CSS body { font-family : helvetica , arial , sans-serif ; margin : 2 em ; background-color : beige ; } h1 { /* tous les titres h1 */ font-style : italic ; text-align : center ; color : red ; } p { /* tous les paragraphes */ margin-left : 280 px ; } # fin { /* l ' unique \u00e9l\u00e9ment d ' id fin */ color : darkblue ; } . important { /* tous les \u00e9l\u00e9ments de la classe important */ font-weight : bold ; } img # logo { /* \u00e9l\u00e9ment img avec l ' id logo */ display : block ; border-radius : 20 px ; width : 150 px ; margin-left : auto ; left : 20 px ; top : 20 px ; position : fixed ; } Rendu des pages sans CSS et avec CSS V. CSS et les boites \u2693\ufe0e Tous les \u00e9l\u00e9ments HTML de type block sont manipul\u00e9s en tant que boites par CSS. Il existe une propri\u00e9t\u00e9 display en CSS pour transformer n\u2019importe quel \u00e9l\u00e9ment en type block (ou autre) si on le souhaite. Voici les diff\u00e9rentes propri\u00e9t\u00e9s d\u2019une boite en CSS : La zone centrale repr\u00e9sente le contenu, le padding est l\u2019\u00e9cart entre le contenu et la bordure, le margin est l\u2019\u00e9cart avec le bord ext\u00e9rieur de la boite. La position d\u2019un \u00e9l\u00e9ment peut \u00eatre d\u00e9finie avec la propri\u00e9t\u00e9 position. Elle peut \u00eatre relative \u00e0 la place de l\u2019\u00e9l\u00e9ment dans le flux de la page ou absolute,c\u2019est \u00e0 dire d\u00e9finie directement par rapport au bord de la fen\u00eatre. L\u2019ensemble de ces propri\u00e9t\u00e9s, associ\u00e9es aux \u00e9l\u00e9ments div, header, nav, section, article, aside et footer permet de construire une belle mise en page en HTML. Voici un exemple avec un ent\u00eate de page, une barre de navigation, un pied de page et une colonne de menus (\u00e0 droite de la page dans cet exemple). Exemple : Une version sans la barre de navigation : le code CSS associ\u00e9 : html { height : 100 % ; box-sizing : border-box ; } body { box-sizing : border-box ; font-family : helvetica , arial , sans-serif ; margin : 0 em ; background-color : beige ; min-height : 100 % ; padding-bottom : 30 px ; } section { padding : 20 px ; height : auto ; float : left ; width : 85 % ; } header { height : 5 % ; padding : 20 px ; text-align : center ; background-color : grey ; } footer { height : 30 px ; padding : 10 px ; text-align : center ; background-color : grey ; position : absolute ; left : : 0 ; right : 0 ; bottom : 0 ; clear : both ; } aside { padding : 10 px ; float : right ; width : 10 % ; } h4 { text-align : center ; } Et le code HTML associ\u00e9 <!DOCTYPE html> < html lang = \"fr\" > < < head > < link rel = \"stylesheet\" href = \"style.css\" /> < meta charset = \"utf-8\" > </ head > < body > < header > Une jolie banni\u00e8re, un menu, ... </ header > < section > < article > < h1 > Contenu 1 </ h1 > Voici le contenu de la page, on peut le faire changer gr\u00e2ce aux liens par exemple. </ article > < article > < h1 > Contenu 2 </ h1 > Il peut y a voir plusieurs articles </ article > < article > < h1 > Contenu 3 </ h1 > L' informaticien logiciel et programmation. < br /> Le travail d'un ... < br > Il propose \u00e9galement des ... < br /> Source : wikip\u00e9dia </ article > </ section > < aside > < h4 > Un menu </ h4 > < ul > < li >< a href = \"\" > Page 1 </ a ></ li > < li >< a href = \"\" > Page 2 </ a ></ li > < li >< a href = \"\" > Page 3 </ a ></ li > </ ul > </ aside > < footer > Un pied de page ... </ footer > </ body > </ html > Exercice :","title":"TD html et css"},{"location":"WEB/HTML_CSS/#une-video-resumant-lessentiel-du-html-et-du-css-18min29","text":"Vid\u00e9o NSI4NOOBS","title":"Une vid\u00e9o r\u00e9sumant l'essentiel du html et du css (18min29)"},{"location":"WEB/HTML_CSS/#cours-apprenez-a-creer-votre-site-web-avec-html5-et-css3","text":"Openclassroom : Apprenez \u00e0 cr\u00e9er votre site web avec HTML5 et CSS3","title":"Cours : Apprenez \u00e0 cr\u00e9er votre site web avec HTML5 et CSS3"},{"location":"WEB/HTML_CSS/#cours-complet-en-videos-du-html-et-css-en-3-parties-de-pierre-giraud-et-son-format-web","text":"Cours html - css de Pierre Giraud","title":"Cours complet en vid\u00e9os du HTML et CSS en 3 parties de Pierre Giraud et son format web :"},{"location":"WEB/HTML_CSS/#un-site-avec-toutes-les-possibilites-pour-le-html-et-le-css","text":"Tutoriel HTML Tutoriel CSS","title":"Un site avec toutes les possibilit\u00e9s pour le HTML et le CSS"},{"location":"WEB/HTML_CSS/#i-quest-ce-que-le-html","text":"Quand on consulte un site web, notre ordinateur se connecte \u00e0 un serveur distant et celui-ci lui envoie une page web, que le navigateur va pouvoir afficher. En g\u00e9n\u00e9ral la page est constitu\u00e9e de plusieurs fichiers : un fichier HTML (il existe d\u2019autres formats qui seront \u00e9tudi\u00e9s plus tard : php, jsp, asp, ...) un fichier CSS un fichier JS des images, du sons, ... Le format HTML (de l\u2019anglais HyperText Markup Language, ou \u00ab langage de balisage hypertexte \u00bb) est un format textuel qui permet de d\u00e9crire le contenu et la structure d\u2019une page Web. Plusieurs versions du langage HTML se sont succ\u00e9d\u00e9es depuis la premi\u00e8re en 1992, celle utilis\u00e9e actuellement est HTML5. Un peu d\u2019histoire : TimBerners-Lee est consid\u00e9r\u00e9 comme l\u2019inventeur du HTML en1992. C\u2019est un informaticien britannique, qui a aussi invent\u00e9 le Web (World Wide Web ou WWW) en 1989 lors de ses travaux au CERN. En juillet 2004, il est fait chevalier par la reine \u00c9lisa- beth II pour ce travail et son nom officiel devient Sir Timothy John Berners-Lee. Depuis 1994, il pr\u00e9side le World Wide Web Consortium (W3C), organisme qu\u2019il a fond\u00e9 et qui est en charge de promouvoir la compatibilit\u00e9 des technologies du Web. Il est \u00e9galement laur\u00e9at du prix Turing 2016. Le Langage HTML et CSS La description du contenu et de la structure d\u2019une page Cette description se fait en utilisant ce qu\u2019on appelle des balises. Ce sont ces balises qui vont indiquer si telle partie du document est un titre, oubien un paragraphe, ou bien une image, ... Les balises Une balise est un mot-clef permettant d\u2019indiquer au navigateur ce qu\u2019il doit faire avec le contenu. Les balises contr\u00f4lent tout. Elles permettent de g\u00e9rer la structure, les images, les liens, la police d\u2019affichage utilis\u00e9e, les titres, ... On \u00e9crit pour ouvrir une balise (appel\u00e9e balise ouvrante ) et pour la fermer appel\u00e9e balisefermante ). De mani\u00e8re g\u00e9n\u00e9rale, toute balise ouverte doit \u00eatre ferm\u00e9e. Voici la structure minimale (squelette) de toute page HTML : <!DOCTYPE html> <!-- langage utilis\u00e9, html pour html5 --> < html lang = \"fr\" > <!-- d\u00e9but de la page web --> < head > <!-- En t\u00eate de la page, la balise n ' est pas affich\u00e9, mais elle permet ,! de donner des informations telles que le titre de la page ou la police de ,! caract\u00e8res utilis\u00e9e --> < title > Le html en 1\u00e8re NSI </ title > < meta charset = \"utf-8\" /> </ head > < body > <!-- Corps de la page, c'est ici que l'on \u00e9crit tout ce qui doit \u00eatre affich\u00e9 --> < h1 > COURS de NSI </ h1 > <!-- balise de titre de niveau 1, il y 6 niveaux possibles--> < p > Bienvenue en cours de NSI. </ p > </ body > </ html > On retrouve toujours : une premi\u00e8re ligne <!DOCTYPE html> qui indique que le fichier texte qui suit et \u00e9crit dans le langage HTML La balise <html> </html> , qui est la balise principale du code , elle englobe tout le contenu \u00e9crit en HTML du fichier. Dans cette balise, on distingue deux partie diff\u00e9rentes : La balise <head></head> qui est la balise d\u2019en-t\u00eate du document et qui donne les informations g\u00e9n\u00e9rales sur la page Web : on peut y idiquer son titre, l\u2019encodage des caract\u00e8res, les mots-cl\u00e9s, son auteur, etc. La balise <body></body> qui est la balise du corps de la page : elle encadre tout le contenu que le navigateur doit affihcer \u00e0 l\u2019\u00e9cran. Ces balises sont obligatoires dans tout document HTML. On peut remarquer que certaines balises particuli\u00e8res ne se ferment pas (comme la balise <meta/> ). Dans ce cas il y a un \u201c/\u201d avant le \u201c>\u201d. \ud83d\udd8b D\u00e9finition : Le nom d\u2019une balise s\u2019appelle un \u00e9l\u00e9ment (exemple ici body, p ou meta). Certains \u00e9l\u00e9ments peuvent avoir des attributs pour d\u00e9finir des param\u00e8tres. Dans ce cas les attributs sont toujours donn\u00e9s entre guillemets \" \" ou apostrophes \u2018 \u2019. De plus des balises peuvent \u00eatre imbriqu\u00e9es les une dans les autres mais pas se chevaucher ! \u27a1 Remarque Les commentaires sont d\u00e9limit\u00e9s par les caract\u00e8res , ils ne sont pas interpr\u00e9t\u00e9s par le navigateur et servent \u00e0 l\u2019auteur pour \u00e9crire des notes (destin\u00e9es \u00e0 lui-m\u00eame ou \u00e0 d\u2019autres personnes). Exemple : < p > Bienvenue en < em > cours </ em > de NSI. < br /> Ici les balises sont correctement imbriqu\u00e9es </ p > < p > Bienvenue en < em > cours de NSI. < br /> Probl\u00e8me, la balise em est ferm\u00e9 apr\u00e8s la balise p !! </ p ></ em >","title":"I. Qu'est ce que le HTML ?"},{"location":"WEB/HTML_CSS/#iii-block-inline","text":"Voici les \u00e9l\u00e9ments les plus courants mais il en existe d\u2019autres. Ils peuvent \u00eatre regroup\u00e9es en deux cat\u00e9gories : les \u00e9l\u00e9ments de bloc ( block en anglais) qui s\u2019affichent comme un bloc ( saut de ligne avant et apr\u00e8s automatiquement), les \u00e9l\u00e9ments en ligne ( inline en anglais) qui s\u2019affichent dans la ligne courante. Un \u00e9l\u00e9ment inline doit obligatoirement \u00eatre \u00e0 l\u2019int\u00e9rieur d\u2019un bloc. \u25b6 Balises de type block : < body > < p > Un paragraphe </ p > < h1 > Un titre de premier niveau </ h1 > < h2 > Un titre de niveau 2 </ h2 > < ul > <!-- une liste \u00e0 puce (Unordered List) --> < li > Premier \u00e9l\u00e9ment de la liste \u00e0 puce </ li > < li > Deuxi\u00e8me \u00e9l\u00e9ment de la liste \u00e0 puce </ li > </ ul > < ol > <!-- une liste num\u00e9rot\u00e9e (Ordered List) --> < li > Premier \u00e9l\u00e9ment de la liste num\u00e9rot\u00e9e </ li > < li > Deuxi\u00e8me \u00e9l\u00e9ment de la liste num\u00e9rot\u00e9e </ li > </ ol > < div > Un bloc quelconque, utile pour la mise en forme </ div > </ body > </ html > \u25b6 Balises type inline : Balise Fonction Attributs utiles <br/> Retour \u00e0 la ligne <img/> Permet d\u2019ins\u00e9rer une image - src = \u2019emplacement de l\u2019image\u2019 - alt = \u2019texte \u00e0 afficher si probl\u00e8me\u2019 <a> Ancre, permet de cr\u00e9er un lien - name = \u2019nom de l\u2019ancre\u2019 \u2003- href = \u2019lien\u2019 Exemple : < body > < h1 > Un exemple avec des \u00e9l\u00e9ments inline </ h1 > < p > Voici un paragraphe. Pas d'\u00e9l\u00e9ment br donc pas de retour \u00e0 la ligne. < br /> Apr\u00e8s la balise une nouvelle ligne commence. < br /> Une ligne avec une image : < img src = ' adresse image ' alt = ' Mon image' />< br /> Et maintenant un lien vers un autre site : < a href = ' url souhait\u00e9e ' > Le site du prof ! </ a > </ p > </ body > </ html >","title":"III. Block / Inline"},{"location":"WEB/HTML_CSS/#iv-et-le-css-alors","text":"\ud83d\udd8b Langage CSS Le format CSS (de l\u2019anglais Cascading Style Sheets,ou \u00abfeuilles de styles en cascade\u00bb) est un format textuel qui permet de d\u00e9crire la mise en forme des documents HTML (et XML). La premi\u00e8re version du langage CSS date de 1996. Celui-ci est pris en charge par tous les navigateurs depuis les ann\u00e9es 2000. La version utilis\u00e9e actuellement est CSS3. \ud83d\udd8b Un langage de style Le langage CSS permet de d\u00e9finir les propri\u00e9t\u00e9s graphiques des \u00e9l\u00e9ments HTML constituant une page Web : les polices utilis\u00e9es, leurs tailles, les couleurs utilis\u00e9es, la position des \u00e9l\u00e9ments dans la page, etc. Ce langage permet de s\u00e9parer le contenu (d\u00e9crit en HTML) de la forme (d\u00e9crit en CSS) d\u2019une page Web. En pratique, le fichier CSS sera associ\u00e9 au fichier HTML et le navigateur pourra alors savoir comment il doit mettre en forme le contenu de la page Web. Le fichier \u2018.css\u2019 (cascading style sheet) qui accompagne souvent une page html sert \u00e0 d\u00e9finir tout ce qui concernelaformedudocument(l\u00e0 o\u00f9 la partie HTML s\u2019occupe plut\u00f4t du contenu). Il g\u00e8re donc la taille de la police, la couleur, le positionnement des blocs, des images, ... Exemple d'utilisation Exemple de page internet sans CSS et avec CSS. Un fichier contenant du code CSS permet de donner des informations sur la forme que doit avoir une page internet (couleur de la police, position et taille des images, fond de page, menus, ...). Ce fichier peutavoirlenomquel\u2019onsouhaite(onutiliseran\u00e9anmoinspr\u00e9f\u00e9remmentl\u2019extension.css). Dansnotre exemple ce fichier s\u2019appellera \u201cstyle.css\u201d. \ud83d\udd8b Ce qu\u2019il faut retenir Modifications \u00e0 apporter dans le fichier HTML : - il faut donner le nom (et le chemin si n\u00e9cessaire) du(des) fichier(s) CSS \u00e0 utiliser. Cela se fait \u00e0 l\u2019aide de la balise suivante dans l\u2019en-t\u00eate : ` on peut maintenant utiliser 2 nouveaux attributs dans les balises HTML, id=\"nomUnique\" : permet de donner un nom unique \u00e0 un \u00e9l\u00e9ment pour lui appliquer un style particulier, class=\"nom\" : permet de donner le m\u00eame nom \u00e0 un ensemble d\u2019\u00e9l\u00e9ments auxquels on veut appliquer le m\u00eame style. Dans le fichier CSS on peut maintenant cr\u00e9er un ensemble de r\u00e8gles \u00e0 appliquer. Une r\u00e8gle est compos\u00e9e d\u2019un s\u00e9lecteur (l\u2019objet auquel la r\u00e8gle doit s\u2019appliquer) et de d\u00e9clarations de propri\u00e9t\u00e9s. Les d\u00e9clarations se trouvent entre accolades et les propri\u00e9t\u00e9s sont s\u00e9par\u00e9es par des points-virgules. Il y a beaucoup de s\u00e9lecteurs diff\u00e9rents, les plus courants sont : le nom d\u2019un type d\u2019\u00e9l\u00e9ments (ex: html, p, body, h1, img, ... ): la r\u00e8gle s\u2019applique \u00e0 tous les \u00e9l\u00e9ments de la page de ce type, le nom d\u2019un id pr\u00e9c\u00e9d\u00e9 d\u2019un # : la r\u00e8gle s\u2019applique au seul \u00e9l\u00e9ment ayant cet id, le nom d\u2019une classe pr\u00e9c\u00e9d\u00e9 d\u2019un point : la r\u00e8gle s\u2019applique \u00e0 tous les \u00e9l\u00e9ments ayant cette classe, qu\u2019importe le type. On peut m\u00e9langer plusieurs s\u00e9lecteurs pour une m\u00eame r\u00e8gle. Il existe une tr\u00e8s grande vari\u00e9t\u00e9 de propri\u00e9t\u00e9s, la liste d\u00e9pendant du s\u00e9lecteur choisi ! Exemple : fichier HTML <!DOCTYPE html> <!-- langage utilis\u00e9, html pour html5 --> < html lang = \"fr\" > <!-- d\u00e9but de la page web --> < head > <!-- En t\u00eate de la page, la balise n ' est pas affich\u00e9, mais ,! elle permet de donner des informations telles que le titre de la page ou ,! la police de caract\u00e8res utilis\u00e9e --> < title > Le CSS en 1\u00e8re NSI </ title > < meta charset = \"utf-8\" /> < link rel = \"stylesheet\" href = \"style.css\" > <!-- import le CSS de la page cible --> </ head > < body > < h1 > Un joli titre centr\u00e9e, en rouge et en italique. </ h1 > < p > Un beau paragraphe g\u00e9n\u00e9rique. </ p > < p class = \"important\" > Un paragraphe de la classe \"important\" que je vais faire apparaitre en gras. ,! </ p > < p > Un paragraphe normal dans lequel < a href = \"adresse de la page web\" class = \"important\" > le ,! lien est important </ a > . </ p > < p id = \"fin\" > Un paragraphe unique avec le texte en bleu. </ p > < img src = 'adresse de mon image' style = ' height: 150px ' alt = ' image mac ,! ' id = ' logo ' /> </ body > </ html > fichier CSS body { font-family : helvetica , arial , sans-serif ; margin : 2 em ; background-color : beige ; } h1 { /* tous les titres h1 */ font-style : italic ; text-align : center ; color : red ; } p { /* tous les paragraphes */ margin-left : 280 px ; } # fin { /* l ' unique \u00e9l\u00e9ment d ' id fin */ color : darkblue ; } . important { /* tous les \u00e9l\u00e9ments de la classe important */ font-weight : bold ; } img # logo { /* \u00e9l\u00e9ment img avec l ' id logo */ display : block ; border-radius : 20 px ; width : 150 px ; margin-left : auto ; left : 20 px ; top : 20 px ; position : fixed ; } Rendu des pages sans CSS et avec CSS","title":"IV. Et le CSS alors ?"},{"location":"WEB/HTML_CSS/#v-css-et-les-boites","text":"Tous les \u00e9l\u00e9ments HTML de type block sont manipul\u00e9s en tant que boites par CSS. Il existe une propri\u00e9t\u00e9 display en CSS pour transformer n\u2019importe quel \u00e9l\u00e9ment en type block (ou autre) si on le souhaite. Voici les diff\u00e9rentes propri\u00e9t\u00e9s d\u2019une boite en CSS : La zone centrale repr\u00e9sente le contenu, le padding est l\u2019\u00e9cart entre le contenu et la bordure, le margin est l\u2019\u00e9cart avec le bord ext\u00e9rieur de la boite. La position d\u2019un \u00e9l\u00e9ment peut \u00eatre d\u00e9finie avec la propri\u00e9t\u00e9 position. Elle peut \u00eatre relative \u00e0 la place de l\u2019\u00e9l\u00e9ment dans le flux de la page ou absolute,c\u2019est \u00e0 dire d\u00e9finie directement par rapport au bord de la fen\u00eatre. L\u2019ensemble de ces propri\u00e9t\u00e9s, associ\u00e9es aux \u00e9l\u00e9ments div, header, nav, section, article, aside et footer permet de construire une belle mise en page en HTML. Voici un exemple avec un ent\u00eate de page, une barre de navigation, un pied de page et une colonne de menus (\u00e0 droite de la page dans cet exemple). Exemple : Une version sans la barre de navigation : le code CSS associ\u00e9 : html { height : 100 % ; box-sizing : border-box ; } body { box-sizing : border-box ; font-family : helvetica , arial , sans-serif ; margin : 0 em ; background-color : beige ; min-height : 100 % ; padding-bottom : 30 px ; } section { padding : 20 px ; height : auto ; float : left ; width : 85 % ; } header { height : 5 % ; padding : 20 px ; text-align : center ; background-color : grey ; } footer { height : 30 px ; padding : 10 px ; text-align : center ; background-color : grey ; position : absolute ; left : : 0 ; right : 0 ; bottom : 0 ; clear : both ; } aside { padding : 10 px ; float : right ; width : 10 % ; } h4 { text-align : center ; } Et le code HTML associ\u00e9 <!DOCTYPE html> < html lang = \"fr\" > < < head > < link rel = \"stylesheet\" href = \"style.css\" /> < meta charset = \"utf-8\" > </ head > < body > < header > Une jolie banni\u00e8re, un menu, ... </ header > < section > < article > < h1 > Contenu 1 </ h1 > Voici le contenu de la page, on peut le faire changer gr\u00e2ce aux liens par exemple. </ article > < article > < h1 > Contenu 2 </ h1 > Il peut y a voir plusieurs articles </ article > < article > < h1 > Contenu 3 </ h1 > L' informaticien logiciel et programmation. < br /> Le travail d'un ... < br > Il propose \u00e9galement des ... < br /> Source : wikip\u00e9dia </ article > </ section > < aside > < h4 > Un menu </ h4 > < ul > < li >< a href = \"\" > Page 1 </ a ></ li > < li >< a href = \"\" > Page 2 </ a ></ li > < li >< a href = \"\" > Page 3 </ a ></ li > </ ul > </ aside > < footer > Un pied de page ... </ footer > </ body > </ html > Exercice :","title":"V. CSS et les boites"},{"location":"WEB/JS/","text":"TD n\u00b014 : HTML - CSS - JS - PHP Th\u00e8me : INTERACTIONS ENTRE HOMME ET LA MACHINE Pages web et interactions COURS et TP I.1. Le cas le plus simple : la m\u00eame page pour tout le monde \u2693\ufe0e Nous allons tout d'abord consid\u00e9rer le cas o\u00f9 le serveur renvoie une page unique, identique pour tous les utilisateurs. De plus, l'utilisateur ne pourra pas agir sur sa page : il n'y a aucune interactivit\u00e9. Exemple de page statique c\u00f4t\u00e9 serveur et c\u00f4t\u00e9 utilisateur : cette merveille de page web. plus compl\u00e8te, mais tout aussi statique : cette page Wikipedia consacr\u00e9e \u00e0 John Conway. I.1 HTML pur \u2693\ufe0e Lorsque le client demande au serveur le contenu d'une page web, celui-ci lui renvoie, dans le cas le plus simple, une simple page html. HTML est un langage dit \u00ab \u00e0 balises \u00bb. Ce n'est pas \u00e0 proprement parler un langage de programmation, mais plut\u00f4t un langage de description de contenu. Il a \u00e9t\u00e9 invent\u00e9 en 1992 par Tim Berners-Lee . La version actuellement utilis\u00e9e est le html5 . I.2 HTML + CSS \u2693\ufe0e L'acronyme CSS signifie Cascading Style Sheets . L'id\u00e9e est de regrouper dans un seul fichier toutes les informations relatives \u00e0 la mise en forme des \u00e9l\u00e9ments de la page html. De mani\u00e8re tr\u00e8s simplifi\u00e9e, on peut dire que le fichier html s'occupe du fond tandis que le fichier css s'occupe de la forme . Le fichier CSS (souvent nomm\u00e9 style.css ) doit \u00eatre r\u00e9f\u00e9renc\u00e9 au d\u00e9but du fichier html , au sein de la balise <head> avec la balise <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" /> par exemple. II. Quand le client peut agir sur sa page : exemple avec JavaScript \u2693\ufe0e Jusqu'\u00e0 pr\u00e9sent, la page web envoy\u00e9e par le serveur est : identique quel que soit le client. statique apr\u00e8s r\u00e9ception sur l'ordinateur du client. Le JavaScript va venir r\u00e9gler le probl\u00e8me n\u00b02 : il est possible de fabriquer une page sur laquelle le client va pouvoir agir localement , sans avoir \u00e0 redemander une nouvelle page au serveur. Invent\u00e9 en 1995 par Brendan Eich pour le navigateur Netscape, le langage JavaScript s'est impos\u00e9 comme la norme aupr\u00e8s de tous les navigateurs pour apporter de l'interactivit\u00e9 aux pages web. \ud83d\udcce Exemple 1 de couple html / javascript : \u2693\ufe0e Notre fichier index.html fait r\u00e9f\u00e9rence, au sein d'une balise <script> , \u00e0 un fichier externe script.js qui contiendra notre code JavaScript. fichier index.html : <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > un peu d'action </ title > < link href = \"style.css\" rel = \"stylesheet\" type = \"text/css\" /> </ head > < body > < script src = \"script.js\" ></ script > < p > < h2 > Une page web extr\u00eamement dynamique </ h2 > </ p > < div > < label > Changez la couleur d'arri\u00e8re-plan: </ label > < button type = \"button\" onclick = \"choix('#CD9575');\" > Antique brass </ button > < button type = \"button\" onclick = \"choix('#8DB600');\" > Apple green </ button > < button type = \"button\" onclick = \"choix('#9966CC');\" > Amethyst </ button > </ div > < div > < p > En JavaScript, le codage de la couleur choisie est : </ p > < p id = \"resultat\" ></ p > </ div > </ body > </ html > fichier script.js : function choix ( color ){ document . body . style . background = color ; document . getElementById ( \"resultat\" ). innerHTML = color ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://pagejs1.nsimeyroneinc.repl.co . Commentaires Au sein du bouton d\u00e9clar\u00e9 par la balise button , l'attribut onclick re\u00e7oit le nom d'une fonction d\u00e9clar\u00e9e \u00e0 l'int\u00e9rieur du fichier script.js , ici la fonction choix() . Cette fonction nous permet de modifier \u00e0 la fois l'aspect esth\u00e9tique de la page (changement de la couleur de background) mais aussi le contenu de cette page, en faisant afficher le nom de la couleur. La puissance du JavaScript permet de r\u00e9aliser aujourd'hui des interfaces utilisateurs tr\u00e8s complexes au sein d'un navigateur, \u00e9quivalentes \u00e0 celles produites par des logiciels externes (pensez \u00e0 Discord, par ex.). \ud83d\udcce Exemple 2 de couple html / javascript : \u2693\ufe0e Il est \u00e9galement possible de modifier le style d\u2019une balise, de modifier la classe (CSS) d\u2019une balise, voici quelques exemples : querySelector() La m\u00e9thode querySelector() s\u00e9lectionne le premier \u00e9l\u00e9ment dans le document correspondant au s\u00e9lecteur - ou groupe de s\u00e9lecteurs - sp\u00e9cifi\u00e9(s), ou null si aucune correspondance n\u2019est trouv\u00e9e. fichier index.html : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > Le trio </ title > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < h1 > Le trio : HTML, CSS et JavaScript </ h1 > < p id = \"monPara\" > Voici une page web qui ne fait pas grand-chose </ p > < button onclick = \"foncRouge()\" > Rouge </ button > < button onclick = \"foncBlanc()\" > Blanc sur fond bleu </ button > </ body > < script src = \"modif.js\" ></ script > </ html > fichier script.js : function foncRouge () { document . querySelector ( \"#monPara\" ). classList . remove ( \"blanc\" ); document . querySelector ( \"#monPara\" ). classList . add ( \"rouge\" ); } function foncBlanc () { document . querySelector ( \"#monPara\" ). classList . remove ( \"rouge\" ); document . querySelector ( \"#monPara\" ). classList . add ( \"blanc\" ); } fichier style.css : h1 { text-align : center ; } . rouge { color : red ; font-size : 20 px ; } . blanc { background-color : blue ; color : white ; font-size : 25 px ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://pagejs2.nsimeyroneinc.repl.co . Commentaire : Dans l\u2019exemple ci-dessus, nous avons maintenant 2 boutons : un clic sur le bouton blanc , permet d\u2019ex\u00e9cuter la fonction foncBlanc() , un clic sur le bouton rouge , permet d\u2019ex\u00e9cuter la fonction foncRouge() , jusque l\u00e0, rien de vraiment nouveau. La fonction JavaScript foncBlanc() permet de modifier la classe CSS de la balise ayant pour id monPara . Dans un premier temps, la ligne document . querySelector ( \"#monPara\" ). classList . remove ( \"rouge\" ); permet de supprimer l\u2019association entre la balise d\u2019id monPara et la classe CSS rouge (si cette association n\u2019existe pas, cette ligne n\u2019a aucun effet). Dans un deuxi\u00e8me temps, on associe la classe CSS blanc avec la balise d\u2019id monPara avec la ligne document . querySelector ( \"#monPara\" ). classList . add ( \"blanc\" ); \ud83d\udcce Exemple 3 de couple html / javascript : \u2693\ufe0e fichier index.html : <!DOCTYPE html> < html > < head > < meta http-equiv = \"Content-Type\" content = \"text/html; charset=utf-8\" /> < title > Afficher / Cacher une boite div en javascript </ title > < link rel = \"stylesheet\" href = \"style.css\" /> < script type = \"text/javascript\" src = \"script.js\" ></ script > </ head > < body > < div > Question 1 : </ br > < span class = \"bouton\" id = \"bouton_texte\" onclick = \"afficher_cacher('texte');\" > Afficher la r\u00e9ponse </ span > < div id = \"texte\" class = \"texte\" > Texte cach\u00e9 </ div > </ div > < script type = \"text/javascript\" > //<!-- afficher_cacher ( 'texte' ); //--> </ script > </ body > </ html > fichier script.js : function afficher_cacher ( id ) { if ( document . getElementById ( id ). style . visibility == \"hidden\" ) { document . getElementById ( id ). style . visibility = \"visible\" ; document . getElementById ( 'bouton_' + id ). innerHTML = 'Cacher la r\u00e9ponse' ; } else { document . getElementById ( id ). style . visibility = \"hidden\" ; document . getElementById ( 'bouton_' + id ). innerHTML = 'Afficher la r\u00e9ponse' ; } return true ; } fichier style.css : . bouton { color : #00AAff ; font-size : 18 px ; cursor : pointer ; } . bouton : hover { text-decoration : None ; } . texte { border : 1 px solid #333333 ; background : #eeeeee ; padding : 10 px ; color : #333333 ; } . texte : hover { border : 1 px solid #000000 ; background : #cccccc ; color : #000000 ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://pagejs3.nsimeyroneinc.repl.co . \ud83d\udcce Exemple 4 de couple html / javascript : \u2693\ufe0e fichier index.html : <!DOCTYPE html> < html > < head > < title > Cours JavaScript </ title > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1, user-scalable=no\" > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < div > < p > Question 1 : Donner l'\u00e9criture binaire du nombre d\u00e9cimal 29 </ p > < button id = 'R1' > Afficher la r\u00e9ponse </ button > </ div > < div id = \"d1\" style = \"display:None\" > < strong > R\u00e9ponse : </ strong > L'\u00e9criture binaire de 29 est : 11101 < br > < table > < tr > < td > puissance de 2 </ td > < td > 64 </ td >< td > 32 </ td >< td > 16 </ td >< td > 8 </ td >< td > 4 </ td >< td > 2 </ td >< td > 1 </ td > </ tr > < tr > < td > D\u00e9composition </ td > < td > 0 </ td >< td > 0 </ td >< td > 1 </ td >< td > 1 </ td >< td > 1 </ td >< td > 0 </ td >< td > 1 </ td > </ tr > < tr > < td > Reste </ td > < td > 29 </ td >< td > 29 </ td >< td > 13 </ td >< td > 5 </ td >< td > 1 </ td >< td > 1 </ td >< td > 0 </ td > </ tr > </ table > </ div > < div > < p > Question 2 : Donner l'\u00e9criture binaire du nombre d\u00e9cimal 42 </ p > < button id = 'R2' > Afficher la r\u00e9ponse </ button > </ div > < div id = \"d2\" style = \"display:None\" > R\u00e9ponse : L'\u00e9criture binaire de 42 est : 101010 </ div > </ body > < script language = \"JavaScript\" src = \"qcm.js\" ></ script > </ html > fichier script.js : let d1 = document . getElementById ( \"d1\" ); function togg1 (){ if ( getComputedStyle ( d1 ). display != \"none\" ){ d1 . style . display = \"none\" ; } else { d1 . style . display = \"block\" ; } }; R1 . onclick = togg1 ; let d2 = document . getElementById ( \"d2\" ); function togg2 (){ if ( getComputedStyle ( d2 ). display != \"none\" ){ d2 . style . display = \"none\" ; } else { d2 . style . display = \"block\" ; } }; R2 . onclick = togg2 ; fichier style.css : # d1 { background-color : #EECC44 99 ;} # d2 { background-color : #44EEAA 99 ;} table { border-collapse : collapse } td { border : 1 px solid black ; padding : 10 px ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://quiz.nsimeyroneinc.repl.co . \ud83d\udcce Exemple 5 de couple html / javascript : \u2693\ufe0e fichier index.html : <!DOCTYPE html> < html > < head > < title > Cours JavaScript </ title > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1, user-scalable=no\" > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < form name = \"quiz\" > < span >< b > Question 1 : Quelle est la couleur du cheval blanc d'Henri 4 </ b ></ span > < br > < div style = \"position:absolute;left:300px\" >< br > < textarea name = \"t1\" rows = \"4\" cols = \"20\" > </ textarea > </ div > < br > < input type = \"radio\" name = \"q1\" value = \"r1\" > Brun < br > < input type = \"radio\" name = \"q1\" value = \"r2\" > Noir < br > < input type = \"radio\" name = \"q1\" value = \"r3\" > Blanc < br > < input type = \"radio\" name = \"q1\" value = \"r4\" > Rouge < br > < br > < span >< b > Question 2 : Qui a gagn\u00e9 la coupe du monde 1998 ? </ b >< br ></ span > < div style = \"position:absolute;left:300px\" >< br > < textarea name = \"t2\" rows = \"4\" cols = \"20\" > </ textarea > </ div > < br > < input type = \"radio\" name = \"q2\" value = \"r1\" > Le Br\u00e9sil < br > < input type = \"radio\" name = \"q2\" value = \"r2\" > L'Argentine < br > < input type = \"radio\" name = \"q2\" value = \"r3\" > L'Angleterre < br > < input type = \"radio\" name = \"q2\" value = \"r4\" > La France < br > < br > < span >< b > Question 3 : Qui a remport\u00e9 la m\u00e9daille d'Or de Basket au JO 2021 </ b >< br ></ span > < div style = \"position:absolute;left:300px\" >< br > < textarea name = \"t3\" rows = \"4\" cols = \"20\" > </ textarea > </ div > < br > < input type = \"radio\" name = \"q3\" value = \"r1\" > France < br > < input type = \"radio\" name = \"q3\" value = \"r2\" > USA < br > < input type = \"radio\" name = \"q3\" value = \"r3\" > Australie < br > < input type = \"radio\" name = \"q3\" value = \"r4\" > Serbie < br > < br > < input type = \"button\" value = \"Score\" onClick = \"getScore(this.form)\" > < input type = \"reset\" value = \"RAZ\" >< p > Score = < input type = text size = 15 name = \"percentage\" >< br > R\u00e9ponses correctes : < br > < textarea name = \"solutions\" wrap = \"virtual\" rows = \"4\" cols = \"40\" ></ textarea > </ form > </ body > < script language = \"JavaScript\" src = \"qcm.js\" ></ script > </ html > fichier script.js : var numQues = 3 ; var numChoi = 4 ; var answers = new Array ( 3 ); var answers_true = new Array ( 3 ); var answers_false = new Array ( 3 ); answers [ 0 ] = \"r3\" ; answers_true [ 0 ] = \"Bravo\" ; answers_false [ 0 ] = \"Lit l'\u00e9nonc\u00e9 correctement\" ; answers [ 1 ] = \"r4\" ; answers_true [ 1 ] = \"Bravo\" ; answers_false [ 1 ] = \"La France bien sur\" ; answers [ 2 ] = \"r2\" ; answers_true [ 2 ] = \"Bravo\" ; answers_false [ 2 ] = \"H\u00e9las c'est faux, c'est les USA\" ; function getScore ( form ) { var score = 0 ; var currElt ; var currSelection ; for ( i = 0 ; i < numQues ; i ++ ) { currElt = i * ( numChoi + 1 ); for ( j = 0 ; j < numChoi ; j ++ ) { currSelection = form . elements [ currElt + j + 1 ]; if ( currSelection . checked ) { if ( currSelection . value == answers [ i ]) { score ++ ; form . elements [ currElt ]. value = answers_true [ i ]; break ; } else { form . elements [ currElt ]. value = answers_false [ i ]; } } } } score = Math . round ( score / numQues * 100 ); form . percentage . value = score + \"%\" ; var correctAnswers = \"\" ; for ( i = 1 ; i <= numQues ; i ++ ) { correctAnswers += i + \". \" + answers [ i - 1 ] + \"\\r\\n\" ; } form . solutions . value = correctAnswers ; } fichier style.css : body { background-color : #a0b6e7 ; } span { background-color : #e7b4a0 ; border-width : 2 px ; border-style : outset ; border-color : black ; border-radius : 10 px ; padding : 5 px ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://qcmscore.nsimeyroneinc.repl.co . En savoir plus - le guide JavaScript de la fondation Mozilla : https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide - le cours d'OpenClassrooms : https://openclassrooms.com/fr/courses/2984401-apprenez-a-coder-avec-javascript Exercice \u2693\ufe0e Reprenez votre site et rajoutez du JavaScript pour la rendre dynamique. Faites ce que vous voulez !","title":"TD 14 JavaScript"},{"location":"WEB/JS/#i1-le-cas-le-plus-simple-la-meme-page-pour-tout-le-monde","text":"Nous allons tout d'abord consid\u00e9rer le cas o\u00f9 le serveur renvoie une page unique, identique pour tous les utilisateurs. De plus, l'utilisateur ne pourra pas agir sur sa page : il n'y a aucune interactivit\u00e9. Exemple de page statique c\u00f4t\u00e9 serveur et c\u00f4t\u00e9 utilisateur : cette merveille de page web. plus compl\u00e8te, mais tout aussi statique : cette page Wikipedia consacr\u00e9e \u00e0 John Conway.","title":"I.1. Le cas le plus simple : la m\u00eame page pour tout le monde"},{"location":"WEB/JS/#ii-quand-le-client-peut-agir-sur-sa-page-exemple-avec-javascript","text":"Jusqu'\u00e0 pr\u00e9sent, la page web envoy\u00e9e par le serveur est : identique quel que soit le client. statique apr\u00e8s r\u00e9ception sur l'ordinateur du client. Le JavaScript va venir r\u00e9gler le probl\u00e8me n\u00b02 : il est possible de fabriquer une page sur laquelle le client va pouvoir agir localement , sans avoir \u00e0 redemander une nouvelle page au serveur. Invent\u00e9 en 1995 par Brendan Eich pour le navigateur Netscape, le langage JavaScript s'est impos\u00e9 comme la norme aupr\u00e8s de tous les navigateurs pour apporter de l'interactivit\u00e9 aux pages web.","title":"II. Quand le client peut agir sur sa page : exemple avec JavaScript"},{"location":"WEB/JS_Diapo/","text":":root { --color-background: #101010 !important; --color-foreground: #FFFFFF !important; font-size: 1.25rem; } blockquote { background: #C3B091; border-left: 15px solid #CC0000; margin: 1.5em 10px; color: black; padding: 0.5em 10px; } TD n\u00b014 : HTML - CSS - JS - PHP \u2693\ufe0e I.1. Le cas le plus simple : la m\u00eame page pour tout le monde \u2693\ufe0e Nous allons tout d'abord consid\u00e9rer le cas o\u00f9 le serveur renvoie une page unique, identique pour tous les utilisateurs. De plus, l'utilisateur ne pourra pas agir sur sa page : il n'y a aucune interactivit\u00e9. Exemple de page statique c\u00f4t\u00e9 serveur et c\u00f4t\u00e9 utilisateur : cette merveille de page web. plus compl\u00e8te, mais tout aussi statique : cette page Wikipedia consacr\u00e9e \u00e0 John Conway. I.1 HTML pur \u2693\ufe0e Lorsque le client demande au serveur le contenu d'une page web, celui-ci lui renvoie, dans le cas le plus simple, une simple page html. HTML est un langage dit \u00ab \u00e0 balises \u00bb. Ce n'est pas \u00e0 proprement parler un langage de programmation, mais plut\u00f4t un langage de description de contenu. Il a \u00e9t\u00e9 invent\u00e9 en 1992 par Tim Berners-Lee . La version actuellement utilis\u00e9e est le html5 . I.2 HTML + CSS \u2693\ufe0e L'acronyme CSS signifie Cascading Style Sheets . L'id\u00e9e est de regrouper dans un seul fichier toutes les informations relatives \u00e0 la mise en forme des \u00e9l\u00e9ments de la page html. De mani\u00e8re tr\u00e8s simplifi\u00e9e, on peut dire que le fichier html s'occupe du fond tandis que le fichier css s'occupe de la forme . Le fichier CSS (souvent nomm\u00e9 style.css ) doit \u00eatre r\u00e9f\u00e9renc\u00e9 au d\u00e9but du fichier html , au sein de la balise <head> avec la balise <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" /> par exemple. II. Quand le client peut agir sur sa page : exemple avec JavaScript \u2693\ufe0e Jusqu'\u00e0 pr\u00e9sent, la page web envoy\u00e9e par le serveur est : identique quel que soit le client. statique apr\u00e8s r\u00e9ception sur l'ordinateur du client. Le JavaScript va venir r\u00e9gler le probl\u00e8me n\u00b02 : il est possible de fabriquer une page sur laquelle le client va pouvoir agir localement , sans avoir \u00e0 redemander une nouvelle page au serveur. Invent\u00e9 en 1995 par Brendan Eich pour le navigateur Netscape, le langage JavaScript s'est impos\u00e9 comme la norme aupr\u00e8s de tous les navigateurs pour apporter de l'interactivit\u00e9 aux pages web. \ud83d\udcce Exemple 1 de couple html / javascript : \u2693\ufe0e Notre fichier index.html fait r\u00e9f\u00e9rence, au sein d'une balise <script> , \u00e0 un fichier externe script.js qui contiendra notre code JavaScript. fichier index.html : <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > un peu d'action </ title > < link href = \"style.css\" rel = \"stylesheet\" type = \"text/css\" /> </ head > < body > < script src = \"script.js\" ></ script > < p > < h2 > Une page web extr\u00eamement dynamique </ h2 > </ p > < div > < label > Changez la couleur d'arri\u00e8re-plan: </ label > < button type = \"button\" onclick = \"choix('#CD9575');\" > Antique brass </ button > < button type = \"button\" onclick = \"choix('#8DB600');\" > Apple green </ button > < button type = \"button\" onclick = \"choix('#9966CC');\" > Amethyst </ button > </ div > < div > < p > En JavaScript, le codage de la couleur choisie est : </ p > < p id = \"resultat\" ></ p > </ div > </ body > </ html > fichier script.js : function choix ( color ){ document . body . style . background = color ; document . getElementById ( \"resultat\" ). innerHTML = color ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://pagejs1.nsimeyroneinc.repl.co . Commentaires Au sein du bouton d\u00e9clar\u00e9 par la balise button , l'attribut onclick re\u00e7oit le nom d'une fonction d\u00e9clar\u00e9e \u00e0 l'int\u00e9rieur du fichier script.js , ici la fonction choix() . Cette fonction nous permet de modifier \u00e0 la fois l'aspect esth\u00e9tique de la page (changement de la couleur de background) mais aussi le contenu de cette page, en faisant afficher le nom de la couleur. La puissance du JavaScript permet de r\u00e9aliser aujourd'hui des interfaces utilisateurs tr\u00e8s complexes au sein d'un navigateur, \u00e9quivalentes \u00e0 celles produites par des logiciels externes (pensez \u00e0 Discord, par ex.). \ud83d\udcce Exemple 2 de couple html / javascript : \u2693\ufe0e Il est \u00e9galement possible de modifier le style d\u2019une balise, de modifier la classe (CSS) d\u2019une balise, voici quelques exemples : querySelector() La m\u00e9thode querySelector() s\u00e9lectionne le premier \u00e9l\u00e9ment dans le document correspondant au s\u00e9lecteur - ou groupe de s\u00e9lecteurs - sp\u00e9cifi\u00e9(s), ou null si aucune correspondance n\u2019est trouv\u00e9e. fichier index.html : <!doctype html> < html lang = \"fr\" > < head > < meta charset = \"utf-8\" > < title > Le trio </ title > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < h1 > Le trio : HTML, CSS et JavaScript </ h1 > < p id = \"monPara\" > Voici une page web qui ne fait pas grand-chose </ p > < button onclick = \"foncRouge()\" > Rouge </ button > < button onclick = \"foncBlanc()\" > Blanc sur fond bleu </ button > </ body > < script src = \"modif.js\" ></ script > </ html > fichier script.js : function foncRouge () { document . querySelector ( \"#monPara\" ). classList . remove ( \"blanc\" ); document . querySelector ( \"#monPara\" ). classList . add ( \"rouge\" ); } function foncBlanc () { document . querySelector ( \"#monPara\" ). classList . remove ( \"rouge\" ); document . querySelector ( \"#monPara\" ). classList . add ( \"blanc\" ); } fichier style.css : h1 { text-align : center ; } . rouge { color : red ; font-size : 20 px ; } . blanc { background-color : blue ; color : white ; font-size : 25 px ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://pagejs2.nsimeyroneinc.repl.co . Commentaire : Dans l\u2019exemple ci-dessus, nous avons maintenant 2 boutons : un clic sur le bouton blanc , permet d\u2019ex\u00e9cuter la fonction foncBlanc() , un clic sur le bouton rouge , permet d\u2019ex\u00e9cuter la fonction foncRouge() , jusque l\u00e0, rien de vraiment nouveau. La fonction JavaScript foncBlanc() permet de modifier la classe CSS de la balise ayant pour id monPara . Dans un premier temps, la ligne document . querySelector ( \"#monPara\" ). classList . remove ( \"rouge\" ); permet de supprimer l\u2019association entre la balise d\u2019id monPara et la classe CSS rouge (si cette association n\u2019existe pas, cette ligne n\u2019a aucun effet). Dans un deuxi\u00e8me temps, on associe la classe CSS blanc avec la balise d\u2019id monPara avec la ligne document . querySelector ( \"#monPara\" ). classList . add ( \"blanc\" ); \ud83d\udcce Exemple 3 de couple html / javascript : \u2693\ufe0e fichier index.html : <!DOCTYPE html> < html > < head > < meta http-equiv = \"Content-Type\" content = \"text/html; charset=utf-8\" /> < title > Afficher / Cacher une boite div en javascript </ title > < link rel = \"stylesheet\" href = \"style.css\" /> < script type = \"text/javascript\" src = \"script.js\" ></ script > </ head > < body > < div > Question 1 : < br > < span class = \"bouton\" id = \"bouton_texte\" onclick = \"afficher_cacher('texte');\" > Afficher la r\u00e9ponse </ span > < div id = \"texte\" class = \"texte\" > Texte cach\u00e9 </ div > </ div > < script type = \"text/javascript\" > //<!-- afficher_cacher ( 'texte' ); //--> </ script > </ body > </ html > fichier script.js : function afficher_cacher ( id ) { if ( document . getElementById ( id ). style . visibility == \"hidden\" ) { document . getElementById ( id ). style . visibility = \"visible\" ; document . getElementById ( 'bouton_' + id ). innerHTML = 'Cacher la r\u00e9ponse' ; } else { document . getElementById ( id ). style . visibility = \"hidden\" ; document . getElementById ( 'bouton_' + id ). innerHTML = 'Afficher la r\u00e9ponse' ; } return true ; } fichier style.css : . bouton { color : #00AAff ; font-size : 18 px ; cursor : pointer ; } . bouton : hover { text-decoration : None ; } . texte { border : 1 px solid #333333 ; background : #eeeeee ; padding : 10 px ; color : #333333 ; } . texte : hover { border : 1 px solid #000000 ; background : #cccccc ; color : #000000 ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://pagejs3.nsimeyroneinc.repl.co . \ud83d\udcce Exemple 4 de couple html / javascript : \u2693\ufe0e <!DOCTYPE html> < html > < head > < title > Cours JavaScript </ title > < meta charset = \"utf-8\" > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < div > < p > Question 1 : Donner l'\u00e9criture binaire du nombre d\u00e9cimal 29 </ p > < button id = 'R1' > Afficher la r\u00e9ponse </ button ></ div > < div id = \"d1\" style = \"display:None\" > < strong > R\u00e9ponse : </ strong > L'\u00e9criture binaire de 29 est : 11101 < br > < table > < tr > < td > puissance de 2 </ td > < td > 64 </ td >< td > 32 </ td >< td > 16 </ td >< td > 8 </ td >< td > 4 </ td >< td > 2 </ td >< td > 1 </ td > </ tr > < tr > < td > D\u00e9composition </ td > < td > 0 </ td >< td > 0 </ td >< td > 1 </ td >< td > 1 </ td >< td > 1 </ td >< td > 0 </ td >< td > 1 </ td > </ tr > < tr > < td > Reste </ td > < td > 29 </ td >< td > 29 </ td >< td > 13 </ td >< td > 5 </ td >< td > 1 </ td >< td > 1 </ td >< td > 0 </ td > </ tr > </ table > </ div > < div > < p > Question 2 : Donner l'\u00e9criture binaire du nombre d\u00e9cimal 42 </ p > < button id = 'R2' > Afficher la r\u00e9ponse </ button > </ div > < div id = \"d2\" style = \"display:None\" > R\u00e9ponse : L'\u00e9criture binaire de 42 est : 101010 </ div > </ body > < script language = \"JavaScript\" src = \"qcm.js\" ></ script > </ html > fichier script.js : let d1 = document . getElementById ( \"d1\" ); function togg1 (){ if ( getComputedStyle ( d1 ). display != \"none\" ){ d1 . style . display = \"none\" ; } else { d1 . style . display = \"block\" ; } }; R1 . onclick = togg1 ; let d2 = document . getElementById ( \"d2\" ); function togg2 (){ if ( getComputedStyle ( d2 ). display != \"none\" ){ d2 . style . display = \"none\" ; } else { d2 . style . display = \"block\" ; } }; R2 . onclick = togg2 ; fichier style.css : # d1 { background-color : #EECC44 99 ;} # d2 { background-color : #44EEAA 99 ;} table { border-collapse : collapse } td { border : 1 px solid black ; padding : 10 px ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://quiz.nsimeyroneinc.repl.co . \ud83d\udcce Exemple 5 de couple html / javascript : \u2693\ufe0e fichier index.html : <!DOCTYPE html> < html > < head > < title > Cours JavaScript </ title > < meta charset = \"utf-8\" > < link rel = \"stylesheet\" href = \"style.css\" > </ head > < body > < form name = \"quiz\" > < span >< b > Question 1 : Quelle est la couleur du cheval blanc d'Henri 4 </ b ></ span > < div style = \"position:absolute;left:300px\" >< br > < textarea name = \"t1\" rows = \"4\" cols = \"20\" > </ textarea > </ div > < input type = \"radio\" name = \"q1\" value = \"r1\" > Brun < br > < input type = \"radio\" name = \"q1\" value = \"r2\" > Noir < br > < input type = \"radio\" name = \"q1\" value = \"r3\" > Blanc < br > < input type = \"radio\" name = \"q1\" value = \"r4\" > Rouge < br > < br > < span >< b > Question 2 : Qui a gagn\u00e9 la coupe du monde 1998 ? </ b >< br ></ span > < div style = \"position:absolute;left:300px\" >< br > < textarea name = \"t2\" rows = \"4\" cols = \"20\" ></ textarea > </ div > < input type = \"radio\" name = \"q2\" value = \"r1\" > Le Br\u00e9sil < br > < input type = \"radio\" name = \"q2\" value = \"r2\" > L'Argentine < br > < input type = \"radio\" name = \"q2\" value = \"r3\" > L'Angleterre < br > < input type = \"radio\" name = \"q2\" value = \"r4\" > La France < br > < span >< b > Question 3 : Qui a remport\u00e9 la m\u00e9daille d'Or de Basket au JO 2021 </ b >< br ></ span > < div style = \"position:absolute;left:300px\" >< br > < textarea name = \"t3\" rows = \"4\" cols = \"20\" > </ textarea > </ div > < input type = \"radio\" name = \"q3\" value = \"r1\" > France < br > < input type = \"radio\" name = \"q3\" value = \"r2\" > USA < br > < input type = \"radio\" name = \"q3\" value = \"r3\" > Australie < br > < input type = \"radio\" name = \"q3\" value = \"r4\" > Serbie < br > < br > < input type = \"button\" value = \"Score\" onClick = \"getScore(this.form)\" > < input type = \"reset\" value = \"RAZ\" >< p > Score = < input type = text size = 15 name = \"percentage\" >< br > R\u00e9ponses correctes : < br > < textarea name = \"solutions\" wrap = \"virtual\" rows = \"4\" cols = \"40\" ></ textarea > </ form > < script language = \"JavaScript\" src = \"qcm.js\" ></ script > </ body > </ html > fichier script.js : var numQues = 3 ; var numChoi = 4 ; var answers = new Array ( 3 ); var answers_true = new Array ( 3 ); var answers_false = new Array ( 3 ); answers [ 0 ] = \"r3\" ; answers_true [ 0 ] = \"Bravo\" ; answers_false [ 0 ] = \"Lit l'\u00e9nonc\u00e9 correctement\" ; answers [ 1 ] = \"r4\" ; answers_true [ 1 ] = \"Bravo\" ; answers_false [ 1 ] = \"La France bien sur\" ; answers [ 2 ] = \"r2\" ; answers_true [ 2 ] = \"Bravo\" ; answers_false [ 2 ] = \"H\u00e9las c'est faux, c'est les USA\" ; function getScore ( form ) { var score = 0 ; var currElt ; var currSelection ; for ( i = 0 ; i < numQues ; i ++ ) { currElt = i * ( numChoi + 1 ); for ( j = 0 ; j < numChoi ; j ++ ) { currSelection = form . elements [ currElt + j + 1 ]; if ( currSelection . checked ) { if ( currSelection . value == answers [ i ]) { score ++ ; form . elements [ currElt ]. value = answers_true [ i ]; break ; } else { form . elements [ currElt ]. value = answers_false [ i ]; } } } } score = Math . round ( score / numQues * 100 ); form . percentage . value = score + \"%\" ; var correctAnswers = \"\" ; for ( i = 1 ; i <= numQues ; i ++ ) { correctAnswers += i + \". \" + answers [ i - 1 ] + \"\\r\\n\" ; } form . solutions . value = correctAnswers ; } fichier style.css : body { background-color : #a0b6e7 ; } span { background-color : #e7b4a0 ; border-width : 2 px ; border-style : outset ; border-color : black ; border-radius : 10 px ; padding : 5 px ; } Le r\u00e9sultat de cette page peut \u00eatre consult\u00e9 \u00e0 l'adresse https://qcmscore.nsimeyroneinc.repl.co . En savoir plus - le guide JavaScript de la fondation Mozilla : https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide - le cours d'OpenClassrooms : https://openclassrooms.com/fr/courses/2984401-apprenez-a-coder-avec-javascript Exercice \u2693\ufe0e Reprenez votre site et rajoutez du JavaScript pour la rendre dynamique. Faites ce que vous voulez !","title":"JS Diapo"},{"location":"WEB/JS_Diapo/#td-n14-html-css-js-php","text":"","title":"TD n\u00b014 : HTML - CSS - JS - PHP"},{"location":"WEB/JS_Diapo/#i1-le-cas-le-plus-simple-la-meme-page-pour-tout-le-monde","text":"Nous allons tout d'abord consid\u00e9rer le cas o\u00f9 le serveur renvoie une page unique, identique pour tous les utilisateurs. De plus, l'utilisateur ne pourra pas agir sur sa page : il n'y a aucune interactivit\u00e9. Exemple de page statique c\u00f4t\u00e9 serveur et c\u00f4t\u00e9 utilisateur : cette merveille de page web. plus compl\u00e8te, mais tout aussi statique : cette page Wikipedia consacr\u00e9e \u00e0 John Conway.","title":"I.1. Le cas le plus simple : la m\u00eame page pour tout le monde"},{"location":"WEB/JS_Diapo/#ii-quand-le-client-peut-agir-sur-sa-page-exemple-avec-javascript","text":"Jusqu'\u00e0 pr\u00e9sent, la page web envoy\u00e9e par le serveur est : identique quel que soit le client. statique apr\u00e8s r\u00e9ception sur l'ordinateur du client. Le JavaScript va venir r\u00e9gler le probl\u00e8me n\u00b02 : il est possible de fabriquer une page sur laquelle le client va pouvoir agir localement , sans avoir \u00e0 redemander une nouvelle page au serveur. Invent\u00e9 en 1995 par Brendan Eich pour le navigateur Netscape, le langage JavaScript s'est impos\u00e9 comme la norme aupr\u00e8s de tous les navigateurs pour apporter de l'interactivit\u00e9 aux pages web.","title":"II. Quand le client peut agir sur sa page : exemple avec JavaScript"}]}